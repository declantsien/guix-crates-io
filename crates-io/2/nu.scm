(define-module (crates-io #{2}# nu) #:use-module (crates-io))

(define-public crate-nu-0.1.0 (c (n "nu") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "byte-unit") (r "^2.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.27") (d #t) (k 0)) (d (n "futures-core") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.0-beta1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "rustyline") (r "^4.0.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "sysinfo") (r "^0.8.3") (d #t) (k 0)))) (h "0h9jlfiqxff9nq1q6azrmdijk3bvfk5yh3rr55sb1281m0ipqcjf")))

(define-public crate-nu-0.1.1 (c (n "nu") (v "0.1.1") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "byte-unit") (r "^2.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.27") (d #t) (k 0)) (d (n "futures-core") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.0-beta1") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (d #t) (k 0)) (d (n "prettyprint") (r "^0.6.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "rustyline") (r "^4.0.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "sysinfo") (r "^0.8.3") (d #t) (k 0)))) (h "08bl65i7n9kr8ylmm5ifk067sn9rrgvd6hds1r54bx19hxjp58jl")))

(define-public crate-nu-0.1.2 (c (n "nu") (v "0.1.2") (d (list (d (n "adhoc_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "byte-unit") (r "^2.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.9.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.7") (d #t) (k 0)) (d (n "derive_more") (r "^0.15.0") (d #t) (k 0)) (d (n "dirs") (r "^2.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "enum-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enum_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.16") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-sink-preview") (r "= 0.3.0-alpha.16") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.2") (d #t) (k 0)) (d (n "getset") (r "^0.0.7") (d #t) (k 0)) (d (n "git2") (r "^0.9.1") (d #t) (k 0)) (d (n "image") (r "^0.21.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "language-reporting") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "logos") (r "^0.10.0-rc2") (d #t) (k 0)) (d (n "logos-derive") (r "^0.10.0-rc2") (d #t) (k 0)) (d (n "mime") (r "^0.3.13") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "nom5_locate") (r "^0.1.1") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "prettyprint") (r "^0.7.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "rawkey") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "roxmltree") (r "^0.6.1") (d #t) (k 0)) (d (n "rustyline") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (d #t) (k 0)) (d (n "serde-hjson") (r "^0.9.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "sys-info") (r "^0.5.7") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (d #t) (k 0)) (d (n "toml-query") (r "^0.9.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1.0") (d #t) (k 0)))) (h "1i9ys6x9x261vpk1dm37gi40z3d8msyi2v77lrrydx4dsdcci0rb")))

(define-public crate-nu-0.2.0 (c (n "nu") (v "0.2.0") (d (list (d (n "adhoc_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.10") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.7") (d #t) (k 0)) (d (n "derive_more") (r "^0.15.0") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "enum-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "enum_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-async-stream") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-sink-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.7") (d #t) (k 0)) (d (n "git2") (r "^0.9.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.6") (d #t) (k 0)) (d (n "image") (r "^0.22.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "language-reporting") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logos") (r "^0.10.0-rc2") (d #t) (k 0)) (d (n "logos-derive") (r "^0.10.0-rc2") (d #t) (k 0)) (d (n "mime") (r "^0.3.13") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "nom5_locate") (r "^0.1.1") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettyprint") (r "^0.7.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.0") (d #t) (k 0)) (d (n "rustyline") (r "^5.0.2") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.98") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "toml-query") (r "^0.9.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.6") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1qarfm0cbx4avaqy859sd4anzs0866ykfb8ag20m4xk806bdc3n8")))

(define-public crate-nu-0.3.0 (c (n "nu") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "enum-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "futures-async-stream") (r "= 0.1.0-alpha.5") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^0.4.0") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.8") (d #t) (k 0)) (d (n "git2") (r "^0.10.1") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.8-alpha.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "image") (r "^0.22.2") (f (quote ("png_codec" "jpeg"))) (o #t) (k 0)) (d (n "indexmap") (r "^1.2.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "language-reporting") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.3") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "sublime_fuzzy") (r "^0.5") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "surf") (r "^1.0.2") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "15zb5krq7yirrc44xdcasj130k12zmcvbnl3yhpkmd90i9phbj8r") (f (quote (("textview" "syntect" "onig_sys" "crossterm") ("sys" "heim" "battery") ("raw-key" "rawkey" "neso") ("ps" "heim") ("default" "textview" "sys" "ps") ("binaryview" "image" "crossterm"))))))

(define-public crate-nu-0.4.0 (c (n "nu") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.1") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^0.4.0") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.8") (d #t) (k 0)) (d (n "git2") (r "^0.10.1") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "image") (r "^0.22.2") (f (quote ("png_codec" "jpeg"))) (o #t) (k 0)) (d (n "indexmap") (r "^1.2.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.0") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.3") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "sublime_fuzzy") (r "^0.5") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "surf") (r "^1.0.2") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 1)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "18789vsnbnkmw05sp2pin5gaqyn57jwyqyj1ib2izy928kzm64wq") (f (quote (("textview" "syntect" "onig_sys" "crossterm") ("sys" "heim" "battery") ("raw-key" "rawkey" "neso") ("ps" "heim") ("default" "textview" "sys" "ps") ("binaryview" "image" "crossterm") ("all" "raw-key" "textview" "binaryview" "sys" "ps" "clipboard" "ptree"))))))

(define-public crate-nu-0.5.0 (c (n "nu") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.1") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^0.4.0") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.8") (d #t) (k 0)) (d (n "git2") (r "^0.10.1") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "image") (r "^0.22.2") (f (quote ("png_codec" "jpeg"))) (o #t) (k 0)) (d (n "indexmap") (r "^1.2.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.0") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.4") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "sublime_fuzzy") (r "^0.5") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "surf") (r "^1.0.2") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1j0a87ls4wg2vr6zmpk03xw1v347i0nwzf7rq9l0c90h6ww7432g") (f (quote (("textview" "syntect" "onig_sys" "crossterm") ("sys" "heim" "battery") ("raw-key" "rawkey" "neso") ("ps" "heim") ("default" "textview" "sys" "ps") ("binaryview" "image" "crossterm") ("all" "raw-key" "textview" "binaryview" "sys" "ps" "clipboard"))))))

(define-public crate-nu-0.6.0 (c (n "nu") (v "0.6.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "console") (r "^0.9.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.10.1") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.22.2") (f (quote ("png_codec" "jpeg"))) (o #t) (k 0)) (d (n "indexmap") (r "^1.3.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.2") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.4") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "starship") (r "^0.26.4") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "sublime_fuzzy") (r "^0.6") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "surf") (r "^1.0.3") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.5") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "which") (r "^3.1") (d #t) (k 0)))) (h "07n3r25x23r8z6mhqjxd0w8rwz69i7sdyaxqa5b7wwgfggznxmza") (f (quote (("textview" "syntect" "onig_sys" "crossterm") ("sys" "heim" "battery") ("starship-prompt" "starship") ("raw-key" "rawkey" "neso") ("ps" "heim") ("default" "textview" "sys" "ps") ("binaryview" "image" "crossterm"))))))

(define-public crate-nu-0.6.1 (c (n "nu") (v "0.6.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "console") (r "^0.9.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.10.1") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.22.2") (f (quote ("png_codec" "jpeg"))) (o #t) (k 0)) (d (n "indexmap") (r "^1.3.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "neso") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5.2") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "rawkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.2") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.4") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "starship") (r "^0.26.4") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "sublime_fuzzy") (r "^0.6") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "surf") (r "^1.0.3") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.5") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "which") (r "^3.1") (d #t) (k 0)))) (h "0f6jd50ws3dyw2wwi27fkypxjf434qlcbl2ydaji33s1bgjlj9c8") (f (quote (("textview" "syntect" "onig_sys" "crossterm") ("sys" "heim" "battery") ("starship-prompt" "starship") ("raw-key" "rawkey" "neso") ("ps" "heim") ("default" "textview" "sys" "ps") ("binaryview" "image" "crossterm"))))))

(define-public crate-nu-0.7.0 (c (n "nu") (v "0.7.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.10.2") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-build") (r "^0.7.0") (d #t) (k 1)) (d (n "nu-errors") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.7.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.7.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.4") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "starship") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.5") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1.4") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "which") (r "^3.1") (d #t) (k 0)))) (h "1ac3q0k7ll4z0ibwmgf3rjdv0bzb6g3jp02g518807qmrxi8v1jn") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url") ("sys" "heim" "battery") ("sum" "nu_plugin_sum") ("str") ("starship-prompt" "starship") ("stable" "sys" "ps" "starship-prompt" "textview" "binaryview" "match" "tree" "average" "sum") ("ps" "heim" "futures-timer") ("match" "nu_plugin_match") ("inc" "semver") ("default" "sys" "ps" "textview" "inc" "str") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.7.1 (c (n "nu") (v "0.7.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.10.2") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-build") (r "^0.7.0") (d #t) (k 1)) (d (n "nu-errors") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.7.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.7.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.7.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.4") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "starship") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.5") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1.4") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "which") (r "^3.1") (d #t) (k 0)))) (h "1inxfi2aisdjygl9qdv5gkcjvyi5ma3x210kqibf6k2mj9m829in") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url") ("sys" "heim" "battery") ("sum" "nu_plugin_sum") ("str") ("starship-prompt" "starship") ("stable" "sys" "ps" "textview" "inc" "str" "starship-prompt" "binaryview" "match" "tree" "average" "sum" "post" "fetch" "clipboard") ("ps" "heim" "futures-timer") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.8.0 (c (n "nu") (v "0.8.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.10.2") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ichwh") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-build") (r "^0.8.0") (d #t) (k 1)) (d (n "nu-errors") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.8.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.8.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.8.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.7.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^5.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.0.0") (d #t) (k 0)) (d (n "starship") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.5") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 0)) (d (n "toml") (r "^0.5.5") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1.4") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (d #t) (k 0)))) (h "1qabq3wnlgf6q6h4sy71cmjmrqbnrgfaa9jfal9sngj08n1qvhbn") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url") ("sys" "heim" "battery") ("sum" "nu_plugin_sum") ("str" "nu_plugin_str") ("starship-prompt" "starship") ("stable" "sys" "ps" "textview" "inc" "str" "starship-prompt" "binaryview" "match" "tree" "average" "sum" "post" "fetch" "clipboard") ("ps" "heim" "futures-timer") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.9.0 (c (n "nu") (v "0.9.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-timer") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.2.5") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.11.0") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ichwh") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-build") (r "^0.9.0") (d #t) (k 1)) (d (n "nu-errors") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.9.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.9.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.9.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.9.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^6.0.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.1.1") (d #t) (k 0)) (d (n "starship") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1.4") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(unix)") (k 0)) (d (n "which") (r "^3.1.0") (d #t) (k 0)))) (h "0sjr90ppwfz7j2b8y8qdk7mbq44gz1k7iarm8vima9mjljh48kzh") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url") ("test-bins") ("sys" "heim" "battery") ("sum" "nu_plugin_sum") ("str" "nu_plugin_str") ("starship-prompt" "starship") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "sum" "post" "fetch" "clipboard") ("ps" "heim") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.10.0 (c (n "nu") (v "0.10.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bson") (r "^0.14.0") (f (quote ("decimal128"))) (d #t) (k 0)) (d (n "byte-unit") (r "^3.0.3") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "calamine") (r "^0.16") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "filesize") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "git2") (r "^0.11.0") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ichwh") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "language-reporting") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "meval") (r "^0.2") (d #t) (k 0)) (d (n "natural") (r "^0.3.0") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "nom-tracable") (r "^0.4.1") (d #t) (k 0)) (d (n "nom_locate") (r "^1.0.0") (d #t) (k 0)) (d (n "nu-build") (r "^0.10.0") (d #t) (k 1)) (d (n "nu-errors") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.10.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.10.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "ptree") (r "^0.2") (d #t) (k 0)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.9.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled" "blob"))) (d #t) (k 0)) (d (n "rustyline") (r "^6.0.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-hjson") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1.1.1") (d #t) (k 0)) (d (n "starship") (r "^0.35.1") (o #t) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.0") (d #t) (k 0)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "term") (r "^0.5.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.11.0") (f (quote ("term_size"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "trash") (r "^1.0.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1.4") (d #t) (k 0)) (d (n "umask") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(unix)") (k 0)) (d (n "which") (r "^3.1.0") (d #t) (k 0)))) (h "1pcha35la6xqp7vmhnjphhdv9ahrxyk29bq3zd5arv2w51ff9q3f") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url" "nu_plugin_textview") ("test-bins") ("sys" "nu_plugin_sys") ("sum" "nu_plugin_sum") ("str" "nu_plugin_str") ("starship-prompt" "starship") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "sum" "post" "fetch" "clipboard") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.11.0 (c (n "nu") (v "0.11.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.11.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.11.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.11.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.11.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sum") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 1)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "02c5k1dhb97ac2f9d936ngykp7axy4j3g9j4cr1qh69jk3j3q4xn") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url" "nu_plugin_textview") ("test-bins") ("sys" "nu_plugin_sys") ("sum" "nu_plugin_sum") ("str" "nu_plugin_str") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "sum" "post" "fetch" "clipboard-cli") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.12.0 (c (n "nu") (v "0.12.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.12.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-macros") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.12.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.12.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.12.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "onig_sys") (r "= 69.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 1)) (d (n "syntect") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "0y764g1jlcp8li6rs9w3k6zak8xgl1k3v109mvcya3n7g7lhprbf") (f (quote (("tree" "nu_plugin_tree") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "onig_sys" "url" "nu_plugin_textview") ("test-bins") ("sys" "nu_plugin_sys") ("str" "nu_plugin_str") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "post" "fetch" "clipboard-cli") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.13.0 (c (n "nu") (v "0.13.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.13.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.13.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.13.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.13.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 1)) (d (n "syntect") (r "^4.1") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "1bbljj98dkb8gnflvnplndrrvirqb56fc56ahfka7wpy7s30bcxl") (f (quote (("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("test-bins") ("sys" "nu_plugin_sys") ("str" "nu_plugin_str") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "post" "fetch" "clipboard-cli" "trash-support") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.14.0 (c (n "nu") (v "0.14.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.2") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.14.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.14.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.14.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.14.0") (d #t) (k 0)) (d (n "nu_plugin_average") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_str") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 1)) (d (n "syntect") (r "^4.1") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "1a6aa6i0xd9xkc2gg67gs3316a57bb3ajr9l7rdq2pqi3k082bab") (f (quote (("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("test-bins") ("sys" "nu_plugin_sys") ("str" "nu_plugin_str") ("start" "nu_plugin_start") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "average" "post" "fetch" "clipboard-cli" "trash-support" "start") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc" "str") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview") ("average" "nu_plugin_average"))))))

(define-public crate-nu-0.15.0 (c (n "nu") (v "0.15.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.15.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.15.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.15.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.15.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 1)) (d (n "syntect") (r "^4.2") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "1hz090rila4dq2v60w2xalk9v9hhnchnr9nfp4zssippg5m6s4c9") (f (quote (("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "starship-prompt" "binaryview" "match" "tree" "post" "fetch" "clipboard-cli" "trash-support" "start") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.16.0 (c (n "nu") (v "0.16.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.16.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.16.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.16.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.16.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 1)) (d (n "starship") (r "^0.43.0") (d #t) (k 0)) (d (n "syntect") (r "^4.2") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "0885p7pqwf7v8lgbjj030pz4li35daqrlil9nb3zv7nrc2fjag8m") (f (quote (("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default" "binaryview" "match" "tree" "post" "fetch" "clipboard-cli" "trash-support" "start") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("default" "sys" "ps" "textview" "inc") ("clipboard-cli" "nu-cli/clipboard-cli") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.17.0 (c (n "nu") (v "0.17.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-build") (r "^0.17.0") (d #t) (k 1)) (d (n "nu-cli") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.17.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.17.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.17.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 1)) (d (n "starship") (r "^0.43.0") (d #t) (k 0)) (d (n "syntect") (r "^4.2") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "1r9bsfw0lmbhw18a07606f7kn3lwlgagk592yc1giywpzwi9w1y3") (f (quote (("which-support" "nu-cli/ichwh" "nu-cli/which") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "binaryview" "match" "tree" "post" "fetch" "clipboard-cli" "trash-support" "start" "starship-prompt" "bson" "sqlite") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("directories-support" "nu-cli/directories" "nu-cli/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.18.1 (c (n "nu") (v "0.18.1") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-cli") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-errors") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-source") (r "^0.18.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.18.1") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.18.1") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 1)) (d (n "starship") (r "^0.43.0") (d #t) (k 0)) (d (n "syntect") (r "^4.2") (f (quote ("default-fancy"))) (o #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "13i2z2cqk0hfbf7jcdlivx4r4xn8kh6lp1fdms3970bdzrbfhimp") (f (quote (("which-support" "nu-cli/ichwh" "nu-cli/which") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "syntect" "url" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("starship-prompt" "nu-cli/starship-prompt") ("stable" "default" "binaryview" "match" "tree" "post" "fetch" "clipboard-cli" "trash-support" "start" "starship-prompt" "bson" "sqlite") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("directories-support" "nu-cli/directories" "nu-cli/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.19.0 (c (n "nu") (v "0.19.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nu-cli") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.19.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.19.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.19.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 1)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "0xvv7s56wfd2ribx87rn8czwimad85qs1g5c3k0x3pn5k9vfc5gs") (f (quote (("which-support" "nu-cli/ichwh" "nu-cli/which") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "url" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("s3" "nu_plugin_s3") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "match" "post" "fetch") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.20.0 (c (n "nu") (v "0.20.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.20.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.20.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.20.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 1)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "10hcin18z7sy5w5aiy4xdm48jy1fs4d075yx9x8rcs9jwhlqrr69") (f (quote (("which-support" "nu-cli/ichwh" "nu-cli/which") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "crossterm" "url" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "semver" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.21.0 (c (n "nu") (v "0.21.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.21.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.21.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.21.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "0b3pirsrkdfm90xwwkv5c6w263vqaq6aanqvrvb76cs34x0xrc24") (f (quote (("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.22.0 (c (n "nu") (v "0.22.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.22.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.22.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.22.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "16b5s7qqsv1xc1wqbsbmfpdddp151a09jfhlcrfrkdaywl8j5i81") (f (quote (("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.23.0 (c (n "nu") (v "0.23.0") (d (list (d (n "clap") (r ">=2.33.3, <3.0.0") (d #t) (k 0)) (d (n "ctrlc") (r ">=3.1.6, <4.0.0") (o #t) (d #t) (k 0)) (d (n "dunce") (r ">=1.0.1, <2.0.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.5, <0.4.0") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "nu-cli") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-data") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-errors") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-parser") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-plugin") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-protocol") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-source") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu-test-support") (r ">=0.23.0, <0.24.0") (d #t) (k 2)) (d (n "nu-value-ext") (r ">=0.23.0, <0.24.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r ">=0.23.0, <0.24.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r ">=0.4.0, <0.5.0") (d #t) (k 0)))) (h "0zzgzyqvp8bagf71xnqybzqkqjqqg4a43bk0n315275ymhr3m3j6") (f (quote (("zip-support" "nu-cli/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark" "zip-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.24.0 (c (n "nu") (v "0.24.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.24.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.24.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.24.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "0j4sbbpw6rzsv8l1darfhgbr7djyhvrn13m5xk1fxzx6ds7a3gj3") (f (quote (("zip-support" "nu-cli/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark" "zip-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.24.1 (c (n "nu") (v "0.24.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-data") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-errors") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-source") (r "^0.24.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.24.1") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.24.1") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "0nc80vg2vf3gr189kpnn1lnh7l2bds8i01pa6lfkbrkj9ql1ggqn") (f (quote (("zip-support" "nu-cli/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark" "zip-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.25.0 (c (n "nu") (v "0.25.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.25.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.25.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.25.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "0kl7m1c70f31hs7cf7a2wczhr8mfbf77ibswdyx95gzzlh19amcw") (f (quote (("zip-support" "nu-cli/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark" "zip-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.25.1 (c (n "nu") (v "0.25.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-data") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-errors") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-source") (r "^0.25.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.25.1") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.25.1") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "syn") (r "=1.0.57") (d #t) (k 0)))) (h "0x36hknv1cl2xzy1p8mkr592zvmnpql845jl5sszsmskacfndp8z") (f (quote (("zip-support" "nu-cli/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support") ("rich-benchmark" "nu-cli/rich-benchmark") ("ptree-support" "nu-cli/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("git-support" "nu-cli/git2") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-data/directories" "nu-data/dirs") ("default" "sys" "ps" "textview" "inc" "git-support" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "rich-benchmark" "zip-support") ("ctrlc-support" "nu-cli/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.26.0 (c (n "nu") (v "0.26.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.6") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nu-cli") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.26.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.26.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.26.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "0cn32b33761w87rz6qd44z0m3wrr2bldsf83hiqy5vwvsih9iwm3") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which") ("wasi" "inc" "match" "directories-support" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "sys" "ps" "textview" "inc" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.27.0 (c (n "nu") (v "0.27.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.27.0") (k 0)) (d (n "nu-command") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.27.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.27.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.27.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)))) (h "1s3pc7f1d9dk52r5sgj305dnzyr1n9x3gwi2rl53m2ajvahz9hgx") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "textview" "inc" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.27.1 (c (n "nu") (v "0.27.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.27.1") (k 0)) (d (n "nu-command") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-data") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-errors") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-source") (r "^0.27.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.27.1") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.27.1") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1f8mzkg3bm8b7ifnhrzgsmifmf82n845wmpa6qaiy0qp6if4x9w0") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "textview" "inc" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.28.0 (c (n "nu") (v "0.28.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.28.0") (k 0)) (d (n "nu-command") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.28.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.28.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.28.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1a5xylac1g88rd8w7ng8fz74pa9zs29y373b7dwivh3ij7rwqh6s") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "textview" "inc" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.29.0 (c (n "nu") (v "0.29.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.29.0") (k 0)) (d (n "nu-command") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.29.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.29.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.29.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "13zp6nzxn5xsycsf9slkjm42kyw5fn9flcsgpcd3bkvcap8fql2l") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "tree" "clipboard-cli" "trash-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "textview" "inc" "directories-support" "ctrlc-support" "which-support" "ptree-support" "term-support" "uuid-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.30.0 (c (n "nu") (v "0.30.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.30.0") (k 0)) (d (n "nu-command") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.30.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.30.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.30.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1b5zkirladqilmv4sapnnh8vavh5akgx4msm0ig9nczfd8j3vpd8") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/ichwh" "nu-cli/which" "nu-command/ichwh" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "ptree-support" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "directories-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.31.0 (c (n "nu") (v "0.31.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.31.0") (k 0)) (d (n "nu-command") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.31.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.31.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.31.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "0q877bdf57f9nls95j589scj6hw9nkrj2043f759cwsfqi2k1b4k") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/which" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "ptree-support" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "directories-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.32.0 (c (n "nu") (v "0.32.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nu-cli") (r "^0.32.0") (k 0)) (d (n "nu-command") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.32.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.32.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.32.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1zz0ribdcxbpnbbf9yvp0wnhjhkiyzmpkl3pff1yn9zxcz443gih") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/which" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "ptree-support" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("directories-support" "nu-cli/directories" "nu-cli/dirs" "nu-command/directories" "nu-command/dirs" "nu-data/directories" "nu-data/dirs" "nu-engine/dirs") ("default" "nu-cli/shadow-rs" "sys" "ps" "directories-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support") ("dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_post/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.33.0 (c (n "nu") (v "0.33.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.33.0") (k 0)) (d (n "nu-command") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.33.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.33.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.33.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "19yfckdicjn7glv0klcb2cc0a7s983bf1jr264yz06nrg2jir0g6") (f (quote (("zip-support" "nu-cli/zip" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-cli/which" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "ptree-support" "match" "tree" "rustyline-support") ("uuid-support" "nu-cli/uuid_crate" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-cli/trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("trace" "nu-parser/trace") ("textview" "nu_plugin_textview") ("term-support" "nu-cli/term" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ptree-support" "nu-cli/ptree" "nu-command/ptree") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "ptree-support" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("executable-support" "nu-completion/is_executable") ("default" "nu-cli/shadow-rs" "sys" "ps" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support" "executable-support") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_post/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-cli/clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.34.0 (c (n "nu") (v "0.34.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.34.0") (k 0)) (d (n "nu-command") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.34.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.34.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.34.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "0raxsif70d3kjaf8vw0a3f6gi17rzhfqbh0ig51cji5836mfbg19") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys" "ps" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_post/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.35.0 (c (n "nu") (v "0.35.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.35.0") (k 0)) (d (n "nu-command") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.35.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.35.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.35.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1yj89mw8j4b81vdkz2icbl6p94h6zp397n272m6n3hrski7i4vin") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys" "ps" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_post/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.36.0 (c (n "nu") (v "0.36.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.36.0") (k 0)) (d (n "nu-command") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.36.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.36.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.36.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_fetch") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_post") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_ps") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_sys") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "0c1n0mzjl5ycrdrr5qavpf30mmi9y0848jpxzi0gfmdhr7dq71mp") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys" "nu_plugin_sys") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("ps" "nu_plugin_ps") ("post" "nu_plugin_post") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch" "nu_plugin_fetch") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys" "ps" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "post" "fetch" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_post/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.37.0 (c (n "nu") (v "0.37.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.37.0") (k 0)) (d (n "nu-command") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.37.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.37.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.37.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1zhr1dd0r4lvnpv9i8y6abqn5b0j9jjkx5f1cmysjl2ac6hvw9ya") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("table-pager" "nu-command/table-pager") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.38.0 (c (n "nu") (v "0.38.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.38.0") (k 0)) (d (n "nu-command") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.38.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.38.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.38.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1qpp3qqxl4ih220y98876f32iq2gd01xpmzifw26zq5hzrxk7qmv") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.39.0 (c (n "nu") (v "0.39.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.39.0") (k 0)) (d (n "nu-command") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.39.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.39.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.39.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "197djbvi1l9pnw3kxx9y3vxddr016an2f9iafvqmdva8xc0bz0za") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.40.0 (c (n "nu") (v "0.40.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.40.0") (k 0)) (d (n "nu-command") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.40.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.40.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.40.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1ah880gwsj7q64ya8cm8ans2mk0m6cb9c0bjsm3w896b6miqbc84") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "clipboard-cli" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("clipboard-cli" "nu-command/clipboard-cli") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.41.0 (c (n "nu") (v "0.41.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.41.0") (k 0)) (d (n "nu-command") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.41.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.41.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.41.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "0nqx9imy411mj9190ak0np9x68ci1sq320g1b6k056gafsp9gdgf") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.42.0 (c (n "nu") (v "0.42.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.42.0") (k 0)) (d (n "nu-command") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.42.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.42.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.42.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "0s2y0xbsmfhdlq81kac42p6776xgp8240y3ym8b8x7nf26pbqch5") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.43.0 (c (n "nu") (v "0.43.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.43.0") (k 0)) (d (n "nu-command") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.43.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.43.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.43.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1k01vpnn2j0n0qajfq9h78x8ajjr4gm24456jy8y0h44a7gz9sx1") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.44.0 (c (n "nu") (v "0.44.0") (d (list (d (n "ctrlc") (r "^3.1.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (f (quote ("compat" "io-compat"))) (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.44.0") (k 0)) (d (n "nu-command") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-completion") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-data") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-errors") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-source") (r "^0.44.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.44.0") (d #t) (k 2)) (d (n "nu-value-ext") (r "^0.44.0") (d #t) (k 0)) (d (n "nu_plugin_binaryview") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_chart") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_bson") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_from_sqlite") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_inc") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_match") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_query_json") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_s3") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_selector") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_start") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_textview") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_bson") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_to_sqlite") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_tree") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "nu_plugin_xpath") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1lcsal5rvlmyflnj7qi0dw5byxrvm3n5hg3bjw1vrvv5lyq7vj9g") (f (quote (("zip-support" "nu-command/zip") ("xpath" "nu_plugin_xpath") ("which-support" "nu-command/which" "nu-engine/which") ("wasi" "inc" "match" "match" "tree" "rustyline-support") ("uuid-support" "nu-command/uuid_crate") ("tree" "nu_plugin_tree") ("trash-support" "nu-command/trash-support" "nu-engine/trash-support") ("textview" "nu_plugin_textview") ("term-support" "nu-command/term") ("sys-support" "nu-command/sys" "nu-command/ps") ("start" "nu_plugin_start") ("stable" "default") ("sqlite" "nu_plugin_from_sqlite" "nu_plugin_to_sqlite") ("selector" "nu_plugin_selector") ("s3" "nu_plugin_s3") ("rustyline-support" "nu-cli/rustyline-support" "nu-command/rustyline-support") ("query-json" "nu_plugin_query_json") ("match" "nu_plugin_match") ("inc" "nu_plugin_inc") ("fetch-support" "nu-command/fetch" "nu-command/post") ("extra" "default" "binaryview" "inc" "tree" "textview" "trash-support" "uuid-support" "start" "bson" "sqlite" "s3" "chart" "xpath" "selector" "query-json") ("default" "nu-cli/shadow-rs" "sys-support" "ctrlc-support" "which-support" "term-support" "rustyline-support" "match" "fetch-support" "zip-support" "dataframe") ("dataframe" "nu-engine/dataframe" "nu-protocol/dataframe" "nu-command/dataframe" "nu-value-ext/dataframe" "nu-data/dataframe" "nu_plugin_to_bson/dataframe") ("ctrlc-support" "nu-cli/ctrlc" "nu-command/ctrlc") ("chart" "nu_plugin_chart") ("bson" "nu_plugin_from_bson" "nu_plugin_to_bson") ("binaryview" "nu_plugin_binaryview"))))))

(define-public crate-nu-0.60.0 (c (n "nu") (v "0.60.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "crossterm_winapi") (r "^0.9.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "embed-resource") (r "^1") (d #t) (t "cfg(windows)") (k 1)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^4.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.45.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.60.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.60.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.60.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.60.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.3.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "091pmb9b2i7dmmc3kjag5fjkm0zl6qlb2jkr0x6qcmpxlzp06cj6") (f (quote (("zip-support" "nu-command/zip") ("which" "nu-command/which") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe") ("default" "plugin" "which" "zip-support" "trash-support") ("dataframe" "nu-command/dataframe"))))))

(define-public crate-nu-0.61.0 (c (n "nu") (v "0.61.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "embed-resource") (r "^1") (d #t) (t "cfg(windows)") (k 1)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^4.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.45.1") (d #t) (k 0)) (d (n "nu-cli") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.61.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.61.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.4.0") (f (quote ("bashisms"))) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "0vpvlkyvjs4kvs9f9yzfxksk72kds3kzx63yrc9wwfj1ivnzw2pj") (f (quote (("zip-support" "nu-command/zip") ("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe") ("default" "plugin" "which-support" "zip-support" "trash-support") ("dataframe" "nu-command/dataframe")))) (r "1.59")))

(define-public crate-nu-0.62.0 (c (n "nu") (v "0.62.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "embed-resource") (r "^1") (d #t) (t "cfg(windows)") (k 1)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^4.5.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.45.1") (d #t) (k 0)) (d (n "nu-cli") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.62.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.62.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.5.0") (f (quote ("bashisms"))) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "0vsz8r5qrbz3f3dw9vwz1c4vk7m98jllk98h097134msj3b073wy") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.59")))

(define-public crate-nu-0.63.0 (c (n "nu") (v "0.63.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "embed-resource") (r "^1") (d #t) (t "cfg(windows)") (k 1)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^4.5.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.45.1") (d #t) (k 0)) (d (n "nu-cli") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.63.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.63.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.63.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.63.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.6.0") (f (quote ("bashisms"))) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "00yvyb7a5mfrsfkk5nzkqcpwxsdjb8879y7jhik1l4j0sq457850") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.64.0 (c (n "nu") (v "0.64.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^4.5.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.64.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.64.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.64.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.64.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.7.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0iq8qyagvd2v89al4f82386kmpckkdff7yirffjm190pmhzfc1mp") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.65.0 (c (n "nu") (v "0.65.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.65.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.65.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.65.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.8.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0nqmlhsg8sgynn77w2kmslx2m7law7mxv62lk11c0wm316xp1bgf") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.66.0 (c (n "nu") (v "0.66.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.66.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.66.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.66.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.66.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.9.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1b6qry1lr6f89fxiwdlnr9c6l5bri19fmwwspwnrg46f8sv6awdm") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.66.1 (c (n "nu") (v "0.66.1") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-engine") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.66.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.66.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.66.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.66.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.9.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "130mh1202mp91qkr0bcbjxqniybwwh1iv9za7laikv92jln6srfq") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.66.2 (c (n "nu") (v "0.66.2") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-command") (r "^0.66.3") (d #t) (k 0)) (d (n "nu-engine") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-json") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-parser") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-path") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.66.2") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-system") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-table") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.66.2") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.66.2") (d #t) (k 2)) (d (n "nu-utils") (r "^0.66.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.9.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0fpagqalhqpq7zcm7k1mdxki1zfvvnx76fi46c30rnjv4m5shi33") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.67.0 (c (n "nu") (v "0.67.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.67.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.67.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.67.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.10.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "10adpp6hib8alizhvwdvz4ym4bp9qm15k57ljrg3zsb8px195j42") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.68.0 (c (n "nu") (v "0.68.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.68.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.68.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.68.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.11.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1pm4ayp01ag7ra035yxl2rhk3v2h2ahsvhgldlvmfxa3rd901s2m") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.68.1 (c (n "nu") (v "0.68.1") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.68.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.68.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.68.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.68.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.11.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "04sjfl1ggka80mq3mpvxccpdi54mdqclgd8ndqnbaj9k7xhvnxzs") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.69.1 (c (n "nu") (v "0.69.1") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.69.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.69.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.69.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.69.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.12.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1xlq72wc3ngd9q5ylp85xfjsipx816bd9i9jv5yk2n5zij892ida") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.70.0 (c (n "nu") (v "0.70.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.70.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.70.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.70.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.70.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.13.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0j4j9z52gnpf0xpylr1dcshdsnrw432wq4xpz6syvjl94bqf56am") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.71.0 (c (n "nu") (v "0.71.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.71.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.71.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.71.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.14.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "185vfxdwnc8nzqabf3vkf5q0k2g244zs710zz7r573aizxdzfr7y") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default" "dataframe" "database") ("default" "plugin" "which-support" "trash-support") ("dataframe" "nu-command/dataframe") ("database" "nu-command/database")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.72.0 (c (n "nu") (v "0.72.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.72.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.72.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.72.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.72.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.14.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "02dwflfc7irsgfwwc1c9iq1dr6l0h7lhayikyimi5292q12iljal") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.73.0 (c (n "nu") (v "0.73.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.73.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.73.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.73.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.73.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.14.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0fqsba9p8ifpdmr3hkbkx98xk1il3r1x3nw2zxalgyrh9fdm4bkg") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.74.0 (c (n "nu") (v "0.74.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.74.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.74.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.74.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reedline") (r "^0.14.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "10k783w3353cdgmwl6yqhnsspsxvzcn2vsyyskry6lffr9zv1llx") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.75.0 (c (n "nu") (v "0.75.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.75.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.75.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.75.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.75.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "reedline") (r "^0.15.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (k 2)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0bj2ygj9pvr03m1m7xadxfz65fq322csk9rz1dsdx36gc4xp1vh1") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.76.0 (c (n "nu") (v "0.76.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.76.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.76.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.76.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.76.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "reedline") (r "^0.16.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (k 2)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1j4r6y0w2sggfv755fpqj1srh604ihzlmclp82f8y6w1hsm724jj") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.77.0 (c (n "nu") (v "0.77.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.77.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.77.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.77.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.77.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reedline") (r "^0.17.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (k 2)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1z6wwl7h6lxchb42g4qz2dy4a74h8k8f73l7420wr0lq70b41wb6") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.77.1 (c (n "nu") (v "0.77.1") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.77.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.77.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.77.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.77.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reedline") (r "^0.17.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (k 2)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0ccxpzvj5jpm17mhyrkq81hqq1kcpd7v3hzyd5rrzp5yv6wgd23w") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.78.0 (c (n "nu") (v "0.78.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.24.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.6.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.78.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.78.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.78.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.78.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.48") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reedline") (r "^0.18.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1vklv2nzy4hszw7q4pmwhfamascm750rmgjkx9z6jwryjvhwq9sc") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.79.0 (c (n "nu") (v "0.79.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.79.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.79.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.79.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.79.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.48") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reedline") (r "^0.19.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winres") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0p2nfi2cv8ijxbafam8p1bn4xy6hd0njjx4caxbg748cjzq18zpl") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.80.0 (c (n "nu") (v "0.80.0") (d (list (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "hamcrest2") (r "^0.3.0") (d #t) (k 2)) (d (n "is_executable") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.80.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.80.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.80.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.80.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.48") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reedline") (r "^0.19.1") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3.14") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "time") (r "^0.3.12") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0vag351h25c9wfy4syyvrnvbzqx9pzbmjwz8n5d47z48hdjkqiyq") (f (quote (("which-support" "nu-command/which-support") ("wasi") ("trash-support" "nu-command/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "default") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl")))) (r "1.60")))

(define-public crate-nu-0.81.0 (c (n "nu") (v "0.81.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.9") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.81.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.81.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.81.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.81.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.81.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "reedline") (r "^0.20.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "18jm013r5cskjvsl0lgxza711a2h2zi41cpzfdw0p88gbq0mrgbd") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("extra" "nu-command/extra" "nu-cmd-lang/extra") ("default" "plugin" "which-support" "trash-support" "sqlite") ("dataframe" "nu-command/dataframe" "nu-cmd-lang/dataframe")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl")))) (r "1.60")))

(define-public crate-nu-0.82.0 (c (n "nu") (v "0.82.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.9") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.82.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.82.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.82.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.82.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.82.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.82.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "reedline") (r "^0.21.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1fgfiw956pbmkh9rbzjnv4b9yxshygf0x2g5k6ajlpdw388i06ds") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.83.0 (c (n "nu") (v "0.83.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.8") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.83.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.83.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.83.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.83.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.83.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.83.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.22.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.7") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1mh91cf3bhq70j8cw1hw948286jldwqaa8vrg6bg16irx7fxrmnb") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.83.1 (c (n "nu") (v "0.83.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.8") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.83.1") (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.83.1") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-explore") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.83.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-std") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.83.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.83.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.83.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.22.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.7") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1nzqgwvna6l2i3j8ab5jqnbvjaj836xw5sfxi3wl8ahnhj2qd719") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.84.0 (c (n "nu") (v "0.84.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.8") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.84.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.84.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.84.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.84.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.23.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.7") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1yhwwnq8g0yl5p7g12n05xk6g9n41dji1c6rj4g1g70q8qfl023x") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.85.0 (c (n "nu") (v "0.85.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.85.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.85.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.85.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.85.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.85.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.85.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.24.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0djbscsp59plmycvzrzqnvp395z6am0a545j7cnqg2gm2g1zs0b4") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.86.0 (c (n "nu") (v "0.86.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.86.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.86.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.86.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.86.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.86.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.86.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.25.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1kv18sgvcszwb1prfnp3jsd3rdgbvfmrdbs3yb30pp61rdmnz1lw") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.87.0 (c (n "nu") (v "0.87.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.87.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.87.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.87.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.87.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.87.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.87.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.26.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0y714qm1xry62jzmvv16q00bwnj8pxxksk0pkprg8086z430245j") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.87.1 (c (n "nu") (v "0.87.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.87.1") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.87.1") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-explore") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.87.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-std") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.87.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.87.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.87.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.26.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1ci4yaqqhb6agz37fnf7krmpnxpn1g29bnnf863s3w79mvhqaqsa") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.88.0 (c (n "nu") (v "0.88.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.88.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.88.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.88.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.88.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.88.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.88.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.27.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1n1ilqi0ygrrkykqi7wjljciakl0kz115i7kabf4crps5kb6s4nb") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.60")))

(define-public crate-nu-0.88.1 (c (n "nu") (v "0.88.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.88.1") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.88.1") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-explore") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.88.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-std") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.88.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.88.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.88.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.27.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1rjbfgk74xnd0wk95cmkcq9gfjdgkkwflnbn0y53xksfyjk0xn7i") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.72.1")))

(define-public crate-nu-0.89.0 (c (n "nu") (v "0.89.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.49.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.89.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-json") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-table") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.89.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.89.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.89.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.28.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "18i2cs2n8s2hlx7la2p3w5p85vsryyk05b1w199crvx3mabgaq7h") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default" "plugin" "which-support" "trash-support" "sqlite" "mimalloc")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.72.1")))

(define-public crate-nu-0.90.1 (c (n "nu") (v "0.90.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5.10") (f (quote ("fancy-no-backtrace"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-ansi-term") (r "^0.50.0") (d #t) (k 0)) (d (n "nu-cli") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.90.1") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.90.1") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-color-config") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-explore") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-json") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.90.1") (o #t) (d #t) (k 0)) (d (n "nu-pretty-hex") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-protocol") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-std") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-table") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-term-grid") (r "^0.90.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.90.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.90.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.29.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0g4948al41yby2dni2q60q85miwfzsmj9bcszs5fb5lx1pfj8air") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.72.1")))

(define-public crate-nu-0.91.0 (c (n "nu") (v "0.91.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "divan") (r "^0.1.14") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.1") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.91.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.91.0") (o #t) (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.91.0") (o #t) (d #t) (k 0)) (d (n "nu-protocol") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.91.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.91.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.91.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.30.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1zrw4jv57iwijd684vf43rw5sc9r0aq38shaizj96jqrgb8g9nja") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("extra" "dep:nu-cmd-extra" "nu-cmd-lang/extra") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.74.1")))

(define-public crate-nu-0.92.0 (c (n "nu") (v "0.92.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 2)) (d (n "divan") (r "^0.1.14") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.2") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.92.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-command") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.92.0") (o #t) (d #t) (k 0)) (d (n "nu-protocol") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.92.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.92.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.92.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.31.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0d8s7hnamv3x2w36hcw7z9gwgkv6k5i7c896im1qdhvw0mk6s987") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard" "nu-cli/system-clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.74.1")))

(define-public crate-nu-0.92.1 (c (n "nu") (v "0.92.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 2)) (d (n "divan") (r "^0.1.14") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.2") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.92.1") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-command") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-engine") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-explore") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-parser") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-path") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.92.1") (o #t) (d #t) (k 0)) (d (n "nu-protocol") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-std") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-system") (r "^0.92.1") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.92.1") (d #t) (k 2)) (d (n "nu-utils") (r "^0.92.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.31.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "1iwladm4y3i7qqpcz5vraijvq5h5yk5qkdfbwpphybb9i050n2cd") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard" "nu-cli/system-clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.74.1")))

(define-public crate-nu-0.92.2 (c (n "nu") (v "0.92.2") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 2)) (d (n "divan") (r "^0.1.14") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.2") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.92.2") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-command") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-engine") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-explore") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-parser") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-path") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-plugin") (r "^0.92.2") (o #t) (d #t) (k 0)) (d (n "nu-protocol") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-std") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-system") (r "^0.92.2") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.92.2") (d #t) (k 2)) (d (n "nu-utils") (r "^0.92.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.31.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0wla34qbibnhwy5aw0m1h6d8n8qfrk9gmplcrax56dn2vk8cjf8l") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("wasi" "nu-cmd-lang/wasi") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard" "nu-cli/system-clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.77.2")))

(define-public crate-nu-0.93.0 (c (n "nu") (v "0.93.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 2)) (d (n "divan") (r "^0.1.14") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.2") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-cmd-dataframe") (r "^0.93.0") (f (quote ("dataframe"))) (o #t) (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-cmd-plugin") (r "^0.93.0") (o #t) (d #t) (k 0)) (d (n "nu-command") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-plugin-core") (r "^0.93.0") (d #t) (k 2)) (d (n "nu-plugin-engine") (r "^0.93.0") (o #t) (d #t) (k 0)) (d (n "nu-plugin-protocol") (r "^0.93.0") (d #t) (k 2)) (d (n "nu-protocol") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.93.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.93.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.93.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.32.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.1") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "12gvbyvzprk3gkq5m6vx8z8q5zr812k2kxg81z75w71rhiis2zls") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard" "nu-cli/system-clipboard" "nu-cmd-lang/system-clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin-engine" "nu-cmd-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc") ("dataframe" "dep:nu-cmd-dataframe" "nu-cmd-lang/dataframe")))) (r "1.77.2")))

(define-public crate-nu-0.94.0 (c (n "nu") (v "0.94.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7.2") (f (quote ("fancy-no-backtrace" "fancy"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.42") (o #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal" "process" "fs" "term"))) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "nu-cli") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-cmd-base") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-cmd-extra") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-cmd-lang") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-cmd-plugin") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "nu-command") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-engine") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-explore") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-lsp") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-parser") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-path") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-plugin-core") (r "^0.94.0") (d #t) (k 2)) (d (n "nu-plugin-engine") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "nu-plugin-protocol") (r "^0.94.0") (d #t) (k 2)) (d (n "nu-protocol") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-std") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-system") (r "^0.94.0") (d #t) (k 0)) (d (n "nu-test-support") (r "^0.94.0") (d #t) (k 2)) (d (n "nu-utils") (r "^0.94.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "reedline") (r "^0.32.0") (f (quote ("bashisms" "sqlite"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.1") (d #t) (k 2)) (d (n "simplelog") (r "^0.12") (d #t) (k 0)) (d (n "tango-bench") (r "^0.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "winresource") (r "^0.1") (d #t) (t "cfg(windows)") (k 1)))) (h "0lli1m5pgxkfkn3237pav3gjc5ilmrssgxf2zi4ylf7q7zdxygfb") (f (quote (("which-support" "nu-command/which-support" "nu-cmd-lang/which-support") ("trash-support" "nu-command/trash-support" "nu-cmd-lang/trash-support") ("system-clipboard" "reedline/system_clipboard" "nu-cli/system-clipboard" "nu-cmd-lang/system-clipboard") ("stable" "default") ("sqlite" "nu-command/sqlite" "nu-cmd-lang/sqlite") ("plugin" "nu-plugin-engine" "nu-cmd-plugin" "nu-cli/plugin" "nu-parser/plugin" "nu-command/plugin" "nu-protocol/plugin" "nu-engine/plugin") ("default-no-clipboard" "plugin" "which-support" "trash-support" "sqlite" "mimalloc") ("default" "default-no-clipboard" "system-clipboard")))) (s 2) (e (quote (("static-link-openssl" "dep:openssl" "nu-cmd-lang/static-link-openssl") ("mimalloc" "nu-cmd-lang/mimalloc" "dep:mimalloc")))) (r "1.77.2")))

