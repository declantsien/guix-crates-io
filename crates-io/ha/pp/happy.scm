(define-module (crates-io ha pp happy) #:use-module (crates-io))

(define-public crate-happy-0.1.0 (c (n "happy") (v "0.1.0") (d (list (d (n "combine") (r "2.4.*") (d #t) (k 0)) (d (n "futures") (r "0.1.*") (d #t) (k 0)) (d (n "hyper") (r "0.11.*") (d #t) (k 0)) (d (n "mime") (r "0.3.*") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "0.2.*") (d #t) (k 0)) (d (n "serde") (r "1.*.*") (d #t) (k 0)) (d (n "serde_derive") (r "1.*.*") (d #t) (k 2)) (d (n "serde_json") (r "1.*.*") (d #t) (k 0)) (d (n "void") (r "1.*.*") (d #t) (k 0)))) (h "1ghjyld8583d2xjlbqymfy6x7gmaf0jd30p6psaw3mqlnvp7lw29")))

(define-public crate-happy-0.1.1 (c (n "happy") (v "0.1.1") (d (list (d (n "combine") (r "2.4.*") (d #t) (k 0)) (d (n "futures") (r "0.1.*") (d #t) (k 0)) (d (n "hyper") (r "0.11.*") (d #t) (k 0)) (d (n "log") (r "0.3.*") (d #t) (k 0)) (d (n "mime") (r "0.3.*") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "0.2.*") (d #t) (k 0)) (d (n "serde") (r "1.*.*") (d #t) (k 0)) (d (n "serde_derive") (r "1.*.*") (d #t) (k 2)) (d (n "serde_json") (r "1.*.*") (d #t) (k 0)) (d (n "void") (r "1.*.*") (d #t) (k 0)))) (h "0a9bspigxizag39lancnf5x6ynnxhcl765lqx059b9pb4w682128")))

