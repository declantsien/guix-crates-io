(define-module (crates-io ha rp harper-ls) #:use-module (crates-io))

(define-public crate-harper-ls-0.1.0 (c (n "harper-ls") (v "0.1.0") (d (list (d (n "cached") (r "^0.47.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)))) (h "1jgd1kjjyrj059yyjfy68g7qd1h51k388jxf3xnqvlv0hmq9d877")))

(define-public crate-harper-ls-0.2.0 (c (n "harper-ls") (v "0.2.0") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)))) (h "1x67mwhlp6lj8nz88i3s2ifbw6bi2i4nqqfrf5lc73lz98h0sbs8")))

(define-public crate-harper-ls-0.3.0 (c (n "harper-ls") (v "0.3.0") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1q731b460g1h9dx12f2y8b6rb19bn88kw5wvd9bscq1w4pa35879")))

(define-public crate-harper-ls-0.4.0 (c (n "harper-ls") (v "0.4.0") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1j1a7d5kds91qkwy6xym6s3ribcqh9qz0ax2afyycaqagmy3wmnm")))

(define-public crate-harper-ls-0.4.1 (c (n "harper-ls") (v "0.4.1") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1rh06fysr6v53y39n90sp8cdxy9ak0a95qsx5jqycmj1sh74fxxa")))

(define-public crate-harper-ls-0.5.0 (c (n "harper-ls") (v "0.5.0") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1b5k5zad44k2i97n639mbjdfcwckgm79j10ivqzwnzj63580pdlv")))

(define-public crate-harper-ls-0.5.1 (c (n "harper-ls") (v "0.5.1") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1hih80pf2snnr73zd2pq97b2cw4w2q0sa44k79vcdgiyv1gizbqc")))

(define-public crate-harper-ls-0.5.2 (c (n "harper-ls") (v "0.5.2") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1p26bwg1yhdqncxjvan83vzii0yx4ccnqc0gvsmdvqs4na9b4jpr")))

(define-public crate-harper-ls-0.5.3 (c (n "harper-ls") (v "0.5.3") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "002rvgw478160y47lhdvdkmw66wkb43hbw1i460mx05xkjbkk94x")))

(define-public crate-harper-ls-0.5.4 (c (n "harper-ls") (v "0.5.4") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "050qwsqp7i3c2n2ldr2af68068w4iwazgqw20dwcpmv431lszilh")))

(define-public crate-harper-ls-0.5.8 (c (n "harper-ls") (v "0.5.8") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1phyr3paybx816aphjxlfldzak2npvfnysv8asc7pivq7lfx64fa")))

(define-public crate-harper-ls-0.6.0 (c (n "harper-ls") (v "0.6.0") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "0pavqlp79xmfszjd2n32mshgj4cy7z80vphj2yy88xz4nw1jm1cx")))

(define-public crate-harper-ls-0.6.1 (c (n "harper-ls") (v "0.6.1") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "01avnzc3ff9r0r1im09s1hccg0f9i5pn088zby9kw0i9wlm7z22c")))

(define-public crate-harper-ls-0.6.2 (c (n "harper-ls") (v "0.6.2") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1z5q0a0dlcdnh8pg12yvj7b0bd73fyrhdjvmf9cr2i4rm4qz66db")))

(define-public crate-harper-ls-0.6.3 (c (n "harper-ls") (v "0.6.3") (d (list (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "harper-core") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "0sbjl9sri51b54swd6rhq3cddz74m62435cl2hmgyqdynsmd6ln8")))

(define-public crate-harper-ls-0.7.0 (c (n "harper-ls") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "179sn90a958k30yw8a81kd12lkdak9rjpagy96r0hpf109msywvr")))

(define-public crate-harper-ls-0.7.1 (c (n "harper-ls") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "0lmv5wzwj2ndgn8ivaxz5ka4zc87j02kf1h1q5mkiimrqkbj9fnx")))

(define-public crate-harper-ls-0.7.2 (c (n "harper-ls") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "10wdw41l4nih3d0r17y864052vjyc5p011h7s586psgb7f3qimvk")))

(define-public crate-harper-ls-0.7.3 (c (n "harper-ls") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1zj0n3b4nh7y34ksna3k3xsgjk6343764siy8bkwsh16zvp31c2y")))

(define-public crate-harper-ls-0.7.4 (c (n "harper-ls") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1y91jnpp3yqdzwaxh56llsrqbr178psx7r7fkw1b88bmrhisn4g5")))

(define-public crate-harper-ls-0.7.5 (c (n "harper-ls") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1igv8vss1b8899xdd3h4qsfp1ah2kzc2pfyw3v1hlcb33qjl16pd")))

(define-public crate-harper-ls-0.7.6 (c (n "harper-ls") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "harper-core") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "0r3gnhsivqafmggw10br2snxym6ckbjrqz1yah0axjx2qpbnxk5c")))

(define-public crate-harper-ls-0.8.0 (c (n "harper-ls") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)))) (h "1psghcx2kf8m7hqk2pvks7qq0cgmxdbxqd0fcdpsrnx3za52j3qk")))

(define-public crate-harper-ls-0.8.1 (c (n "harper-ls") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "1iy3ww1yn4fr3cabg1ji989x4406yrvjkvc8644hz212swsmf4js")))

(define-public crate-harper-ls-0.8.2 (c (n "harper-ls") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0xh1s2mk2r9xkqmdzswg0dgk9qssx49rrk744xzfjwansmznb40w")))

(define-public crate-harper-ls-0.8.3 (c (n "harper-ls") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "1i2178c1604ngy082l3if6a083fjicrn57zq8sb19vhgvxm4s58j")))

(define-public crate-harper-ls-0.8.4 (c (n "harper-ls") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0nfwi2jgr9r91ng9d0g7376rgf9qgy3yrm89zlmxkzvif8h7a0n9")))

(define-public crate-harper-ls-0.8.5 (c (n "harper-ls") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "harper-core") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.1") (d #t) (k 0)) (d (n "resolve-path") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("fs" "rt" "rt-multi-thread" "macros" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.0") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0kcahvwka7nf6mwj2ig38c0jgn0n3asmkkbg89mhz7rnaiyyjnq0")))

