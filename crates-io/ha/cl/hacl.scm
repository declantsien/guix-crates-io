(define-module (crates-io ha cl hacl) #:use-module (crates-io))

(define-public crate-hacl-0.0.1 (c (n "hacl") (v "0.0.1") (h "1xziysh00sngf572aa1mq3nk85xnpbq6707lb5b2dphqls5yrqhf")))

(define-public crate-hacl-0.0.1-dev.1 (c (n "hacl") (v "0.0.1-dev.1") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.1-dev.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "14yhzrmr6w2a6qcjcsi8vj66yn82hp5v52hbvnyj95hmgrgrlla6") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random"))))))

(define-public crate-hacl-0.0.2-dev.1 (c (n "hacl") (v "0.0.2-dev.1") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.2-dev.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1c7lv5lakigjcwzvh2pl48d7qc9qnh178l2i1054dbvx25zh9mcg") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random"))))))

(define-public crate-hacl-0.0.2-dev.2 (c (n "hacl") (v "0.0.2-dev.2") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.2-dev.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "178dyxkhfxii1bv1ay3gpb7wwhqhpsc5p9916bcamy0qlrr6v4ic") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random"))))))

(define-public crate-hacl-0.0.2-dev.3 (c (n "hacl") (v "0.0.2-dev.3") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.2-dev.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0qjvxgiqvjp21x6j7lvl40f23cachkircznpjk9437d1dnhi3gjx") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random"))))))

(define-public crate-hacl-0.0.2 (c (n "hacl") (v "0.0.2") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "09zm9w0q6yvm22g2vws9m9h9mh83291bq3kkgc1ay9n2j9v97f07") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random"))))))

(define-public crate-hacl-0.0.3-pre.1 (c (n "hacl") (v "0.0.3-pre.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hacl-sys") (r "=0.0.3-pre.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "10awx63zaj8q0yd5vkps26zbqb0kshx2gsizapvfwbnsyslh3wjf") (f (quote (("serialization" "serde" "serde_json") ("random" "rand" "rand_core") ("hazmat") ("default" "random")))) (r "1.60")))

