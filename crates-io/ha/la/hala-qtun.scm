(define-module (crates-io ha la hala-qtun) #:use-module (crates-io))

(define-public crate-hala-qtun-0.1.4 (c (n "hala-qtun") (v "0.1.4") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "duration-str") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor" "thread-pool"))) (d #t) (k 0)) (d (n "hala-future") (r "^0.1") (d #t) (k 0)) (d (n "hala-io") (r "^0.1") (d #t) (k 0)) (d (n "hala-quic") (r "^0.1") (d #t) (k 0)) (d (n "hala-rproxy") (r "^0.1") (d #t) (k 0)) (d (n "hala-tcp") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1nm5rzl70gwfn2jxfb9gnaqjkwrdbc2cisg1sqxysq6y9kpcaczn") (f (quote (("server") ("client") ("app"))))))

(define-public crate-hala-qtun-0.1.5 (c (n "hala-qtun") (v "0.1.5") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "duration-str") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor" "thread-pool"))) (d #t) (k 0)) (d (n "hala-future") (r "^0.1") (d #t) (k 0)) (d (n "hala-io") (r "^0.1") (d #t) (k 0)) (d (n "hala-quic") (r "^0.1") (d #t) (k 0)) (d (n "hala-rproxy") (r "^0.1") (d #t) (k 0)) (d (n "hala-tcp") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1wxz00mp6w4i3jgwrbk7zvglb75k74ycnz4b2gaf6czr6nbnvcwl") (f (quote (("server") ("client") ("app" "clap"))))))

(define-public crate-hala-qtun-0.1.6 (c (n "hala-qtun") (v "0.1.6") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "duration-str") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor" "thread-pool"))) (d #t) (k 0)) (d (n "hala-future") (r "^0.1") (d #t) (k 0)) (d (n "hala-io") (r "^0.1") (d #t) (k 0)) (d (n "hala-quic") (r "^0.1") (d #t) (k 0)) (d (n "hala-rproxy") (r "^0.1") (d #t) (k 0)) (d (n "hala-tcp") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1zyj5xbiilp0aplx0l51bq2yvlhzy2g7xyiy9a8d0r1a13mhi2gk") (f (quote (("server") ("default" "app" "client" "server") ("client") ("app" "clap"))))))

