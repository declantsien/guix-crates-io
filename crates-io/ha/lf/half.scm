(define-module (crates-io ha lf half) #:use-module (crates-io))

(define-public crate-half-0.1.0 (c (n "half") (v "0.1.0") (h "0i6qjm8s6gnh41wminq9dbfpbwwadcm9p8an0qpi1i5zaj6rf1sd") (f (quote (("use-intrinsics"))))))

(define-public crate-half-0.1.1 (c (n "half") (v "0.1.1") (d (list (d (n "serde") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8.12") (o #t) (d #t) (k 0)))) (h "0axaxh5411kh4b41545aqb53kfs6q7y98j6w8q8v4bdgjbkfgr86") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive" "std"))))))

(define-public crate-half-1.0.0 (c (n "half") (v "1.0.0") (d (list (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0zrscxjdzfpcifcb4yh8gbw32y9kwvkpkq2f8damba0ja2vqvmk3") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive"))))))

(define-public crate-half-1.0.1 (c (n "half") (v "1.0.1") (d (list (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)))) (h "0bb2lqq67c46win07hcklhmazicifh0mrnl711chv6dc6zq6i31y") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive"))))))

(define-public crate-half-1.0.2 (c (n "half") (v "1.0.2") (d (list (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)))) (h "02w8kxw1j72bz55l17nx4nva6rsv4fg0bpqncd3s2x0yqwqrrb8s") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive"))))))

(define-public crate-half-1.1.0 (c (n "half") (v "1.1.0") (d (list (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)))) (h "03w9vckmfgkxzn33s1vzzh5aaw9hgk9vwz4jb3y0vl93lxqmyp0x") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive"))))))

(define-public crate-half-1.1.1 (c (n "half") (v "1.1.1") (d (list (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)))) (h "1q1kbhvna2b1n4hdkc61y0ghpxx9r1m0hgazmsxpg9jfryvd2rly") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive")))) (y #t)))

(define-public crate-half-1.1.2 (c (n "half") (v "1.1.2") (d (list (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)))) (h "1nj76myxjx4mkp9rz1bzhld3253y0n62m4jfb1vy3cvynx8zb0d5") (f (quote (("use-intrinsics") ("std") ("serialize" "serde" "serde_derive"))))))

(define-public crate-half-1.2.0 (c (n "half") (v "1.2.0") (d (list (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0bidz8il4xq60irfmvzbx77nb21giqi2pipfqb5di91wvqw08v7f") (f (quote (("use-intrinsics") ("std") ("serialize" "serde"))))))

(define-public crate-half-1.3.0 (c (n "half") (v "1.3.0") (d (list (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0diqajg3mgar511hxswl4kgqqz9a026yvn3103x5h2smknlc4lwk") (f (quote (("use-intrinsics") ("std") ("serialize" "serde"))))))

(define-public crate-half-1.3.1 (c (n "half") (v "1.3.1") (d (list (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "032h6rdvkvg4k0j3zrpvzf3f1w1wnnzj0izjf0xvr5v5qsfxiqx4") (f (quote (("use-intrinsics") ("std") ("serialize" "serde"))))))

(define-public crate-half-1.4.0 (c (n "half") (v "1.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "1l2ir7d82s2hzkrpz5c6lkj9sg5h25qc87jz4bs6740kxablbxcz") (f (quote (("use-intrinsics") ("std") ("serialize" "serde"))))))

(define-public crate-half-1.4.1 (c (n "half") (v "1.4.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "1fxywbmir7sdbrxfm3q67ih7wxkgivx7wa2qkxr5k1abdrys9mi0") (f (quote (("use-intrinsics") ("std") ("serialize" "serde"))))))

(define-public crate-half-1.5.0 (c (n "half") (v "1.5.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "0kg5h5rksj6pk77iqmlbn43zwqgahdgmakwlsirmgx1mh8j5yszk") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-1.6.0 (c (n "half") (v "1.6.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "0xq1qkbfwnxv72b2fakgi5ai0j8arw38whwxgxs3rp1fz28anvyk") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-1.7.0 (c (n "half") (v "1.7.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "140gbm9wbbixzvc01plm4ngb9597k951jdf9vhy7279h1fpm23b0") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-1.7.1 (c (n "half") (v "1.7.1") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "1wzavaaaa2jwkm4i1dbglmwjfsdhn4n73wrkbdzllaynlams5b32") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-1.8.0 (c (n "half") (v "1.8.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "183w78if5myc4jii80w3gx4f2hba5wf6q3byqnpfyn1qwva5cndc") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-1.8.1 (c (n "half") (v "1.8.1") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0vx3ms473gpgf6d2lsdj11zxwdl3xy6isprabfkizp9hi3q6dm9v") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc")))) (y #t)))

(define-public crate-half-1.8.2 (c (n "half") (v "1.8.2") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "1mqbmx2m9qd4lslkb42fzgldsklhv9c4bxsc8j82r80d8m24mfza") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-2.0.0 (c (n "half") (v "2.0.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0fm6dwgx99qxakwix2xys3fs2lxg78b2h67hv9wwwzrw0bpb01y2") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (r "1.58")))

(define-public crate-half-2.1.0 (c (n "half") (v "2.1.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0m2mykd2flw0aa1kpawbxb3ngng7jwgkaqjij9xif2y3r5cr8smd") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (r "1.58")))

(define-public crate-half-2.2.0 (c (n "half") (v "2.2.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0myix3wd50g1cni7bxbjs39shvbz88kxvzgmh4k7n2q4mwv7sikc") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (r "1.58")))

(define-public crate-half-2.2.1 (c (n "half") (v "2.2.1") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "1l1gdlzxgm7wc8xl5fxas20kfi1j35iyb7vfjkghbdzijcvazd02") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (r "1.58")))

(define-public crate-half-2.3.0 (c (n "half") (v "2.3.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "186gjy8xpyvvm0ji2vrkpf1ssidarra0bbhnad2mm5r42ygsh1lr") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (y #t) (s 2) (e (quote (("rand_distr" "dep:rand" "dep:rand_distr")))) (r "1.70")))

(define-public crate-half-2.3.1 (c (n "half") (v "2.3.1") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0wj8gfpgn4zkjzw6hlnwb0pa71hy1mwq5h3fnpql71n02qwyalmw") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (s 2) (e (quote (("rand_distr" "dep:rand" "dep:rand_distr")))) (r "1.70")))

(define-public crate-half-1.8.3 (c (n "half") (v "1.8.3") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "00q4ki8ycdswapw6xn1q89vr7rzi1c8m99igps0lx1i1gzhyshqv") (f (quote (("use-intrinsics") ("std" "alloc") ("serialize" "serde") ("alloc"))))))

(define-public crate-half-2.4.0 (c (n "half") (v "2.4.0") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "0bmbzwmgfch5mlz4ygmfhymaaddgy5036cvvmzfkjrb9xjpfmv5m") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (s 2) (e (quote (("rand_distr" "dep:rand" "dep:rand_distr")))) (r "1.70")))

(define-public crate-half-2.4.1 (c (n "half") (v "2.4.1") (d (list (d (n "bytemuck") (r "^1.4.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "crunchy") (r "^0.2.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (o #t) (k 0)))) (h "123q4zzw1x4309961i69igzd1wb7pj04aaii3kwasrz3599qrl3d") (f (quote (("use-intrinsics") ("std" "alloc") ("default" "std") ("alloc")))) (s 2) (e (quote (("rand_distr" "dep:rand" "dep:rand_distr")))) (r "1.70")))

