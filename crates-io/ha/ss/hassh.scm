(define-module (crates-io ha ss hassh) #:use-module (crates-io))

(define-public crate-hassh-0.1.0 (c (n "hassh") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cbindgen") (r "^0.16") (d #t) (k 1)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "humantime") (r "^2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "nom") (r "^6.0") (d #t) (k 0)) (d (n "pcap") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pcap-parser") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "pnet_packet") (r "^0.27") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssh-parser") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15qhbmy0pippl364ff4grd63xmy23nqrf1yflrqdbdxv2xb8zidv") (f (quote (("pcap-file" "pcap-parser") ("live-capture" "pcap") ("default" "pcap-file" "live-capture") ("capi" "libc"))))))

