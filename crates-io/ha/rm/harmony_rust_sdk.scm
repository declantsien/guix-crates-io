(define-module (crates-io ha rm harmony_rust_sdk) #:use-module (crates-io))

(define-public crate-harmony_rust_sdk-0.1.0 (c (n "harmony_rust_sdk") (v "0.1.0") (d (list (d (n "assign") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (d #t) (k 0)) (d (n "tonic-build") (r "^0.3") (d #t) (k 1)))) (h "0b2qnz6790wmch3gga7rawiqxgmcgs4pr624hp5hcy93a9skqa5i") (f (quote (("use_parking_lot" "parking_lot") ("default" "client") ("client" "futures" "paste" "assign" "http" "log"))))))

(define-public crate-harmony_rust_sdk-0.2.0 (c (n "harmony_rust_sdk") (v "0.2.0") (d (list (d (n "assign") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "fs"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (f (quote ("tls" "tls-roots" "prost"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.3") (d #t) (k 1)))) (h "11vrxl4jggxadq87f5r9m1ssb0gqd8ly0c5czcr0gxdprl7ifywm") (f (quote (("use_parking_lot" "parking_lot") ("gen_server") ("gen_client") ("default") ("client" "gen_client" "futures-util" "paste" "assign" "log" "reqwest"))))))

(define-public crate-harmony_rust_sdk-0.2.1 (c (n "harmony_rust_sdk") (v "0.2.1") (d (list (d (n "assign") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "fs"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (f (quote ("tls" "tls-roots" "prost"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.3") (d #t) (k 1)))) (h "1z42rg21d67c5ksyjrrpxppgr544qrm2v3jwqqzr33540r68rjs6") (f (quote (("use_parking_lot" "parking_lot") ("gen_server") ("gen_client") ("default") ("client" "gen_client" "futures-util" "paste" "assign" "log" "reqwest"))))))

(define-public crate-harmony_rust_sdk-0.3.0 (c (n "harmony_rust_sdk") (v "0.3.0") (d (list (d (n "assign") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "flume") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls-native-roots" "json"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "fs"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (f (quote ("tls" "tls-roots" "prost"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.3") (d #t) (k 1)))) (h "0kjnihw4jxra8h8f9gwm292079aa28annlszps9bkk0g7656bidz") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "async-mutex" "futures" "paste" "assign" "log" "reqwest" "flume"))))))

(define-public crate-harmony_rust_sdk-0.3.1 (c (n "harmony_rust_sdk") (v "0.3.1") (d (list (d (n "assign") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "flume") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.2") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tonic") (r "^0.4") (f (quote ("tls" "tls-roots" "prost"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.4.0") (d #t) (k 1)))) (h "1j91k8mdh35bzpfj6d2z707b7z60py8psaxca9i6byx3xnhfqkky") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "async-mutex" "futures" "paste" "assign" "log" "reqwest" "flume"))))))

(define-public crate-harmony_rust_sdk-0.4.0 (c (n "harmony_rust_sdk") (v "0.4.0") (d (list (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.1.3") (d #t) (k 0)) (d (n "hrpc-build") (r "^0.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "172xqqjla4j68mqlincxx1z7gb43rdp8df1zw93xzg969xsd7869") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "async-mutex" "futures" "paste" "log" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.4.1 (c (n "harmony_rust_sdk") (v "0.4.1") (d (list (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.4") (k 0)) (d (n "hrpc-build") (r "^0.3") (f (quote ("rustfmt"))) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.1") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "03cvnjd5zms7i40lh60bbga2qkw89la3k3427jsjz62binvwb67a") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "async-mutex" "futures" "paste" "log" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.5.0 (c (n "harmony_rust_sdk") (v "0.5.0") (d (list (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.6") (k 0)) (d (n "hrpc-build") (r "^0.3") (f (quote ("rustfmt"))) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.1") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0qy022x6v65ma3hbg53sjwa9f8aspqnk4icd3j1ghhcijl21csxx") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "async-mutex" "futures" "paste" "log" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.5.1 (c (n "harmony_rust_sdk") (v "0.5.1") (d (list (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.6") (k 0)) (d (n "hrpc-build") (r "^0.3") (f (quote ("rustfmt"))) (k 1)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.3.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "15ckry9fxafdx9s1sjbsadcqr78gimwiw72hfc9nchlwrjv9qxg0") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "async-mutex" "futures" "paste" "tracing" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.5.2 (c (n "harmony_rust_sdk") (v "0.5.2") (d (list (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.6") (k 0)) (d (n "hrpc-build") (r "^0.3") (f (quote ("rustfmt"))) (k 1)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "12sd925saq54czyv79s0kvlcss9bacgc0621kmbgzpajv6q205vd") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "async-mutex" "futures" "paste" "tracing" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.6.0 (c (n "harmony_rust_sdk") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.8") (k 0)) (d (n "hrpc-build") (r "^0.5") (f (quote ("rustfmt"))) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0i8rmy3m4139i3bqpdw3pc55v3dsk5f4vk8lj8di7300dwxid29f") (f (quote (("request_method" "async-trait") ("gen_voice") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "tokio" "futures" "paste" "tracing" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.6.1 (c (n "harmony_rust_sdk") (v "0.6.1") (d (list (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.10") (k 0)) (d (n "hrpc-build") (r "^0.7") (f (quote ("boxed"))) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("sync" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "urlencoding") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0fj7dcpp46ybv1q08fp7c3a8zl5pzymjf6q2f227v8kxzsw3p4xb") (f (quote (("gen_voice") ("gen_sync") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "harmony_derive") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_sync") ("client" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "reqwest" "serde" "tokio" "paste" "tracing" "urlencoding"))))))

(define-public crate-harmony_rust_sdk-0.7.0 (c (n "harmony_rust_sdk") (v "0.7.0") (d (list (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.31") (k 0)) (d (n "hrpc-build") (r "^0.31") (k 1)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("sync" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "15h1bjlsggl8q9qyy5bicwb52vmwpszf08fnm70k9q6437flasb6") (f (quote (("rest" "serde" "http") ("gen_voice") ("gen_sync") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_profile") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_emote") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "gen_profile" "gen_emote" "harmony_derive") ("gen_batch") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_sync" "gen_batch" "gen_profile" "gen_emote" "rest") ("client_web" "_client_common" "hrpc/http_wasm_client") ("client_native" "_client_common" "hrpc/http_hyper_client" "reqwest/rustls-tls-native-roots") ("_client_common" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "rest" "reqwest" "tokio" "tracing" "urlencoding" "parking_lot" "harmony_derive/client"))))))

(define-public crate-harmony_rust_sdk-0.8.0 (c (n "harmony_rust_sdk") (v "0.8.0") (d (list (d (n "ctrlc") (r "^3.1.8") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "harmony_derive") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "hrpc") (r "^0.33") (k 0)) (d (n "hrpc-build") (r "^0.33") (k 1)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt" "macros" "fs"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "00kn6z712p68jlqq3l3w15m4bvrzd5fli1xd7y031fzns7hq6ag2") (f (quote (("rest" "serde" "http") ("gen_voice") ("gen_sync") ("gen_server" "hrpc/server" "hrpc-build/server") ("gen_profile") ("gen_mediaproxy" "gen_harmonytypes") ("gen_harmonytypes") ("gen_emote") ("gen_client" "hrpc/client" "hrpc-build/client") ("gen_chat" "gen_harmonytypes" "gen_profile" "gen_emote" "harmony_derive") ("gen_batch") ("gen_auth") ("default" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_sync" "gen_batch" "gen_profile" "gen_emote" "rest") ("client_web" "_client_common" "hrpc/http_wasm_client") ("client_native" "_client_common" "tokio" "hrpc/http_hyper_client" "reqwest/rustls-tls-native-roots") ("client_backoff") ("_client_common" "gen_chat" "gen_auth" "gen_mediaproxy" "gen_voice" "gen_harmonytypes" "gen_client" "rest" "reqwest" "tracing" "urlencoding" "harmony_derive/client"))))))

