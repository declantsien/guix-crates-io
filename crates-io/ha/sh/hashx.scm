(define-module (crates-io ha sh hashx) #:use-module (crates-io))

(define-public crate-hashx-0.1.0 (c (n "hashx") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dynasmrt") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0mh4aaffw8kisx8n586zyd4fv5sjk1cfhsd5s4hbm4n7igcayzs9") (f (quote (("full" "compiler") ("default" "compiler")))) (s 2) (e (quote (("compiler" "dep:dynasmrt" "dep:hex")))) (r "1.65")))

(define-public crate-hashx-0.1.1 (c (n "hashx") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.7.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "dynasmrt") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "17fs7zfc637qvgfdz01l14yrs041iibabphnwd3m4kp9cyb8cr20") (f (quote (("full" "compiler") ("default" "compiler")))) (s 2) (e (quote (("compiler" "dep:dynasmrt" "dep:hex")))) (r "1.65")))

(define-public crate-hashx-0.1.2 (c (n "hashx") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.7.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "dynasmrt") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "fixed-capacity-vec") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0pxcb8g8p5apa9s9rgp84a04csg7kr965wxj9g64akxygppsggij") (f (quote (("full" "compiler") ("default" "compiler")))) (s 2) (e (quote (("compiler" "dep:dynasmrt" "dep:hex")))) (r "1.65")))

(define-public crate-hashx-0.1.3 (c (n "hashx") (v "0.1.3") (d (list (d (n "arrayvec") (r "^0.7.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "dynasmrt") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "fixed-capacity-vec") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "04kq4pw6nj9rbycd44b366b2hdm9gpimczychk0yhiabq1qr8xhw") (f (quote (("full" "compiler") ("default" "compiler")))) (s 2) (e (quote (("compiler" "dep:dynasmrt" "dep:hex")))) (r "1.70")))

(define-public crate-hashx-0.1.4 (c (n "hashx") (v "0.1.4") (d (list (d (n "arrayvec") (r "^0.7.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "dynasmrt") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "fixed-capacity-vec") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "02p26vjmc77zm687iw84znj8s0scf34hlyfr2q53d2cn5vnazla9") (f (quote (("full" "compiler") ("default" "compiler")))) (s 2) (e (quote (("compiler" "dep:dynasmrt" "dep:hex")))) (r "1.70")))

