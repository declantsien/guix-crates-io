(define-module (crates-io ea re earendil) #:use-module (crates-io))

(define-public crate-earendil-0.3.0 (c (n "earendil") (v "0.3.0") (d (list (d (n "anyctx") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clone-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "concurrent-queue") (r "^2.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "earendil_crypt") (r "^0.1") (d #t) (k 0)) (d (n "earendil_packet") (r "^0.1") (d #t) (k 0)) (d (n "earendil_topology") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "melpow") (r "^0.1.1") (d #t) (k 0)) (d (n "moka") (r "^0.12.1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "moro") (r "^0.4.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "nanorpc-http") (r "^0.1.3") (d #t) (k 0)) (d (n "nursery_macro") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "priority-queue") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "replay_filter") (r "^0.1.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (f (quote ("hex" "base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.3") (d #t) (k 0)) (d (n "socksv5") (r "^0.3.1") (d #t) (k 0)) (d (n "sosistab2") (r "^0.10.18") (d #t) (k 0)) (d (n "sosistab2-obfsudp") (r "^0.1.11") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("sqlite" "runtime-async-std"))) (d #t) (k 0)) (d (n "stdcode") (r "^0.1.14") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (f (quote ("no-env-filter"))) (d #t) (k 0)))) (h "1srm190cz8zm9xbja8cl415fx60frqy16nlr2fkznabyqb6mvw1p")))

(define-public crate-earendil-0.3.1 (c (n "earendil") (v "0.3.1") (d (list (d (n "anyctx") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clone-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "concurrent-queue") (r "^2.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "earendil_crypt") (r "^0.1") (d #t) (k 0)) (d (n "earendil_packet") (r "^0.1") (d #t) (k 0)) (d (n "earendil_topology") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "melpow") (r "^0.1.1") (d #t) (k 0)) (d (n "moka") (r "^0.12.1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "moro") (r "^0.4.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "nanorpc-http") (r "^0.1.3") (d #t) (k 0)) (d (n "nursery_macro") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "priority-queue") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "replay_filter") (r "^0.1.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (f (quote ("hex" "base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.3") (d #t) (k 0)) (d (n "socksv5") (r "^0.3.1") (d #t) (k 0)) (d (n "sosistab2") (r "^0.10.18") (d #t) (k 0)) (d (n "sosistab2-obfsudp") (r "^0.1.11") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("sqlite" "runtime-async-std"))) (d #t) (k 0)) (d (n "stdcode") (r "^0.1.14") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (f (quote ("no-env-filter"))) (d #t) (k 0)))) (h "0hzrg3yl6pkjwn0myndilpzrn2b2h39c3kfmk68fd082vaw4qi6a")))

(define-public crate-earendil-0.4.0 (c (n "earendil") (v "0.4.0") (d (list (d (n "anyctx") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-dup") (r "^1.2.4") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clone-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "concurrent-queue") (r "^2.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "earendil_crypt") (r "^0.1") (d #t) (k 0)) (d (n "earendil_packet") (r "^0.1") (d #t) (k 0)) (d (n "earendil_topology") (r "^0.1") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "melpow") (r "^0.1.1") (d #t) (k 0)) (d (n "moka") (r "^0.12.1") (f (quote ("sync" "future"))) (d #t) (k 0)) (d (n "moro") (r "^0.4.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "nanorpc-http") (r "^0.1.3") (d #t) (k 0)) (d (n "nursery_macro") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "picomux") (r "^0.1.1") (d #t) (k 0)) (d (n "priority-queue") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "replay_filter") (r "^0.1.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (f (quote ("hex" "base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "sillad") (r "^0.1.1") (d #t) (k 0)) (d (n "sillad-sosistab3") (r "^0.1.2") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.3") (d #t) (k 0)) (d (n "socksv5") (r "^0.3.1") (d #t) (k 0)) (d (n "sosistab2-obfsudp") (r "^0.1.11") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("sqlite" "runtime-async-std"))) (d #t) (k 0)) (d (n "stdcode") (r "^0.1.14") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (f (quote ("no-env-filter"))) (d #t) (k 0)) (d (n "virta") (r "^0.1") (d #t) (k 0)))) (h "1gli389aawsjgh43r7r64wgx6l49xh6p834fz8593vmpzr2kmznr")))

(define-public crate-earendil-0.4.1 (c (n "earendil") (v "0.4.1") (d (list (d (n "anyctx") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-dup") (r "^1.2.4") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "blake3") (r "^1.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clone-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "concurrent-queue") (r "^2.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "earendil_crypt") (r "^0.1") (d #t) (k 0)) (d (n "earendil_packet") (r "^0.1") (d #t) (k 0)) (d (n "earendil_topology") (r "^0.1") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "melpow") (r "^0.1.1") (d #t) (k 0)) (d (n "moka") (r "^0.12.1") (f (quote ("sync" "future"))) (d #t) (k 0)) (d (n "moro") (r "^0.4.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "nanorpc-http") (r "^0.1.3") (d #t) (k 0)) (d (n "nursery_macro") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "picomux") (r "^0.1.1") (d #t) (k 0)) (d (n "priority-queue") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "replay_filter") (r "^0.1.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (f (quote ("hex" "base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "sillad") (r "^0.1.1") (d #t) (k 0)) (d (n "sillad-sosistab3") (r "^0.1.2") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.3") (d #t) (k 0)) (d (n "socksv5") (r "^0.3.1") (d #t) (k 0)) (d (n "sosistab2-obfsudp") (r "^0.1.11") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("sqlite" "runtime-async-std"))) (d #t) (k 0)) (d (n "stdcode") (r "^0.1.14") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (f (quote ("no-env-filter"))) (d #t) (k 0)) (d (n "virta") (r "^0.1") (d #t) (k 0)))) (h "141pyzpxg0sr6f289zs70d9gab4r2lm6h0j27m06ckci9a17klli")))

