(define-module (crates-io re tr retread) #:use-module (crates-io))

(define-public crate-retread-0.1.0 (c (n "retread") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "dap") (r "^0.3.1-alpha1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lcs") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "log-panics") (r "^2") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "moka") (r "^0.11") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "1.*") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1z31a9jxvnz7n83n8f7jddkjrcwfjm1zzn5x4aqiv4fp8qrxyaix") (f (quote (("test-server") ("default"))))))

(define-public crate-retread-0.1.1 (c (n "retread") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "dap") (r "^0.3.1-alpha1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lcs") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "log-panics") (r "^2") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "moka") (r "^0.11") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "1.*") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gnz6yaixmh0z2jfygqsri0wp86826afwd6iw33sk2q35jn5iv79") (f (quote (("test-server") ("default"))))))

