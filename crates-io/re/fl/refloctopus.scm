(define-module (crates-io re fl refloctopus) #:use-module (crates-io))

(define-public crate-refloctopus-0.0.0-squat (c (n "refloctopus") (v "0.0.0-squat") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bumpalo") (r "^3.4") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slice-dst") (r "^1.5") (d #t) (k 0)))) (h "0nf8x4a3m628yrj75pg3nv4sbngxv0bsq71v7nf71lbbmwp9hzln")))

(define-public crate-refloctopus-0.0.1 (c (n "refloctopus") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bumpalo") (r "^3.4") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "refloctopus-derive") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slice-dst") (r "^1.5") (d #t) (k 0)))) (h "0pkzijqw13lixsdjxvssy1av3xbjy53074c7l5lv2zi30i3abqnv") (f (quote (("use_serde" "serde" "erased-serde") ("derive" "refloctopus-derive") ("default" "derive" "use_serde" "attrs") ("attrs" "refloctopus-derive/attrs"))))))

