(define-module (crates-io re vo revolt-permissions) #:use-module (crates-io))

(define-public crate-revolt-permissions-0.0.2 (c (n "revolt-permissions") (v "0.0.2") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "14bh9rxjmrf2ffg7gk8l64bj16mxd98xan1h5j3lmk766pihqchk") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars"))))))

(define-public crate-revolt-permissions-0.6.0-rc.1 (c (n "revolt-permissions") (v "0.6.0-rc.1") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1zqikxh7aqlm9300dr2x0gidbnv8c1nnvll0wq0ci17hq6amijg5") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars"))))))

(define-public crate-revolt-permissions-0.6.0-rc.2 (c (n "revolt-permissions") (v "0.6.0-rc.2") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1d38skg722fx1m6zpdx1nn1zfz4wdr0pq91i7yrfn4kp5vpnarri") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.6.8 (c (n "revolt-permissions") (v "0.6.8") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1v6r5fry0hkg95bs0z0m4b6ahpnkc6ivisz6pplc99k4gm4bnl1q") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.6.9 (c (n "revolt-permissions") (v "0.6.9") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0kcigz0dry7q9hgp3imc6pv0gbprdph7446dyj4gxnpp934kv3rq") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.6.12 (c (n "revolt-permissions") (v "0.6.12") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1d7b3qsi9viws3p549ybyyahs93ww3sjm6bx7884axwgzh1kmhxf") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.6.13 (c (n "revolt-permissions") (v "0.6.13") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.6.13") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0l1z9cz77s17hxc0k8lg14wv9pfks5rnhcy5v7yn75k70v0ay3c6") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.7.0 (c (n "revolt-permissions") (v "0.7.0") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.7.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "12fczaxlwra3vna2q08bc2gf8sl267ggfm75y38jpdqny97yx75y") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

(define-public crate-revolt-permissions-0.7.1 (c (n "revolt-permissions") (v "0.7.1") (d (list (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "revolt-result") (r "^0.7.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "087lvwx6ir7djaf2a6nh7kp63sf338vn24mi6bppl8xn6yjzcyz4") (s 2) (e (quote (("try-from-primitive" "dep:num_enum") ("serde" "dep:serde") ("schemas" "dep:schemars") ("bson" "dep:bson"))))))

