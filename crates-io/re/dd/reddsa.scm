(define-module (crates-io re dd reddsa) #:use-module (crates-io))

(define-public crate-reddsa-0.0.0 (c (n "reddsa") (v "0.0.0") (h "01a0445d4hny5dy7nk6dyzcraz47qlv0qdmxr5m6339k6nzjf2in")))

(define-public crate-reddsa-0.1.0 (c (n "reddsa") (v "0.1.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "group") (r "^0.11") (d #t) (k 0)) (d (n "jubjub") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1rjmjk3hdh8rrrjicfj0sa2lihi91qvzgpsm1np5qi53pja2q3m9") (f (quote (("nightly") ("default" "serde"))))))

(define-public crate-reddsa-0.2.0 (c (n "reddsa") (v "0.2.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "group") (r "^0.11") (d #t) (k 0)) (d (n "jubjub") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1sfbsmwyyl7w69vkvbmcaii0qw7y1bn87l1fz2j4q66c5knzlbjs") (f (quote (("nightly") ("default" "serde"))))))

(define-public crate-reddsa-0.3.0 (c (n "reddsa") (v "0.3.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "group") (r "^0.12") (k 0)) (d (n "jubjub") (r "^0.9") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "10j11v13h4p5vmjs62p1rvhfkl3yi7a8a1cdd3ginj3yif607j2c") (f (quote (("std" "blake2b_simd/std" "thiserror" "zeroize" "alloc" "serde") ("nightly") ("default" "std") ("alloc"))))))

(define-public crate-reddsa-0.4.0 (c (n "reddsa") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "group") (r "^0.12") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "jubjub") (r "^0.9") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.4") (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "134159kgch8d0v79w11cv7l2l74rsfh32fgc0g65qgb3ik45cv65") (f (quote (("std" "blake2b_simd/std" "thiserror" "zeroize" "alloc" "serde") ("nightly") ("default" "std") ("alloc" "hex"))))))

(define-public crate-reddsa-0.5.0 (c (n "reddsa") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "frost-rerandomized") (r "^0.1") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "jubjub") (r "^0.10") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.5") (k 0)) (d (n "pasta_curves") (r "^0.5") (f (quote ("alloc"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "1kcz96zd42hnp3nl8wqj55al24czkj9czlvrzz95jcgl1ln4vcsl") (f (quote (("std" "blake2b_simd/std" "thiserror" "zeroize" "alloc" "serde") ("nightly") ("frost" "std" "frost-rerandomized") ("default" "std") ("alloc" "hex")))) (r "1.60")))

(define-public crate-reddsa-0.5.1 (c (n "reddsa") (v "0.5.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (k 0)) (d (n "byteorder") (r "^1.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "frost-rerandomized") (r "^0.6.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "jubjub") (r "^0.10") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "pasta_curves") (r "^0.5") (k 0)) (d (n "pasta_curves") (r "^0.5") (f (quote ("alloc"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "00hbnhaqqx08dnvwzh8n4b6n0i202fsk5xd578lp6jg860cik9bq") (f (quote (("std" "blake2b_simd/std" "thiserror" "zeroize" "alloc" "serde") ("nightly") ("frost" "std" "frost-rerandomized") ("default" "std") ("alloc" "hex")))) (r "1.65")))

