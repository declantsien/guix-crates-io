(define-module (crates-io re dd reddd) #:use-module (crates-io))

(define-public crate-reddd-0.1.0 (c (n "reddd") (v "0.1.0") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "0a1nyp27ccv1ynrf28fj5dykzvyv4pk1rg9b75f7la4wxg3wqz9p")))

(define-public crate-reddd-0.1.1 (c (n "reddd") (v "0.1.1") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "09h5vk9vk61z1xnc3k92xll7cwq50wvj7jqv71saq1wxdailbr45") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-reddd-0.1.2 (c (n "reddd") (v "0.1.2") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "0xf8j27zn2g217nkzvw58230hr0kal5qip01zf8cli4avb3rjsvr") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-reddd-0.2.0 (c (n "reddd") (v "0.2.0") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "0y14ixrf2blav7is4ffdxlprllbpn2xx6614bvjr80qf3vjkzbrf") (f (quote (("usecase") ("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-reddd-0.2.1 (c (n "reddd") (v "0.2.1") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "1i8pks1mbpx00c7imvqjib24dcdap5kq426vfski1y5j6y6bj2zc") (f (quote (("usecase") ("default" "serde" "usecase")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-reddd-0.2.2 (c (n "reddd") (v "0.2.2") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "195w4m5v6ls5d3gwj89k3ak4p4gkplj7aqacad0kv8xlkcbc5i4s") (f (quote (("usecase") ("default" "serde" "usecase")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-reddd-0.2.3 (c (n "reddd") (v "0.2.3") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("chrono" "derive" "uuid"))) (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "reddd-macros") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "1qdwv77n4lyvbgf7flv4cb8vv0f3nm1xbj9hkvx1fsilk1wnx5qh") (f (quote (("usecase") ("default" "serde" "usecase")))) (s 2) (e (quote (("serde" "dep:serde"))))))

