(define-module (crates-io re ql reql) #:use-module (crates-io))

(define-public crate-reql-0.0.0 (c (n "reql") (v "0.0.0") (h "0khsgfd175vajh9k4ki7rsg1xi7fl6k1m0rv5vq4658hw3szgsrn")))

(define-public crate-reql-0.0.1 (c (n "reql") (v "0.0.1") (d (list (d (n "ql2") (r "^1.0.0") (d #t) (k 0)) (d (n "r2d2") (r "^0.7.0") (d #t) (k 0)))) (h "1w1501slvinxff54l9fsynr33ga8dywsvlwc95dz1397c2mb9bws")))

(define-public crate-reql-0.0.2 (c (n "reql") (v "0.0.2") (d (list (d (n "bufstream") (r "^0.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.1") (d #t) (k 0)) (d (n "ql2") (r "^1.0.0") (d #t) (k 0)) (d (n "r2d2") (r "^0.7.0") (d #t) (k 0)))) (h "0sqil7plaw3znkdrjl8rcfkqpldmydgyy9xzrsvf24qwfv7x6zd9")))

(define-public crate-reql-0.0.3 (c (n "reql") (v "0.0.3") (h "0zlgr9bz6dqmhj0ikk3j7h0sbvh8lk3ypvdgc99g3xmydwhipah8")))

(define-public crate-reql-0.0.4 (c (n "reql") (v "0.0.4") (h "0c3d90j7254q2aqanz7scnf87rs1am9vmhzdhi28lhaxaimb5xm9")))

(define-public crate-reql-0.0.5 (c (n "reql") (v "0.0.5") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.0") (d #t) (k 0)) (d (n "ql2") (r "^1.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.4") (d #t) (k 0)) (d (n "scram") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.8") (d #t) (k 1)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "skeptic") (r "^0.6") (d #t) (k 1)) (d (n "skeptic") (r "^0.6") (d #t) (k 2)) (d (n "slog") (r "^1.2") (f (quote ("release_max_level_warn"))) (d #t) (k 0)) (d (n "slog-term") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.3") (f (quote ("v4" "serde" "use_std"))) (d #t) (k 0)))) (h "1fjf2fhj0jwbb59jyflim31yzv3nqdigq3gml53pvxld97j5cyp6")))

(define-public crate-reql-0.0.6-alpha1 (c (n "reql") (v "0.0.6-alpha1") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha1") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)))) (h "1rr7ygjkjkvfvi1pznwjbj6vv5xag2arvw3ggv1snmnp5c2jhqkm")))

(define-public crate-reql-0.0.6-alpha2 (c (n "reql") (v "0.0.6-alpha2") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha1") (d #t) (k 0)) (d (n "reql-io") (r "^0.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)))) (h "0v6h12c38phbjar70mm3vscafl572vbfdmwxg8lizvbzyj7wx1c1") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha3 (c (n "reql") (v "0.0.6-alpha3") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha1") (d #t) (k 0)) (d (n "reql-io") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)))) (h "1j7wxj6z69ccwjj9vbdzd7vavvka6xj7jwx6bmh7whsknvwmdj61") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha4 (c (n "reql") (v "0.0.6-alpha4") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha1") (d #t) (k 0)) (d (n "reql-io") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)))) (h "05li30nxng8l9bc0rpv5c5yayzy8hmdwgjc4p0zd0szlxbbk7dz3") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha5 (c (n "reql") (v "0.0.6-alpha5") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha2") (d #t) (k 0)) (d (n "reql-io") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)))) (h "076ln2lzx9h10kzqfg5wpabb3apyckkqqv1l230x4xxlaqal1hkk") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha6 (c (n "reql") (v "0.0.6-alpha6") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha3") (d #t) (k 0)) (d (n "reql-io") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)))) (h "0aq1ai2na9fwysa9h1gqccs9im3r20kywfk2h9smcfp9dpd75kdm") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha7 (c (n "reql") (v "0.0.6-alpha7") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6-alpha4") (d #t) (k 0)) (d (n "reql-io") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)))) (h "0bp8lq72bzl9dwz142262nrs4b241rr9dpmsa2fsiyzs2gndmgln") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha8 (c (n "reql") (v "0.0.6-alpha8") (d (list (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "nom") (r "^2.1") (d #t) (k 1)) (d (n "protobuf") (r "^1.1") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "reql-io") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 1)) (d (n "serde_derive") (r "^0.9") (d #t) (k 1)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.6") (d #t) (k 1)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)))) (h "0irg6vr91gabcvv4ingl9iqacww7q0g5rdfyidj9s6zaww7ypwcg") (f (quote (("with_io" "reql-io") ("default" "with_io"))))))

(define-public crate-reql-0.0.6-alpha9 (c (n "reql") (v "0.0.6-alpha9") (d (list (d (n "bufstream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^2.1") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "scram") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0aasidav36grrvvx9j194r09f93hpfqi9mflw2ahijyp6cjigzgp") (f (quote (("with-io" "lazy_static" "serde_derive" "r2d2" "byteorder" "bufstream" "scram" "tokio-core" "futures" "parking_lot" "uuid" "ordermap") ("default" "with-io"))))))

(define-public crate-reql-0.0.6-alpha10 (c (n "reql") (v "0.0.6-alpha10") (d (list (d (n "bufstream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^2.1") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.1") (d #t) (k 0)) (d (n "scram") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rbws151a9x58x7pjs0hjf17k5j38a95xxzxjls0djggxi6dq5cm") (f (quote (("with-io" "lazy_static" "serde_derive" "r2d2" "byteorder" "bufstream" "scram" "tokio-core" "futures" "parking_lot" "uuid" "ordermap") ("default" "with-io"))))))

(define-public crate-reql-0.0.6 (c (n "reql") (v "0.0.6") (d (list (d (n "bufstream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^2.1") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.1") (d #t) (k 0)) (d (n "scram") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (o #t) (d #t) (k 0)))) (h "01k3jsz635x4w83nx9ivsjcxaw3gygkd92n1n55ssbmabya6xmg3") (f (quote (("with-io" "lazy_static" "serde_derive" "r2d2" "byteorder" "bufstream" "scram" "tokio-core" "futures" "parking_lot" "uuid" "ordermap") ("default" "with-io"))))))

(define-public crate-reql-0.0.7 (c (n "reql") (v "0.0.7") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^2.1") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.1") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^1.5") (d #t) (k 0)) (d (n "slog-term") (r "^1.5") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (d #t) (k 0)))) (h "11cirbmv0wp000rj5d37ajgv4wb2y5jm9k3lhs6xw68xllqvayd2")))

(define-public crate-reql-0.0.8 (c (n "reql") (v "0.0.8") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.1") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (d #t) (k 0)))) (h "1cnm8lwrsn8j8sy35fx15m2ja86qsl94bn0l60lx1443ll9p8na6")))

(define-public crate-reql-0.0.9 (c (n "reql") (v "0.0.9") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "ordermap") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.3") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.1") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (d #t) (k 0)))) (h "0rn4l8nzn5j5hz1xmhp2dfcr40m8i4y4hgfmakgkxd77j9qvifwm")))

(define-public crate-reql-0.0.10 (c (n "reql") (v "0.0.10") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "ordermap") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.7") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.2") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std" "v4" "serde"))) (d #t) (k 0)))) (h "0mswqy3gfj039vajw7v09pn3iz6s7qqwwbh4b8cgimjwjjaj9xzm")))

(define-public crate-reql-0.0.11 (c (n "reql") (v "0.0.11") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "19km2s8s10gm8i3zn3bbs8ynw1wm4vdhajzimy43s23din6wikym")))

(define-public crate-reql-0.0.12 (c (n "reql") (v "0.0.12") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^1.2") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1fxs8zbirbablx2m6mvak5vgfd3cf094f5r3qb9zjwsrzinn1cwf") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.13 (c (n "reql") (v "0.0.13") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "011yryl1ylm6xp666cyszcjn7clw364s3nk5bp00n1rm2za5kwzr") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.14 (c (n "reql") (v "0.0.14") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-derive") (r "^0.0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1fb4akrb5sz6w55wzb8zffak68hypp60q046rb65nn7n33jimrfb") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.15 (c (n "reql") (v "0.0.15") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0clxdpwia0wsma5m1mx419vwhpyrff4d3k713r51blc05d5yjf2d") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.16 (c (n "reql") (v "0.0.16") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1cs5hiypahkdzyxy9gc6vy6lyrpf6ily249kfqb6pjwmhb22l975") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.17 (c (n "reql") (v "0.0.17") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0pw5w9453z4iifjslh4999dzf1f1xadv6g62vnlnpcnhcn23x94r") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.18 (c (n "reql") (v "0.0.18") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "16rl9gbjk4shs6gi8kbidl8na66k41yg9v6zipi4ljgr5gkmyc2a") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.19 (c (n "reql") (v "0.0.19") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram-tmp") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1345i68j1cd2sb0nh165xd81s0n9mh1ywmc8mwngw2sdxk3b32c9") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.20 (c (n "reql") (v "0.0.20") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram-tmp") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1v1sd0pvf6j5ycps7qx08bynr5x0x9knwg5d7n2c0rayk77f1irq") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.21 (c (n "reql") (v "0.0.21") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.3") (d #t) (k 0)) (d (n "scram-tmp") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "09av102jm767zi6126q96fw5732fs45fwni658na5wv9dcmjkbk6") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.22 (c (n "reql") (v "0.0.22") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 1)) (d (n "uuid") (r "^0.6") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "08d9ilw2f5zfbmp38l7m9ypwwmrigkvs2p5g38ig6y6xf6mgc45j") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.23 (c (n "reql") (v "0.0.23") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 1)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 1)) (d (n "tokio") (r "^0.1") (f (quote ("async-await-preview"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "028jj4l7x645i4w88hy036rshwyxkwnrw6159gihf214nn2cgwmr") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.24 (c (n "reql") (v "0.0.24") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 1)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 1)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0xwd37ay1xvd89w5dn9xhs0pyby3rlhba5sc22wsfsm1n8g6p7v2") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.25 (c (n "reql") (v "0.0.25") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 1)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 1)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1x9zmzhf1w0l3bzbk8qmx4brb14plcz07lmkqppxvhlz1ya686xh") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.26 (c (n "reql") (v "0.0.26") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 1)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 1)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "13jiczbpk40h9rjh2r109hz84ys930xmwdb7g9dqxb226pv0msiw") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.0.27 (c (n "reql") (v "0.0.27") (d (list (d (n "bufstream") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 1)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "protobuf") (r ">= 1.4, < 1.6") (d #t) (k 0)) (d (n "ql2") (r "^1.1") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 0)) (d (n "scram") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 1)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 1)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "02hjwxsrb14jpw4mnl8grgjlj6qglh91dbk84wpn25figg3a3kzl") (f (quote (("tls" "native-tls"))))))

(define-public crate-reql-0.1.0 (c (n "reql") (v "0.1.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 2)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1g7isqv5k52m3cl6n4fnw3znv827y5mnasqsdkifnl0l3rxic0z8")))

(define-public crate-reql-0.2.0 (c (n "reql") (v "0.2.0") (d (list (d (n "access-queue") (r "^1.1.0") (d #t) (k 0)) (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 2)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "03il3zh7i36xqyxr4s0wsazgczzlix6zbijg59457ybbv3jqs16a")))

(define-public crate-reql-0.2.1 (c (n "reql") (v "0.2.1") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 2)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0wkvmfnw2wjl99213mr5lk380dnxiw74ppg52nadjx2jqf56n7hk")))

(define-public crate-reql-0.3.0 (c (n "reql") (v "0.3.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 2)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0yqnw744bmbnad1yy1bgbg0y7d1ll7k0xb3q3w10sdj1624mwimq")))

(define-public crate-reql-0.4.0 (c (n "reql") (v "0.4.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.4") (d #t) (k 2)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "174xjri25wj7qf4n2s9j40vxfyw9glq0wlx09y6ym22j5bgvx36g")))

(define-public crate-reql-0.5.0 (c (n "reql") (v "0.5.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.5") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "02h0rdnahkbybp29l434qcbqi73ag3grbs7nfklncmy0p0drxliz")))

(define-public crate-reql-0.6.0 (c (n "reql") (v "0.6.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.5") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0a7n1cn3hgp624ryi57kkbracd2psjr3ily38kk0krv80xcjx92h")))

(define-public crate-reql-0.6.1 (c (n "reql") (v "0.6.1") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.0.6") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0xy3ghcl6vh6181sswv3z0lbp858hjrrka704rq4w1x6k53yqjry")))

(define-public crate-reql-0.7.0 (c (n "reql") (v "0.7.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.1.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0b6y9qxydnw5di8l8zqyzvhxmcmcnld4pw4c23v9i7lv7jl39hh3")))

(define-public crate-reql-0.8.0 (c (n "reql") (v "0.8.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0wjlryla0nl84y2895higiv562w7jbqgk7gm4h233b8apbi7901j")))

(define-public crate-reql-0.9.0 (c (n "reql") (v "0.9.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1vlqsxjf2nq296n7nsmz8pnmibl3wyi8whmm7a7rz9ndr8didmki")))

(define-public crate-reql-0.10.0 (c (n "reql") (v "0.10.0") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "052k04rcjfaxcagrwfcp8b9b71f0ns66zsm08q4fbzs6kpsnfx0c")))

(define-public crate-reql-0.10.1 (c (n "reql") (v "0.10.1") (d (list (d (n "async-net") (r "^1.6.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.0") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0l4hnz1mpx43fk55d28ysv073gqn2gv3agab2841b365zpbjkqkb")))

(define-public crate-reql-0.10.2 (c (n "reql") (v "0.10.2") (d (list (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0cd3jcsa18j8a96v2n6wk186pjj4pjkfwdq83bj18n8najzqp6xi")))

(define-public crate-reql-0.10.3 (c (n "reql") (v "0.10.3") (d (list (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.2.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.1") (d #t) (k 2)))) (h "1qr10r5fd9hd333ni4ip4bngk4w9zi9p1yniv4vmsxvxrl67iia0")))

(define-public crate-reql-0.10.4 (c (n "reql") (v "0.10.4") (d (list (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.3.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.1") (d #t) (k 2)))) (h "0q69wj7z8sj34ncps7vj81nk6n1qx75236khjzhcihwwr9f10488")))

(define-public crate-reql-0.11.0 (c (n "reql") (v "0.11.0") (d (list (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.3.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.1") (d #t) (k 2)))) (h "0j1l2b2lrfa34nfqgyjwchngyzq36x2q9mk1qsiw5w8df9rlk9xn")))

(define-public crate-reql-0.11.1 (c (n "reql") (v "0.11.1") (d (list (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.3.0") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (d #t) (k 2)))) (h "1kzrhjh2jlmp9xas92m3ani7qyrnabys38mkq2vklaxkyd31jrhb")))

(define-public crate-reql-0.11.2 (c (n "reql") (v "0.11.2") (d (list (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ql2") (r "^2.1.1") (d #t) (k 0)) (d (n "reql-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "reql-types") (r "^0.3.3") (d #t) (k 0)) (d (n "scram") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.175") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "1bd8m8dc27mljlhfhhc0p1af1dkgqz3y9p85lflnpc1f4y8nc92v")))

