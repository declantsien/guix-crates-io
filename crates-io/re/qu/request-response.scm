(define-module (crates-io re qu request-response) #:use-module (crates-io))

(define-public crate-request-response-0.0.0 (c (n "request-response") (v "0.0.0") (h "1v8y32qp6safwgmx700ym4x3lnddlhfay4yxqv3mqlxi70za1v77") (y #t)))

(define-public crate-request-response-0.10.0 (c (n "request-response") (v "0.10.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "tetsy-libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "tetsy-libp2p-swarm") (r "^0.28.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "09zqxvlyy8d6jj3dnfmb1dvm8rn6637rbj9plcrn529wnx50g082")))

(define-public crate-request-response-0.9.0 (c (n "request-response") (v "0.9.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "tet-libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "tet-libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1j6zhnk1l5j945kxbikmy0g98cwx8593x411maf3zpry1782c9s6")))

