(define-module (crates-io re ge regex-intersect) #:use-module (crates-io))

(define-public crate-regex-intersect-1.0.0 (c (n "regex-intersect") (v "1.0.0") (d (list (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-tree") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "132h002sa0j0jgfjdybv22zn7v1adn942gipg27s6dr3mpakw6mv") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-tree" "dep:tracing-subscriber"))))))

(define-public crate-regex-intersect-1.1.0 (c (n "regex-intersect") (v "1.1.0") (d (list (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-tree") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "0hhz323c4d8l23nh5wmq8j5611rmr10rv5hk107iqpmb4ilylblh") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-tree" "dep:tracing-subscriber"))))))

(define-public crate-regex-intersect-1.2.0 (c (n "regex-intersect") (v "1.2.0") (d (list (d (n "globset") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "tracing-tree") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "08m84x3w4dpyldwm32i36w1nksv9ika88vm9micipqnadfvhz41r") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-tree" "dep:tracing-subscriber") ("glob" "dep:globset"))))))

