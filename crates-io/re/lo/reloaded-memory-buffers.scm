(define-module (crates-io re lo reloaded-memory-buffers) #:use-module (crates-io))

(define-public crate-reloaded-memory-buffers-3.0.4 (c (n "reloaded-memory-buffers") (v "3.0.4") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1aj0cn0vp7j1zfrwbfm7afpgix5glgn2bz48mxmg24f0zna2wpzx")))

(define-public crate-reloaded-memory-buffers-3.0.5 (c (n "reloaded-memory-buffers") (v "3.0.5") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09rmh4mx2wn0kicx38345p6pja74hfiq7p08njm5gl6rp9y3kpi9")))

(define-public crate-reloaded-memory-buffers-3.1.0 (c (n "reloaded-memory-buffers") (v "3.1.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jnz7kcysjiji81jlvpnlgdyirfhndd2q23qd2hxvrz3akdrgsrd")))

(define-public crate-reloaded-memory-buffers-3.1.1 (c (n "reloaded-memory-buffers") (v "3.1.1") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0sb22cdh7ikzw9q1sw9rmzwc8bf57a3m3hfav6adsswgn2q62dsz")))

(define-public crate-reloaded-memory-buffers-3.1.2 (c (n "reloaded-memory-buffers") (v "3.1.2") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dxc0iqy63cgyhnmagw8j5hjni9x6c626ndxcdd1k8r66viki97a")))

(define-public crate-reloaded-memory-buffers-3.1.3 (c (n "reloaded-memory-buffers") (v "3.1.3") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.12") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09ph21vbhkwv7p8hl1rjs5zi2c9gpj8darkzmgh3iq6a7qiagrjz")))

(define-public crate-reloaded-memory-buffers-3.2.0 (c (n "reloaded-memory-buffers") (v "3.2.0") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dajxaly1c12bzhnn7wxsi4h2mfz5bpfrmilxcf3vcr5rchjwcn0")))

(define-public crate-reloaded-memory-buffers-3.2.1 (c (n "reloaded-memory-buffers") (v "3.2.1") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0c63qcirmrxp9ki6ckiw4jbllg1s6zvmss6jflmw3md43l4iq8wj")))

(define-public crate-reloaded-memory-buffers-3.2.2 (c (n "reloaded-memory-buffers") (v "3.2.2") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0dyz0ixpymkfd19ax4qcdknrl3s0a5yhx5l2s1jzpqzx45wmqrgb")))

(define-public crate-reloaded-memory-buffers-3.3.0 (c (n "reloaded-memory-buffers") (v "3.3.0") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01n636nm4ksr6z96cszpg05crj1zhwq4nailfzlavgzax4m4m3xn")))

(define-public crate-reloaded-memory-buffers-3.3.1 (c (n "reloaded-memory-buffers") (v "3.3.1") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0spsrjvz7kj1gc21vr757smbxf9lagcssgdh32hxj6ma8whnf6hq")))

(define-public crate-reloaded-memory-buffers-4.0.0 (c (n "reloaded-memory-buffers") (v "4.0.0") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1893l6c6yvyriznhldl97l2l7iizzpmw844hy18pjjf3w5fna74q") (f (quote (("std") ("size_opt" "nightly") ("no_format") ("nightly") ("external_processes") ("default" "std") ("c_exports"))))))

(define-public crate-reloaded-memory-buffers-4.0.1 (c (n "reloaded-memory-buffers") (v "4.0.1") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wpgn5nw0pc5as5v8qk4jny5j0m7wnnn52wsyzp3awqjlcl6rbsq") (f (quote (("std") ("size_opt" "nightly") ("no_format") ("nightly") ("external_processes") ("default" "std") ("c_exports"))))))

(define-public crate-reloaded-memory-buffers-4.0.2 (c (n "reloaded-memory-buffers") (v "4.0.2") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "133ysalpgwacsdpsfrvk7dnryxndw5r46b5m95nnp0l0hnnswbca") (f (quote (("std") ("size_opt" "nightly") ("no_format") ("nightly") ("external_processes") ("default" "std") ("c_exports"))))))

(define-public crate-reloaded-memory-buffers-4.0.3 (c (n "reloaded-memory-buffers") (v "4.0.3") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ihk19qvpsqj0n2sncss6nyvh140kj4hgri51bdzfz4xb26h5md6") (f (quote (("std") ("size_opt" "nightly") ("no_format") ("nightly") ("external_processes") ("default" "std") ("c_exports"))))))

(define-public crate-reloaded-memory-buffers-4.1.0 (c (n "reloaded-memory-buffers") (v "4.1.0") (d (list (d (n "clf") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "errno") (r "^0.3.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.10") (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "mmap-rs-with-map-from-existing") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 2)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_System_Memory" "Win32_Foundation" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_System_Threading" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rkivkrsr4i6gr0i6ylimn5qmdh65n31lsv8isg9cdzpph7wr0h8") (f (quote (("std") ("size_opt" "nightly") ("no_format") ("nightly") ("external_processes") ("default" "std") ("c_exports") ("all_private"))))))

