(define-module (crates-io re mo remoteprocess) #:use-module (crates-io))

(define-public crate-remoteprocess-0.1.0 (c (n "remoteprocess") (v "0.1.0") (d (list (d (n "addr2line") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.1.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "gimli") (r "^0.17.0") (d #t) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05aqg11myv1q8p97zdk5q7cw551zqpj6jpl4596jfi88vcn11kwr")))

(define-public crate-remoteprocess-0.2.0 (c (n "remoteprocess") (v "0.2.0") (d (list (d (n "addr2line") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hszm78xvhlz3w72hr1v4g4c9pslgp80w0pp73z94nwcd73xl5cs")))

(define-public crate-remoteprocess-0.3.0 (c (n "remoteprocess") (v "0.3.0") (d (list (d (n "addr2line") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1vzhlghv7nvfp3pk05ppgzswvrq5zfw1zws93ggfs4vyxm62cn7h")))

(define-public crate-remoteprocess-0.3.1 (c (n "remoteprocess") (v "0.3.1") (d (list (d (n "addr2line") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0kkv9j9c9ff6ivf76ky32pd9fqcbb7dq07n2naxq90vnijfbzxln") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.3.2 (c (n "remoteprocess") (v "0.3.2") (d (list (d (n "addr2line") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.12") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1qwnrjzv469yi51bjg801prylcdc0v9aiw5dlr5sz4yddkhgmmpg") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.3.3 (c (n "remoteprocess") (v "0.3.3") (d (list (d (n "addr2line") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "goblin") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0a9zbx4qf2zr9q99rsykp6xb5h9l1a9vcvb3fkvbnlk4wbl8fhni") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.3.4 (c (n "remoteprocess") (v "0.3.4") (d (list (d (n "addr2line") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "goblin") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gagv0z8q5bgfm6169fym994lhm8hjcxz6j1yrpb7j9cgnkm36qr") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.0 (c (n "remoteprocess") (v "0.4.0") (d (list (d (n "addr2line") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "goblin") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1fyzqbkq6613wzl7bhhvxhig4abyzkk6dxv73m1pr0c613hq4155") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.1 (c (n "remoteprocess") (v "0.4.1") (d (list (d (n "addr2line") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "goblin") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.19") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.22") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06xm7d8yp5rw386yqbwy99g5ypiszgb72dl6xw9wnapsdh3ijbm5") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.2 (c (n "remoteprocess") (v "0.4.2") (d (list (d (n "addr2line") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "goblin") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.19") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.22") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1w8z82prp8jmnm4vkkgf0rhrr55gk7qf03qg58hvb2a5yp042p2l") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.3 (c (n "remoteprocess") (v "0.4.3") (d (list (d (n "addr2line") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "goblin") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.19") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.22") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1dj82r507iprljcrrdcsbf9g81zxq6ajvi8ij617050hw0rk3ln0") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.4 (c (n "remoteprocess") (v "0.4.4") (d (list (d (n "addr2line") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.26") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "08225zi4kzm4j5skrvd73h7l8zvhwfx1pwrvygihbwwwpx1whydx") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.5 (c (n "remoteprocess") (v "0.4.5") (d (list (d (n "addr2line") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.26") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0wv9rxaj4lj2sx6pxd6ghnwm3dhjzw127kgb4vf1ifpwggsx6cjk") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.6 (c (n "remoteprocess") (v "0.4.6") (d (list (d (n "addr2line") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "benfred-read-process-memory") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.26") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.1.9") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15j1kr6kwpli73dbpka3629dy7pix7rvkcdgi0qi34wnw95v85vk") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.7 (c (n "remoteprocess") (v "0.4.7") (d (list (d (n "addr2line") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.27") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.2.0") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14g08rcjai7hc21ibqlbabc5s2apmdh8bpn9ar75vz9jrfiml8z1") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.8 (c (n "remoteprocess") (v "0.4.8") (d (list (d (n "addr2line") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.27") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.2.0") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1kvkn59p9i73r3zr33746lg3f5jpg6798hmw75b5h93lzln464df") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.9 (c (n "remoteprocess") (v "0.4.9") (d (list (d (n "addr2line") (r "^0.17") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.5.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.27") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.2.0") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mn6lybyp2nq8j587f9d31mk1iyjkw11rm3y9mpifh0xp0i3xwfr") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.10 (c (n "remoteprocess") (v "0.4.10") (d (list (d (n "addr2line") (r "^0.18") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "goblin") (r "^0.5.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.24") (f (quote ("ptrace" "sched" "signal"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.29") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.2.1") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.4") (d #t) (k 0)) (d (n "regex") (r ">=1.6.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0vz4qv7yynm2rc33a0hr7n90j7iak0w2yvpvsq47ll2c3imyp4db") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.11 (c (n "remoteprocess") (v "0.4.11") (d (list (d (n "addr2line") (r "^0.19") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "goblin") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("ptrace" "sched" "signal"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.30") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.3.0") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.5") (d #t) (k 0)) (d (n "regex") (r ">=1.6.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0pdjysf7cw2mqgrvd4aglsb65wd855rx1vf237ahgsdd7xyxcgjs") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.12 (c (n "remoteprocess") (v "0.4.12") (d (list (d (n "addr2line") (r "^0.20") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "goblin") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("ptrace" "sched" "signal"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "object") (r "^0.31") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "proc-maps") (r "^0.3.1") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r ">=1.8.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "13j7m0g1rn9znrblrg7xlzxkw8na46hvn6y0cnazrpynkdv4s4ci") (f (quote (("unwind") ("default"))))))

(define-public crate-remoteprocess-0.4.13 (c (n "remoteprocess") (v "0.4.13") (d (list (d (n "addr2line") (r "^0.21") (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "goblin") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("ptrace" "sched" "signal"))) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "object") (r "^0.32") (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "proc-maps") (r "^0.3.2") (d #t) (k 0)) (d (n "read-process-memory") (r "^0.1.6") (d #t) (k 0)) (d (n "regex") (r ">=1.8.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "consoleapi" "wincon" "handleapi" "timeapi" "processenv"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02blci01clv2fq4qsjkiaijgjjgpl2fpmmwpsvwg3ikz3j8ffa49") (f (quote (("unwind") ("default"))))))

