(define-module (crates-io re fi refinery_cli) #:use-module (crates-io))

(define-public crate-refinery_cli-0.1.0 (c (n "refinery_cli") (v "0.1.0") (d (list (d (n "assert_cmd") (r "^0.11.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "predicates") (r "^1.0.1") (d #t) (k 2)) (d (n "refinery-migrations") (r "^0.1.0") (f (quote ("mysql" "postgres" "rusqlite"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (d #t) (k 0)))) (h "15px8n39xn9qw88vg385wrrhynswv5ppdpv4lzbc1fbv5xxl1g4k")))

(define-public crate-refinery_cli-0.2.0 (c (n "refinery_cli") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.25") (d #t) (k 0)) (d (n "assert_cmd") (r "^0.11.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5.1") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "predicates") (r "^1.0.1") (d #t) (k 2)) (d (n "refinery-migrations") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (d #t) (k 0)))) (h "1si6kpn22pglxw1p78vlxzx0rh1magixcl7dp93k5ly1z5166v27") (f (quote (("sqlite-bundled" "refinery-migrations/sync" "refinery-migrations/rusqlite-bundled") ("sqlite" "refinery-migrations/sync" "refinery-migrations/rusqlite") ("postgresql-previous" "refinery-migrations/sync" "refinery-migrations/postgres-previous") ("postgresql" "refinery-migrations/sync" "refinery-migrations/postgres") ("mysql" "refinery-migrations/sync" "refinery-migrations/mysql") ("default" "refinery-migrations/sync" "refinery-migrations/mysql" "refinery-migrations/postgres" "refinery-migrations/rusqlite-bundled"))))))

(define-public crate-refinery_cli-0.3.0 (c (n "refinery_cli") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "human-panic") (r "= 1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "refinery-core") (r "^0.3") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0qdh6asvp22n9smry4x6fn2kpp4ab1dyyh70lmf0zf2n0z891g2h") (f (quote (("sqlite-bundled" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("default" "mysql" "postgresql" "sqlite-bundled"))))))

(define-public crate-refinery_cli-0.4.0 (c (n "refinery_cli") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "refinery-core") (r "^0.4") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0lvpgw8fg0mxilzfirxi5pf79l30w2pjvrhfby88ba2ssf62s53l") (f (quote (("sqlite-bundled" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("default" "mysql" "postgresql" "sqlite-bundled"))))))

(define-public crate-refinery_cli-0.5.0 (c (n "refinery_cli") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "refinery-core") (r "^0.5") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0m1zykdrfnw52n0lyr24rilkblmxip5ids9wyqa8kw0rkxxy94g3") (f (quote (("sqlite-bundled" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("default" "mysql" "postgresql" "sqlite-bundled"))))))

(define-public crate-refinery_cli-0.6.0 (c (n "refinery_cli") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^1") (d #t) (k 2)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "refinery-core") (r "^0.6") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "08sacm01dfcy2js6c13m5ixpkb3kbf1adyjzrk1c9r1hzm8npljl") (f (quote (("sqlite-bundled" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("default" "mysql" "postgresql" "sqlite-bundled"))))))

(define-public crate-refinery_cli-0.7.0 (c (n "refinery_cli") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0si2rbm3y3nn7y98bhsc03x8n7539misr22i2rhgnvd5bglp31mk") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.0 (c (n "refinery_cli") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0ml8bn28887jmrw6f71lb4k2jmq9q2higfya8n0d1canwcq4s1qj") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.1 (c (n "refinery_cli") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.1") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0pcwi00qxxqqbcm4rjlpy2bkp6d6q66bairgrsmlnprc7pw0ig3b") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.2 (c (n "refinery_cli") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.2") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "16pkl3s2na6qf8ymmxbipmgmy85ifnyhiv5b6z2jbm12pmzmf3z6") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.3 (c (n "refinery_cli") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.3") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0c4fpgrjk358d4vd6xszcxwwkqkrbjcfklrlg2cyms3w8p2v8l2l") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.4 (c (n "refinery_cli") (v "0.8.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.4") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1c2hqk0vh86cr5zcrpr8vmif7rrnklqgbz7ipy4l4jjpiqqlpl7g") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.5 (c (n "refinery_cli") (v "0.8.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.5") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "00ram77j0sklkgappggd5n04ak3wd443g11bbraji6sg4ia0l07n") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.6 (c (n "refinery_cli") (v "0.8.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.6") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0xswcm72y8yxfh55wdq46s4cpkv5097dmx7za64sj2qha35qk0ba") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.7 (c (n "refinery_cli") (v "0.8.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "human-panic") (r "=1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^2") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1apq1j445mz1dw3plsnxzk3pi6mnzj8mcpilswlh89s498sg2cxf") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.8 (c (n "refinery_cli") (v "0.8.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.8") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "15j6rlbgc8lp9mngfq2dzbaysxlwsrrxl665c9a07mx3065li3g2") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.9 (c (n "refinery_cli") (v "0.8.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.9") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0j1q5g7i299j2ihvv51901y9pfz8568ms8jfdsz6kav0cxsbf56v") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.10 (c (n "refinery_cli") (v "0.8.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.10") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0djv809kzvcmanywkn8pj7k57bzmhlbr6s51frai7ac80gjy1qfx") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql" "refinery-core/flate2") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.11 (c (n "refinery_cli") (v "0.8.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.11") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "16vkg3bp88c56rrrvh5c0dd4nqbz3r1k5iczh9x01vhgjf5h11bl") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.12 (c (n "refinery_cli") (v "0.8.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.12") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0335fjc69q5g33ibnq7aa8fz39jw0hkdzx4fdg5r0fwrpsmqm7rc") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.13 (c (n "refinery_cli") (v "0.8.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.13") (f (quote ("toml"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "03f136a90hb1h5vcydim840g81ljxr9hfgjvy3mnxp0pv844skk2") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

(define-public crate-refinery_cli-0.8.14 (c (n "refinery_cli") (v "0.8.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "refinery-core") (r "^0.8.14") (f (quote ("toml"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "138h8408wga43l66fl768d754xwk2qarwd6d865zxh58qbj2b33n") (f (quote (("sqlite-bundled" "sqlite" "refinery-core/rusqlite-bundled") ("sqlite" "refinery-core/rusqlite") ("postgresql" "refinery-core/postgres") ("mysql" "refinery-core/mysql") ("mssql" "refinery-core/tiberius-config" "tokio") ("default" "mysql" "postgresql" "sqlite-bundled" "mssql"))))))

