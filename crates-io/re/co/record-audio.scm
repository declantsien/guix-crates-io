(define-module (crates-io re co record-audio) #:use-module (crates-io))

(define-public crate-record-audio-0.1.0 (c (n "record-audio") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 0)) (d (n "dasp") (r "^0.11.0") (f (quote ("signal" "interpolate" "interpolate-linear"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("isomp4" "mp3" "aac"))) (d #t) (k 0)))) (h "06knflclzk5678g6lasim3a1a8ra9xai98b281yhfkrg5wbrvkx4") (y #t)))

(define-public crate-record-audio-0.1.1 (c (n "record-audio") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 0)) (d (n "dasp") (r "^0.11.0") (f (quote ("signal" "interpolate" "interpolate-linear"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("isomp4" "mp3" "aac"))) (d #t) (k 0)))) (h "15k4kk3a683w1m1i0q2ci6v3p5m81hdk5adjfhsvjm4g333274n0")))

