(define-module (crates-io re nd rendy-factory) #:use-module (crates-io))

(define-public crate-rendy-factory-0.1.0 (c (n "rendy-factory") (v "0.1.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.1") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.1") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.1") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.18") (d #t) (k 0)))) (h "1sa0pc4y0chcnzh7qblrzh069r7yv2vvmmklrmxvps2m90q06f01") (f (quote (("vulkan" "gfx-backend-vulkan" "rendy-wsi/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("metal" "gfx-backend-metal" "rendy-wsi/gfx-backend-metal") ("empty" "gfx-backend-empty" "rendy-wsi/gfx-backend-empty") ("dx12" "gfx-backend-dx12" "rendy-wsi/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.2.0 (c (n "rendy-factory") (v "0.2.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "0slgr1gh7a8f7zp9iwzwa8aq6cv34ahcbj4qic9fvamnr0pakw2r") (f (quote (("vulkan" "rendy-util/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-util/no-slow-safety-checks") ("metal" "rendy-util/gfx-backend-metal") ("empty" "rendy-util/gfx-backend-empty") ("dx12" "rendy-util/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.3.0 (c (n "rendy-factory") (v "0.3.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "035bd0gnsyx2n7vkby2sippr8qg9dglv9i5zz9l86fs4ixcbmgwg") (f (quote (("vulkan" "rendy-util/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-util/no-slow-safety-checks") ("metal" "rendy-util/gfx-backend-metal") ("empty" "rendy-util/gfx-backend-empty") ("dx12" "rendy-util/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.3.1 (c (n "rendy-factory") (v "0.3.1") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "1ihmfpnkgab20xbfxmj3mja5bai81ywys6dibd51574mwdchkl3f") (f (quote (("vulkan" "rendy-util/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-util/no-slow-safety-checks") ("metal" "rendy-util/gfx-backend-metal") ("empty" "rendy-util/gfx-backend-empty") ("dx12" "rendy-util/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.4.0 (c (n "rendy-factory") (v "0.4.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "07p6kgvj3nia5z55zvsgfdv377arqv51s11la4jlzlf32jj0898i") (f (quote (("vulkan" "rendy-util/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-util/no-slow-safety-checks") ("metal" "rendy-util/gfx-backend-metal") ("empty" "rendy-util/gfx-backend-empty") ("dx12" "rendy-util/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.4.1 (c (n "rendy-factory") (v "0.4.1") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-util") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "14vhvglzzjkqkszrmpgy61ic7hgryfxj1zlzk4cjk5malw7n0cx7") (f (quote (("vulkan" "rendy-util/gfx-backend-vulkan") ("serde-1" "serde" "rendy-memory/serde-1" "gfx-hal/serde") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-util/no-slow-safety-checks") ("metal" "rendy-util/gfx-backend-metal") ("empty" "rendy-util/gfx-backend-empty") ("dx12" "rendy-util/gfx-backend-dx12"))))))

(define-public crate-rendy-factory-0.5.0 (c (n "rendy-factory") (v "0.5.0") (d (list (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log" "backtrace"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-core") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "0dfgi4430qpmxijmbjqpnqxjwwwkwjh1i37x536i3hcf9jg70q5v") (f (quote (("serde-1" "serde" "rendy-core/serde-1" "rendy-memory/serde-1") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-core/no-slow-safety-checks") ("metal" "rendy-core/metal") ("gl" "rendy-core/gl") ("empty" "rendy-core/empty") ("dx12" "rendy-core/dx12"))))))

(define-public crate-rendy-factory-0.5.1 (c (n "rendy-factory") (v "0.5.1") (d (list (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "relevant") (r "^0.4") (f (quote ("log"))) (d #t) (k 0)) (d (n "rendy-command") (r "^0.5.1") (d #t) (k 0)) (d (n "rendy-core") (r "^0.5.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5.1") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5.2") (d #t) (k 0)) (d (n "rendy-resource") (r "^0.5.1") (d #t) (k 0)) (d (n "rendy-wsi") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (d #t) (k 0)))) (h "1x2qcd7km7l1z5yfa535hifyx1227l96ckcfzgzd9bvfivqyj61k") (f (quote (("serde-1" "serde" "rendy-core/serde-1" "rendy-memory/serde-1") ("profiler" "thread_profiler/thread_profiler") ("no-slow-safety-checks" "rendy-core/no-slow-safety-checks") ("metal" "rendy-core/metal") ("gl" "rendy-core/gl") ("empty" "rendy-core/empty") ("dx12" "rendy-core/dx12"))))))

