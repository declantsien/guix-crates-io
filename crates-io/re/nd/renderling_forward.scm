(define-module (crates-io re nd renderling_forward) #:use-module (crates-io))

(define-public crate-renderling_forward-0.1.0 (c (n "renderling_forward") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("spirv"))) (d #t) (k 0)))) (h "13nns12lgw2xm8369z5jx8kjy4f35n0inwrv83dnz61p9f5mx2qz")))

(define-public crate-renderling_forward-0.1.1 (c (n "renderling_forward") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (f (quote ("spirv"))) (d #t) (k 0)))) (h "035a1dar6576jl7rjcncl6lf9qaac5b872bkiy6ch9i8rl6cxif8")))

(define-public crate-renderling_forward-0.1.2 (c (n "renderling_forward") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0l1ahzkzr89kj4xpy3k0vb657yb4dc956jg9cla60cnp84k14chy") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.0 (c (n "renderling_forward") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (f (quote ("spirv"))) (d #t) (k 0)))) (h "1799vbf4hxn590c0ia0q7fhfhpqxjfbi6x98y5nl4jw4aiyrnn6l") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.1 (c (n "renderling_forward") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (f (quote ("spirv"))) (d #t) (k 0)))) (h "1i3kzfi22h4i4qlr9bc5xx46gvjia77naff2hahf7rr9ivpz3qd2") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.2 (c (n "renderling_forward") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (f (quote ("spirv"))) (d #t) (k 0)))) (h "1pyyh0a82zgkd5fi5sj3d3jb0m4xnqvyr4q6s3xjbkn862wvf78m") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.3 (c (n "renderling_forward") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (f (quote ("spirv"))) (d #t) (k 0)))) (h "00z9r2d0m0i0sy32qiicgl7i5ra5pjxcnz25vgs9li2cjafhr2xk") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.4 (c (n "renderling_forward") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (f (quote ("spirv"))) (d #t) (k 0)))) (h "05vv9ps0dpqg0azbyachqjn3zfpgv3bp3gcw8zi345b7m8rnbhgh") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

(define-public crate-renderling_forward-0.2.5 (c (n "renderling_forward") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "renderling_build") (r "^0.1") (d #t) (k 1)) (d (n "renderling_core") (r "^0.1.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0qq736y179basx02hxxi75kvb3214jr1w05jf2lfbm4dyv0nr97j") (f (quote (("wasm" "wgpu/webgl" "renderling_core/wasm") ("default"))))))

