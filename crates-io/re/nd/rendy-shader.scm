(define-module (crates-io re nd rendy-shader) #:use-module (crates-io))

(define-public crate-rendy-shader-0.1.0 (c (n "rendy-shader") (v "0.1.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.1") (d #t) (k 0)) (d (n "shaderc") (r "^0.3") (d #t) (k 0)))) (h "1qrjx2r40hgiakqf0iw7sjz71nys34jda1i9yp5b39bdx3ywzzad")))

(define-public crate-rendy-shader-0.2.0 (c (n "rendy-shader") (v "0.2.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "15lkx74n5wmabjn20q5zsm2d75019sv7xmxfikixcqddcpm78whp") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde" "serde_bytes"))))))

(define-public crate-rendy-shader-0.3.0 (c (n "rendy-shader") (v "0.3.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.3.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "17x1zmdcgpywj5ilmslsszh9pyz115cgr2r9hgxpdqr0md8bf8al") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde" "serde_bytes"))))))

(define-public crate-rendy-shader-0.4.0 (c (n "rendy-shader") (v "0.4.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.4.0") (d #t) (k 0)) (d (n "rendy-util") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "10yldw2dfkyfdfrxc40b7zk9q7237jg0adk642dcbqhjkk6d9ki0") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde" "serde_bytes"))))))

(define-public crate-rendy-shader-0.4.1 (c (n "rendy-shader") (v "0.4.1") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.4.1") (d #t) (k 0)) (d (n "rendy-util") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "08n278yw6n7cxy4271gimb1zi01x94r0sj7lk3md535mydvsblvd") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde"))))))

(define-public crate-rendy-shader-0.5.0 (c (n "rendy-shader") (v "0.5.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-core") (r "^0.5.0") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "13j68cynknkihdc4bkiymbmfkzq1a0iaqawcm86kkdqbkfkj8qf9") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde" "rendy-core/serde-1"))))))

(define-public crate-rendy-shader-0.5.1 (c (n "rendy-shader") (v "0.5.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rendy-core") (r "^0.5.1") (d #t) (k 0)) (d (n "rendy-factory") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "05is9lnmskbszwna3fy3wb4n2n3yvp91836bazhw941lzb6zm3br") (f (quote (("spirv-reflection" "spirv-reflect") ("shader-compiler" "shaderc") ("serde-1" "serde" "rendy-core/serde-1"))))))

