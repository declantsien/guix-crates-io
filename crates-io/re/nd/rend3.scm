(define-module (crates-io re nd rend3) #:use-module (crates-io))

(define-public crate-rend3-0.0.1 (c (n "rend3") (v "0.0.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-intrusive") (r "^0.4") (d #t) (k 0)) (d (n "glam") (r "^0.12") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "path-dedot") (r "^3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "switchyard") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (d #t) (k 0)) (d (n "wgpu-conveyor") (r "^0.2") (d #t) (k 0)))) (h "04d737i6ik0swd3pqgdyslzp36rg07r5fldkrd27n6cqb07cyzpw")))

(define-public crate-rend3-0.0.2 (c (n "rend3") (v "0.0.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-intrusive") (r "^0.4") (d #t) (k 0)) (d (n "glam") (r "^0.12") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "path-dedot") (r "^3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "switchyard") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (d #t) (k 0)) (d (n "wgpu-conveyor") (r "^0.2") (d #t) (k 0)))) (h "1mkzi00d1222qy5z42zfcjivws5m8mzrjwb6aq65ab47qzbaklk0")))

(define-public crate-rend3-0.0.3 (c (n "rend3") (v "0.0.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-intrusive") (r "^0.4") (d #t) (k 0)) (d (n "glam") (r "^0.12") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "path-dedot") (r "^3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "switchyard") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (d #t) (k 0)) (d (n "wgpu-conveyor") (r "^0.2") (d #t) (k 0)))) (h "1d1pa16nfyma8mydnxwshdqqs4fgsj858ldgqcy6chbdpz853vl0")))

(define-public crate-rend3-0.0.4 (c (n "rend3") (v "0.0.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-intrusive") (r "^0.4") (d #t) (k 0)) (d (n "glam") (r "^0.13") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "path-dedot") (r "^3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "switchyard") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (d #t) (k 0)) (d (n "wgpu-conveyor") (r "^0.2") (d #t) (k 0)))) (h "0bxx81vcb3z6wlz2aap2pb30sfp4z4gmdmmzpvxzphymcqsk3ffw") (y #t)))

(define-public crate-rend3-0.0.5 (c (n "rend3") (v "0.0.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-intrusive") (r "^0.4") (d #t) (k 0)) (d (n "glam") (r "^0.13") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "path-dedot") (r "^3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "switchyard") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.7") (d #t) (k 0)) (d (n "wgpu-conveyor") (r "^0.2") (d #t) (k 0)))) (h "1ibv5sfxv3lwlrixji7h9sia7nv3hkglxchb4baldy8hrswx671g")))

(define-public crate-rend3-0.0.6 (c (n "rend3") (v "0.0.6") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "glam") (r "^0.17") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "rend3-types") (r "^0.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("trace" "spirv" "webgl"))) (d #t) (k 0)))) (h "1nrkgghfhg70hc7a12c0dlsh37axv6xp23vmhnfzjczgl4v9y5s1")))

(define-public crate-rend3-0.1.0 (c (n "rend3") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("trace" "spirv" "webgl"))) (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.6.1") (d #t) (k 0)))) (h "036hyrhidhfrmigx6mhwn9sin55ljbdx4kjq0xzkm7fy547zxjwy")))

(define-public crate-rend3-0.1.1 (c (n "rend3") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("trace" "spirv" "webgl"))) (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.6.1") (d #t) (k 0)))) (h "15zdgdb5grj1r874x35mwgxy22n4nsw12qnkfkrgm42z3da77ks9")))

(define-public crate-rend3-0.1.2 (c (n "rend3") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("trace" "spirv" "webgl"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.10.3") (d #t) (k 0)) (d (n "wgpu-hal") (r "^0.10.7") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.6.1") (d #t) (k 0)))) (h "0ziyxiq79kp71s3a0sjb9crxm54m5qhq1m3y1qh6bq6j2lmbj036")))

(define-public crate-rend3-0.2.0 (c (n "rend3") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "list-any") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.11") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.7.0") (d #t) (k 0)))) (h "1rvd29va943swapjbshfs6iw165v1xyc9d605z503kzm845m5w13") (y #t)))

(define-public crate-rend3-0.2.1 (c (n "rend3") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "list-any") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.11") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.7.0") (d #t) (k 0)))) (h "0jdkil4cmma47n4ff6i1smbq5n08afawca5vwrfm6b4pwb93mw0h")))

(define-public crate-rend3-0.2.2 (c (n "rend3") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "list-any") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.11") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.7.0") (d #t) (k 0)))) (h "1j9iy2vyfdjv4d7qwbc7mjmz8h0lir44mblj8misw7q6kgnlr2gh")))

(define-public crate-rend3-0.2.3 (c (n "rend3") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "list-any") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.11") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.7.0") (d #t) (k 0)))) (h "0n9h12wxabxgn209jlr4icbkniina46854lvyi650rkpqwyiqvgx")))

(define-public crate-rend3-0.3.0 (c (n "rend3") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.20.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "list-any") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "naga") (r "^0.8.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "rend3-types") (r "^0.3.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.12.2") (d #t) (k 0)) (d (n "wgpu-hal") (r "^0.12.4") (d #t) (k 0)) (d (n "wgpu-profiler") (r "^0.8.0") (d #t) (k 0)))) (h "0xr0hqnp10z7200sg3gkbfbhk0smwvah50nvvayw60qr298snrrk") (r "1.57")))

