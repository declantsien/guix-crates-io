(define-module (crates-io re pr reproto-core) #:use-module (crates-io))

(define-public crate-reproto-core-0.1.0 (c (n "reproto-core") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0yb420a87r4adiskpn3wfy4ym6asfjjh1n9kh1d2h832qhg4xszg")))

(define-public crate-reproto-core-0.1.1 (c (n "reproto-core") (v "0.1.1") (d (list (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1d7bz75as5pyg7m6p2h650cxj8vw293x2vic5xn6pp6gkwl90v5i")))

(define-public crate-reproto-core-0.1.6 (c (n "reproto-core") (v "0.1.6") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "05w7yjpv49hbm1634q187kdkcmhawip3f2qxd18d8wip3zj4rqym")))

(define-public crate-reproto-core-0.2.0 (c (n "reproto-core") (v "0.2.0") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1gri304bybrijjwf394y03l443k14lyls25jb0b7m7gwv1rzlir4")))

(define-public crate-reproto-core-0.3.9 (c (n "reproto-core") (v "0.3.9") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "relative-path") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1r7yjci0kvb9fq1j0q4pswizi8qjh17dcs7xmpwjnlkvykhxgx77")))

(define-public crate-reproto-core-0.3.10 (c (n "reproto-core") (v "0.3.10") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "relative-path") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1dg9ialkq8wzhvk1x0cqvs9lql0gpya8bl9a35ndzgkh9fg4rjcy")))

(define-public crate-reproto-core-0.3.11 (c (n "reproto-core") (v "0.3.11") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "relative-path") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "00qyi0yiz7prsycp3bl6sl2fcb6bmg6frr5h4by9adn0fz369sz9")))

(define-public crate-reproto-core-0.3.12 (c (n "reproto-core") (v "0.3.12") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "relative-path") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "17qi80isf29hg2p6yr5740y4fy252hq56cnr5xnfqhk9g8z294j5")))

(define-public crate-reproto-core-0.3.13 (c (n "reproto-core") (v "0.3.13") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "relative-path") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1kw7xn72gqffml8555wnfkma9jccwsm6xp964g9jh6phk03hw9fl")))

(define-public crate-reproto-core-0.3.14 (c (n "reproto-core") (v "0.3.14") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1b08wd6sz0xiblwv277aiwjkraxafb8mqdgjr30cbdpz9l1fdxam") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.15 (c (n "reproto-core") (v "0.3.15") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "08hh9d1i68884w0l1g7l3jwy93knyj1sxd5f4fzbrdlvykv8icxg") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.16 (c (n "reproto-core") (v "0.3.16") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0gnymmzx2pmff1gzkb7fpl5g732nkabywmr73pqlh4dzj5myb5dk") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.17 (c (n "reproto-core") (v "0.3.17") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0il0crkjb7kd2l6rwpzjp023639bvhgd8f0brf64dwdkc9msq6hg") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.18 (c (n "reproto-core") (v "0.3.18") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0d7byf8kd0a4hp0ifksax0dqld48rs1gbc6smx1zmzyph4v1cfky") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.19 (c (n "reproto-core") (v "0.3.19") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0xwkl4g4vfakq6gyzvnlbfl2q3i5ajnjsv6f752l3dml6psx6vwf") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.21 (c (n "reproto-core") (v "0.3.21") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1vfmgj80r5jmrq2lyw10hk87lvjknbfgnfkz488njf6jwd2ry3sd") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.22 (c (n "reproto-core") (v "0.3.22") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1fr5ksmfk77y93iya3m4y18fbq2z4r2f5xas1hfvairrrndy6vlp") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.23 (c (n "reproto-core") (v "0.3.23") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1g4mrpnn41f7bjnh21qmiggwxvhcnbs12y67pq0hb32z6fbcz00p") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.24 (c (n "reproto-core") (v "0.3.24") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1n7cmihabids2rsipss1dngh62sixp6lhlmnii05s7kvcz4lw8p0") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.25 (c (n "reproto-core") (v "0.3.25") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1svj5xr59hz4mfr8qml0hwyr459ni15pj7n4nikj0w6d044hcsy4") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.32 (c (n "reproto-core") (v "0.3.32") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0qd7dccrlzp14z12rhpilr5sa7xvm4ljnwb6c2b11rrz0m84z093") (f (quote (("std" "backtrace") ("default" "std"))))))

(define-public crate-reproto-core-0.3.36 (c (n "reproto-core") (v "0.3.36") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "relative-path") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "reproto-semver") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ropey") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "00rj1ixz25b2vllmvyg1zv0xxh79my6yf1z8i428ba35ajzl3r3z") (f (quote (("std" "backtrace") ("default" "std"))))))

