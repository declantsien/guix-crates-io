(define-module (crates-io re pr reproto-trans) #:use-module (crates-io))

(define-public crate-reproto-trans-0.3.14 (c (n "reproto-trans") (v "0.3.14") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "1jznjr8qims37421l0l7wi2wrqybgihgxwdx892iaw6yv8hy868m")))

(define-public crate-reproto-trans-0.3.15 (c (n "reproto-trans") (v "0.3.15") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "1v76ja1fps0w014v5lykcimibamb2ix3b689qdybvhw7brdrf95q")))

(define-public crate-reproto-trans-0.3.16 (c (n "reproto-trans") (v "0.3.16") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0yl1yaxqgf9yy49kvc33hnpfxlq2zbnqxihgvlmrh6kczr4frzag")))

(define-public crate-reproto-trans-0.3.17 (c (n "reproto-trans") (v "0.3.17") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "1i7kxd5v6vvmklb6y36xadx52f5im0x7w4fy01lab481zzczx14w")))

(define-public crate-reproto-trans-0.3.18 (c (n "reproto-trans") (v "0.3.18") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "17z334mxswprprrn51jy1l4b7vqywily9g036yhcw3r8ic357h7s")))

(define-public crate-reproto-trans-0.3.19 (c (n "reproto-trans") (v "0.3.19") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0mkxykkg8w2lzm8m0s6b5pz97811hhs9wgijjkp48cqjz6sl0fvl")))

(define-public crate-reproto-trans-0.3.21 (c (n "reproto-trans") (v "0.3.21") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0j739xwxvmqsn5rnn9mky5cvhm7ywfm2p99a2lyrsvf4ps4i1lk6")))

(define-public crate-reproto-trans-0.3.22 (c (n "reproto-trans") (v "0.3.22") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0cyp0r3maqzgqm82vspm7qfr791dwv75kjl5s3q56x13375gs0qd")))

(define-public crate-reproto-trans-0.3.23 (c (n "reproto-trans") (v "0.3.23") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0s0d611fib2329cji6nwzwagbak9pazlhwbxy5b19ji3g4ici51c")))

(define-public crate-reproto-trans-0.3.24 (c (n "reproto-trans") (v "0.3.24") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "10bsscw6lgjvi944isa53v62pgq2p46gv7jl4xn7q6zas08yzmli")))

(define-public crate-reproto-trans-0.3.25 (c (n "reproto-trans") (v "0.3.25") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "0hby05n1g3b1kjjlddzk99zflgz9d9qchdqbmddihr5sk3wjs0ji")))

(define-public crate-reproto-trans-0.3.32 (c (n "reproto-trans") (v "0.3.32") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "18mrm370c5l8295wsa1l8iika1kswmmh6jn0if78pbrjr2nixg0i")))

(define-public crate-reproto-trans-0.3.36 (c (n "reproto-trans") (v "0.3.36") (d (list (d (n "linked-hash-map") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-naming") (r "^0.3") (d #t) (k 0)) (d (n "reproto-parser") (r "^0.3") (d #t) (k 0)) (d (n "reproto-path-parser") (r "^0.3") (d #t) (k 0)))) (h "1sm748cgc5kgazis776nk580fcl6lnqyayq4bhydxr7ib1n47gda")))

