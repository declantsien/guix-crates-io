(define-module (crates-io re pr reproto-parser) #:use-module (crates-io))

(define-public crate-reproto-parser-0.1.0 (c (n "reproto-parser") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.13") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-core") (r "^0.1") (d #t) (k 0)))) (h "1qhg9mi25a6pzmshvhdsc0q8hs7923wmb4l0sswcv2d1al07q23b") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.1.1 (c (n "reproto-parser") (v "0.1.1") (d (list (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.13") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-core") (r "^0.1") (d #t) (k 0)))) (h "1pl6dagdm6lq8m7ysy88klhd6yh831d0s2ngci5pkvlkf4f73fzi") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.1.6 (c (n "reproto-parser") (v "0.1.6") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-core") (r "^0.1") (d #t) (k 0)))) (h "0gbxp14b7ky1mpzx4jhvw3fzz2kwx8zjvlc3ysdv49nig5yw8zfh") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.2.0 (c (n "reproto-parser") (v "0.2.0") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-core") (r "^0.2") (d #t) (k 0)))) (h "06fwvldfhv6micbdxb1mbrs3hic5yplp77bz99rcrx3i5jkxg70m") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.9 (c (n "reproto-parser") (v "0.3.9") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0j8sg7wkn5f0x8g7wbn82avb8nljyw3k3svi7zp135z8qvr3jbgw") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.10 (c (n "reproto-parser") (v "0.3.10") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1hzng6j57xbdpm9d8v6viajadv4z7azn0b3d2yh5l712m4yyhpll") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.11 (c (n "reproto-parser") (v "0.3.11") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1bn2gs7pyq7y7ivd05ng56vfzj4520znyr0h4jyam47djmcaqrp7") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.12 (c (n "reproto-parser") (v "0.3.12") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0aj46fmvm68sx8xx4w6ryjagx7qgg05jxjh5qcxvz92vm2bkklv1") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.13 (c (n "reproto-parser") (v "0.3.13") (d (list (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0009xq3f9ccn2n2x9g6zv51lv3d67vab7cf4mkcnkz3d2dhi2546") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.14 (c (n "reproto-parser") (v "0.3.14") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "10fhvh9p5d6nh6d3xyfyrg7cj09g1mlp8bag2ianq3nipidlhcad") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.15 (c (n "reproto-parser") (v "0.3.15") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1bd3iiz5qnx5hmxr7cch8l8khgikli297wp4ivbmpfvwwaq3f1bc") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.16 (c (n "reproto-parser") (v "0.3.16") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0z0d4nbds04hyrikp4vm30fgnqzz9nh9854r7nrdbjmwzdbjz97c") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.17 (c (n "reproto-parser") (v "0.3.17") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0f52r43b7w3lq5lpbf1gaaj1j79yw1ph3hra7mmr2wjjlkw5f9db") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.18 (c (n "reproto-parser") (v "0.3.18") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "043j649f87xn4knb72klcr1qqar675in0xsda36a1kgy895ngpnv") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.19 (c (n "reproto-parser") (v "0.3.19") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "04235jfpp3mih0n4f4sry7z59c1apblbmpcqxf39mij05arhn4zk") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.21 (c (n "reproto-parser") (v "0.3.21") (d (list (d (n "lalrpop") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0kff9xmrglmxh3padp8yl9wd4dn1ij7lqi7zljs8592yhcxzny4a") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.22 (c (n "reproto-parser") (v "0.3.22") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "00hjw3mys508xihaki92h0bnsk8mv8vg9gfmd02y4fk4ka4j5jgl") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.23 (c (n "reproto-parser") (v "0.3.23") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1nxkrb68s8n24b4dp93j6fiz682b3q1dlxmr8izzi94sww2nxcdj") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.24 (c (n "reproto-parser") (v "0.3.24") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "089x8qbgx0b3qwkk3l3dfw4d5zcrwjnyyf35q48d5l3kalilppv6") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.25 (c (n "reproto-parser") (v "0.3.25") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1y1b1x862dxxq2fky5avsz4nr7z9ys47s2smfl704a1w1l4c5ylk") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.32 (c (n "reproto-parser") (v "0.3.32") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "1nsfwhzfy9za8w52knq4vdjk72b4vsgvdcnwjhmjck03604vrvfc") (f (quote (("tracing"))))))

(define-public crate-reproto-parser-0.3.36 (c (n "reproto-parser") (v "0.3.36") (d (list (d (n "lalrpop") (r "^0.15") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "reproto-ast") (r "^0.3") (d #t) (k 0)) (d (n "reproto-core") (r "^0.3") (d #t) (k 0)) (d (n "reproto-lexer") (r "^0.3") (d #t) (k 0)))) (h "0kc4hz8crs1ycxhn5044m474bhdz11l6cx2hb8iqjkf17hw7z5br") (f (quote (("tracing"))))))

