(define-module (crates-io re qw reqwest) #:use-module (crates-io))

(define-public crate-reqwest-0.0.0 (c (n "reqwest") (v "0.0.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)))) (h "1r6m321i3sx2gw4dan5qdbdy3zgvlymyx6cxyvbiq851175pl0na")))

(define-public crate-reqwest-0.1.0 (c (n "reqwest") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.9") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "0v3pwy6rxx4cin7slxa9xk48m8la29v2wpgmvgana1w1rc3iy6d2")))

(define-public crate-reqwest-0.2.0 (c (n "reqwest") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.9.14") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "0z4mpvsdzhvlrcm24xfk7mq32nyg0mdv0xqbc5gbkgjd1pp6y643")))

(define-public crate-reqwest-0.3.0 (c (n "reqwest") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1sziih4cr61yxfv4b5cw63k5jj4500flnwyh03fyj8nfb9ki3h6z")))

(define-public crate-reqwest-0.4.0 (c (n "reqwest") (v "0.4.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1rnjna0829vz5kgl1r7gfjj6kwy3q26r6x5psr3hkhzwzpc9xvrv")))

(define-public crate-reqwest-0.5.0 (c (n "reqwest") (v "0.5.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1b0v1rxlz16rcv0xaf0mjmh9ss5n5x4a2r6l3bwx552f2x3a7gyr")))

(define-public crate-reqwest-0.5.1 (c (n "reqwest") (v "0.5.1") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1h6cpkdx9ziwa1ikyxlrfac4b94xwh8hg549c4c7vh8hwiks44si")))

(define-public crate-reqwest-0.5.2 (c (n "reqwest") (v "0.5.2") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1wzrcmi8khh4b3b992mki7397gzkz1m9jnrik40w5wxc3mk59fcw")))

(define-public crate-reqwest-0.6.0 (c (n "reqwest") (v "0.6.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "15a8hicc7618mwz808b2s9gcs35sb86xg3w1plivv52gmrznwm4a")))

(define-public crate-reqwest-0.6.1 (c (n "reqwest") (v "0.6.1") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "14mambvjclnn6j4chzxn927wv0sjm8mm363fv92ndc0npvivf0mn")))

(define-public crate-reqwest-0.6.2 (c (n "reqwest") (v "0.6.2") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "hyper") (r "^0.10.2") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "05sfgm8c1s33fi9fbdzmfklq9vz8zhz8rv3nddqrvqfvd7idnmhx")))

(define-public crate-reqwest-0.7.0 (c (n "reqwest") (v "0.7.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "0029q7xhvbla7wjw1r2sxji4dmbpf0bvmgd4kky6g76shg4vbiy5") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.7.1 (c (n "reqwest") (v "0.7.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1mfhrns49m6llkiv9vlqxkx1angn11zhhsal5539c136br8cbk55") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.7.2 (c (n "reqwest") (v "0.7.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1krzcbc5zk8rihwymipr7f2l7rlh91ch5dzyyim3xzqm78gqq492") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.7.3 (c (n "reqwest") (v "0.7.3") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)))) (h "1zdiqppy3h88bhmx8b7h6k4vy7zz1qnvyq59g429r8z2hhyn2rjq") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.0 (c (n "reqwest") (v "0.8.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "02rr5lfq7ivampm2wjvxljnfhizdyglp1gq7hxrqjzzakp9y0kqr") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.1 (c (n "reqwest") (v "0.8.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1dg90454asjm46h136yf2ah7hdzw91qb4s3iq3shxcmjwf188fpp") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.2 (c (n "reqwest") (v "0.8.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.9") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "04r4yin837cvjl7j8m7czkds699a97k3kwlaf73kdkhizmiwlq9i") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.3 (c (n "reqwest") (v "0.8.3") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.9") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n8hx3kkz5bkrq3g29aagmg559bqi4s54nxxwqmvzs98wyfkg040") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.4 (c (n "reqwest") (v "0.8.4") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.9") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "02677di4nlzvnp0pxlzkph9s1kmq9wkjzqligi0zk6nfjgslb724") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.5 (c (n "reqwest") (v "0.8.5") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.9") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "1nrdq9035aba20gih6ca2v0d8wgjhp8aa5cqpg5h72m2ijdal7r4") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.6 (c (n "reqwest") (v "0.8.6") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.22") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1r3mfmjr6rqx137cyy0ipcwymx6ijg2rdql84hx6k4h7w3w4dgia") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.7 (c (n "reqwest") (v "0.8.7") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.22") (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n9dv7zp9lplhmfw2pla1gbp2528iwn8gbr9bv4mbyiv5kikgqp7") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.8.8 (c (n "reqwest") (v "0.8.8") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.11.22") (k 0)) (d (n "hyper-tls") (r "^0.1.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.1") (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vj8v1vscfndknc6wdawmrarnxykkvbfgnn9kn9c3xnshgn6k1vk") (f (quote (("unstable"))))))

(define-public crate-reqwest-0.9.0 (c (n "reqwest") (v "0.9.0") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.5") (d #t) (k 0)) (d (n "hyper") (r "^0.12.7") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "14nm1ffvrd1jfqj33cza8p74klq8pj31lw0r3i07d847jgprdlqw") (f (quote (("hyper-011" "hyper-old-types") ("default"))))))

(define-public crate-reqwest-0.9.1 (c (n "reqwest") (v "0.9.1") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.10") (d #t) (k 0)) (d (n "hyper") (r "^0.12.7") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (k 0)) (d (n "libflate") (r "^0.1.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "0bwv06v683zw5d429w2gdg5gx5p0npnciaffw95zlbykvbj5n9n4") (f (quote (("hyper-011" "hyper-old-types") ("default"))))))

(define-public crate-reqwest-0.9.2 (c (n "reqwest") (v "0.9.2") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.10") (d #t) (k 0)) (d (n "hyper") (r "^0.12.7") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "1bl3s3n1nyck11la8w7w3gf4rxcbh02ivly6h05qdhqx1fzwfs0x") (f (quote (("hyper-011" "hyper-old-types") ("default"))))))

(define-public crate-reqwest-0.9.3 (c (n "reqwest") (v "0.9.3") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.10") (d #t) (k 0)) (d (n "hyper") (r "^0.12.7") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zmlr341nw2256wzmiikrpy9dxd4ij15c1p7wcmycxzcfv38l8xa") (f (quote (("hyper-011" "hyper-old-types") ("default"))))))

(define-public crate-reqwest-0.9.4 (c (n "reqwest") (v "0.9.4") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.10") (d #t) (k 0)) (d (n "hyper") (r "^0.12.7") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "1nxm05cqfyiar3wnnp95lbhl68jxh79dp3mm3rpgqx6wiq6qg980") (f (quote (("hyper-011" "hyper-old-types") ("default"))))))

(define-public crate-reqwest-0.9.5 (c (n "reqwest") (v "0.9.5") (d (list (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.10") (d #t) (k 0)) (d (n "hyper") (r "^0.12.13") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "0dy87qqsvwhllfh3vki88cbhb86yigvdzypf39292n71s5if8lmb") (f (quote (("hyper-011" "hyper-old-types") ("default-tls" "hyper-tls" "native-tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.6 (c (n "reqwest") (v "0.9.6") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.12.20") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.14") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0n4snrf0fqh8kyprz8psz30zckf6m3kyz55lh111znv9hy7wi1j2") (f (quote (("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.7 (c (n "reqwest") (v "0.9.7") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.12.20") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.14") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0jh8yhsrmshcn0pf8asbd83k18sqfzampkq3ksyn6a1fdlrfd6ji") (f (quote (("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.8 (c (n "reqwest") (v "0.9.8") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.14") (d #t) (k 0)) (d (n "hyper") (r "^0.12.20") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.14") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0vxiybrmvmsmf9g6qvgkrrk2j3gh97jxsmcdh6ac459rmxlz2q0f") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.9 (c (n "reqwest") (v "0.9.9") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0xjk13h3c5f8ynza4bhw63zbq5p7jhf19npw6bhkx4ldln3y3mh9") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.10 (c (n "reqwest") (v "0.9.10") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "1a1rv3i4mwyzxh8zy483hg19shvgn1qid42k3k9c0zv271baj1gj") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.11 (c (n "reqwest") (v "0.9.11") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "03bqc0bdkr9vai1hgkdqx8058cmpbg3sqskbacray9n1fzqdjhp5") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.12 (c (n "reqwest") (v "0.9.12") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0pmc2qhgcqwp2snza2hf97pr74mm5s1qhdhwm39vjw0fcx7acbwn") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.13 (c (n "reqwest") (v "0.9.13") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "09g9q7d4cdrq52m911k2z6lnbsf8bc5360czigivy57b1czghkiw") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.14 (c (n "reqwest") (v "0.9.14") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie") (r "^0.11.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.5.1") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "03vb5zblgkhr4lafl1qhyrm6zfk82gc2df400fldgyql0ncw9i0r") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.15 (c (n "reqwest") (v "0.9.15") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie") (r "^0.11.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.5.1") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0yvn2s9rajp2q9k3ghqzwm13k3k84dprkq112zvvqlrgca2ryfwl") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.16 (c (n "reqwest") (v "0.9.16") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie") (r "^0.11.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.5.1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0q3c5b74rlz2b43pjhhb8gj7kbv8khxvx1hhbb2gkw3a7k0x5kyx") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.17 (c (n "reqwest") (v "0.9.17") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0l1xgdvgshrxn0y88715l75ciq17c71xlrqm3h2fp84fbx006y75") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.18 (c (n "reqwest") (v "0.9.18") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)))) (h "1r7jxwpwmjrb8anl5rhb8w5h3sma2fm403vz8a5ka3nz2br67sq0") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.19 (c (n "reqwest") (v "0.9.19") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.15") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0f9rhp1k8dk7rivi46a73sa2sra5x0fv03a8bi7vagic9hapf1qx") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.20 (c (n "reqwest") (v "0.9.20") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0y4wvzl3pspd8drr2hf9kk107cjw455cb6p529sh90x58dhqjv8g") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.21 (c (n "reqwest") (v "0.9.21") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0p79rb73b61qr5jmazs21glcwpmz7bpg3lg8nw132vscw59ykdq2") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.10.0-alpha.1 (c (n "reqwest") (v "0.10.0-alpha.1") (d (list (d (n "async-compression") (r "^0.1.0-alpha.5") (f (quote ("gzip" "stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel-preview") (r "= 0.3.0-alpha.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core-preview") (r "= 0.3.0-alpha.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util-preview") (r "= 0.3.0-alpha.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "http-body") (r "= 0.2.0-alpha.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "= 0.13.0-alpha.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "= 0.13.0-alpha.4") (f (quote ("unstable-stream"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-tls") (r "= 0.4.0-alpha.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.25") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "= 0.2.0-alpha.6") (f (quote ("io" "tcp" "timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-executor") (r "= 0.2.0-alpha.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "= 0.3.0-alpha.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.48") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.3") (f (quote ("futures_0_3"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0wfva8h0mdcjvy0i71601ss6c8818svy6r457i6va7pd0prxnx9x") (f (quote (("unstable-stream") ("tls") ("json" "serde_json") ("gzip" "async-compression") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("blocking" "futures-channel-preview" "futures-util-preview/io" "tokio/rt-full"))))))

(define-public crate-reqwest-0.9.22 (c (n "reqwest") (v "0.9.22") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0l5656yy9pdy1gz2f8gcglh9b8zcv5kvs7i3fxffhb247qin881c") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.10.0-alpha.2 (c (n "reqwest") (v "0.10.0-alpha.2") (d (list (d (n "async-compression") (r "= 0.1.0-alpha.7") (f (quote ("gzip" "stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel-preview") (r "= 0.3.0-alpha.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core-preview") (r "= 0.3.0-alpha.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util-preview") (r "= 0.3.0-alpha.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "http-body") (r "= 0.2.0-alpha.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "= 0.13.0-alpha.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "= 0.13.0-alpha.4") (f (quote ("unstable-stream"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-tls") (r "= 0.4.0-alpha.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "= 0.2.0-alpha.6") (f (quote ("io" "tcp" "timer"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-executor") (r "= 0.2.0-alpha.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "= 0.3.0-alpha.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1mrqsfi71n5w877lfn5sn1agfqb6w54zxm9gb6zdv5xdzkg4ffz8") (f (quote (("unstable-stream") ("tls") ("json" "serde_json") ("gzip" "async-compression") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("blocking" "futures-channel-preview" "futures-util-preview/io" "tokio/rt-full") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.9.23 (c (n "reqwest") (v "0.9.23") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1p8yzpp001kcbilzaaba3qnp5m87cdj9wcyqhrylm9263syg8z60") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.9.24 (c (n "reqwest") (v "0.9.24") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "cookie") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.7.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "http") (r "^0.1.15") (d #t) (k 0)) (d (n "hyper") (r "^0.12.22") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5") (d #t) (k 0)) (d (n "socks") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp"))) (k 0)) (d (n "tokio") (r "^0.1.7") (f (quote ("rt-full" "tcp" "fs"))) (k 2)) (d (n "tokio-executor") (r "^0.1.4") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "tokio-tcp") (r "^0.1") (d #t) (k 2)) (d (n "tokio-threadpool") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.6") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.2") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1aql4wpmf1cfl09xddlxnmd7y1nj7fcbzmsh9603qd61lfp471pq") (f (quote (("trust-dns" "trust-dns-resolver") ("tls") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls") ("hyper-011" "hyper-old-types") ("default-tls-vendored" "default-tls" "native-tls/vendored") ("default-tls" "hyper-tls" "native-tls" "tls") ("default" "default-tls"))))))

(define-public crate-reqwest-0.10.0 (c (n "reqwest") (v "0.10.0") (d (list (d (n "async-compression") (r "^0.2.0") (f (quote ("gzip" "stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0lr5xv4ns0z6nbxjs3w0gjb12n7n1jkz8c5y5l2vf70wpk9cpih3") (f (quote (("stream") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.1 (c (n "reqwest") (v "0.10.1") (d (list (d (n "async-compression") (r "^0.2.0") (f (quote ("gzip" "stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1r1z26di07vf09x8b8867d40x0mcx7ij4iih1b1zd2r5kvhriry0") (f (quote (("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.2 (c (n "reqwest") (v "0.10.2") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.16") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "08a66n9i7k14srkvnm8yb97vczxhaz0dcjxkqq054jndx8rgrqxs") (f (quote (("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.3 (c (n "reqwest") (v "0.10.3") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.17") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "0c9q7y8h5l5h2bxphwqwx9ya5yk57lyq0jy7iydd05s1a4j2zxm9") (f (quote (("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.4 (c (n "reqwest") (v "0.10.4") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.3") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.17") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.6") (d #t) (t "cfg(windows)") (k 0)))) (h "1qhlasw182dm5x7rvbp92p4pfczmgwqjlpzwvjlhjlgcvm4ixf02") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.5 (c (n "reqwest") (v "0.10.5") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.20") (f (quote ("webpki-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.17") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1a3brj7h01sh4nyfg9g0qjad6xizcmkzyfx0d9j2s36f2239xrsb") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.6 (c (n "reqwest") (v "0.10.6") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.20") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.17") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1066brizayzb974qwh7f1f6lpmi8hnya9qs36ksjcprhiciwk0iv") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.7 (c (n "reqwest") (v "0.10.7") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.21") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.18") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1rmz2p9zkwfmn2v5nry7xxi5kdpybjrpshcwki0j8b08fxaplhhj") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.8 (c (n "reqwest") (v "0.10.8") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.21") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.18") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.51") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "07nnj0qzj8g64iagx7xzk02493yqdahqy49xa2vkif6pqmxa3sp9") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls" "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.9 (c (n "reqwest") (v "0.10.9") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.21") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.18") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1km0p40hr3n1xkifnaw65v04v43pqr2sdn3qynh5c8vrbhjxc5gv") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.10.10 (c (n "reqwest") (v "0.10.10") (d (list (d (n "async-compression") (r "^0.3.0") (f (quote ("stream"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13.4") (f (quote ("tcp"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.13") (f (quote ("tcp" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.21") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (d #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.18") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.5") (f (quote ("tcp" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-rustls") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0z7l46m1mjnvncscaq61zq6qmazrmb33vwjcnfrxpi0liqdgh607") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli") ("blocking" "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.0 (c (n "reqwest") (v "0.11.0") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1pp9km1hn1y3wxkafv3mzk4b6nv4hxqx15591awmyrxa6081na7x") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.1 (c (n "reqwest") (v "0.11.1") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0d0wxfsyirh96a3vs54ifz6v7ila64ismij86q564l0ralmm8q04") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.2 (c (n "reqwest") (v "0.11.2") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1m12j00if0gj0alhad4r7w0air4j0gqlpiwiqpsxna4l51zha4mz") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.3 (c (n "reqwest") (v "0.11.3") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "097i9z42jq2sn3va3r6pksz3gzffbnr3c4aapk6fhy9rqpxg55i2") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.4 (c (n "reqwest") (v "0.11.4") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "08kdxaa7c5wzlr2f4qkqlczc86p30sz84xllk83dyxxvp5hryvi4") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.5 (c (n "reqwest") (v "0.11.5") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1yv7fjy0wqr470js8484k7927719bw97njxlzxi06c6xcga35isi") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.6 (c (n "reqwest") (v "0.11.6") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.19") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.2.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1072nlhfybl1yl8dsfhmpdx9xllh8s1w82k2zkqgm1gnl9y95lk6") (f (quote (("trust-dns" "trust-dns-resolver") ("stream") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "time") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.7 (c (n "reqwest") (v "0.11.7") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "1ifbbws192zzjlq6fla2474l7zf8yx53sp4hb47a3bq8qxxsggh7") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.8 (c (n "reqwest") (v "0.11.8") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0n4jx40hdamvdbnzn2kvqkh38dp8jldk1xiki481d88jviv0lkkw") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.9 (c (n "reqwest") (v "0.11.9") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.5") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "0995ng67r8rry8864wxp2iwkpr4sc34fgny6p9wrllwa93ql5wl7") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.10 (c (n "reqwest") (v "0.11.10") (d (list (d (n "async-compression") (r "^0.3.7") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.5") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "trust-dns-resolver") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1ss1ijakw48dgpxaj5a38pk0r3vmzhdgaj842ssfir9m9ymgg8a6") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.11 (c (n "reqwest") (v "0.11.11") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "14mz9w3jf2jq1kv3606an637lvrw4npz4fp3xmkcrfq67ydacnmp") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.12 (c (n "reqwest") (v "0.11.12") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1z29a4p9zcpsrivrakyxraswsblx3mnsbjjwc03sxqplhk1lj6a3") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.13 (c (n "reqwest") (v "0.11.13") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "0z69yg44rz6p6yw2ry7kq8fkybjiaqiw0g4690aq7iv5b1bn1k38") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store" "proc-macro-hack") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.14 (c (n "reqwest") (v "0.11.14") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "1s8yv7r76af4aqf55ckn7ndfr8ba427wybkp7gam42apr07dkvi1") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.15 (c (n "reqwest") (v "0.11.15") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.8") (f (quote ("tls-rustls" "ring"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "0jar038b2l3wzr91h673vxwzicndb6k6n8gd489ay0ndq310r8qb") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache"))))))

(define-public crate-reqwest-0.11.16 (c (n "reqwest") (v "0.11.16") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.8") (f (quote ("tls-rustls" "ring"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "0m521xgi2i5hzslgg66c0r8mly3wg896qhicmi67yjsqvx4igdr7") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.57.0")))

(define-public crate-reqwest-0.11.17 (c (n "reqwest") (v "0.11.17") (d (list (d (n "async-compression") (r "^0.3.13") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.23") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("tls-rustls" "ring"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.20") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "14gvsm2cyn1x4q3dlxwxwiackaa5s6nj43x9r27z4yh9k9ikna8k") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.57.0")))

(define-public crate-reqwest-0.11.18 (c (n "reqwest") (v "0.11.18") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(windows)") (k 0)))) (h "0m8w3hmp8hqlyiq1dx0k415c1b7s27s2a4pqmxfgh53w9fhj9s6d") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.57.0")))

(define-public crate-reqwest-0.11.19 (c (n "reqwest") (v "0.11.19") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1hr6055bi45xr5xszfhsk2mqllzz63g5kdw5jagrxpd75izbdf90") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/deflate" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.20 (c (n "reqwest") (v "0.11.20") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "18g6w9r199zycrb7102gggcp42y9l12ks0x2b12y7mw8fkzd76iy") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.21 (c (n "reqwest") (v "0.11.21") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1vxvr53pib4c2p4c631h77342swq8xzij47zr0yb3mz1lyvbmzbq") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.22 (c (n "reqwest") (v "0.11.22") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0nx9mczsf11pcjicfpwad0l8drf2nn72dbpcvp42lv644s4djv04") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.23 (c (n "reqwest") (v "0.11.23") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "h2") (r "^0.3.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0hgvzb7r46656r9vqhl5qk1kbr2xzjb91yr2cb321160ka6sxc9p") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__tls") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile") ("__internal_proxy_sys_no_cache")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.24 (c (n "reqwest") (v "0.11.24") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.3.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0l920imsa9ahqir9w0ph020g5gcbvvrf72qk99gdxbw5xfa014n6") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/rt-multi-thread" "tokio/sync") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("__tls" "dep:rustls-pemfile")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.25 (c (n "reqwest") (v "0.11.25") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.3.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0ilr1d2ljzy3si8hx8c1rdsd2bsrwdq7ch662wzpilwqp2g5mshf") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/sync") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("__tls" "dep:rustls-pemfile")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.26 (c (n "reqwest") (v "0.11.26") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.3.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1chhmkfdk0ji5dacwsjix05g2vrmjzkyn76mg7cbg2vsmz297gvq") (f (quote (("trust-dns" "trust-dns-resolver") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/sync") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("__tls" "dep:rustls-pemfile")))) (r "1.63.0")))

(define-public crate-reqwest-0.11.27 (c (n "reqwest") (v "0.11.27") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.3.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-body") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14.21") (f (quote ("tcp" "http1" "http2" "client" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("tcp" "stream" "http1" "http2" "client" "server" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.21.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0qjary4hpplpgdi62d2m0xvbn6lnzckwffm0rgkm2x51023m6ryx") (f (quote (("trust-dns" "hickory-dns") ("stream" "tokio/fs" "tokio-util" "wasm-streams") ("socks" "tokio-socks") ("rustls-tls-webpki-roots" "webpki-roots" "__rustls") ("rustls-tls-native-roots" "rustls-native-certs" "__rustls") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls-vendored" "native-tls" "native-tls-crate/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate/alpn") ("native-tls" "default-tls") ("multipart" "mime_guess") ("json" "serde_json") ("http3" "rustls-tls-manual-roots" "h3" "h3-quinn" "quinn" "futures-channel") ("hickory-dns" "hickory-resolver") ("gzip" "async-compression" "async-compression/gzip" "tokio-util") ("deflate" "async-compression" "async-compression/zlib" "tokio-util") ("default-tls" "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls") ("default" "default-tls") ("cookies" "cookie_crate" "cookie_store") ("brotli" "async-compression" "async-compression/brotli" "tokio-util") ("blocking" "futures-util/io" "tokio/sync") ("__rustls" "hyper-rustls" "tokio-rustls" "rustls" "__tls") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("__tls" "dep:rustls-pemfile")))) (r "1.63.0")))

(define-public crate-reqwest-0.12.0 (c (n "reqwest") (v "0.12.0") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.26.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.3") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.1.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "126zi5ci7payv422x75xfadqhk7llwr4sqa1wmsyxx1jv6c8vd2q") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/rt-multi-thread" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

(define-public crate-reqwest-0.12.1 (c (n "reqwest") (v "0.12.1") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.26.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.3") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.1.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1xp5qqfk0ckwcmmj72im7zcfvlx2fz9b1z4y7a4zcxz6kzmv2cz3") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/rt-multi-thread" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

(define-public crate-reqwest-0.12.2 (c (n "reqwest") (v "0.12.2") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.26.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.3") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.1.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.50.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0f1k1qdy04m66pwzcg58zp9arpz3qhd3qypabrk69f3g5d7nfrid") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/rt-multi-thread" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

(define-public crate-reqwest-0.12.3 (c (n "reqwest") (v "0.12.3") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.26.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.3") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.1.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.52.0") (d #t) (t "cfg(windows)") (k 0)))) (h "06df5axmzam4bp6i3y3xf2jgakc71r963ppfbbmkd5b8kvlc2v1y") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/rt-multi-thread" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

(define-public crate-reqwest-0.12.4 (c (n "reqwest") (v "0.12.4") (d (list (d (n "async-compression") (r "^0.4.0") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.26.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.3") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.1.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^0.1.2") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.68") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.18") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.25") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.52.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd_crate") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "zstd")))) (h "047aa0qnngnlnf9i0abrs6pgmz15vk81p5pvscwhk3l6jbfsyv2n") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/rt-multi-thread" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("zstd" "dep:async-compression" "async-compression?/zstd" "dep:tokio-util") ("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

