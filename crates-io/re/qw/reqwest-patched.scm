(define-module (crates-io re qw reqwest-patched) #:use-module (crates-io))

(define-public crate-reqwest-patched-0.12.5 (c (n "reqwest-patched") (v "0.12.5") (d (list (d (n "async-compression") (r "^0.4.10") (f (quote ("tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "brotli_crate") (r "^3.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "brotli")) (d (n "bytes") (r "^1.6") (d #t) (k 0)) (d (n "cookie_crate") (r "^0.18.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cookie")) (d (n "cookie_store") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "encoding_rs") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-channel") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("std" "alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "h2") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3") (r "^0.0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "h3-quinn") (r "^0.0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hickory-resolver") (r "^0.24") (f (quote ("tokio-runtime"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1") (f (quote ("http1" "client"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "^1.3.1") (f (quote ("http1" "http2" "client" "server"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "hyper-rustls") (r "^0.27.2") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1.5") (f (quote ("http1" "client" "client-legacy" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("http1" "http2" "client" "client-legacy" "server-auto" "tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ipnet") (r "^2.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libflate") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2.0") (o #t) (k 0)) (d (n "native-tls-crate") (r "^0.2.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "native-tls")) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls") (r "^0.23.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pemfile") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.7.0") (f (quote ("alloc"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sync_wrapper") (r "^1.0") (d #t) (k 0)) (d (n "system-configuration") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-native-tls") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7.11") (f (quote ("codec" "io"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("AbortController" "AbortSignal" "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" "ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winreg") (r "^0.52.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd_crate") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2) (p "zstd")))) (h "1zjy6cr3k7mv5p63iirgdbw68gfp37s9fhp72dgq6x8a9i13jww4") (f (quote (("trust-dns") ("rustls-tls-manual-roots" "__rustls") ("rustls-tls" "rustls-tls-webpki-roots") ("native-tls" "default-tls") ("http2" "h2" "hyper/http2" "hyper-util/http2") ("default" "default-tls" "charset" "http2" "macos-system-configuration") ("blocking" "futures-channel/sink" "futures-util/io" "futures-util/sink" "tokio/sync") ("__internal_proxy_sys_no_cache")))) (s 2) (e (quote (("zstd" "dep:async-compression" "async-compression?/zstd" "dep:tokio-util") ("stream" "tokio/fs" "dep:tokio-util" "dep:wasm-streams") ("socks" "dep:tokio-socks") ("rustls-tls-webpki-roots" "dep:webpki-roots" "__rustls") ("rustls-tls-native-roots" "dep:rustls-native-certs" "__rustls") ("native-tls-vendored" "native-tls" "native-tls-crate?/vendored") ("native-tls-alpn" "native-tls" "native-tls-crate?/alpn" "hyper-tls?/alpn") ("multipart" "dep:mime_guess") ("macos-system-configuration" "dep:system-configuration") ("json" "dep:serde_json") ("hickory-dns" "dep:hickory-resolver") ("gzip" "dep:async-compression" "async-compression?/gzip" "dep:tokio-util") ("deflate" "dep:async-compression" "async-compression?/zlib" "dep:tokio-util") ("default-tls" "dep:hyper-tls" "dep:native-tls-crate" "__tls" "dep:tokio-native-tls") ("cookies" "dep:cookie_crate" "dep:cookie_store") ("charset" "dep:encoding_rs") ("brotli" "dep:async-compression" "async-compression?/brotli" "dep:tokio-util") ("__tls" "dep:rustls-pemfile" "tokio/io-util") ("__rustls" "dep:hyper-rustls" "dep:tokio-rustls" "dep:rustls" "__tls" "dep:rustls-pemfile" "rustls-pki-types")))) (r "1.63.0")))

