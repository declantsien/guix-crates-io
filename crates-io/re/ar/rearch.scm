(define-module (crates-io re ar rearch) #:use-module (crates-io))

(define-public crate-rearch-0.0.1 (c (n "rearch") (v "0.0.1") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.*") (d #t) (k 0)) (d (n "tokio") (r "1.*") (f (quote ("rt"))) (o #t) (k 0)))) (h "0b99pgyfrkp9dws4my05sp9lcqby661m27zzybxljfcjxkqvka6n") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("tokio-side-effects" "dep:tokio") ("logging" "dep:log"))))))

(define-public crate-rearch-0.1.0 (c (n "rearch") (v "0.1.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.*") (d #t) (k 0)) (d (n "tokio") (r "1.*") (f (quote ("rt"))) (o #t) (k 0)))) (h "0vn1g1jvi7k4m8sr9pf71lk58ds8r6h9y2w7yns99aqg5mwbaa13") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("tokio-side-effects" "dep:tokio") ("logging" "dep:log"))))))

(define-public crate-rearch-0.2.1 (c (n "rearch") (v "0.2.1") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.2.*") (d #t) (k 0)))) (h "0bjxk22sk7cpp93ljh18kxfv0zvmh9kybj11whhr62mbi6am4dqf") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.4.0 (c (n "rearch") (v "0.4.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.4.*") (d #t) (k 0)))) (h "1ycgmx0p6qshggpw0l4hra9ga5jgjdq1ybhchkqp3yc5k2pwrg13") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.4.1 (c (n "rearch") (v "0.4.1") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.4.*") (d #t) (k 0)))) (h "15bq7lvwfd5sxxpvdzrhbc1rngjjyj4bvmm4ki2hlc8jmwl0nmcd") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.4.2 (c (n "rearch") (v "0.4.2") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "0.4.*") (d #t) (k 0)))) (h "0ay4dlrndak3idk5xb41hyqkw8814f58vkpcgm5ykb3k23mlz22x") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.5.0 (c (n "rearch") (v "0.5.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.4.0") (d #t) (k 0)))) (h "03mhrc9k6h7rd81adfcndb4v7dyzg8c13yanj5amqcg5b8qspia2") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.5.1 (c (n "rearch") (v "0.5.1") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.4.0") (d #t) (k 0)))) (h "0aqswp4809hbg7pslmq78c61w9zbmfllspsjnkb5q4p3yr8b40z4") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.5.2 (c (n "rearch") (v "0.5.2") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.4.0") (d #t) (k 0)))) (h "0cxynqvg1hdx7l5yh1hjz45nsssa23yj3gmi6x1x3w2j1hz127kr") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.6.0 (c (n "rearch") (v "0.6.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "dyn-clone") (r "1.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.4.0") (d #t) (k 0)))) (h "15aq2d7kd604jr6ravrq7xzxfg97bdzfhkzbwqba6yvrzin49br7") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.7.0 (c (n "rearch") (v "0.7.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "0.12.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.5.0") (d #t) (k 0)))) (h "14n24dzassncspyra60v31v7z9j8ky37bhb7vxgrbvb5vab7rwh6") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.8.0 (c (n "rearch") (v "0.8.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "0.12.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "122jfrlh3nf9c72gk83v5i40lwbjims69sfjdd3nr33j0b41aall") (f (quote (("default") ("better-api")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.9.0 (c (n "rearch") (v "0.9.0") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "0.12.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "1n1mwrgdwcnbys8frm7l9la8ykrwdkgc65d490fggbkyfjgyh6yn") (f (quote (("experimental-txn") ("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.9.1 (c (n "rearch") (v "0.9.1") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "0.12.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "16f0rk4nc3i3h71plaz9gpcxf77y38lsfq5lmjf8whi83gb1j3xs") (f (quote (("experimental-txn") ("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.9.2 (c (n "rearch") (v "0.9.2") (d (list (d (n "concread") (r "0.4.*") (f (quote ("maps"))) (k 0)) (d (n "log") (r "0.4.*") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "0.12.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "1zgrj02z85ssz058aqnyy6gn257b2vc2xgpxkhcdwidpn4prcbhy") (f (quote (("experimental-txn") ("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.10.0 (c (n "rearch") (v "0.10.0") (d (list (d (n "concread") (r "^0.4.0") (f (quote ("maps"))) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "0d2c1qjmyhmg7a8vxbfpjpcwzdw7j29dvwhcv6sjkiy3p0m3l8i6") (f (quote (("experimental-txn") ("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log"))))))

(define-public crate-rearch-0.10.1 (c (n "rearch") (v "0.10.1") (d (list (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "0xd27xcir2nqa3gb6wk3jd7rnz1q2kig68xi5fncpqd28yvw8ig2") (f (quote (("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log")))) (r "1.75")))

(define-public crate-rearch-0.10.2 (c (n "rearch") (v "0.10.2") (d (list (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "rearch-macros") (r "^0.6.0") (d #t) (k 0)))) (h "15363c28jd20smjhk2pc16vqp09waia74gvlg8rv1sdfsrf5fcss") (f (quote (("experimental-api") ("default")))) (s 2) (e (quote (("logging" "dep:log")))) (r "1.75")))

