(define-module (crates-io re sp resp-result) #:use-module (crates-io))

(define-public crate-resp-result-0.1.0 (c (n "resp-result") (v "0.1.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "0w4sdly7wba44f9g9zsnahc0rzz24jk763d0gcbyvd2h912bwzh5") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.1 (c (n "resp-result") (v "0.1.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "08imqxigv02kbnjpgxcvb1lfp0gv5b9cw9ihiwvq5kcjq6ky9b57") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.2 (c (n "resp-result") (v "0.1.2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "1349yscf6k1xxh0kap2273c1dnw96wn1ay8gkvx14vr3mra04vix") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.3 (c (n "resp-result") (v "0.1.3") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "1jgqrfjil332yjyzwhrkvxxw9qayn821bvx3kk8s0cy3lafp5jx2") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.4 (c (n "resp-result") (v "0.1.4") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "02l5mz1plpnwk3sr7jrm5q3rvq0gb9c1lb8q0ag6hdsvr7di2n8c") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.7 (c (n "resp-result") (v "0.1.7") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "0x5nfh3dm0hpvh051yzlc16yly1wpldmmcgda69nggqpsxwmaaim") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.8 (c (n "resp-result") (v "0.1.8") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "09wch8h1nawvm5qlgda8wwdii8jx9r6nm32lyl6f08r9g6kfgbrk") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.1.9 (c (n "resp-result") (v "0.1.9") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "09bgrxf2ly3phkd0vldk8vw5qik6ri3r74ciggyyvv2jiar1sa1j") (f (quote (("log" "logger") ("full" "log" "extra-code" "for-axum" "for-actix") ("for-rocket") ("for-axum" "axum" "mime") ("for-actix" "actix-web" "mime") ("extra-code") ("default"))))))

(define-public crate-resp-result-0.2.0 (c (n "resp-result") (v "0.2.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "0iyj64aikda0k4xs8gzncfk8n04bj8lgjw52hlg6qp1kgz85y761") (f (quote (("log" "logger") ("for-rocket") ("for-axum" "axum" "mime" "extra-resp") ("for-actix" "actix-web" "mime" "extra-resp") ("extra-resp") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.2.1 (c (n "resp-result") (v "0.2.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "1xn343g4ngy5bvsm27hzggp1yclf6a103b9s8qxbkvakph3m9nk7") (f (quote (("log" "logger") ("for-rocket") ("for-axum" "axum" "mime" "extra-resp") ("for-actix" "actix-web" "mime" "extra-resp") ("extra-resp") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.2.2 (c (n "resp-result") (v "0.2.2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "1c3mgazjfn8a9pacpvxgc8xj2yqqs1ygff66q2ki1vg2nl2hwagh") (f (quote (("log" "logger") ("for-rocket") ("for-axum" "axum" "mime" "extra-resp") ("for-actix" "actix-web" "mime" "extra-resp") ("extra-resp") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.2.3 (c (n "resp-result") (v "0.2.3") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "state") (r "^0.5") (d #t) (k 0)))) (h "0adlz55kzbr7qfhbaqszlw5rabcnl92srvxcpgj3n3mmlj04mys9") (f (quote (("log" "logger") ("for-rocket") ("for-axum" "axum" "mime" "extra-resp") ("for-actix" "actix-web" "mime" "extra-resp") ("extra-resp") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.3.0 (c (n "resp-result") (v "0.3.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0xhisvndl0w4iwg5qgs1bjf9vhwnckv5dz814jmsc3smdw8ksgj2") (f (quote (("log" "logger") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.3.1 (c (n "resp-result") (v "0.3.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1cjmwyyag7lchhjc42kff7zxk44qh9lfa30kh8f0hgr1spxrw8dz") (f (quote (("log" "logger") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.3.2 (c (n "resp-result") (v "0.3.2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1qf0w8jcnxpmlgl8phsv29mhnlwxa37w32n95w47637qfaydwiv0") (f (quote (("log" "logger") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-code") ("default") ("axum-full" "log" "extra-code" "for-axum") ("actix-full" "log" "extra-code" "for-actix"))))))

(define-public crate-resp-result-0.4.0 (c (n "resp-result") (v "0.4.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0wx7ws0i9clif58lqxgannlavrylw8pyams1zdrlww513rl767d7") (f (quote (("log" "logger") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-error") ("default" "axum-full") ("axum-full" "log" "extra-error" "for-axum") ("actix-full" "log" "extra-error" "for-actix"))))))

(define-public crate-resp-result-0.4.1 (c (n "resp-result") (v "0.4.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "logger") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1ykgq3g2w73c2bl0yb6y17z2w3wlxrw40ljnb35as9qcx43ihsmm") (f (quote (("log" "logger") ("for-axum" "axum") ("for-actix" "actix-web") ("extra-error") ("default" "axum-full") ("axum-full" "log" "extra-error" "for-axum") ("actix-full" "log" "extra-error" "for-actix"))))))

(define-public crate-resp-result-0.5.0 (c (n "resp-result") (v "0.5.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "trace") (r "^0.1.37") (o #t) (d #t) (k 0) (p "tracing")) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("fmt" "registry" "env-filter"))) (d #t) (k 2)))) (h "1d7adhdj7ffzjmm7wqmyapmfrbfbqcfr25dbw886ib5p8acvhkkc") (f (quote (("nightly_try_v2") ("extra-error") ("default") ("axum-full" "extra-error" "for-axum") ("actix-full" "extra-error" "for-actix")))) (s 2) (e (quote (("tracing" "dep:trace") ("log" "tracing" "trace?/log") ("for-axum" "dep:axum") ("for-actix" "dep:actix-web"))))))

(define-public crate-resp-result-0.5.1 (c (n "resp-result") (v "0.5.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace"))) (d #t) (k 2)) (d (n "trace") (r "^0.1.37") (o #t) (d #t) (k 0) (p "tracing")) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("fmt" "registry" "env-filter"))) (d #t) (k 2)) (d (n "tracing-unwrap") (r "^0.10.0") (f (quote ("log-location"))) (o #t) (d #t) (k 0)))) (h "1bh70ykwwaqc2iq4hpv25a0gfj4zxs6mijnzpw5gwx872zwy5rph") (f (quote (("nightly_try_v2") ("extra-error") ("default") ("axum-full" "extra-error" "for-axum") ("actix-full" "extra-error" "for-actix")))) (s 2) (e (quote (("tracing" "dep:trace" "dep:tracing-unwrap") ("log" "tracing" "trace?/log") ("for-axum" "dep:axum") ("for-actix" "dep:actix-web"))))))

(define-public crate-resp-result-0.5.2 (c (n "resp-result") (v "0.5.2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace"))) (d #t) (k 2)) (d (n "trace") (r "^0.1.37") (o #t) (d #t) (k 0) (p "tracing")) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("fmt" "registry" "env-filter"))) (d #t) (k 2)) (d (n "tracing-unwrap") (r "^0.10.0") (f (quote ("log-location"))) (o #t) (d #t) (k 0)))) (h "0q52xfkx2mqmnl10kmcz0b0g1f7lifijb8vmdh6mdsawl2xpzjxg") (f (quote (("nightly_try_v2") ("extra-error") ("default") ("axum-full" "extra-error" "for-axum") ("actix-full" "extra-error" "for-actix")))) (s 2) (e (quote (("tracing" "dep:trace" "dep:tracing-unwrap") ("log" "tracing" "trace?/log") ("for-axum" "dep:axum") ("for-actix" "dep:actix-web"))))))

(define-public crate-resp-result-0.6.0 (c (n "resp-result") (v "0.6.0") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace"))) (d #t) (k 2)) (d (n "trace") (r "^0.1.37") (o #t) (d #t) (k 0) (p "tracing")) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("fmt" "registry" "env-filter"))) (d #t) (k 2)) (d (n "tracing-unwrap") (r "^0.10.0") (f (quote ("log-location"))) (o #t) (d #t) (k 0)))) (h "03fnl3dpzlm6xn6v9pf8i2y30502vs4q276vz0y83fw073980f2f") (f (quote (("nightly_try_v2") ("extra-error") ("default") ("axum-full" "extra-error" "for-axum") ("actix-full" "extra-error" "for-actix")))) (s 2) (e (quote (("tracing" "dep:trace" "dep:tracing-unwrap") ("log" "tracing" "trace?/log") ("for-axum" "dep:axum") ("for-actix" "dep:actix-web"))))))

