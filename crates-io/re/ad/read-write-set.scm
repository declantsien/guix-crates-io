(define-module (crates-io re ad read-write-set) #:use-module (crates-io))

(define-public crate-read-write-set-0.1.2 (c (n "read-write-set") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-model") (r "^0.1.0") (d #t) (k 0) (p "mv-model")) (d (n "move-read-write-set-types") (r "^0.1.0") (d #t) (k 0) (p "mv-read-write-set-types")) (d (n "prover_bytecode") (r "^0.1.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.1.0") (d #t) (k 0)))) (h "0zpvzjvb3bwjd5j8gdyn312knshjc3qkmcv8q927xdj5p263jcar") (y #t)))

(define-public crate-read-write-set-0.1.4 (c (n "read-write-set") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.1.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.1.0") (d #t) (k 0)))) (h "0nkygi79mh9qn3kz0vzjvw62709pmxjwx6hgrfxpd7jx248z7cgm") (y #t)))

(define-public crate-read-write-set-0.1.5 (c (n "read-write-set") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.1.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.1.0") (d #t) (k 0)))) (h "02lmpy06320j3hadhhcy8diamv1ccmhwy32278r960b9blxzjic5") (y #t)))

(define-public crate-read-write-set-0.1.6 (c (n "read-write-set") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.1.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.1.0") (d #t) (k 0)))) (h "0iz2p26cf8vfrp77zxgfbq0yvam6cx2wyv2yn8bmns6wmad8mjs1") (y #t)))

(define-public crate-read-write-set-0.2.0 (c (n "read-write-set") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.2.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.2.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.2.0") (d #t) (k 0)))) (h "1nms8hfxxp26khv6l2msgjxxivkdya5kl3929w9mw8m8p3dd3mha") (y #t)))

(define-public crate-read-write-set-0.2.1 (c (n "read-write-set") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.2.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.2.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.2.0") (d #t) (k 0)))) (h "1gq0375h3h8q05mxylbvjnlxfhylbcsrml0fdxb9g3481qd6qmzg") (y #t)))

(define-public crate-read-write-set-0.3.0 (c (n "read-write-set") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.3.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.3.0") (d #t) (k 0)))) (h "1g444mg6j1r69hzv2mqysirbfs6s1486qp4z8zalljfcaahsq14h") (y #t)))

(define-public crate-read-write-set-0.3.1 (c (n "read-write-set") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.3.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.3.0") (d #t) (k 0)))) (h "1qjjn72k75vr8dlgiygfdy17xpf86fykmqg3wgwaszzgq79znr0w") (y #t)))

(define-public crate-read-write-set-0.3.2 (c (n "read-write-set") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "move-bytecode-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "prover_bytecode") (r "^0.3.0") (d #t) (k 0) (p "move-stackless-bytecode")) (d (n "read-write-set-dynamic") (r "^0.3.0") (d #t) (k 0)))) (h "0yl9nv91asn94ymysqfxxm832xfivhvv6c4nzma777d5c64m5f6p") (y #t)))

