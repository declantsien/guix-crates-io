(define-module (crates-io re cu recursion) #:use-module (crates-io))

(define-public crate-recursion-0.0.1-BETA (c (n "recursion") (v "0.0.1-BETA") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "0n1l8ml5kjkq9rrzmqwp7mfdx25vdmmhbb5ggpqxwfild3lja5i9") (f (quote (("expr_example") ("default"))))))

(define-public crate-recursion-0.0.1-BETA-2 (c (n "recursion") (v "0.0.1-BETA-2") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "1g5888pqqbdgqhgns0l8sygybghfvpfypl3pvibhly9d3ld4yvyb") (f (quote (("expr_example") ("default"))))))

(define-public crate-recursion-0.1.0 (c (n "recursion") (v "0.1.0") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "1bfi6lzmk0jcl9km4kh9l9klcrxvkxk9npsxmjc4fwjxkk9qppww") (f (quote (("expr_example") ("default"))))))

(define-public crate-recursion-0.2.0 (c (n "recursion") (v "0.2.0") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "0q368iggdd721c78xjc94cdlarz7xxbl2lksj220wkzw4k7szvv9") (f (quote (("expr_example") ("experimental") ("default")))) (y #t)))

(define-public crate-recursion-0.3.0 (c (n "recursion") (v "0.3.0") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "191wv71c0gpjg8gjx2kd0yrygqh788halykb58yszi9wvmbhxf48") (f (quote (("expr_example") ("experimental") ("default"))))))

(define-public crate-recursion-0.3.1 (c (n "recursion") (v "0.3.1") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "json") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "0kw8wayq4p4q79nyz8v349xdpbz4fb387v489w9iviwy2fcsjd3j") (f (quote (("expr_example") ("experimental" "json" "serde" "serde_json") ("default"))))))

(define-public crate-recursion-0.3.2 (c (n "recursion") (v "0.3.2") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "json") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "179c8xprpf8qilfvi3js14p3mvxghnhnjlvbj6lmclwsw6a0khis") (f (quote (("expr_example") ("experimental" "json" "serde" "serde_json") ("default"))))))

(define-public crate-recursion-0.3.3 (c (n "recursion") (v "0.3.3") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "json") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util"))) (d #t) (k 2)))) (h "0ii3kwwyg214gr7vwd54n6l05gpfgciz0fqkx5qk75zikjxxqnwy") (f (quote (("expr_example") ("experimental" "json" "serde" "serde_json") ("default"))))))

(define-public crate-recursion-0.4.0 (c (n "recursion") (v "0.4.0") (d (list (d (n "futures") (r "^0.3") (d #t) (k 0)))) (h "036nhsnacz2iqv0d4z0iqy7qmayc0qfxyykca0jh9859q9dczjlh") (f (quote (("experimental") ("default"))))))

(define-public crate-recursion-0.5.0 (c (n "recursion") (v "0.5.0") (d (list (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "1d13vzfxfcffv6myaxnfb9pq65qgjcqak8ncrl858hjb2v2a45sw") (f (quote (("experimental" "tokio" "futures") ("default"))))))

(define-public crate-recursion-0.5.1 (c (n "recursion") (v "0.5.1") (d (list (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "1hjiacib29whiyh5rbq63pw3b13dlxd3snv4bhkak4hv5dxqagpm") (f (quote (("experimental" "tokio" "futures") ("default"))))))

(define-public crate-recursion-0.5.2 (c (n "recursion") (v "0.5.2") (d (list (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "fs" "macros" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "0wc8x5340scj9fl281nydgwrpzbbdffj764pw6zppkcchlk58w4z") (f (quote (("experimental" "tokio" "futures") ("default"))))))

