(define-module (crates-io re dm redmine-api) #:use-module (crates-io))

(define-public crate-redmine-api-0.1.0 (c (n "redmine-api") (v "0.1.0") (d (list (d (n "bytes") (r "~1.1") (d #t) (k 0)) (d (n "derivative") (r "~2.2") (d #t) (k 0)) (d (n "derive_builder") (r "~0.10") (d #t) (k 0)) (d (n "dotenv") (r "~0.15") (d #t) (k 2)) (d (n "envy") (r "~0.4") (d #t) (k 0)) (d (n "finally-block") (r "~0.2") (d #t) (k 2)) (d (n "function_name") (r "~0.2") (d #t) (k 2)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "http") (r "~0.2") (d #t) (k 0)) (d (n "parking_lot") (r "~0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "~1.0") (d #t) (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "serde_with") (r "~1.11") (d #t) (k 0)) (d (n "thiserror") (r "~1.0") (d #t) (k 0)) (d (n "time") (r "~0.3") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "~0.2") (d #t) (k 2)) (d (n "url") (r "~2") (d #t) (k 0)))) (h "07yvs57hrhcfh89p81mwn1p17abivxbhbxbcnq7b4xysz20j37xl")))

(define-public crate-redmine-api-0.1.1 (c (n "redmine-api") (v "0.1.1") (d (list (d (n "bytes") (r "~1.1") (d #t) (k 0)) (d (n "derivative") (r "~2.2") (d #t) (k 0)) (d (n "derive_builder") (r "~0.10") (d #t) (k 0)) (d (n "dotenv") (r "~0.15") (d #t) (k 2)) (d (n "envy") (r "~0.4") (d #t) (k 0)) (d (n "finally-block") (r "~0.2") (d #t) (k 2)) (d (n "function_name") (r "~0.2") (d #t) (k 2)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "http") (r "~0.2") (d #t) (k 0)) (d (n "parking_lot") (r "~0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "~1.0") (d #t) (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "serde_with") (r "~1.11") (d #t) (k 0)) (d (n "thiserror") (r "~1.0") (d #t) (k 0)) (d (n "time") (r "~0.3") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "~0.2") (d #t) (k 2)) (d (n "url") (r "~2") (d #t) (k 0)))) (h "18ja1p21xdp8b2rfwwi8j9xckdm2mj971r78c1xbw6431fixfz6k")))

(define-public crate-redmine-api-0.1.2 (c (n "redmine-api") (v "0.1.2") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1379rk8dr26vifj1bjflphb82dpwi8bf107sv703ppbhzqff7kkl")))

(define-public crate-redmine-api-0.1.3 (c (n "redmine-api") (v "0.1.3") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "07mmhicpvzfnnc8pvqqsc92b79y3b84y4db48c23bdqsiwma49xn")))

(define-public crate-redmine-api-0.1.4 (c (n "redmine-api") (v "0.1.4") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1ij1j6q3yq0z2ma2j68lcvygx39zkhv8n5nqqxc2xlhw5xbhhaxd")))

(define-public crate-redmine-api-0.1.5 (c (n "redmine-api") (v "0.1.5") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0y5lb9b8jdzrv2svpv76gygi0kzig361151aadfyy6jigclnw8xm")))

(define-public crate-redmine-api-0.1.6 (c (n "redmine-api") (v "0.1.6") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0xk2whj3j6n63kls9fcp3wak52976nr00q4wb998rjn5p7yl33yi")))

(define-public crate-redmine-api-0.1.7 (c (n "redmine-api") (v "0.1.7") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "095f2ab49diwsrgl8sx1xs7fhy4f9ghb84vvh1zhk8bb5qqndypp") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.1.8 (c (n "redmine-api") (v "0.1.8") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "14y4j0z0hajv4f7kbvbx05n53c95rz3qcdi39r9lghjn9kzldxqx") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.1.9 (c (n "redmine-api") (v "0.1.9") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0rpad840h2pxdarb6fi4wydc5wkvkm8643xkcyx5x14hm3ycvq18") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.1.10 (c (n "redmine-api") (v "0.1.10") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.2.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1wrkq9bmppwf4wcj3n0w0mca3k06q01a7k8lq8x1ldvxcfxbzb50") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.2.0 (c (n "redmine-api") (v "0.2.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.3.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_with") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "139h1dvvbg4za8lla7r9n175j371hj1v72d5z11xsd391f0h9ima") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.2.1 (c (n "redmine-api") (v "0.2.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.3.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_with") (r "^3.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0q3y2q7hinrwwj87w2m7pc0h0q6z330m7xgwaz67xm9h1s42lfjp") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.2.2 (c (n "redmine-api") (v "0.2.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.3.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0jhx12hrh24bjv6932jf5m715ipm6a4hx8ny6ch60pl0rbx2d459") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

(define-public crate-redmine-api-0.2.3 (c (n "redmine-api") (v "0.2.3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "finally-block") (r "^0.2.0") (d #t) (k 2)) (d (n "function_name") (r "^0.3.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_with") (r "^3.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde" "serde-human-readable"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0lv8gb552vjn5s48fkxb56x6zsv107c9nymfvgcb7ic9j592dvdg") (f (quote (("rustls-tls" "reqwest/rustls-tls"))))))

