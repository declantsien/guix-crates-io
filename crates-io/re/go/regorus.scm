(define-module (crates-io re go regorus) #:use-module (crates-io))

(define-public crate-regorus-0.1.0-alpha.1 (c (n "regorus") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "1gmsajwbbcvgqir5a2m83sxli61dv7srf6pdil6q3n3gqq4nzg7k") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("jwt") ("http") ("graph") ("full-opa" "base64" "base64url" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.0-alpha.2 (c (n "regorus") (v "0.1.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "15aysx5zpfj7ilzkid1bqmmwwq5jav6vhsnp5hb75nks0kni99hf") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("jwt") ("http") ("graph") ("full-opa" "base64" "base64url" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.0-alpha.3 (c (n "regorus") (v "0.1.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "0mdgc4x8cpq8z9k5808lpbr6yxy4r9b0ysr1cgs31k3yjajlkr5q") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("jwt") ("http") ("graph") ("full-opa" "base64" "base64url" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.0 (c (n "regorus") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "18lh7d5jkb9vl3yf6b1ckj4zyrwm9p8b8l2mr07xnqkm1isr1sbz") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("jwt") ("http") ("graph") ("full-opa" "base64" "base64url" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.1 (c (n "regorus") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "compact-rc") (r "^0.5.2") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "1ycncwds11s3w3a6mr49qg6nr9ilgmwk4rs91fadibawcf4k2sa4") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jwt" "dep:jsonwebtoken" "dep:data-encoding") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.2 (c (n "regorus") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "compact-rc") (r "^0.5.2") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "0r4hgz9chgh1x5r1lj48ybin8xkyny5j9n0p9p1d95fjvhdv20az") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jwt" "dep:jsonwebtoken" "dep:data-encoding") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.3 (c (n "regorus") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.66") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "compact-rc") (r "^0.5.2") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "159lf8giqnw5rs3xbal8f7jx80ygywckl1m9hx387qkz4caixwnh") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jwt" "dep:jsonwebtoken" "dep:data-encoding") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.4 (c (n "regorus") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.45") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.4") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "0v54ngpddjcnvr6ir0ywdh7cvnbqq00gzpj4kx98hqcfxlvcqidc") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jwt" "dep:jsonwebtoken" "dep:data-encoding") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.1.5 (c (n "regorus") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.45") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.4") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "0zx854am6nim5s83vfiva6z3apm1i5pp2jdc8ayp5hg530lqgpbp") (f (quote (("yaml" "serde_yaml") ("opa-testutil") ("opa-runtime") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("jwt" "dep:jsonwebtoken" "dep:data-encoding") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

(define-public crate-regorus-0.2.0 (c (n "regorus") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.45") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.3.0") (o #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (k 0)) (d (n "itertools") (r "^0.13.0") (o #t) (k 0)) (d (n "jsonschema") (r "^0.18.0") (o #t) (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (k 0)) (d (n "md-5") (r "^0.10.6") (o #t) (k 0)) (d (n "prettydiff") (r "^0.7.0") (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (k 0)) (d (n "scientific") (r "^0.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (o #t) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_json") (r "^1.0.89") (f (quote ("alloc"))) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng"))) (o #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wax") (r "^0.6.0") (o #t) (k 0)))) (h "01dvf2b81rs5xc3kq234vlf4dmjfiadgfcbfb8kx5xmvf4vhak8y") (f (quote (("yaml" "serde_yaml") ("std" "rand/std" "rand/std_rng" "serde_json/std") ("opa-testutil") ("opa-runtime") ("opa-no-std" "arc" "base64" "base64url" "coverage" "crypto" "deprecated" "graph" "hex" "no_std" "opa-runtime" "regex" "semver" "lazy_static/spin_no_std") ("no_std" "lazy_static/spin_no_std") ("http") ("graph") ("full-opa" "base64" "base64url" "coverage" "crypto" "deprecated" "glob" "graph" "hex" "http" "jwt" "jsonschema" "opa-runtime" "regex" "semver" "std" "time" "uuid" "urlquery" "yaml") ("deprecated") ("default" "full-opa" "arc") ("coverage") ("arc" "scientific/arc")))) (s 2) (e (quote (("uuid" "dep:uuid") ("urlquery" "dep:url") ("time" "dep:chrono" "dep:chrono-tz") ("semver" "dep:semver") ("regex" "dep:regex") ("rand" "dep:rand") ("jwt" "dep:jsonwebtoken" "dep:data-encoding" "dep:itertools") ("jsonschema" "dep:jsonschema") ("hex" "dep:data-encoding") ("glob" "dep:wax") ("crypto" "dep:constant_time_eq" "dep:hmac" "dep:hex" "dep:md-5" "dep:sha1" "dep:sha2") ("base64url" "dep:data-encoding") ("base64" "dep:data-encoding"))))))

