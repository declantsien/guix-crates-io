(define-module (crates-io re vm revm-interpreter) #:use-module (crates-io))

(define-public crate-revm-interpreter-1.0.0 (c (n "revm-interpreter") (v "1.0.0") (d (list (d (n "arbitrary") (r "^1.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "revm-primitives") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0mnwd5iqzrhwsh4mh5bm1007r2mc65nrpb681ss5460xsbqqc6yv") (f (quote (("std" "revm-primitives/std") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde") ("arbitrary" "dep:arbitrary" "dep:proptest" "dep:proptest-derive" "revm-primitives/arbitrary"))))))

(define-public crate-revm-interpreter-1.1.0 (c (n "revm-interpreter") (v "1.1.0") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "revm-primitives") (r "^1.1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "08wch7vcybpmjhmhrkmdjcbr3zi8kgg4bmjy7nyf9yas6z7w00px") (f (quote (("std" "revm-primitives/std") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde") ("arbitrary" "dep:arbitrary" "dep:proptest" "dep:proptest-derive" "revm-primitives/arbitrary"))))))

(define-public crate-revm-interpreter-1.1.1 (c (n "revm-interpreter") (v "1.1.1") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "revm-primitives") (r "^1.1.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0wfhrzwqfaadw2arhpaw6d0ybkzj6b0jgc14lhyc67959y1qqh1g") (f (quote (("std" "revm-primitives/std") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde") ("arbitrary" "dep:arbitrary" "dep:proptest" "dep:proptest-derive" "revm-primitives/arbitrary"))))))

(define-public crate-revm-interpreter-1.1.2 (c (n "revm-interpreter") (v "1.1.2") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "revm-primitives") (r "^1.1.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1jbj5cngqkmgy5y1s2l5azhk2dmmsis51hqi6p8ncnlvdyi80fd5") (f (quote (("std" "revm-primitives/std") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde") ("arbitrary" "std" "dep:arbitrary" "dep:proptest" "dep:proptest-derive" "revm-primitives/arbitrary"))))))

(define-public crate-revm-interpreter-1.2.0 (c (n "revm-interpreter") (v "1.2.0") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enumn") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "revm-primitives") (r "^1.2.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0k4fbf9dwfggrf7yxqksk62h5xnczd6wb38513gmd6b3cb45c7df") (f (quote (("std" "revm-primitives/std") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism" "revm-primitives/optimism") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde") ("arbitrary" "std" "dep:arbitrary" "dep:proptest" "dep:proptest-derive" "revm-primitives/arbitrary"))))))

(define-public crate-revm-interpreter-1.3.0 (c (n "revm-interpreter") (v "1.3.0") (d (list (d (n "revm-primitives") (r "^1.3.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "181xpqp9ml8jn9h04h6rndagc7004lixqwzs2jq8jzsayvywlngr") (f (quote (("std" "revm-primitives/std") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism" "revm-primitives/optimism") ("no_gas_measuring" "revm-primitives/no_gas_measuring") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee") ("default" "std") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-2.0.0 (c (n "revm-interpreter") (v "2.0.0") (d (list (d (n "revm-primitives") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "1mrb7kcr0salpx6vb0gwi0g43byyq3nswlxdljdxdg1n7p2ammqj") (f (quote (("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism" "revm-primitives/optimism") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-2.1.0 (c (n "revm-interpreter") (v "2.1.0") (d (list (d (n "revm-primitives") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "1pyjny416di1i4rf8avi4ar2y7ahh714gzg20kk30rkhrhbbb04s") (f (quote (("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism" "revm-primitives/optimism") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-3.0.0 (c (n "revm-interpreter") (v "3.0.0") (d (list (d (n "revm-primitives") (r "^2.0.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "1nfb1rvml5pdglm77dflr1da8nx83zi82qcsfhl4pi594p42rxyz") (f (quote (("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-3.1.0 (c (n "revm-interpreter") (v "3.1.0") (d (list (d (n "revm-primitives") (r "^2.1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "0r4hl35y0pijxgimabn2a2gc5khv6w4jqfknvi5r7x78q4nhr8cg") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-3.2.0 (c (n "revm-interpreter") (v "3.2.0") (d (list (d (n "revm-primitives") (r "^3.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "1593p7d5s6z27l284q25z83afcbaqkj61iyagwg8vh87ypqg97dy") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-3.3.0 (c (n "revm-interpreter") (v "3.3.0") (d (list (d (n "revm-primitives") (r "^3.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "03zxkvb65a1xf9ihpcxgf0l1wlhvs8n6788sr81m2vfp3qwlhs3p") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-3.4.0 (c (n "revm-interpreter") (v "3.4.0") (d (list (d (n "revm-primitives") (r "^3.1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "0m251rl5b7bpd03paqh45jjghzfs6iy225073bbv0xn8z0c1h2lz") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-4.0.0 (c (n "revm-interpreter") (v "4.0.0") (d (list (d (n "revm-primitives") (r "^3.1.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)))) (h "1v2y7d3y4h5a58lamx984j1kv5xqvyi085qs4yfyj06k1irz48nk") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde"))))))

(define-public crate-revm-interpreter-5.0.0 (c (n "revm-interpreter") (v "5.0.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (o #t) (k 0)) (d (n "revm-primitives") (r "^4.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "0w1flwar47icd2fhrzfhx4n0jqqrcrvsab5dkmpq4ya18p3q50d5") (f (quote (("portable" "revm-primitives/portable") ("optional_no_base_fee" "revm-primitives/optional_no_base_fee") ("optional_gas_refund" "revm-primitives/optional_gas_refund") ("optional_eip3607" "revm-primitives/optional_eip3607") ("optional_block_gas_limit" "revm-primitives/optional_block_gas_limit") ("optional_beneficiary_reward" "revm-primitives/optional_beneficiary_reward") ("optional_balance_check" "revm-primitives/optional_balance_check") ("optimism-default-handler" "optimism" "revm-primitives/optimism-default-handler") ("optimism" "revm-primitives/optimism") ("negate-optimism-default-handler" "revm-primitives/negate-optimism-default-handler") ("memory_limit" "revm-primitives/memory_limit") ("hashbrown" "revm-primitives/hashbrown") ("dev" "memory_limit" "optional_balance_check" "optional_block_gas_limit" "optional_eip3607" "optional_gas_refund" "optional_no_base_fee" "optional_beneficiary_reward") ("default" "std" "parse") ("asm-keccak" "revm-primitives/asm-keccak") ("arbitrary" "std" "revm-primitives/arbitrary")))) (s 2) (e (quote (("std" "serde?/std" "revm-primitives/std") ("serde" "dep:serde" "revm-primitives/serde") ("parse" "dep:paste" "dep:phf"))))))

