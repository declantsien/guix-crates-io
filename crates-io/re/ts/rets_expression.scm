(define-module (crates-io re ts rets_expression) #:use-module (crates-io))

(define-public crate-rets_expression-0.1.0 (c (n "rets_expression") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "chrono-tz") (r "^0.8.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^4.1.0") (f (quote ("alloc"))) (k 0)) (d (n "regex-lite") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.100") (f (quote ("alloc"))) (k 0)))) (h "0l0i204hdnrx78hg108rxjif4siwgja6k53pnwryy77xm90rrp1l") (f (quote (("std" "match_function" "chrono/clock" "chrono/serde") ("match_function" "regex-lite") ("default" "std"))))))

(define-public crate-rets_expression-0.1.1 (c (n "rets_expression") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("alloc"))) (k 0)) (d (n "chrono-tz") (r "^0.8.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^4.1.0") (f (quote ("alloc"))) (k 0)) (d (n "regex-lite") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.100") (f (quote ("alloc"))) (k 0)))) (h "1fwg695wi49c86vn0x4w86fmh8lyjns9256gk8yqrwzhzy82qznz") (f (quote (("std" "match_function" "chrono/clock" "chrono/serde") ("match_function" "regex-lite") ("default" "std"))))))

