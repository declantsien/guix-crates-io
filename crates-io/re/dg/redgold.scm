(define-module (crates-io re dg redgold) #:use-module (crates-io))

(define-public crate-redgold-0.0.1 (c (n "redgold") (v "0.0.1") (h "0d45fl96qpnsil7f5vys90pyl7i4qz9wlp7ladhc39mjlg2in15k") (y #t)))

(define-public crate-redgold-0.1.0 (c (n "redgold") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.26.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "backtrace") (r "^0.3.65") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bdk") (r "^0.14.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^3.1.17") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "default-args") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "filepath") (r "^0.1.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p") (r "^0.44.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "miniscript") (r "^6.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "noise") (r "^0.7.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "prost") (r "^0.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "prost-helper") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rusqlite") (r "^0.25.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^1.10.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "postgres" "sqlite"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "zxcvbn") (r "^2.1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "19lvaxknw294j6m3q9w1xn8knjrwwqa0v6ywirlijrxpz2zdi92l")))

(define-public crate-redgold-0.1.10 (c (n "redgold") (v "0.1.10") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^3.1.17") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.10") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.10") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.10") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "1da32wh4g67vv5jv8b4vxd9lik6nhxds5rby16kmvwdynbiv0f9x")))

(define-public crate-redgold-0.1.11 (c (n "redgold") (v "0.1.11") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.11") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.11") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.11") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "1n6giin0lim9xhvw3k32xx5blz9ikbsfbcna9wsaaxswlh1g24r6")))

(define-public crate-redgold-0.1.12 (c (n "redgold") (v "0.1.12") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.12") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.12") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.12") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "0w7k84x70b5yyf7fsxwfn2f54d15qa22zh51l8g16m1lrzppk5m0")))

(define-public crate-redgold-0.1.15 (c (n "redgold") (v "0.1.15") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.15") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.15") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.15") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.15") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "1giy5k4bm37s486lvj28n41a26l94s9c0bykv9i5kxcxcv8ka4yw")))

(define-public crate-redgold-0.1.16 (c (n "redgold") (v "0.1.16") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.16") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.16") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.16") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.16") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "1d54fm3s9cd4mc75l71qnl4adwk6qmdi43sh8rzyhc103ca5rn4f")))

(define-public crate-redgold-0.1.17 (c (n "redgold") (v "0.1.17") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.17") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.17") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.17") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.17") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "0f9w7qkwiqfpkl6b6mr7xqdaqszchbijy38y2q375qzw4c1gbj8q")))

(define-public crate-redgold-0.1.18 (c (n "redgold") (v "0.1.18") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.18") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.18") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.18") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "1frrkbz8yqgrrzmdnf3nw51lpspsbvg71rxsg08sazwx0qbxy8iv")))

(define-public crate-redgold-0.1.21 (c (n "redgold") (v "0.1.21") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "cargo-audit") (r "^0.17.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csscolorparser") (r "^0.6.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.21.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.21.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.9.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "nokhwa") (r "^0.10.4") (f (quote ("input-native"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openpnp_capture") (r "^0.2.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openpnp_capture_sys") (r "^0.4.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "openssl-sys") (r "^0.9.88") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.27") (d #t) (k 1)) (d (n "qrencode") (r "^0.14.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.21") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.21") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rqrr") (r "^0.6.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "0lgrja6mv420bkgp2xzdn478vrfc7yngf603ynkihndgchr5lg6s")))

(define-public crate-redgold-0.1.22 (c (n "redgold") (v "0.1.22") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-sse") (r "^5") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bitcoin") (r "^0.21") (f (quote ("serde" "bitcoinconsensus"))) (d #t) (k 0)) (d (n "bitcoin-wallet") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "cargo-audit") (r "^0.17.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csscolorparser") (r "^0.6.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "csv") (r "^1.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "curv-kzen") (r "^0.9") (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "eframe") (r "^0.25.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "egui_extras") (r "^0.25.0") (f (quote ("default" "image"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "nix") (r "^0.26.4") (f (quote ("user"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "pkg-config") (r "^0.3.27") (d #t) (k 1)) (d (n "qrencode") (r "^0.14.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-data") (r "^0.1.22") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.22") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.22") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.22") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rqrr") (r "^0.6.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "ssh2") (r "^0.9.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "surf") (r "^2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "full"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)))) (h "0k58r4gfpdxv97rpgnmybd6b2vrgns42cb3ql9lv190p1f09yif4")))

(define-public crate-redgold-0.1.23 (c (n "redgold") (v "0.1.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-sse") (r "^5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bdk") (r "^0.28.1-debug") (f (quote ("default" "keys-bip39" "bip39"))) (d #t) (k 0) (p "bdk-debug")) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "csscolorparser") (r "^0.6.2") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "curv-kzen") (r "^0.9") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "eframe") (r "^0.25.0") (d #t) (k 0)) (d (n "egui_extras") (r "^0.25.0") (f (quote ("default" "image" "all_loaders"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "nix") (r "^0.26.4") (f (quote ("user"))) (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.27") (d #t) (k 1)) (d (n "qrencode") (r "^0.14.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "redgold-data") (r "^0.1.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.23") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "surf") (r "^2") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "process"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (k 0)))) (h "175x9hdqd7rinnw97fwpc6xgqhck928dvds9rvbbina2p7j8iqgr")))

(define-public crate-redgold-0.1.24 (c (n "redgold") (v "0.1.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "argon2") (r "^0.5.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-sse") (r "^5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-s3") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "aws-sdk-sesv2") (r "^0.28.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bdk") (r "^0.28.1-debug") (f (quote ("default" "keys-bip39" "bip39"))) (d #t) (k 0) (p "bdk-debug")) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "csscolorparser") (r "^0.6.2") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "curv-kzen") (r "^0.9") (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "eframe") (r "^0.25.0") (d #t) (k 0)) (d (n "egui_extras") (r "^0.25.0") (f (quote ("default" "image" "all_loaders"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.12") (f (quote ("futures-core" "futures-sink" "default"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("jpeg" "png"))) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "multi-party-ecdsa") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "nix") (r "^0.26.4") (f (quote ("user"))) (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.27") (d #t) (k 1)) (d (n "qrencode") (r "^0.14.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "redgold-data") (r "^0.1.24") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-executor") (r "^0.1.24") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-keys") (r "^0.1.24") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", target_os = \"unknown\")))") (k 0)) (d (n "redgold-schema") (r "^0.1.24") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (k 0)) (d (n "round-based") (r "^0.1.4") (d #t) (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_with") (r "^3.2.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "surf") (r "^2") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread" "process"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("default" "net" "codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("serde" "v4" "v1"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls" "default"))) (d #t) (k 0)))) (h "0nv0ajjwizb113z8nvh7agzkks85zhl0zlz2ck9i9a6wn5rngqgb")))

