(define-module (crates-io re zc rezcraft) #:use-module (crates-io))

(define-public crate-rezcraft-0.1.0 (c (n "rezcraft") (v "0.1.0") (d (list (d (n "block-mesh") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "collision") (r "^0.20") (d #t) (k 0)) (d (n "confy") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "copy_to_output") (r "^2.1.0") (d #t) (k 1)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.25") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_winit_platform") (r "^0.19") (f (quote ("webbrowser"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "either") (r "^1.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "noise") (r "^0.8") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ref_thread_local") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rle_vec") (r "^0.4") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rng") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-cookies") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm_thread") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "Location"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.17") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "1aa6fyp94kgfxf94igsxsp078c6fdwqyd102wcnfmhhhkv8zyycx")))

(define-public crate-rezcraft-0.2.0 (c (n "rezcraft") (v "0.2.0") (d (list (d (n "block-mesh") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "collision") (r "^0.20") (d #t) (k 0)) (d (n "confy") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_wgpu_backend") (r "^0.25") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui_winit_platform") (r "^0.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_winit_platform") (r "^0.19") (f (quote ("webbrowser"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "either") (r "^1.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 0)) (d (n "include_dir") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "noise") (r "^0.8") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "ref_thread_local") (r "^0.1") (d #t) (k 0)) (d (n "rle_vec") (r "^0.4") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rng") (r "^0.1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-cookies") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm_thread") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "Location"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.17") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "097gx0caga2966l8r7h4jyzkx0hszbqc2mbzw4087z9g4l04azz6") (f (quote (("save_system") ("default" "portable" "save_system" "rayon")))) (s 2) (e (quote (("portable" "dep:include_dir"))))))

