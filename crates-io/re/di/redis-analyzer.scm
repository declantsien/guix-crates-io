(define-module (crates-io re di redis-analyzer) #:use-module (crates-io))

(define-public crate-redis-analyzer-0.1.0 (c (n "redis-analyzer") (v "0.1.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1jfkyb0pk835n8419wxk6j8lssynr8k13pg23rixrgpzzsxhhp8g")))

(define-public crate-redis-analyzer-0.1.1 (c (n "redis-analyzer") (v "0.1.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1gyz9fib8dsdj7iffv41vzwshy8yryimlar4i957dnyq1zn107i0")))

(define-public crate-redis-analyzer-0.1.2 (c (n "redis-analyzer") (v "0.1.2") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1bs5rwh508ykp7gm4zzz8ilj4l1h71s39r3s3qfxhpkvqivknf6v")))

(define-public crate-redis-analyzer-0.1.3 (c (n "redis-analyzer") (v "0.1.3") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "17ygxf82z3a2nhkn1j0qscz1by1gcv4zpq0qiginq7lcvz6w8rh6")))

(define-public crate-redis-analyzer-0.2.0 (c (n "redis-analyzer") (v "0.2.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0zc1g7g62vmjxw42b1zkv526qj6i0w2ppvgq8bdybjn1izgqjc4v")))

(define-public crate-redis-analyzer-0.2.1 (c (n "redis-analyzer") (v "0.2.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0dx15s7flx7na0rrjg2p3b58qiwiqjnm684sfqdfqn6dm5i2iil0")))

(define-public crate-redis-analyzer-0.2.2 (c (n "redis-analyzer") (v "0.2.2") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2") (d #t) (k 0)) (d (n "indicatif") (r "~0.11.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "redis") (r "~0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0wgjh78c90zzadn2kmng4wjfxwwdssyjzwybffjvad1cpasjnh60")))

(define-public crate-redis-analyzer-0.3.0 (c (n "redis-analyzer") (v "0.3.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "frequency") (r "^1.0") (d #t) (k 0)) (d (n "frequency-hashmap") (r "^1.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1v5a0fpk32gdn0klyfk871hnfgnz9d0z2rx41wj4ibrpz1g2dzal")))

