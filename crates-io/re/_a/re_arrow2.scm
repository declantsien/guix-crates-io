(define-module (crates-io re _a re_arrow2) #:use-module (crates-io))

(define-public crate-re_arrow2-0.17.4 (c (n "re_arrow2") (v "0.17.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("ahash"))) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.1") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "0gbpw1whp9wy5dvdy6dv9hm7jm4c5zrijv5hfygsybryy0rmya61") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_sample_test" "io_parquet_async") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_write" "streaming-iterator" "fallible-streaming-iterator" "lexical-core") ("io_json_read" "json-deserializer" "indexmap" "lexical-core") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "io_json_read" "io_json_write") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array")))) (s 2) (e (quote (("io_parquet_zstd" "parquet2?/zstd") ("io_parquet_snappy" "parquet2?/snappy") ("io_parquet_lz4_flex" "parquet2?/lz4_flex") ("io_parquet_lz4" "parquet2?/lz4") ("io_parquet_gzip" "parquet2?/gzip") ("io_parquet_brotli" "parquet2?/brotli") ("io_parquet_bloom_filter" "parquet2?/bloom_filter") ("io_parquet_async" "futures" "io_parquet" "parquet2?/async") ("compute_like" "regex" "regex-syntax" "dep:memchr")))) (r "1.72")))

