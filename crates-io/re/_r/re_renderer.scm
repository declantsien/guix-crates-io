(define-module (crates-io re _r re_renderer) #:use-module (crates-io))

(define-public crate-re_renderer-0.2.0-alpha.0 (c (n "re_renderer") (v "0.2.0-alpha.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "082hvkixwkd7bk6b3njqrnrfl3kwfqsxk0ylsqim3020wyzr03zs") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.1 (c (n "re_renderer") (v "0.2.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "03c8mgw1lyhg2mn0jj0d07z5ix320jsqmgymzin2bbv2gk414ar4") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.2 (c (n "re_renderer") (v "0.2.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0l7rfjlh5xja73n64vyynrd6ypqlh78h7jc3p0kdfbxhizxm6ba2") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.3 (c (n "re_renderer") (v "0.2.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0sh0ajbcvs3wv428fyacg6w1477c57r1y2sfhxjglzhc095n5i0a") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.4 (c (n "re_renderer") (v "0.2.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "11ybqjbp5sx585rn59w1x2bb6cxb9hfvd501p9vkbmhi0giba3fm") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.5 (c (n "re_renderer") (v "0.2.0-alpha.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.5") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "17px0aq7j13yr9284ka46v25k4sr71zaqq8r45n5xj9kzgkrbrv6") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0-alpha.8 (c (n "re_renderer") (v "0.2.0-alpha.8") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1my7jg4wcyafmd2jrzc8sw6ws4adfdjnklw5yiy4akd5r56qrs9w") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.2.0 (c (n "re_renderer") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.2.0") (d #t) (k 0)) (d (n "re_log") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1h72kmh72l0j1537yqb0m265xzz482556758vbh0sfgxxcns4hg9") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf")))) (r "1.67")))

(define-public crate-re_renderer-0.3.0-alpha.1 (c (n "re_renderer") (v "0.3.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "=0.3.0-alpha.1") (d #t) (k 0)) (d (n "re_log") (r "=0.3.0-alpha.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "146w879dypfwxrjdzciikk9n4535pcwshmkapc66vjvqpxdgg4xq") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.3.0 (c (n "re_renderer") (v "0.3.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.3.0") (d #t) (k 0)) (d (n "re_log") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "08hdz2k1bf00imnjfqab4zrgwghvxzagijxwc8d05hhr258g9gql") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.3.1 (c (n "re_renderer") (v "0.3.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.3.1") (d #t) (k 0)) (d (n "re_log") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "09vm4lxvkzjkw3ypg9r882zssigglhswzlz45pjxsqp94zf8m4g6") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.4.0 (c (n "re_renderer") (v "0.4.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.4.0") (d #t) (k 0)) (d (n "re_log") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15.1") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.1") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.15.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0j9f8l91z6vqa60njp5w55qmrzxsw7gncqf3azyz6iz4ranl6hnz") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.5.0-alpha.0 (c (n "re_renderer") (v "0.5.0-alpha.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "re_log") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15.1") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.1") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.15.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "01v86qdm391cv3hd5wccva25yam9dffmfzf8c8w072z1vbld3hwp") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.5.0 (c (n "re_renderer") (v "0.5.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.5.0") (d #t) (k 0)) (d (n "re_log") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15.1") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.1") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.15.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1r0g14rmc8dj21jsp2z1340a9kl6hp4a53xw4j4k7qydcx2k4rf2") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.5.1-alpha.1 (c (n "re_renderer") (v "0.5.1-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "=0.5.1-alpha.1") (d #t) (k 0)) (d (n "re_log") (r "=0.5.1-alpha.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15.1") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.1") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.15.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1s3dykn85cbprwm4zicd9bxi46cdfyrk4qvfwmx4g2602vy5xdpm") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.5.1 (c (n "re_renderer") (v "0.5.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "notify") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.5.1") (d #t) (k 0)) (d (n "re_log") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15.1") (f (quote ("wgsl"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.1") (f (quote ("webgl" "wgsl"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-core") (r "^0.15.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.15.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1yd6yis1wqdpjvkjf2zbl5bqk0i3ybqii0mrpfk5phr8x8x16wpk") (f (quote (("default" "arrow" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.67")))

(define-public crate-re_renderer-0.6.0-alpha.1 (c (n "re_renderer") (v "0.6.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "=0.6.0-alpha.1") (k 0)) (d (n "re_log") (r "=0.6.0-alpha.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0a775n09h7snnlxssdmw2fwwyzi1xjlv6n1vznwl9grl7vv7bkqp") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.6.0-alpha.2 (c (n "re_renderer") (v "0.6.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "=0.6.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.6.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "01ggbpx32aprfsk4zybnwil0rn7qlx3yd89g5gay7s7awi2042v0") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.6.0 (c (n "re_renderer") (v "0.6.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.6.0") (k 0)) (d (n "re_log") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "06c76whvdg4kn6hy7s8fwhq9fx0w91qy4864irj3dw7ryhiq9l2w") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.7.0-alpha.1 (c (n "re_renderer") (v "0.7.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "=0.7.0-alpha.1") (k 0)) (d (n "re_log") (r "=0.7.0-alpha.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "10masnpnhx999vgfzg6gsddf4bpaz5h4kqz5l8dzz0dlri3hbdlc") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.7.0 (c (n "re_renderer") (v "0.7.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "puffin") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "re_error") (r "^0.7.0") (k 0)) (d (n "re_log") (r "^0.7.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "15fih5vx7fz62z3yrrlpbkjnr8j3m2l22rxycrnxxkv55npqb4v0") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.8.0-alpha.2 (c (n "re_renderer") (v "0.8.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.8.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.8.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.8.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.8.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0da05cmgvhf5j8qqzj237pbw50nmq83hsi1pzw08fphwc2hykp3r") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.8.0-alpha.6 (c (n "re_renderer") (v "0.8.0-alpha.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.8.0-alpha.6") (k 1)) (d (n "re_error") (r "=0.8.0-alpha.6") (k 0)) (d (n "re_log") (r "=0.8.0-alpha.6") (k 0)) (d (n "re_tracing") (r "=0.8.0-alpha.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1g3frp93jjqi5wmas6ijhg120258x1dnkr94xvhv0vg4g8h2m8yc") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.8.0-alpha.7 (c (n "re_renderer") (v "0.8.0-alpha.7") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.8.0-alpha.7") (k 1)) (d (n "re_error") (r "=0.8.0-alpha.7") (k 0)) (d (n "re_log") (r "=0.8.0-alpha.7") (k 0)) (d (n "re_tracing") (r "=0.8.0-alpha.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "10bb40kzd58lbndkp83dw8ng8cnl3qsw14v172wqxrh4cc6v5s8f") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.8.0 (c (n "re_renderer") (v "0.8.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.8.0") (k 1)) (d (n "re_error") (r "^0.8.0") (k 0)) (d (n "re_log") (r "^0.8.0") (k 0)) (d (n "re_tracing") (r "^0.8.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "08lcqphdylwp53mia32x60pnzq16mc4ga5nla92bg98781xyqpfh") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.9.0-alpha.1 (c (n "re_renderer") (v "0.9.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.1") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.1") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.1") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0wwklgyysyfvilkgxh0g75sn1z3c887w2rxjkpzy9yq82kqnsz39") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.9.0-alpha.2 (c (n "re_renderer") (v "0.9.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "04h0q2hi81kzg59j9qj1zq3gwkdlzs75bprqlz2n520x76y8ycw5") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.8.1 (c (n "re_renderer") (v "0.8.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.8.1") (k 1)) (d (n "re_error") (r "^0.8.1") (k 0)) (d (n "re_log") (r "^0.8.1") (k 0)) (d (n "re_tracing") (r "^0.8.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "09n3gjkxbzrim63lq3ixqlavahdd4f48753wk6fg4r38gbjmn0fy") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.9.0-alpha.3 (c (n "re_renderer") (v "0.9.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "19m943xfhgk392r3cim0gn86v3fq45vg6gz3v33rsp50ryd8vviy") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.8.2 (c (n "re_renderer") (v "0.8.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "=2.2.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.8.2") (k 1)) (d (n "re_error") (r "^0.8.2") (k 0)) (d (n "re_log") (r "^0.8.2") (k 0)) (d (n "re_tracing") (r "^0.8.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-hal") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0pgh69mvq0xs1czfywgn8j6hlygrdi873dvj5hl8d64hjwf2ddr5") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.69")))

(define-public crate-re_renderer-0.9.0-alpha.5 (c (n "re_renderer") (v "0.9.0-alpha.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.5") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.5") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.5") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0bnnpfcl12zfnra0a48rz55dd302xydx3s0a6gk7abcvqsfi6ivp") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-alpha.6 (c (n "re_renderer") (v "0.9.0-alpha.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.6") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.6") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.6") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0p8r39ipyzh8jcksrfznk2c6l5fypb26rqwyxqdblwsfnm498jqg") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-alpha.9 (c (n "re_renderer") (v "0.9.0-alpha.9") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.9") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.9") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.9") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.9") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1lqlj6ai6mkgbkgnfvzvfh8kldf13kn9y5c5fg1bwspfrsxx5kb2") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-alpha.10 (c (n "re_renderer") (v "0.9.0-alpha.10") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-alpha.10") (k 1)) (d (n "re_error") (r "=0.9.0-alpha.10") (k 0)) (d (n "re_log") (r "=0.9.0-alpha.10") (k 0)) (d (n "re_tracing") (r "=0.9.0-alpha.10") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1jqhmndhqwhgxqgm4cbyy9rm79g3ny5nyw3y1ndyxh8diq09n9v1") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-rc.2 (c (n "re_renderer") (v "0.9.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-rc.2") (k 1)) (d (n "re_error") (r "=0.9.0-rc.2") (k 0)) (d (n "re_log") (r "=0.9.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.9.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0p1xbag9bj2dwknrxzgqf6racqifwialdfy418y8xv2b6zhbxcjp") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-rc.3 (c (n "re_renderer") (v "0.9.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-rc.3") (k 1)) (d (n "re_error") (r "=0.9.0-rc.3") (k 0)) (d (n "re_log") (r "=0.9.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.9.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1w7f2yqmyiw240cla1957l7nrjp6r91hflqlysn7v167vv27f3y5") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0-rc.7 (c (n "re_renderer") (v "0.9.0-rc.7") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.0-rc.7") (k 1)) (d (n "re_error") (r "=0.9.0-rc.7") (k 0)) (d (n "re_log") (r "=0.9.0-rc.7") (k 0)) (d (n "re_tracing") (r "=0.9.0-rc.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0hssigj9pscxh2ag9pkxf0mjm82s9v3g0gl5xq6xvqc9x81njxzw") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.0 (c (n "re_renderer") (v "0.9.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.9.0") (k 1)) (d (n "re_error") (r "^0.9.0") (k 0)) (d (n "re_log") (r "^0.9.0") (k 0)) (d (n "re_tracing") (r "^0.9.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0j0x0acdrn4zl0drs18hhzg3w6gyppwqkazjk80kfwbmjzsd24ba") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.2 (c (n "re_renderer") (v "0.10.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0w8zngmjf3zw4702k9i56q3rw9zcsjrxk2806lv4xrz1s7f6qfqf") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.3 (c (n "re_renderer") (v "0.10.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "05aq511w4h9flhhafp7777nbb4c6xf5ma0sclns5m0s154w6kbrp") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.4 (c (n "re_renderer") (v "0.10.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.4") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.4") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.4") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0ccli3liz5q7mvzincim8mir59siby220y029rl1cqa0m583fgcm") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.5 (c (n "re_renderer") (v "0.10.0-alpha.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.5") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.5") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.5") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1xiv9081y8vf07rfm0p8800ajfl40qhvdx2sjl8b42hrpjy1bx9f") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.1-rc.3 (c (n "re_renderer") (v "0.9.1-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.1-rc.3") (k 1)) (d (n "re_error") (r "=0.9.1-rc.3") (k 0)) (d (n "re_log") (r "=0.9.1-rc.3") (k 0)) (d (n "re_tracing") (r "=0.9.1-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1ranpzpp0md15fncjv3icyy12wl3z6znzjfsiwv7msbj9spkvc7p") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.1-rc.4 (c (n "re_renderer") (v "0.9.1-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.9.1-rc.4") (k 1)) (d (n "re_error") (r "=0.9.1-rc.4") (k 0)) (d (n "re_log") (r "=0.9.1-rc.4") (k 0)) (d (n "re_tracing") (r "=0.9.1-rc.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0hmhs3xsakkd1189azj5ql8prr8xjpcb1fkwqv81cygd723lscx2") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.9.1 (c (n "re_renderer") (v "0.9.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.9.1") (k 1)) (d (n "re_error") (r "^0.9.1") (k 0)) (d (n "re_log") (r "^0.9.1") (k 0)) (d (n "re_tracing") (r "^0.9.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "09ihb6l5p4ans8z1lyccgc4i5d5cfmn1mq81pqcnqyd3l6cx7xbk") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.8 (c (n "re_renderer") (v "0.10.0-alpha.8") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.8") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.8") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.8") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.8") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "135p1ffb10y34c1f8cciwkmdq9cwkwr9f9pdzc2dpf5p9sci0vzb") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-alpha.10 (c (n "re_renderer") (v "0.10.0-alpha.10") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-alpha.10") (k 1)) (d (n "re_error") (r "=0.10.0-alpha.10") (k 0)) (d (n "re_log") (r "=0.10.0-alpha.10") (k 0)) (d (n "re_tracing") (r "=0.10.0-alpha.10") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1xmjkh3v32cs2iph3mznspqis6r1c93ngc5yakh001aswmc470ig") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0-rc.1 (c (n "re_renderer") (v "0.10.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.0-rc.1") (k 1)) (d (n "re_error") (r "=0.10.0-rc.1") (k 0)) (d (n "re_log") (r "=0.10.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.10.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1b1pnvzh72j76wcpgad4718x0zmcsqamyhqiv24hyy4l6av3qby1") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.0 (c (n "re_renderer") (v "0.10.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.10.0") (k 1)) (d (n "re_error") (r "^0.10.0") (k 0)) (d (n "re_log") (r "^0.10.0") (k 0)) (d (n "re_tracing") (r "^0.10.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0aryvkcqqacmg9sgzjlk4yaq8vkrn5kwc2wck4zqcqj2h9sl8nas") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.1-rc.1 (c (n "re_renderer") (v "0.10.1-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.10.1-rc.1") (k 1)) (d (n "re_error") (r "=0.10.1-rc.1") (k 0)) (d (n "re_log") (r "=0.10.1-rc.1") (k 0)) (d (n "re_tracing") (r "=0.10.1-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1iyvk1m5knsxx8bjlr00kksjdxczxszfp6ngpsvvyh4jmxgjgd2y") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.10.1 (c (n "re_renderer") (v "0.10.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.10.1") (k 1)) (d (n "re_error") (r "^0.10.1") (k 0)) (d (n "re_log") (r "^0.10.1") (k 0)) (d (n "re_tracing") (r "^0.10.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "08ir787932f68c0agc1wq6qcrlj1nmbgbg1h33vd07srrs8l8w23") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.11.0-rc.1 (c (n "re_renderer") (v "0.11.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.11.0-rc.1") (k 1)) (d (n "re_error") (r "=0.11.0-rc.1") (k 0)) (d (n "re_log") (r "=0.11.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.11.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "1af65b00gg7nrxv00kgz2j7kbdhs5z7najj7w7fkrjpccsfzlqbw") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.11.0-rc.2 (c (n "re_renderer") (v "0.11.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "=0.11.0-rc.2") (k 1)) (d (n "re_error") (r "=0.11.0-rc.2") (k 0)) (d (n "re_log") (r "=0.11.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.11.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "11cvq8c434j512yvh15g8jdazd0db4irp7li4ddfsf8w8g88g8lk") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.11.0 (c (n "re_renderer") (v "0.11.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "async-executor") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "re_build_tools") (r "^0.11.0") (k 1)) (d (n "re_error") (r "^0.11.0") (k 0)) (d (n "re_log") (r "^0.11.0") (k 0)) (d (n "re_tracing") (r "^0.11.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-time") (r "^0.2.0") (d #t) (k 2)) (d (n "wgpu") (r "^0.17.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wgpu-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "winit") (r "^0.28.7") (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 2)))) (h "0fbswfqfzyr4zss0s1zydpjqkbbbs40bqifyzl1hcx1g5igs1x9y") (f (quote (("webgl" "wgpu/webgl") ("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-alpha.2 (c (n "re_renderer") (v "0.12.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.12.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.12.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.12.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "11arxqgz20dknav9wiqsqbkcyhr6km6zmb2zarrpc4i69ym7cd4x") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-alpha.3 (c (n "re_renderer") (v "0.12.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.12.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.12.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.12.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "1pk0m02algbzlnrnf65ayqdzv24h7675br4f8ap39db26vn4y9ai") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-alpha.4 (c (n "re_renderer") (v "0.12.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-alpha.4") (k 1)) (d (n "re_error") (r "=0.12.0-alpha.4") (k 0)) (d (n "re_log") (r "=0.12.0-alpha.4") (k 0)) (d (n "re_tracing") (r "=0.12.0-alpha.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "0gpzkl76pzdrrc2kspkx7zh8q3xl8wyb066lspbwllc5a49qbsir") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-rc.1 (c (n "re_renderer") (v "0.12.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-rc.1") (k 1)) (d (n "re_error") (r "=0.12.0-rc.1") (k 0)) (d (n "re_log") (r "=0.12.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.12.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "15a5msgwmk0wpsdp8zddpp9704sxg0nqbpf42bm3qnrdzvn3nzh3") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-rc.2 (c (n "re_renderer") (v "0.12.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-rc.2") (k 1)) (d (n "re_error") (r "=0.12.0-rc.2") (k 0)) (d (n "re_log") (r "=0.12.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.12.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "0963p9m44x415b1lk7gqil13x9qzlx0alfb93qga6g3p5wws9rcw") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-rc.3 (c (n "re_renderer") (v "0.12.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-rc.3") (k 1)) (d (n "re_error") (r "=0.12.0-rc.3") (k 0)) (d (n "re_log") (r "=0.12.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.12.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "0ihngs980x4ajqwa9vb98mxw9lf7fw2qnb9r8r2szsfsyq7pzpc1") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-rc.4 (c (n "re_renderer") (v "0.12.0-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-rc.4") (k 1)) (d (n "re_error") (r "=0.12.0-rc.4") (k 0)) (d (n "re_log") (r "=0.12.0-rc.4") (k 0)) (d (n "re_tracing") (r "=0.12.0-rc.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "1npgj8mmphhxkkiqc94nfgl00n56qd113xwmbvjq5a885rjbp44y") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0-rc.6 (c (n "re_renderer") (v "0.12.0-rc.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.0-rc.6") (k 1)) (d (n "re_error") (r "=0.12.0-rc.6") (k 0)) (d (n "re_log") (r "=0.12.0-rc.6") (k 0)) (d (n "re_tracing") (r "=0.12.0-rc.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "14xrx286153dzy6kjq92l9yqs7qws5vlny92cxb7crpn01vklis1") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.0 (c (n "re_renderer") (v "0.12.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.12.0") (k 1)) (d (n "re_error") (r "^0.12.0") (k 0)) (d (n "re_log") (r "^0.12.0") (k 0)) (d (n "re_tracing") (r "^0.12.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "1mj8si8a9mnldhfhwy3xsnd3kyzr907nn06xcvy4f7p9dqaf0czz") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-alpha.2 (c (n "re_renderer") (v "0.13.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.25.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.13.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.13.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.13.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "06r9snds22hwsxw7csj3lvigpc4563rxxjlsh8dz70vb1w45l5bz") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.1-rc.1 (c (n "re_renderer") (v "0.12.1-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.1-rc.1") (k 1)) (d (n "re_error") (r "=0.12.1-rc.1") (k 0)) (d (n "re_log") (r "=0.12.1-rc.1") (k 0)) (d (n "re_tracing") (r "=0.12.1-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "1x7wkf0hs9aa3jk8a2n3z9l0bvwy05r82bg4px5dphg36cjrrzlg") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.1-rc.2 (c (n "re_renderer") (v "0.12.1-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.12.1-rc.2") (k 1)) (d (n "re_error") (r "=0.12.1-rc.2") (k 0)) (d (n "re_log") (r "=0.12.1-rc.2") (k 0)) (d (n "re_tracing") (r "=0.12.1-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "1f99qyzkh0r1lsnw3ymd5hqvy618z0ksk7hysyi0bghs6pbxqfzy") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.12.1 (c (n "re_renderer") (v "0.12.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.12.1") (k 1)) (d (n "re_error") (r "^0.12.1") (k 0)) (d (n "re_log") (r "^0.12.1") (k 0)) (d (n "re_tracing") (r "^0.12.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(features = \"webgl\")))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu-core") (r "^0.18.0") (o #t) (d #t) (k 0)))) (h "0x54r9mfzxxky8nkbh72bjssa9c9cfi2qbn744q48r73fb0x0q7v") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("webgl" "wgpu/webgl" "dep:wgpu-core") ("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-alpha.3 (c (n "re_renderer") (v "0.13.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.25.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.13.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.13.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.13.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "073dbzj4wlycw6z7rikvnrk23lydhbslw62bmplyw9260g1g89vs") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-alpha.4 (c (n "re_renderer") (v "0.13.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-alpha.4") (k 1)) (d (n "re_error") (r "=0.13.0-alpha.4") (k 0)) (d (n "re_log") (r "=0.13.0-alpha.4") (k 0)) (d (n "re_tracing") (r "=0.13.0-alpha.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1j2zzw3lnvkpqy2lphza1z2d8pwyqvbg1cxsrn0fiy11hb5fap20") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.1 (c (n "re_renderer") (v "0.13.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.1") (k 1)) (d (n "re_error") (r "=0.13.0-rc.1") (k 0)) (d (n "re_log") (r "=0.13.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0l0iz04w48k4vfqcdmqllirzb5r12fr3587cllvaa7qcnh8bhz93") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.2 (c (n "re_renderer") (v "0.13.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.2") (k 1)) (d (n "re_error") (r "=0.13.0-rc.2") (k 0)) (d (n "re_log") (r "=0.13.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0x791nq6z1nlcnkdkaf7ngn3cc4fyfyp03ziqfm13l2xp9ir0946") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.3 (c (n "re_renderer") (v "0.13.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.3") (k 1)) (d (n "re_error") (r "=0.13.0-rc.3") (k 0)) (d (n "re_log") (r "=0.13.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "177fla6wiyi0cqz4f61p9zc22p97pj9xqs5pnvw9lzx5pm4g3d30") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.4 (c (n "re_renderer") (v "0.13.0-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.4") (k 1)) (d (n "re_error") (r "=0.13.0-rc.4") (k 0)) (d (n "re_log") (r "=0.13.0-rc.4") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0jj8320hd5vzl1mbs3yqnmgnjjzhqn8ibhbqcp60imijmabnq2ln") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.5 (c (n "re_renderer") (v "0.13.0-rc.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.5") (k 1)) (d (n "re_error") (r "=0.13.0-rc.5") (k 0)) (d (n "re_log") (r "=0.13.0-rc.5") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1xa983smzc4y5im37i77732zmhmmixl9jzq172r2pdpy4zddbm8x") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.6 (c (n "re_renderer") (v "0.13.0-rc.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.6") (k 1)) (d (n "re_error") (r "=0.13.0-rc.6") (k 0)) (d (n "re_log") (r "=0.13.0-rc.6") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.6") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0y7wbrmb5242hksafnddyvm9fmjkndnx6jmlz37jwg9dwnxch2pz") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0-rc.7 (c (n "re_renderer") (v "0.13.0-rc.7") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.13.0-rc.7") (k 1)) (d (n "re_error") (r "=0.13.0-rc.7") (k 0)) (d (n "re_log") (r "=0.13.0-rc.7") (k 0)) (d (n "re_tracing") (r "=0.13.0-rc.7") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "11j1a43rad579arnpidsmvy3chs4xfnmhkszgbyy1ahvr7v8pjvj") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.13.0 (c (n "re_renderer") (v "0.13.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.13.0") (k 1)) (d (n "re_error") (r "^0.13.0") (k 0)) (d (n "re_log") (r "^0.13.0") (k 0)) (d (n "re_tracing") (r "^0.13.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0dki1ivpy0z39hspzn8fx75gf1qjnl7l1wyxd51xlj9dgfgq6p0b") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.72")))

(define-public crate-re_renderer-0.14.0-alpha.2 (c (n "re_renderer") (v "0.14.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.14.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.14.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.14.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.14.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1z381mq6w04hiz2pb89mlampryd173ffkj8plfxi9l2bxlv76pdq") (f (quote (("default" "import-obj" "import-gltf")))) (s 2) (e (quote (("serde" "dep:serde") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.0-rc.1 (c (n "re_renderer") (v "0.14.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.14.0-rc.1") (k 1)) (d (n "re_error") (r "=0.14.0-rc.1") (k 0)) (d (n "re_log") (r "=0.14.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.14.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1qw763hkqzpy7956jilaxa0z3l22wdlmgx20i79gsac7b3fdzv8k") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.0-rc.2 (c (n "re_renderer") (v "0.14.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.14.0-rc.2") (k 1)) (d (n "re_error") (r "=0.14.0-rc.2") (k 0)) (d (n "re_log") (r "=0.14.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.14.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "19n8pawi5l5axfp5n8lfcaj2gmv94y74yqlgasfznhqqz00lv635") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.0-rc.3 (c (n "re_renderer") (v "0.14.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.14.0-rc.3") (k 1)) (d (n "re_error") (r "=0.14.0-rc.3") (k 0)) (d (n "re_log") (r "=0.14.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.14.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0cgn86233f8zmib24s9g6phm6h908l53l42x4xhybw7panf3a7bd") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.0-rc.4 (c (n "re_renderer") (v "0.14.0-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.14.0-rc.4") (k 1)) (d (n "re_error") (r "=0.14.0-rc.4") (k 0)) (d (n "re_log") (r "=0.14.0-rc.4") (k 0)) (d (n "re_tracing") (r "=0.14.0-rc.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0ncxpswqz9kh9py8fkqizqvqyd3ndrk2srfr30dm6kc94ma5w82d") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.0 (c (n "re_renderer") (v "0.14.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.14.0") (k 1)) (d (n "re_error") (r "^0.14.0") (k 0)) (d (n "re_log") (r "^0.14.0") (k 0)) (d (n "re_tracing") (r "^0.14.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0nmfrrkb3bk33v2pdkhpnzv9x6qq44pjscmhipyy0m6g6gdhb0k8") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.14.1 (c (n "re_renderer") (v "0.14.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.14.1") (k 1)) (d (n "re_error") (r "^0.14.1") (k 0)) (d (n "re_log") (r "^0.14.1") (k 0)) (d (n "re_tracing") (r "^0.14.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0vr90v8xr470dclx7i1dfrmxp494y64pr962dq4kkm4brzi9qa22") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-alpha.2 (c (n "re_renderer") (v "0.15.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.15.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.15.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.15.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0w7xr002k21cm232dqksqhyjp9vq6mn415r0gc2ymd7xmg4i84nr") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-alpha.3 (c (n "re_renderer") (v "0.15.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.15.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.15.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.15.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1h5khv81wwyzpj6cc8zndrkh5cjisldj42n5mcz896kcf8wa4xlg") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-alpha.4 (c (n "re_renderer") (v "0.15.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-alpha.4") (k 1)) (d (n "re_error") (r "=0.15.0-alpha.4") (k 0)) (d (n "re_log") (r "=0.15.0-alpha.4") (k 0)) (d (n "re_tracing") (r "=0.15.0-alpha.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0k6q62gmb2x128734szpnnnmvrl8lzz82hjhhhxdhhy52x8m5wzr") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-alpha.5 (c (n "re_renderer") (v "0.15.0-alpha.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-alpha.5") (k 1)) (d (n "re_error") (r "=0.15.0-alpha.5") (k 0)) (d (n "re_log") (r "=0.15.0-alpha.5") (k 0)) (d (n "re_tracing") (r "=0.15.0-alpha.5") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0zb9i1lvrm41xhhypwqnz2ksxgqa76ri4fzwbxyb3vi1wff68xxr") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-rc.1 (c (n "re_renderer") (v "0.15.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-rc.1") (k 1)) (d (n "re_error") (r "=0.15.0-rc.1") (k 0)) (d (n "re_log") (r "=0.15.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.15.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1cm16gxb7id36v8r8wy6n9v70cxkp2il3pzl2ypqis2hh2b8m2pg") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-rc.2 (c (n "re_renderer") (v "0.15.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-rc.2") (k 1)) (d (n "re_error") (r "=0.15.0-rc.2") (k 0)) (d (n "re_log") (r "=0.15.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.15.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1n86ylmqhyw3n6fnykkq1gp842hh39p9axn8xqkm2981n3kqwi76") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0-rc.3 (c (n "re_renderer") (v "0.15.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.0-rc.3") (k 1)) (d (n "re_error") (r "=0.15.0-rc.3") (k 0)) (d (n "re_log") (r "=0.15.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.15.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1iqwdq7vcdi851d6hk2q6l6jyinjlgimxgrgx1i215r3w50fkm7n") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.0 (c (n "re_renderer") (v "0.15.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.15.0") (k 1)) (d (n "re_error") (r "^0.15.0") (k 0)) (d (n "re_log") (r "^0.15.0") (k 0)) (d (n "re_tracing") (r "^0.15.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "1c3j8582yqzb0y1r1x7i0fv7lsj6agc4rfif0fxs0wvxfxqg04wy") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.1-rc.1 (c (n "re_renderer") (v "0.15.1-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.15.1-rc.1") (k 1)) (d (n "re_error") (r "=0.15.1-rc.1") (k 0)) (d (n "re_log") (r "=0.15.1-rc.1") (k 0)) (d (n "re_tracing") (r "=0.15.1-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0bpjk8ncqaih7vqfqpvrpi1g33vglz9s4d68rhzcbs5sgk8hyg18") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.15.1 (c (n "re_renderer") (v "0.15.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.15.1") (k 1)) (d (n "re_error") (r "^0.15.1") (k 0)) (d (n "re_log") (r "^0.15.1") (k 0)) (d (n "re_tracing") (r "^0.15.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.0") (d #t) (k 0)))) (h "0qbd3yg7668rqq2d8p2anb83jjcfdv1c4asq6xbm7jz94a5020i9") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.74")))

(define-public crate-re_renderer-0.16.0-alpha.3 (c (n "re_renderer") (v "0.16.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.16.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.16.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.16.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "1mbibjv3iyjq213rjf5w66331c0ir6bdxbw1ha0v5x79xvp85bkx") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0-alpha.4 (c (n "re_renderer") (v "0.16.0-alpha.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-alpha.4") (k 1)) (d (n "re_error") (r "=0.16.0-alpha.4") (k 0)) (d (n "re_log") (r "=0.16.0-alpha.4") (k 0)) (d (n "re_tracing") (r "=0.16.0-alpha.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "1a97v6r5n5ch8nsfaz69xz1yqb8fyvmnph20xcsp6k8ffm1nhcvg") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0-rc.1 (c (n "re_renderer") (v "0.16.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-rc.1") (k 1)) (d (n "re_error") (r "=0.16.0-rc.1") (k 0)) (d (n "re_log") (r "=0.16.0-rc.1") (k 0)) (d (n "re_tracing") (r "=0.16.0-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "102bvklrlj2h3wi4ml2g417ngvxiqp9xr2l37zl5dd0cyrnk0wn7") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0-rc.2 (c (n "re_renderer") (v "0.16.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-rc.2") (k 1)) (d (n "re_error") (r "=0.16.0-rc.2") (k 0)) (d (n "re_log") (r "=0.16.0-rc.2") (k 0)) (d (n "re_tracing") (r "=0.16.0-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "1r6mnmh3vhn2lczr0j59sqhzrs70i6xyzax3dkb66zqyv9fr8746") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0-rc.3 (c (n "re_renderer") (v "0.16.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-rc.3") (k 1)) (d (n "re_error") (r "=0.16.0-rc.3") (k 0)) (d (n "re_log") (r "=0.16.0-rc.3") (k 0)) (d (n "re_tracing") (r "=0.16.0-rc.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "06mshj9gr1wiw8fqh74irbcylmglvff8a2pj06ah4cjw7jipmb9j") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0-rc.4 (c (n "re_renderer") (v "0.16.0-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.0-rc.4") (k 1)) (d (n "re_error") (r "=0.16.0-rc.4") (k 0)) (d (n "re_log") (r "=0.16.0-rc.4") (k 0)) (d (n "re_tracing") (r "=0.16.0-rc.4") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "05a131r390mnwn5vi7cg6mnl3vcw4hn4iic1g79m1dmihcfkkdsz") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.0 (c (n "re_renderer") (v "0.16.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.16.0") (k 1)) (d (n "re_error") (r "^0.16.0") (k 0)) (d (n "re_log") (r "^0.16.0") (k 0)) (d (n "re_tracing") (r "^0.16.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "05g7pp1vqfh00mwmnp4n5fqpyjjm366skd0d8g83haiv897k6ych") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.17.0-alpha.2 (c (n "re_renderer") (v "0.17.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.17.0-alpha.2") (k 1)) (d (n "re_error") (r "=0.17.0-alpha.2") (k 0)) (d (n "re_log") (r "=0.17.0-alpha.2") (k 0)) (d (n "re_tracing") (r "=0.17.0-alpha.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "1gcxn3qkgmd344yqpgzciz1a8vpqb1z67h6ffprnd66716q4075h") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.17.0-alpha.3 (c (n "re_renderer") (v "0.17.0-alpha.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.17.0-alpha.3") (k 1)) (d (n "re_error") (r "=0.17.0-alpha.3") (k 0)) (d (n "re_log") (r "=0.17.0-alpha.3") (k 0)) (d (n "re_tracing") (r "=0.17.0-alpha.3") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "0dymgis9qh9r9zjcb97r9nl4jqvcc40f23wkfwwr4ai15q0p33i6") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.1-rc.1 (c (n "re_renderer") (v "0.16.1-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.1-rc.1") (k 1)) (d (n "re_error") (r "=0.16.1-rc.1") (k 0)) (d (n "re_log") (r "=0.16.1-rc.1") (k 0)) (d (n "re_tracing") (r "=0.16.1-rc.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "1c5pqr5fidnf5m10cl1z2f07psbmnbxq47p5wx8gkjzqi82s04j8") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.1-rc.2 (c (n "re_renderer") (v "0.16.1-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "=0.16.1-rc.2") (k 1)) (d (n "re_error") (r "=0.16.1-rc.2") (k 0)) (d (n "re_log") (r "=0.16.1-rc.2") (k 0)) (d (n "re_tracing") (r "=0.16.1-rc.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "0s5gwhc7g90dzn6mg5spaxsm8bs4gas1klfn85v9qqvfrhz5y3ca") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

(define-public crate-re_renderer-0.16.1 (c (n "re_renderer") (v "0.16.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "anyhow") (r "^1.0") (k 1)) (d (n "arrow2") (r "^0.17") (o #t) (d #t) (k 0) (p "re_arrow2")) (d (n "bitflags") (r "^2.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2") (d #t) (k 1)) (d (n "clean-path") (r "^0.2") (d #t) (k 0)) (d (n "clean-path") (r "^0.2") (d #t) (k 1)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "enumset") (r "^1.0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "gltf") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "macaw") (r "^0.18") (d #t) (k 0)) (d (n "never") (r "^0.1") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 1)) (d (n "profiling") (r "^1.0.12") (f (quote ("profile-with-puffin"))) (k 0)) (d (n "re_build_tools") (r "^0.16.1") (k 1)) (d (n "re_error") (r "^0.16.1") (k 0)) (d (n "re_log") (r "^0.16.1") (k 0)) (d (n "re_tracing") (r "^0.16.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tinystl") (r "^0.0.3") (f (quote ("bytemuck"))) (o #t) (k 0)) (d (n "tobj") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.0") (d #t) (k 1)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.4") (f (quote ("webgl" "metal" "webgpu" "wgsl" "fragile-send-sync-non-atomic-wasm"))) (k 0)) (d (n "wgpu-core") (r "^0.19.4") (d #t) (k 0)))) (h "0wyjb9mhhrg7cl4spw4lqx8vgk54i404sgjxfbv3wlldl4mamqhv") (f (quote (("default" "import-obj" "import-gltf" "import-stl")))) (s 2) (e (quote (("serde" "dep:serde") ("import-stl" "dep:tinystl") ("import-obj" "dep:tobj") ("import-gltf" "dep:gltf") ("arrow" "dep:arrow2")))) (r "1.76")))

