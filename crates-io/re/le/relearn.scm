(define-module (crates-io re le relearn) #:use-module (crates-io))

(define-public crate-relearn-0.1.0 (c (n "relearn") (v "0.1.0") (d (list (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "enum-map") (r "^1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "lazycell") (r "^1.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.7.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "081n14dxrahbmgza59m8akj3z8hpl96773kyk1b7lmf1lg9zgx06")))

(define-public crate-relearn-0.1.1 (c (n "relearn") (v "0.1.1") (d (list (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "enum-map") (r "^1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "lazycell") (r "^1.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.7.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0p7b5kb8gl3nv1l6x44kk7ngns5zx9xr4axpzw7prad3akkjl1wk")))

(define-public crate-relearn-0.1.2 (c (n "relearn") (v "0.1.2") (d (list (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "enum-map") (r "^1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "lazycell") (r "^1.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.7.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "012h1riylg9sqc7nifr5mmi2s71wsm496s3rbp7vawm306xclj3m") (f (quote (("doc-only" "tch/doc-only"))))))

(define-public crate-relearn-0.2.0 (c (n "relearn") (v "0.2.0") (d (list (d (n "array-init") (r "^2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1.21") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "enum-map") (r "^2.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (f (quote ("const-generics"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^1.12") (d #t) (k 0)) (d (n "slice-of-array") (r "=0.3.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.6") (d #t) (k 0)) (d (n "tensorboard-rs") (r "=0.2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yansi") (r "^0.5.0") (d #t) (k 0)))) (h "02scj1d5yfdknhvy7y56cikd3x245z7i4rz5z2x19z91r9wlskq0") (f (quote (("doc-only" "tch/doc-only"))))))

(define-public crate-relearn-0.3.0 (c (n "relearn") (v "0.3.0") (d (list (d (n "array-init") (r "^2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1.21") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-map") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-of-array") (r "=0.3.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.8") (d #t) (k 0)) (d (n "tensorboard-rs") (r "=0.5.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yansi") (r "^0.5.0") (d #t) (k 0)))) (h "1sj6xnh4xpqwzbrs766syf21ckns24w2qzgd0hkikyv1g7vfn9rb") (f (quote (("doc-only" "tch/doc-only"))))))

(define-public crate-relearn-0.3.1 (c (n "relearn") (v "0.3.1") (d (list (d (n "array-init") (r "^2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1.21") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-map") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "relearn_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-of-array") (r "=0.3.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (f (quote ("union"))) (d #t) (k 0)) (d (n "tch") (r "^0.8") (d #t) (k 0)) (d (n "tensorboard-rs") (r "=0.5.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yansi") (r "^0.5.0") (d #t) (k 0)))) (h "0jm9s1v53m6qisk6zk5pzdjih653sb06sdk9nrfq47389k7mxs5g") (f (quote (("doc-only" "tch/doc-only"))))))

