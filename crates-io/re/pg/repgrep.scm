(define-module (crates-io re pg repgrep) #:use-module (crates-io))

(define-public crate-repgrep-0.1.0 (c (n "repgrep") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "1dlvvazrjn1d27m4vwjxyiqchm2na2ixyl1qxibsy5qvac5igsc9")))

(define-public crate-repgrep-0.1.1 (c (n "repgrep") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "026zzyrd09yfwz060bc93xc5v9nr5k26p92jxw9jfdzb3cm7lr7n")))

(define-public crate-repgrep-0.2.0 (c (n "repgrep") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "1f18ql472hw4fvixshk6viglbkifn28hnf0743jvjhw0scdw7hp0")))

(define-public crate-repgrep-0.3.0 (c (n "repgrep") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "0kl0f08hndnj2s1niqpsp9j0gnvzbhpwraxfmz4p7bgrlvya1g2z")))

(define-public crate-repgrep-0.3.1 (c (n "repgrep") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "0y5ww3vzyp0b4syl0pc6xgy54a56pqvk8i10ihk6m8a66r44rcx7")))

(define-public crate-repgrep-0.3.2 (c (n "repgrep") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "10syhjab8y2y5bgfmf09ha174rv079nqhlwa2wzm29kcmhbrssf1")))

(define-public crate-repgrep-0.3.3 (c (n "repgrep") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "09l9xwjph06sw3q1a9lia7w4hnbbm74mxv54c9173jk2i8xwavv6")))

(define-public crate-repgrep-0.4.0 (c (n "repgrep") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "0hpp466jkp17lsfj5nxkxay5028gma7ka458ckwczrbi3fh67cr2")))

(define-public crate-repgrep-0.4.1 (c (n "repgrep") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "1rf6dzv4lrd9ryc437hwd8yz6zvhy59kal5f00z9zgg7jl4rwzq5")))

(define-public crate-repgrep-0.4.2 (c (n "repgrep") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "0iaiz0jkqb3ii219hlq31c8v6c049fmj5fa6627jc48233abcihy")))

(define-public crate-repgrep-0.4.3 (c (n "repgrep") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)))) (h "12vrv06ri3n4jj9hdp6zra14pz8bc8vnxvh2y07hhidga6wyzjjs")))

(define-public crate-repgrep-0.7.2 (c (n "repgrep") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)))) (h "1502xf8i55whhwsy473lrrmng76xgq0w59wffzlx3grm65xrylyi")))

(define-public crate-repgrep-0.7.3 (c (n "repgrep") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)))) (h "15zv4gp41wr9fs4gf4llkqhgfy4by5ql5bqng7ib0z7wml7pfq9c")))

(define-public crate-repgrep-0.7.4 (c (n "repgrep") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)))) (h "1qjd1zavlx3h7n2zvm8zaaj0jhscfb7jz5j78m3llghnnkvgdfbl")))

(define-public crate-repgrep-0.7.5 (c (n "repgrep") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.1") (d #t) (k 1)) (d (n "crossterm") (r "^0.17.5") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.10.0") (f (quote ("crossterm"))) (k 0)))) (h "0fcgs1i565j1zl55f0k4lqmcj004wzjs3an0kw84p7kh6a0ixzfd")))

(define-public crate-repgrep-0.8.0 (c (n "repgrep") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.12.0") (f (quote ("crossterm"))) (k 0)))) (h "1dkp0c282b07rlkskk1x88q76nm3d6slybynq48yvakwpq6w1dlb")))

(define-public crate-repgrep-0.9.0 (c (n "repgrep") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tui") (r "^0.12.0") (f (quote ("crossterm"))) (k 0)))) (h "1kvrf7sz5737kfkrgp318mfs7l6a0qng21yqf1wxb37cvsrfcix9")))

(define-public crate-repgrep-0.10.0 (c (n "repgrep") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.5.1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1lg1j8zyhpqr6rd29wps7650v0z46hw7zbchm33shmlq3500s3vv")))

(define-public crate-repgrep-0.10.5 (c (n "repgrep") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.0.0") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.5.2") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "154zhzabq4714glk09nhbib8vq7a2394xk5gyka4lyrh3rqi0qb2")))

(define-public crate-repgrep-0.10.7 (c (n "repgrep") (v "0.10.7") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0q0113g8rmf0gsn9h91dp8h1330pam101pz4f2x2z3zil7pxc735")))

(define-public crate-repgrep-0.11.0 (c (n "repgrep") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1y9iqcqhyl2hp0f2k2dgwgl9a1bi1fl6z8nzb49n4bw4715p798a")))

(define-public crate-repgrep-0.12.0 (c (n "repgrep") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "085iahqblcwqnb3asmykwww13xkwds7qfnnlm4b8l8ms6cm0vdsz")))

(define-public crate-repgrep-0.12.1 (c (n "repgrep") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0f83ajy6fd2v31ssrnzyfijq8x3d4b41lhq8q3kbbi84amgq95g0")))

(define-public crate-repgrep-0.12.2 (c (n "repgrep") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0hi3bp3pmwgalji71mxrsynl7mb0v3wl78y4zkib6hn45hf9w218")))

(define-public crate-repgrep-0.12.3 (c (n "repgrep") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "13sfgav4fd0qkyr9n0psn1p0nwfkh4w0c50vjxmgaam1qmbyyl6v")))

(define-public crate-repgrep-0.12.4 (c (n "repgrep") (v "0.12.4") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "01sfqcgld978kgw53cw709fdpdnm439a8fbxbs7d6y7wxl1892i3")))

(define-public crate-repgrep-0.13.0 (c (n "repgrep") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1w2zz582r8b8hi2divrycb3clmnxlgxmbl5blwl0vjdl4hdy1067")))

(define-public crate-repgrep-0.14.0 (c (n "repgrep") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "12993jh3z6q6ig123w9wrvd4h6ll8lvzq51b037gfbxy6xl9zwx1")))

(define-public crate-repgrep-0.14.1 (c (n "repgrep") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0gbhjlx22a0xpsddc0h725mvy3h5a908qcc3p3hv1ss6pbfqf52y")))

(define-public crate-repgrep-0.14.2 (c (n "repgrep") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0rigwydl18sv9f4j2kaac1df9qwcj9ncbzdnpmkqwy5kkz9i9bw4")))

(define-public crate-repgrep-0.14.3 (c (n "repgrep") (v "0.14.3") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("cargo" "derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.1.5") (d #t) (k 1)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "ratatui") (r "^0.22.0") (f (quote ("crossterm"))) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "05gyfr6m1snfpfq34ia8xwr75zh84p4hx4gsrszarx2vddbic75r")))

(define-public crate-repgrep-0.15.0 (c (n "repgrep") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (f (quote ("detect"))) (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "const_format") (r "^0.2.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 2)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (d #t) (k 2)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "ratatui") (r "^0.22.0") (f (quote ("crossterm"))) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0q1k78r3w5534l057pz7lm36ki8y0wa94darj9np1lz4d6zl6q90")))

