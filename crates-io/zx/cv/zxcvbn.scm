(define-module (crates-io zx cv zxcvbn) #:use-module (crates-io))

(define-public crate-zxcvbn-0.1.0 (c (n "zxcvbn") (v "0.1.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.1.80") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "10jani4h1dyagc77y9shg7i6pr16cvacxgw9802wsicw43i74y9h") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.2.0 (c (n "zxcvbn") (v "0.2.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.1.80") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "< 0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.4") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0v4vyryfs2qa0ra143h5pbh840mqvpgmwskwfjxah8h48a3d064w") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("dev" "clippy" "unstable" "rustc-serialize" "serde") ("default"))))))

(define-public crate-zxcvbn-0.2.1 (c (n "zxcvbn") (v "0.2.1") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "< 0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.4") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "074iccqcwmfxl17zn1sp2m3bkwc6pssv1xwi8r86y6ag6n2pmcm1") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("dev" "clippy" "unstable" "rustc-serialize" "serde") ("default"))))))

(define-public crate-zxcvbn-0.3.0 (c (n "zxcvbn") (v "0.3.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0jw0fcjp2wms49r6mkvfclwzr6h13x300zb7zcfq5bvb53j44ql3") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable" "rustc-serialize") ("default"))))))

(define-public crate-zxcvbn-0.4.0 (c (n "zxcvbn") (v "0.4.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1l4mk68y9qq52xxi0kb7w67z55s1nfcf7fv3wsbrr14pk62nw59b") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.4.1 (c (n "zxcvbn") (v "0.4.1") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (f (quote ("static-libonig"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "107sk5xfv13sp5jac2achw7lnxgzfm5vlxg90avz49wp2l52jpip") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.4.2 (c (n "zxcvbn") (v "0.4.2") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.2.1") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1caxs129yzpwgmb5mp6nplpd0xb5s1dhwfvfvpv88lhdy6y157lw") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.4.3 (c (n "zxcvbn") (v "0.4.3") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.4.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.8") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1b8fcxz9z4jb4idz5w389ps3s4sbggys94zcb3raqprxkfiirqm6") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.4.4 (c (n "zxcvbn") (v "0.4.4") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.4.1") (f (quote ("struct_default"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1sqqwmzqvm4gyvm3zwclfdwdfkj1ajz7s4nlbpkq8k7v9wx465sy") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.5.0 (c (n "zxcvbn") (v "0.5.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.4.7") (f (quote ("struct_default" "private_fields"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1kl6zwlm2bgc6f3lbkz4gay5r2lrir09vzbpyws5j48pz3zr6z5f") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.6.0 (c (n "zxcvbn") (v "0.6.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.4.7") (f (quote ("struct_default" "private_fields"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0jkrs4kbqfbpn0as6ib84vpg3jnz55gsapj1ssgj17fhj6kzmwmq") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.6.1 (c (n "zxcvbn") (v "0.6.1") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1hh6cx6mlip3qajw06s3gp5q47kz8md6h3h4r3spmxmhmls7jji0") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.6.2 (c (n "zxcvbn") (v "0.6.2") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.5.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1nh4bkbcsqhh879sgcdmxmzyz1ds3h7pmgj5ca5pp5jrgcq111mf") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.6.3 (c (n "zxcvbn") (v "0.6.3") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "00vmq1v7hh8p6ykx68sgdx3653xhlf93ljij9jk20p25pn2nchfb") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-0.7.0 (c (n "zxcvbn") (v "0.7.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0q58r1a18qa3jm0gc2dix0wqr70s66bi1b8nxgvd22bggxk49zzw") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-1.0.0 (c (n "zxcvbn") (v "1.0.0") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1xfg67v9sybwny0110g431n8plbskdpaiajrchzfd00f6i726pk3") (f (quote (("unstable" "regex/simd-accel" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-1.0.1 (c (n "zxcvbn") (v "1.0.1") (d (list (d (n "clippy") (r ">= 0.0.100") (o #t) (d #t) (k 0)) (d (n "derive_builder") (r "^0.5.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1y07ixi9rzsnnnldd0v7fx30gf09xvxs3mna5wxra6llqdw0ays8") (f (quote (("unstable" "lazy_static/nightly") ("ser" "serde" "serde_derive") ("dev" "clippy" "unstable") ("default"))))))

(define-public crate-zxcvbn-1.0.2 (c (n "zxcvbn") (v "1.0.2") (d (list (d (n "derive_builder") (r "^0.7.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.21") (d #t) (k 2)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "009qsr4d568bf9k9gynlml2xp0ffljwjgx80277ydrd0k72mpc43") (f (quote (("ser" "serde" "serde_derive") ("default"))))))

(define-public crate-zxcvbn-2.0.0 (c (n "zxcvbn") (v "2.0.0") (d (list (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.8.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "04ans7vh96knwd019b7sqhd447vap56pk17hg7w6gy9m65111dy1") (f (quote (("ser" "serde" "serde_derive") ("default"))))))

(define-public crate-zxcvbn-2.0.1 (c (n "zxcvbn") (v "2.0.1") (d (list (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0ar19dlwq6xh4nkbdcckqrkd3nma1b0a2ys50kppjhs8lvc9rdm7") (f (quote (("ser" "serde" "serde_derive") ("default"))))))

(define-public crate-zxcvbn-2.1.0 (c (n "zxcvbn") (v "2.1.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("wasmbind"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zrim7xjf8vf3j26lynzxab8qwb1sr58ix0jcmmkxv07s0qk7dz9") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder"))))))

(define-public crate-zxcvbn-2.1.1 (c (n "zxcvbn") (v "2.1.1") (d (list (d (n "chrono") (r "^0.4.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("wasmbind"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1l0dixjpahg6wbi7nlbg6754wrdb2irlh0j6vbf83vmj0lxdpyd5") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder"))))))

(define-public crate-zxcvbn-2.1.2 (c (n "zxcvbn") (v "2.1.2") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "14i525izavdxrpibclc60vp6wpfiwi90hv6c0mq06lpcj8w8gcky") (f (quote (("wasmbind" "chrono/wasmbind") ("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder"))))))

(define-public crate-zxcvbn-2.2.0 (c (n "zxcvbn") (v "2.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0k1jlxfd7iksniqa90pq174pqi4ywryqi3l53dc70njbnd9jma69") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder"))))))

(define-public crate-zxcvbn-2.2.1 (c (n "zxcvbn") (v "2.2.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1c68fa5kjpd24afqrjvcagi0la75czf4vwik9cx3fwp8j77fr2sn") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder"))))))

(define-public crate-zxcvbn-2.2.2 (c (n "zxcvbn") (v "2.2.2") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.56") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1r4l1i76sdk51syp032kbjngmxwgqhjprs40yfda43ppzx8shgqh") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder")))) (r "1.63")))

(define-public crate-zxcvbn-3.0.0 (c (n "zxcvbn") (v "3.0.0") (d (list (d (n "criterion") (r "^0.5") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_builder") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1317m507zvr755xacwjbsi35jr72jk03dr6xbjk44cgs7jb2wzc7") (f (quote (("ser" "serde" "serde_derive") ("default" "builder") ("builder" "derive_builder")))) (r "1.63")))

(define-public crate-zxcvbn-3.0.1 (c (n "zxcvbn") (v "3.0.1") (d (list (d (n "criterion") (r "^0.5") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_builder") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12yk1gypj1y2zq1g2xmi9d5nmy72zr1mh0shs96d1nb1vy21v6sp") (f (quote (("ser" "serde") ("default" "builder") ("builder" "derive_builder")))) (r "1.63")))

