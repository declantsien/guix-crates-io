(define-module (crates-io mv -a mv-analyzer) #:use-module (crates-io))

(define-public crate-mv-analyzer-0.1.4 (c (n "mv-analyzer") (v "0.1.4") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0caskj73ryxhzsv1904wnjqqrgxr1kdgd34bcqfwgw0ih0cnygp6") (y #t)))

(define-public crate-mv-analyzer-0.1.5 (c (n "mv-analyzer") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-package") (r "^0.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "00sa749msv0akmyxd92szry9kkf7zljqrscnxh6x39xls4agdl1x") (y #t)))

(define-public crate-mv-analyzer-0.1.6 (c (n "mv-analyzer") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-package") (r "^0.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "14qcmvmn2zrjf0lx6r67sf5kkn7hr00grxss3pn8dfrmqzac42y2") (y #t)))

(define-public crate-mv-analyzer-0.2.0 (c (n "mv-analyzer") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.2.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-types") (r "^0.2.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-package") (r "^0.2.0") (d #t) (k 0) (p "mv-package")) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "15ligd2ajks059dqjn8pnkj7zb10yd4pljbz8n7p8js93ph2xyn6") (f (quote (("address32" "move-compiler/address32") ("address20" "move-compiler/address20")))) (y #t)))

(define-public crate-mv-analyzer-0.2.1 (c (n "mv-analyzer") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.2.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-types") (r "^0.2.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-package") (r "^0.2.0") (d #t) (k 0) (p "mv-package")) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0xsh8ly67hg94g7hxvc67b77bs7vrry8m0rq9h3q878i2n205cph") (f (quote (("address32" "move-compiler/address32") ("address20" "move-compiler/address20")))) (y #t)))

(define-public crate-mv-analyzer-0.3.0 (c (n "mv-analyzer") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-package") (r "^0.3.0") (d #t) (k 0) (p "mv-package")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "095s8qblsi53xd7gax9bkvrxs6mq50s2axhn3wdk6p9m7mj5ldvm") (f (quote (("address32" "move-compiler/address32") ("address20" "move-compiler/address20")))) (y #t)))

(define-public crate-mv-analyzer-0.3.1 (c (n "mv-analyzer") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-package") (r "^0.3.0") (d #t) (k 0) (p "mv-package")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "14mr1i628b1797a4vkdjqap6jky8v8js3ic0q5sf5h9qxjbkvn89") (f (quote (("address32" "move-compiler/address32") ("address20" "move-compiler/address20")))) (y #t)))

(define-public crate-mv-analyzer-0.3.2 (c (n "mv-analyzer") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "im") (r "^15.1.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5.1") (d #t) (k 0)) (d (n "lsp-types") (r "^0.90.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-package") (r "^0.3.0") (d #t) (k 0) (p "mv-package")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1njdkyv6ic1i4y803bga1wz57im6pccc1y9pxjj12499zln7s39d") (f (quote (("address32" "move-compiler/address32") ("address20" "move-compiler/address20")))) (y #t)))

