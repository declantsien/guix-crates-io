(define-module (crates-io mv -c mv-compiler) #:use-module (crates-io))

(define-public crate-mv-compiler-0.1.0 (c (n "mv-compiler") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.1.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.1.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0) (p "mv-bytecode-verifier")) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0) (p "mv-command-line-common")) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-to-bytecode")) (d (n "move-ir-types") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0) (p "mv-symbol-pool")) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "09gv2v6ylrkzjfqhg970mzm29mbxdkz7qa9dq36qmjrvgy94hg66") (y #t)))

(define-public crate-mv-compiler-0.1.1 (c (n "mv-compiler") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.1") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.1.1") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.1.1") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.1") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.1.1") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "17l550bhsjykzfhjcgis7ib0ka8v51m6zza45r1xzjrgir9vbdh1") (y #t)))

(define-public crate-mv-compiler-0.1.2 (c (n "mv-compiler") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.1") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.1.1") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.1.1") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.1") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.1.1") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-stdlib") (r "^0.1.0") (d #t) (k 2) (p "mv-stdlib")) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0n51kcmz18m9p4vsdfm6amdfppvg9cwz2w97rg4v249z59facfw3") (y #t)))

(define-public crate-mv-compiler-0.1.4 (c (n "mv-compiler") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-ir-to-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "12kjfi02p51i4xkdccw3a37cp5arnwdjp2h2gnw4rn0sg8xilh59") (y #t)))

(define-public crate-mv-compiler-0.1.5 (c (n "mv-compiler") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-ir-to-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "06cw5m9l8q8l4dwgw5kjpkg26dhampmialg9sxz37cfqwigrlfs2") (y #t)))

(define-public crate-mv-compiler-0.1.6 (c (n "mv-compiler") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-ir-to-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "137fv9r0vl63mahd029p0iq43z1jdagm5vgivknbdm33mgzvk0j0") (y #t)))

(define-public crate-mv-compiler-0.2.0 (c (n "mv-compiler") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.2.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.2.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.2.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.2.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.2.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0wsgjzn826dk9mp9gdf57is9vqdb3y2kb0ygb3didabpaxl8gkmm") (f (quote (("address32" "move-core-types/address32") ("address20" "move-core-types/address20")))) (y #t)))

(define-public crate-mv-compiler-0.2.1 (c (n "mv-compiler") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.2.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.2.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.2.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.2.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.2.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.2.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "13f16d1kcahzxly2fhr4iah7859zkvrg1vkyrms0zg396b0xylna") (f (quote (("address32" "move-core-types/address32") ("address20" "move-core-types/address20")))) (y #t)))

(define-public crate-mv-compiler-0.3.0 (c (n "mv-compiler") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.3.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.3.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.3.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.3.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "04nzd911n69z9jzasszmkkb43ldyfxkfxlgyig9v54v13ld2aa40") (f (quote (("address32" "move-core-types/address32") ("address20" "move-core-types/address20")))) (y #t)))

(define-public crate-mv-compiler-0.3.1 (c (n "mv-compiler") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.3.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.3.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.3.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.3.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "0v99xl83qnik9p2apinxvvi23f0fzr1l9ipcnzkv118jr3qfs2bs") (f (quote (("address32" "move-core-types/address32") ("address20" "move-core-types/address20")))) (y #t)))

(define-public crate-mv-compiler-0.3.2 (c (n "mv-compiler") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.3.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.3.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-source-map") (r "^0.3.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.3.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-types") (r "^0.3.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1r73i1k4f3zkfbizlg87hmdhiqirki3qah4n02shjdfh0w4vx03s") (f (quote (("address32" "move-core-types/address32") ("address20" "move-core-types/address20")))) (y #t)))

