(define-module (crates-io mv -m mv-model) #:use-module (crates-io))

(define-public crate-mv-model-0.1.1 (c (n "mv-model") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.1") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-source-map") (r "^0.1.1") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.1") (d #t) (k 0) (p "mv-compiler")) (d (n "move-core-types") (r "^0.1.1") (d #t) (k 0) (p "mv-core-types")) (d (n "move-disassembler") (r "^0.1.1") (d #t) (k 0) (p "mv-disassembler")) (d (n "move-ir-types") (r "^0.1.1") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0i8q49yk6b9iqqcf8mnsvxzpznkcfdsxb4nlwzamqi8005yb2n3a") (y #t)))

(define-public crate-mv-model-0.1.2 (c (n "mv-model") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.1") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-source-map") (r "^0.1.1") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.1") (d #t) (k 0) (p "mv-compiler")) (d (n "move-core-types") (r "^0.1.1") (d #t) (k 0) (p "mv-core-types")) (d (n "move-disassembler") (r "^0.1.1") (d #t) (k 0) (p "mv-disassembler")) (d (n "move-ir-types") (r "^0.1.1") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1plb2g4iq2a3hjdgz09wm1lwpl8xh7hlggn0sp5hb9ssglrcb9ip") (y #t)))

(define-public crate-mv-model-0.1.4 (c (n "mv-model") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1cgizmb8cl64wb9rqh8vfvxrscy8fs0zl0z7hgpgyghif0kgqg00") (y #t)))

(define-public crate-mv-model-0.1.5 (c (n "mv-model") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0wfgxws6yqsdkwd8508k57z5wkjca6xsmvnyihfmd7pa3w14vjni") (y #t)))

(define-public crate-mv-model-0.1.6 (c (n "mv-model") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.1") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.1") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.1.1") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "12rzzsqv5bfd703vf96lsrrjxa6hfmdibchyjkzgbf5crx6xf55k") (y #t)))

(define-public crate-mv-model-0.2.0 (c (n "mv-model") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0rqbxrldhm76f9aix2qqsxxl46bsx0r9a7w6w99a1nln15x0w3m4") (y #t)))

(define-public crate-mv-model-0.2.1 (c (n "mv-model") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1b2q3ckwcmqb6ibsab0slhy25p0gswqzc7v9lywvp6nb12i7gyds") (y #t)))

(define-public crate-mv-model-0.3.0 (c (n "mv-model") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1p98xwblcjrwhhrsb2b3rv79b37kg1njd03w48cq6bgsxbfci6l7") (y #t)))

(define-public crate-mv-model-0.3.1 (c (n "mv-model") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0jqcc2rqal67brvf3wvq9lg5djm55wwxqy4sc4jvgdjf6qz0fyjg") (y #t)))

(define-public crate-mv-model-0.3.2 (c (n "mv-model") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "internment") (r "^0.5.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-disassembler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vkhi6j98d71k07vmg8sbdldk193c2b4pz7gzi0vd1xyiavwlz7k") (y #t)))

