(define-module (crates-io mv -v mv-vm-types) #:use-module (crates-io))

(define-public crate-mv-vm-types-0.1.1 (c (n "mv-vm-types") (v "0.1.1") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0hckcl757pzzhki3z2wls4allf9li4krsnb5sg97hynfd0zacjd6") (f (quote (("fuzzing" "proptest" "move-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.1.2 (c (n "mv-vm-types") (v "0.1.2") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1139qrfl8645s06gzmy1ik4bqcb5jmin4zl82lh3wmy6rvsn7hjq") (f (quote (("fuzzing" "proptest" "move-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.1.4 (c (n "mv-vm-types") (v "0.1.4") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1j1v42216r10pqlznax62h4x4w9v01zgnbvsmvhbrgz792xfsmpg") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.1.5 (c (n "mv-vm-types") (v "0.1.5") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1jw9iiwagf9kgbd0lcqn6symrdaajbx8ivl6kyqby2ninxhi1x9z") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.1.6 (c (n "mv-vm-types") (v "0.1.6") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "10g7jc6hwwlaihn6mb3ksll99b91pql073hdvx5sxn9ivl4gb3ki") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.2.0 (c (n "mv-vm-types") (v "0.2.0") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0j5v8zqbnig8m2zynalmrcpbi6qqvkgdj5p1chn2rxqzlrw4v4cy") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.2.1 (c (n "mv-vm-types") (v "0.2.1") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1sl0mv47s837awhcl6k4ddccx0rxn1av7b5cza5qakai1zxwr0pm") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.3.0 (c (n "mv-vm-types") (v "0.3.0") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "0cknbqrisds6dcisid4k87pbjja545imk0j0fwg7zrzv8h4i674m") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.3.1 (c (n "mv-vm-types") (v "0.3.1") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1dpfp6i4grgrz90vk73w5adlln28f737h07n5cnkdjra6acjbsia") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

(define-public crate-mv-vm-types-0.3.2 (c (n "mv-vm-types") (v "0.3.2") (d (list (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "01l5aca0k2cidpbsxf3kighxf5ayv8104x38zfkax3hfb69s9waw") (f (quote (("fuzzing" "proptest" "mv-binary-format/fuzzing") ("default")))) (y #t)))

