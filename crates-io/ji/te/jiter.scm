(define-module (crates-io ji te jiter) #:use-module (crates-io))

(define-public crate-jiter-0.0.1 (c (n "jiter") (v "0.0.1") (d (list (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)))) (h "10b18ly1dhmga1qmcj0kakriyzf1ijfpsv0157kpbba2pkc9ginn")))

(define-public crate-jiter-0.0.2 (c (n "jiter") (v "0.0.2") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.19.2") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (f (quote ("num-bigint" "auto-initialize"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1zgkzgwfy5qnv07j5s71a5pc67cmcz2n1vmsrf8s3q53yn6p8jkh") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.0.3 (c (n "jiter") (v "0.0.3") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint" "auto-initialize"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "0swfg7q9ijw5jmk2dg3zh852m37svmgvgygh831i2zmrgy761pw6") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.0.4 (c (n "jiter") (v "0.0.4") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint" "auto-initialize"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1f10awvz0yxi4pb0783ya26wrw6bb48qn9smsc5bbxsvaff42zdj") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.0.5 (c (n "jiter") (v "0.0.5") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint" "auto-initialize"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1l9ynv62wgvb82vzy7ppxp7ahyqy7anj8fp3g3fn6dhixa7mk171") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.0.6 (c (n "jiter") (v "0.0.6") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("num-bigint" "auto-initialize"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1xr7cajq6r0szl6aga047asrd6cqrvw168yh0sz854znk5m0dnw7") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.0.7 (c (n "jiter") (v "0.0.7") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "17d9wi9fc1bv4hj1dmjv7a7w2rvacjgq4wzchwqgsflj2vivd8f2") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.1.0 (c (n "jiter") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1zy16kmp9rrl6fis0b0bhxmpq04pl3556gdjg87ykrzym6xw9jx9") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.1.1 (c (n "jiter") (v "0.1.1") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0-beta.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1n2qmsnxsalnvqz84l4wgr1rbzvvpw5zpbqkpsbsh79bdn4pq2rc") (s 2) (e (quote (("python" "dep:pyo3"))))))

(define-public crate-jiter-0.2.0 (c (n "jiter") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "pyo3-build-config") (r "^0.21.0") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "0rbvfhg1kmsgnz6i5n6wd1d1ssshb900zg312c03m91w3b7kkn91") (s 2) (e (quote (("python" "dep:pyo3" "dep:pyo3-build-config"))))))

(define-public crate-jiter-0.2.1 (c (n "jiter") (v "0.2.1") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "pyo3-build-config") (r "^0.21.0") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "163b67vsgn6xlnzypjk40r9wf27hc4ax9hfpwwd0ry6w1a37f4cf") (s 2) (e (quote (("python" "dep:pyo3" "dep:pyo3-build-config"))))))

(define-public crate-jiter-0.3.0 (c (n "jiter") (v "0.3.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "pyo3-build-config") (r "^0.21.0") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1dc93sciamhfgvm384481s6661yn8jc70q3iw64980i6qf83kag1") (s 2) (e (quote (("python" "dep:pyo3" "dep:pyo3-build-config"))))))

(define-public crate-jiter-0.4.0 (c (n "jiter") (v "0.4.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "codspeed-bencher-compat") (r "^2.3.1") (d #t) (k 2)) (d (n "lexical-parse-float") (r "^0.8.5") (f (quote ("format"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pyo3") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("num-bigint" "auto-initialize"))) (k 2)) (d (n "pyo3-build-config") (r "^0.21.0") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0.147") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (f (quote ("preserve_order" "arbitrary_precision" "float_roundtrip"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)))) (h "1f2ddq65fcshkmqbjwxgrb03dhr4l23wd40s4d8lyv7a0ywf76bs") (s 2) (e (quote (("python" "dep:pyo3" "dep:pyo3-build-config"))))))

