(define-module (crates-io ji ro jiro_nn) #:use-module (crates-io))

(define-public crate-jiro_nn-0.5.0 (c (n "jiro_nn") (v "0.5.0") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "globset") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("lazy" "streaming" "parquet" "ipc" "describe"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "1sld6c93acm0dhvlyzp49gb1ik6wgigvi811xnkaxyscpdzq73fr") (f (quote (("f64") ("default" "ndarray")))) (s 2) (e (quote (("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra") ("arrayfire" "dep:arrayfire"))))))

(define-public crate-jiro_nn-0.6.0 (c (n "jiro_nn") (v "0.6.0") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("lazy" "streaming" "parquet" "ipc" "describe"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "129nsdyvw4scysh0w19dfvppr5hsg9pxvdp6l3kbk74n6ym1hs6m") (f (quote (("f64") ("default" "ndarray" "data")))) (s 2) (e (quote (("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra" "dep:nalgebra-glm") ("data" "dep:polars") ("arrayfire" "dep:arrayfire"))))))

(define-public crate-jiro_nn-0.7.0 (c (n "jiro_nn") (v "0.7.0") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("lazy" "streaming" "parquet" "ipc" "describe"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "1pin1hggvksqxdmrkj7grnqgcwzmmsvf2i0nmwdjp3mfn4qn9szr") (f (quote (("f64") ("default" "ndarray" "data")))) (s 2) (e (quote (("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra" "dep:nalgebra-glm") ("data" "dep:polars") ("arrayfire" "dep:arrayfire"))))))

(define-public crate-jiro_nn-0.7.1 (c (n "jiro_nn") (v "0.7.1") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("lazy" "streaming" "parquet" "ipc" "describe"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "0cgd6n2b1zrszg78h934gf135a492v8xspcc8pm4bp2mm1dvz885") (f (quote (("f64") ("default" "ndarray" "data")))) (s 2) (e (quote (("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra" "dep:nalgebra-glm") ("data" "dep:polars") ("arrayfire" "dep:arrayfire"))))))

(define-public crate-jiro_nn-0.8.0 (c (n "jiro_nn") (v "0.8.0") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("fmt" "json" "lazy" "streaming" "describe"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "1lw12bdzkvg56i7ns24c440b3a5239d1qqg6ymv94q7323fvigfc") (f (quote (("f64") ("default" "ndarray" "data")))) (s 2) (e (quote (("parquet" "polars?/parquet") ("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra" "dep:nalgebra-glm") ("ipc" "polars?/ipc") ("data" "dep:polars") ("arrayfire" "dep:arrayfire"))))))

(define-public crate-jiro_nn-0.8.1 (c (n "jiro_nn") (v "0.8.1") (d (list (d (n "arrayfire") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "convolutions-rs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (f (quote ("rand" "rayon"))) (o #t) (d #t) (k 0)) (d (n "nalgebra-glm") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "polars") (r "^0.28.0") (f (quote ("fmt" "json" "lazy" "streaming" "describe"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^4.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)))) (h "1dkayhzv31fbzibpbvfygwzjnc5k3wmnlf55b4fnsz1qsm140ci8") (f (quote (("f64") ("default" "ndarray" "data")))) (s 2) (e (quote (("parquet" "polars?/parquet") ("ndarray" "dep:ndarray" "dep:convolutions-rs") ("nalgebra" "dep:nalgebra" "dep:nalgebra-glm") ("ipc" "polars?/ipc") ("data" "dep:polars") ("arrayfire" "dep:arrayfire"))))))

