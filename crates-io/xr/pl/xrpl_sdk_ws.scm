(define-module (crates-io xr pl xrpl_sdk_ws) #:use-module (crates-io))

(define-public crate-xrpl_sdk_ws-0.1.0 (c (n "xrpl_sdk_ws") (v "0.1.0") (h "0ilsgfcxf9fgic7acgs7vwh61l7bqzaa8qsdc50nbprb9w8gqkir")))

(define-public crate-xrpl_sdk_ws-0.2.0 (c (n "xrpl_sdk_ws") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "xrpl_binary_codec") (r "^0.2") (d #t) (k 0)) (d (n "xrpl_types") (r "^0.2") (d #t) (k 0)))) (h "1bcfz22f003vzgwvmldbjx5kzk9wj6kz8bks6s93c503dp0m9xkm")))

(define-public crate-xrpl_sdk_ws-0.4.0 (c (n "xrpl_sdk_ws") (v "0.4.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "xrpl_api") (r "^0.1") (d #t) (k 0)) (d (n "xrpl_binary_codec") (r "^0.3") (d #t) (k 0)) (d (n "xrpl_types") (r "^0.3") (d #t) (k 0)))) (h "017ri5zaky9y26ddwb1bqj9rx20kpxsq0rx2nsw0h59084dfasx8")))

(define-public crate-xrpl_sdk_ws-0.9.0 (c (n "xrpl_sdk_ws") (v "0.9.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "xrpl_api") (r "^0.9") (d #t) (k 0)) (d (n "xrpl_binary_codec") (r "^0.9") (d #t) (k 0)) (d (n "xrpl_types") (r "^0.9") (d #t) (k 0)))) (h "09zmq72shbxagc7mya7ja6dvqi9ijsq8nccp7xghnm0ni77k66kb")))

(define-public crate-xrpl_sdk_ws-0.11.0 (c (n "xrpl_sdk_ws") (v "0.11.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "xrpl_api") (r "^0.11") (d #t) (k 0)) (d (n "xrpl_binary_codec") (r "^0.11") (d #t) (k 0)) (d (n "xrpl_types") (r "^0.11") (d #t) (k 0)))) (h "12yp1hs3q6f522xw1r9hryhzvnp1728x0gln536rmwb3wi2k7hx6")))

(define-public crate-xrpl_sdk_ws-0.12.0 (c (n "xrpl_sdk_ws") (v "0.12.0") (d (list (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "xrpl_api") (r "^0.12") (d #t) (k 0)) (d (n "xrpl_binary_codec") (r "^0.12") (d #t) (k 0)) (d (n "xrpl_types") (r "^0.12") (d #t) (k 0)))) (h "1v3mcxd3038lyr52qsmday55m2y827nmwy1jrld81cdl37h12kl9")))

