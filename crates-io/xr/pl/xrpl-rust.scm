(define-module (crates-io xr pl xrpl-rust) #:use-module (crates-io))

(define-public crate-xrpl-rust-0.1.0 (c (n "xrpl-rust") (v "0.1.0") (d (list (d (n "bs58") (r "^0.4.0") (f (quote ("check" "alloc"))) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc" "clock"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 0)) (d (n "rand_hc") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.17.0") (f (quote ("serde"))) (k 0)) (d (n "secp256k1") (r "^0.20.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "strum") (r "^0.22.0") (k 0)) (d (n "strum_macros") (r "^0.22.0") (k 0)))) (h "02i23a6v3mmdp3d8g6mwjnxx9v9drsqf9s8p3bgiqpi7xirdksv8") (f (quote (("utils") ("std" "rand/std" "regex/std" "chrono/std" "num-bigint/std" "rand/std_rng" "hex/std" "rust_decimal/std" "bs58/std" "serde/std" "indexmap/std" "secp256k1/std") ("models" "core") ("default" "std" "core" "models" "utils") ("core" "utils")))) (y #t)))

(define-public crate-xrpl-rust-0.1.1 (c (n "xrpl-rust") (v "0.1.1") (d (list (d (n "bs58") (r "^0.4.0") (f (quote ("check" "alloc"))) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc" "clock"))) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.2") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 0)) (d (n "rand_hc") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.17.0") (f (quote ("serde"))) (k 0)) (d (n "secp256k1") (r "^0.20.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "strum") (r "^0.22.0") (k 0)) (d (n "strum_macros") (r "^0.22.0") (k 0)))) (h "136cv2s0bhgv8fdv8198bgrs6v7vvdjwbw3yac1xpa59nph95fr4") (f (quote (("utils") ("std" "rand/std" "regex/std" "chrono/std" "num-bigint/std" "rand/std_rng" "hex/std" "rust_decimal/std" "bs58/std" "serde/std" "indexmap/std" "secp256k1/std") ("models" "core") ("default" "std" "core" "models" "utils") ("core" "utils"))))))

(define-public crate-xrpl-rust-0.2.0 (c (n "xrpl-rust") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "bs58") (r "^0.4.0") (f (quote ("check" "alloc"))) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("alloc" "clock"))) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.9") (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 0)) (d (n "rand_hc") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.17.0") (f (quote ("serde"))) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (k 0)) (d (n "strum_macros") (r "^0.24.2") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1lqjg7q0pichs5y0q02n15l7y4wqqrp3x108gz26r607aw546sc9") (f (quote (("utils") ("transactions" "core" "amounts" "currencies") ("std" "rand/std" "regex/std" "chrono/std" "rand/std_rng" "hex/std" "rust_decimal/std" "bs58/std" "serde/std" "indexmap/std" "secp256k1/std") ("requests" "core" "amounts" "currencies") ("models" "core" "transactions" "requests" "ledger") ("ledger" "core" "amounts" "currencies") ("default" "std" "core" "models" "utils") ("currencies" "core") ("core" "utils") ("amounts" "core"))))))

