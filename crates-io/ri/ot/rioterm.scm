(define-module (crates-io ri ot rioterm) #:use-module (crates-io))

(define-public crate-rioterm-0.0.19-rc (c (n "rioterm") (v "0.0.19-rc") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.18") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.18") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "rio-config") (r "^0.0.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.18") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.18") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)))) (h "1jm68v31m2iph0x2776k4gw1smgq5p4gprw63ri8svs7wn5g25xb") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11")))) (y #t)))

(define-public crate-rioterm-0.0.19 (c (n "rioterm") (v "0.0.19") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.19") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.19") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "rio-config") (r "^0.0.19") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.19") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.19") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)))) (h "0dwbpgapwrmqj2naafj3bdcygv7zbxvng86k3kqrzmhfbm0a922r") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11")))) (y #t)))

(define-public crate-rioterm-0.0.20 (c (n "rioterm") (v "0.0.20") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.20") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.20") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "rio-config") (r "^0.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.20") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.20") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)))) (h "0bcrf4c642ps2n6h4jj4byvxa3xhi1s862r8xqsks4xx9ms9idr3") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.21 (c (n "rioterm") (v "0.0.21") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.21") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.21") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "rio-config") (r "^0.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.21") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)))) (h "0ims105hljvh8vaj4qzxhvll8jqfnrc9m1n3szf4ivvv2i3fy5ki") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.22 (c (n "rioterm") (v "0.0.22") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.22") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.22") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "rio-config") (r "^0.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.22") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.22") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"macos\")))") (k 0)))) (h "0j0ryy8654bx5qdgc4734mb0bfarb8aa2d4h39nrmr2048n0jki8") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.23 (c (n "rioterm") (v "0.0.23") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.23") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.23") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rio-config") (r "^0.0.23") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.23") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.23") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os=\"windows\", target_os=\"macos\")))") (k 0)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os=\"windows\", target_os=\"macos\")))") (k 0)))) (h "08gikshga1y1q8d1q7mgjljf94vg9j7d189zl3kxm77f33lis4k0") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.24 (c (n "rioterm") (v "0.0.24") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.24") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "corcovado") (r "^0.0.24") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rio-config") (r "^0.0.24") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.24") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.24") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.0") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(not(any(target_os=\"windows\", target_os=\"macos\")))") (k 0)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "x11-dl") (r "^2") (o #t) (d #t) (t "cfg(not(any(target_os=\"windows\", target_os=\"macos\")))") (k 0)))) (h "0bvblkmih25yjj90qcr0dly5z4j8pfpxnjvhlhrvq2wq835h9px7") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.25 (c (n "rioterm") (v "0.0.25") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.25") (d #t) (k 0)) (d (n "copypasta") (r "^0.10.0") (k 0)) (d (n "corcovado") (r "^0.0.25") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rio-config") (r "^0.0.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.25") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.25") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.2") (f (quote ("rwh_05" "serde"))) (k 0)))) (h "0w3lk26j4mfr4f7qhm8xjm2nd7x4k612sddx8chrwf5626p4fmb0") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.26 (c (n "rioterm") (v "0.0.26") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "copa") (r "^0.0.26") (d #t) (k 0)) (d (n "copypasta") (r "^0.10.0") (k 0)) (d (n "corcovado") (r "^0.0.26") (d #t) (k 0)) (d (n "cursor-icon") (r "^1.0.0") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("ico"))) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.0.0") (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rio-config") (r "^0.0.26") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sugarloaf") (r "^0.0.26") (d #t) (k 0)) (d (n "teletypewriter") (r "^0.0.26") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.3") (f (quote ("rwh_05" "serde"))) (k 0)))) (h "1xnxc2z41gl139dhrx02z6v5b3rn15ygq9srpbidq1fq201l9k67") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.27 (c (n "rioterm") (v "0.0.27") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "copa") (r "^0.0.27") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "copypasta") (r "^0.10.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.27") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cursor-icon") (r "^1.0.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazycell") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-config") (r "^0.0.27") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "softbuffer") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sugarloaf") (r "^0.0.27") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.27") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.62") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.3") (f (quote ("rwh_05" "serde"))) (k 0)))) (h "1jdpqjb30vvfjw8rxx530qjf0s8as05ncmxmqv5mlk35g54kgxyh") (f (quote (("x11" "copypasta/x11" "winit/x11") ("wayland" "copypasta/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11"))))))

(define-public crate-rioterm-0.0.28 (c (n "rioterm") (v "0.0.28") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.28") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "0rxx5lb9mdziij1xzw6bk9lcrar3p6y6ngwkn6w37nnj1zibirxv") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.29 (c (n "rioterm") (v "0.0.29") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.29") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "1nrj7dqljwcm5lh4hj1ldd66j228ik8kxi0f2jn70a7cj0k32l1q") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.30 (c (n "rioterm") (v "0.0.30") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.30") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.30") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.30") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.30") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "0rc23ds0glhsh4zq5prslwldy36sjvsfczygq8zq2lxklcfsdyrs") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.31 (c (n "rioterm") (v "0.0.31") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "132dx6isb3q8500inqrcqqxhgn9775w8g11ylhh7xp2pzrmir15p") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.32 (c (n "rioterm") (v "0.0.32") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.32") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.32") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.32") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.32") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "1z4b28singnqvax3zg1kk97vd0aywcb874qyhq3hf3yxxy87amwf") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.33 (c (n "rioterm") (v "0.0.33") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.33") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.33") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.33") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 0)))) (h "0qlyx9h3611ripp5m2rgpxy5jq1srdpgr8nbcx8131zdivr90gcs") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.34 (c (n "rioterm") (v "0.0.34") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.34") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.34") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.34") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.9") (f (quote ("rwh_05"))) (k 0)))) (h "1g5jzkd1jvdk2w277pg96lrrmryjinc214i7g5f7slpfrxr0ln9b") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.73.0")))

(define-public crate-rioterm-0.0.35 (c (n "rioterm") (v "0.0.35") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.35") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.35") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.35") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.35") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.11") (f (quote ("rwh_05"))) (k 0)))) (h "1dgpbz8pav90s17kczpigrbprp69g2j81w1xcw6972nkc5495in1") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.75.0")))

(define-public crate-rioterm-0.0.36 (c (n "rioterm") (v "0.0.36") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.36") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.36") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "=0.3.0-beta.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "=0.2.0-alpha.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.36") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.36") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.29.15") (f (quote ("rwh_05"))) (k 0)))) (h "0dyjv80dygawcdmb0c1fcblpv5rrddyfmq4lnygcvydhc0a9ki2j") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.75.0")))

(define-public crate-rioterm-0.0.37 (c (n "rioterm") (v "0.0.37") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("Foundation" "Foundation_NSString" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSMenu" "AppKit_NSMenuItem" "AppKit_NSApplication"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.37") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 0)))) (h "1j7d96nbm8s25f5yhazjzsmk3pgs9d7gma585j4f0zwjdkn19f3x") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.77.2")))

(define-public crate-rioterm-0.0.38 (c (n "rioterm") (v "0.0.38") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("Foundation" "Foundation_NSString" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSMenu" "AppKit_NSMenuItem" "AppKit_NSApplication"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.38") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 0)))) (h "1i4l1l0vzbqw0yrp0yhkkbi9jmnimrsjjlzjna76h32hn01cdbyh") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.77.2")))

(define-public crate-rioterm-0.0.39 (c (n "rioterm") (v "0.0.39") (d (list (d (n "ahash") (r "^0.8.2") (f (quote ("std"))) (t "cfg(windows)") (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "copa") (r "^0.0.39") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "corcovado") (r "^0.0.39") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("Foundation" "Foundation_NSString" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSMenu" "AppKit_NSMenuItem" "AppKit_NSApplication"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "objc") (r "^0.2.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rio-backend") (r "^0.0.39") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "teletypewriter") (r "^0.0.39") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_Console" "Win32_Foundation" "Win32_Security" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_System_IO" "Win32_Graphics_Gdi" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 0)))) (h "1l86v7c02lcilf8wl1zgx1lsx59vcgca1gh2gi2jn0ay19wikpyr") (f (quote (("x11" "rio-backend/x11" "winit/x11") ("wayland" "rio-backend/wayland" "winit/wayland" "winit/wayland-dlopen" "winit/wayland-csd-adwaita-crossfont") ("default" "wayland" "x11")))) (r "1.77.2")))

