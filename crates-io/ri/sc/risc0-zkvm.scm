(define-module (crates-io ri sc risc0-zkvm) #:use-module (crates-io))

(define-public crate-risc0-zkvm-0.11.0-rc.1 (c (n "risc0-zkvm") (v "0.11.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "bytemuck") (r "^1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkp") (r "^0.11.0-rc.1") (k 0)) (d (n "risc0-zkvm-circuit") (r "^0.11.0-rc.1") (o #t) (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.11.0-rc.1") (d #t) (k 0)) (d (n "risc0-zkvm-sys") (r "^0.11.0-rc.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "xmas-elf") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)))) (h "1cc8hr3yx9ywbacgbn0lpli825mnpg9kybwr9fdvsh9dwnxfifil") (f (quote (("verify" "circuit" "risc0-zkp/verify") ("std" "risc0-zkp/std" "serde/std") ("pure-prove" "prove" "std") ("prove" "circuit" "risc0-zkp/prove") ("host") ("doc" "std") ("default" "host" "prove" "std" "verify")))) (s 2) (e (quote (("circuit" "dep:risc0-zkvm-circuit"))))))

(define-public crate-risc0-zkvm-0.11.0-rc.3 (c (n "risc0-zkvm") (v "0.11.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "bytemuck") (r "^1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkp") (r "^0.11.0-rc.3") (k 0)) (d (n "risc0-zkvm-circuit") (r "^0.11.0-rc.3") (o #t) (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.11.0-rc.3") (d #t) (k 0)) (d (n "risc0-zkvm-sys") (r "^0.11.0-rc.3") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "xmas-elf") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)))) (h "1d3ywywmhl2xylb1yg68f9cnvsvd7rhssm8gk4x7k51h3x7pf3fa") (f (quote (("verify" "circuit" "risc0-zkp/verify") ("std" "risc0-zkp/std" "serde/std") ("pure-prove" "prove" "std") ("prove" "circuit" "risc0-zkp/prove") ("host") ("doc" "std") ("default" "host" "prove" "std" "verify")))) (s 2) (e (quote (("circuit" "dep:risc0-zkvm-circuit"))))))

(define-public crate-risc0-zkvm-0.11.0-rc.4 (c (n "risc0-zkvm") (v "0.11.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "bytemuck") (r "^1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkp") (r "^0.11.0-rc.4") (k 0)) (d (n "risc0-zkvm-circuit") (r "^0.11.0-rc.4") (o #t) (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.11.0-rc.4") (d #t) (k 0)) (d (n "risc0-zkvm-sys") (r "^0.11.0-rc.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "xmas-elf") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)))) (h "02h6dh2jqf8nhm5h9wp6cp2wcibbl999ja7xm9wc2iyqdbpwd1ph") (f (quote (("verify" "circuit" "risc0-zkp/verify") ("std" "risc0-zkp/std" "serde/std") ("pure-prove" "prove" "std") ("prove" "circuit" "risc0-zkp/prove") ("host") ("doc" "std") ("default" "host" "prove" "std" "verify")))) (s 2) (e (quote (("circuit" "dep:risc0-zkvm-circuit"))))))

(define-public crate-risc0-zkvm-0.11.0 (c (n "risc0-zkvm") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "bytemuck") (r "^1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkp") (r "^0.11.0-rc.4") (k 0)) (d (n "risc0-zkvm-circuit") (r "^0.11.0-rc.4") (o #t) (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.11.0-rc.4") (d #t) (k 0)) (d (n "risc0-zkvm-sys") (r "^0.11.0-rc.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "xmas-elf") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)))) (h "01xxjr9yfcbv98085icr3jc3l4y5408zb7mbkli33yhivw8l3al1") (f (quote (("verify" "circuit" "risc0-zkp/verify") ("std" "risc0-zkp/std" "serde/std") ("pure-prove" "prove" "std") ("prove" "circuit" "risc0-zkp/prove") ("host") ("doc" "std") ("default" "host" "prove" "std" "verify")))) (s 2) (e (quote (("circuit" "dep:risc0-zkvm-circuit"))))))

(define-public crate-risc0-zkvm-0.11.1 (c (n "risc0-zkvm") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "bytemuck") (r "^1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkp") (r "^0.11") (k 0)) (d (n "risc0-zkvm-circuit") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.11") (d #t) (k 0)) (d (n "risc0-zkvm-sys") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "xmas-elf") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"riscv32\"))") (k 0)))) (h "06gwpnmxlg3hyvv1hzikhf8z6rp216v98drl59yka1brq410jpj7") (f (quote (("verify" "circuit" "risc0-zkp/verify") ("std" "risc0-zkp/std" "serde/std") ("pure-prove" "prove" "std") ("prove" "circuit" "risc0-zkp/prove") ("host") ("doc" "std") ("default" "host" "prove" "std" "verify")))) (s 2) (e (quote (("circuit" "dep:risc0-zkvm-circuit"))))))

(define-public crate-risc0-zkvm-1.0.0-rc.2 (c (n "risc0-zkvm") (v "1.0.0-rc.2") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "elf") (r "^0.7") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^2.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^1.0.0-rc.2") (k 0)) (d (n "risc0-zeroio") (r "^1.0.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^0.9") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)))) (h "0f2cy9inw4fg7xg3rim8w534aclg1bia8dc8705ddwzjfxcy7yb2") (f (quote (("verify-only" "risc0-circuit-rv32im/verify-only") ("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std") ("metal") ("insecure_skip_seal") ("dual") ("default" "std") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (y #t) (s 2) (e (quote (("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src"))))))

(define-public crate-risc0-zkvm-0.12.0-rc.1 (c (n "risc0-zkvm") (v "0.12.0-rc.1") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.12.0-rc.1") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.12.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)))) (h "02gj9qqa7l9gr6a8apc855s19ly4vjxpd82m75cdqdhnsqv076sp") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std") ("metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "dep:elf" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src"))))))

(define-public crate-risc0-zkvm-0.12.0-rc.2 (c (n "risc0-zkvm") (v "0.12.0-rc.2") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.12.0-rc.2") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.12.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0-rc.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)))) (h "0pck81xix7q4a7pw5rxs6fgzpvjzwi6g2b4cn53yl0d4w07pwd3h") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std") ("metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "dep:elf" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src"))))))

(define-public crate-risc0-zkvm-0.12.0 (c (n "risc0-zkvm") (v "0.12.0") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.12.0") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0") (k 0)) (d (n "risc0-zkp") (r "^0.12.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)))) (h "1shsnmh6hmiha71nchy59bv57f3haslx99w23vgggirdcln9vqki") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std") ("metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "dep:elf" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src"))))))

(define-public crate-risc0-zkvm-0.13.0 (c (n "risc0-zkvm") (v "0.13.0") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.13.0") (k 0)) (d (n "risc0-core") (r "^0.13.0") (k 0)) (d (n "risc0-zeroio") (r "^0.13.0") (k 0)) (d (n "risc0-zkp") (r "^0.13.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.13.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0r7mi761f8y08sjrjjk29wyb3xsmm5kfnymqqyd0f0hdkacid1s1") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std") ("metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "binfmt" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.14.0-rc.1 (c (n "risc0-zkvm") (v "0.14.0-rc.1") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-core") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-zeroio") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0-rc.1") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "145svwvp5p4l3prngxfhmb0bmpq4d01ac90yzc9idxa7dwisv76r") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std" "num-traits/std") ("metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "binfmt" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.14.0 (c (n "risc0-zkvm") (v "0.14.0") (d (list (d (n "addr2line") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.14.0") (k 0)) (d (n "risc0-core") (r "^0.14.0") (k 0)) (d (n "risc0-zeroio") (r "^0.14.0") (k 0)) (d (n "risc0-zkp") (r "^0.14.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "14adn69di998sgpppdlbcfyh3wzfrvjxxwi92wjhsvf9bfagja3i") (f (quote (("std" "anyhow/std" "risc0-circuit-rv32im/std" "risc0-zeroio/std" "risc0-zkp/std" "serde/std" "num-traits/std") ("metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("insecure_skip_seal") ("dual") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "binfmt" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.15.0-rc.1 (c (n "risc0-zkvm") (v "0.15.0-rc.1") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-core") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0-rc.1") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1aanksah3xcgd3f9xji0b8hpcdhirq99j8qaz1lnxx7hkjbmlzxa") (f (quote (("metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("default" "prove") ("cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.15.0 (c (n "risc0-zkvm") (v "0.15.0") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.15.0") (k 0)) (d (n "risc0-core") (r "^0.15.0") (k 0)) (d (n "risc0-zkp") (r "^0.15.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "08gmsdhcnzlyarzc3g10916jv3hy4s0qzyvmhd8f8m2af6hhds6p") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.15.1 (c (n "risc0-zkvm") (v "0.15.1") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.15.1") (k 0)) (d (n "risc0-core") (r "^0.15.1") (k 0)) (d (n "risc0-zkp") (r "^0.15.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.1") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "09b4bcvb7xmmnx0bpm522jvg747ai09glqb701a0i5s8rp9wnl2d") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.15.2 (c (n "risc0-zkvm") (v "0.15.2") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.15.2") (k 0)) (d (n "risc0-core") (r "^0.15.2") (k 0)) (d (n "risc0-zkp") (r "^0.15.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.2") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1992nngzr3x5lfx1x65a6d22hi8aypk8zqyzn7m8l4bgy6mzcwc7") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.15.3 (c (n "risc0-zkvm") (v "0.15.3") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.15.3") (k 0)) (d (n "risc0-core") (r "^0.15.3") (k 0)) (d (n "risc0-zkp") (r "^0.15.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.3") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1l05l7d59vgca7dsjd3p8s1rnnh8jkq8zr4la0qiclg9qx95x9gh") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.16.0 (c (n "risc0-zkvm") (v "0.16.0") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.2.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "dyn_partial_eq") (r "^0.1") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.16.0") (k 0)) (d (n "risc0-core") (r "^0.16.0") (k 0)) (d (n "risc0-zkp") (r "^0.16.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.0") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0hbl59pbcl8y4mw3g7n9yvfgq6v5ja4z0ikvacs90w79dfbsvqki") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("dual") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bonsai-sdk" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.16.1 (c (n "risc0-zkvm") (v "0.16.1") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.2.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "dyn_partial_eq") (r "^0.1") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.16.1") (k 0)) (d (n "risc0-core") (r "^0.16.1") (k 0)) (d (n "risc0-zkp") (r "^0.16.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.1") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0pmg3v3p5i65p2jj2dgnihzbigcivl958hnrx9z1rrbx3l08m1g5") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("dual") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "binfmt" "dep:bonsai-sdk" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("binfmt" "dep:elf" "std"))))))

(define-public crate-risc0-zkvm-0.17.0 (c (n "risc0-zkvm") (v "0.17.0") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.3.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.11") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.17.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.17.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.17.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.17.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.17.0") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "13vmchcrjr182zrhiy2mq45q554hq7jvqvkrn5s38gfy0lzwfqrk") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("dual") ("disable-dev-mode") ("default" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "dep:addr2line" "dep:bonsai-sdk" "dep:bincode" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:crypto-bigint" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:thiserror" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src"))))))

(define-public crate-risc0-zkvm-0.18.0 (c (n "risc0-zkvm") (v "0.18.0") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.4.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.18.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.18.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.18.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.18.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.18.0") (k 0)) (d (n "rrs-lib") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "18p0dq911jm87jacgg01qyalm672ys22mqhjwikjj6mapi9235zc") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("dual") ("disable-dev-mode") ("default" "client" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rand" "dep:rayon" "dep:rrs-lib" "dep:sha2" "dep:thiserror" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0-alpha.1 (c (n "risc0-zkvm") (v "0.19.0-alpha.1") (d (list (d (n "addr2line") (r "^0.20") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0-alpha.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0-alpha.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-alpha.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-core") (r "^0.19.0-alpha.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-alpha.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "067pxifd3jgc6vcwkrb896hz55m6z8axsi2ljckdc8x5mqdr985d") (f (quote (("metal" "prove" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client" "prove") ("cuda" "prove" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rand" "dep:rayon" "dep:sha2" "dep:thiserror" "dep:typetag" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:prost" "dep:prost-build" "dep:protobuf-src") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0-rc.1 (c (n "risc0-zkvm") (v "0.19.0-rc.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0jwhdybax3y5x7n4q7l2x2m3svbac48fgknz88k61yv9ql552afz") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client" "prove") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0-rc.2 (c (n "risc0-zkvm") (v "0.19.0-rc.2") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.2") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "18gjx82baxjff85gm7rkjl531xzmcx8q382rzlvs0ww24j5y3i4p") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0-rc.3 (c (n "risc0-zkvm") (v "0.19.0-rc.3") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.3") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "168ll92ii656jrrg49xzgvly5pxgrgp1qbz0mzszhs7wcrzjs6gh") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0-rc.4 (c (n "risc0-zkvm") (v "0.19.0-rc.4") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.4") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "15lvpf1pb82mf6ak6xn3f7gh4fxi98c922pyk3khijlj78wvfd40") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.0 (c (n "risc0-zkvm") (v "0.19.0") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0") (k 0)) (d (n "risc0-core") (r "^0.19.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0j1h8prfds4f7bir2c6a07b9x621v3mbkpm2ri8a7c54m251vdfl") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.1-rc.1 (c (n "risc0-zkvm") (v "0.19.1-rc.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.1-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.1-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.1-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.1-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-core") (r "^0.19.1-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1-rc.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1ln06pa13xfdlcb6bcz1f48j67z8nsmbfcpgx6zckghpcmzvl4q1") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.19.1 (c (n "risc0-zkvm") (v "0.19.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.5.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "generic-array") (r "^0.14") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "gimli") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "goblin") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "object") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.19.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.19.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.19.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1") (k 0)) (d (n "risc0-core") (r "^0.19.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "115k0xdl47yzpc6ccl9bbgy8pcqlh7d4zqwv371fyf600br0vy1w") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "num-traits?/std" "risc0-binfmt/std" "risc0-circuit-recursion/std" "risc0-circuit-rv32im/std" "risc0-zkp/std" "serde/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:num-traits" "dep:generic-array" "dep:getrandom" "dep:lazy-regex" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:sha2" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("profiler" "dep:addr2line" "dep:gimli" "dep:object" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:goblin" "dep:rustc-demangle") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.0-rc.1 (c (n "risc0-zkvm") (v "0.20.0-rc.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1j0yq9sss2pc142qcp8lrjnn097hapqrbhr024cqhp5n7ywgd492") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.0-rc.2 (c (n "risc0-zkvm") (v "0.20.0-rc.2") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.2") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0cdlqrw4vg0i2d89494czp366ifjapz5441sv9f20hw6nnvfm823") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("fault-proof") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "fault-proof" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.0-rc.3 (c (n "risc0-zkvm") (v "0.20.0-rc.3") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.3") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "17xydcd6x9p5jzhvxlx6b0bs0y1fs5j9wvyqyw5zwag7bjm3hq9b") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.0-rc.4 (c (n "risc0-zkvm") (v "0.20.0-rc.4") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.0-rc.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.4") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0inj5r4si33l2giy7xi64ji3g7n0hh9sa2w3b4f6vas7p2xdggqd") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.0 (c (n "risc0-zkvm") (v "0.20.0") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.0") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0") (k 0)) (d (n "risc0-zkp") (r "^0.20.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0wnzkz9kjns8pwx126qamj6rks7s0xx7xj2hny93bp5snyijkbnj") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.20.1 (c (n "risc0-zkvm") (v "0.20.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-groth16") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "ark-serialize") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.6.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.20.1") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.20.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.20.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0a9k0w96hdkq10cr6h65jfpp84gxrlf5hrba658kjjw89g5qh9cj") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-binfmt/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "std"))))))

(define-public crate-risc0-zkvm-0.21.0-rc.1 (c (n "risc0-zkvm") (v "0.21.0-rc.1") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.7.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.21.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.21.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-groth16") (r "^0.21.0-rc.1") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.1") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1q487rq857ahvq3hsck911yh8vxiwc1hj4nzk4q0iacr7j074n8m") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "hex/std" "num-traits?/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-0.21.0-rc.2 (c (n "risc0-zkvm") (v "0.21.0-rc.2") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.7.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.21.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.21.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-groth16") (r "^0.21.0-rc.2") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.2") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1hcv157hbb6nrdld78jz1m9cha3n7lydjgb5drzr1ykzjf1f0gvp") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker" "risc0-groth16/docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "hex/std" "num-traits?/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-0.21.0 (c (n "risc0-zkvm") (v "0.21.0") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.7.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "num-derive") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^0.21.0") (k 0)) (d (n "risc0-circuit-recursion") (r "^0.21.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^0.21.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0") (k 0)) (d (n "risc0-groth16") (r "^0.21.0") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.21.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0cllzymcmgnz8yyfzrrdg5fql6i7bwmjq5ra2by6w5w69j1pa4ia") (f (quote (("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker" "risc0-groth16/docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("std" "anyhow/std" "hex/std" "num-traits?/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:crypto-bigint" "dep:elf" "dep:human-repr" "dep:lazy-regex" "dep:num-traits" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-1.0.0-rc.3 (c (n "risc0-zkvm") (v "1.0.0-rc.3") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.8.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "enum-iterator") (r "^2.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (f (quote ("1024"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-circuit-recursion") (r "^1.0.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im") (r "^1.0.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-groth16") (r "^1.0.0-rc.3") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.3") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serde_with") (r "^3.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tabled") (r "^0.15") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "15xjphci9xykdsvlzr8p6clws3gydmqn2zw7rvvn78rzh0bgbx56") (f (quote (("std" "anyhow/std" "hex/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("seq" "risc0-circuit-rv32im/seq") ("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker" "risc0-groth16/docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:elf" "dep:lazy-regex" "dep:nvtx" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rand" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-1.0.0-rc.4 (c (n "risc0-zkvm") (v "1.0.0-rc.4") (d (list (d (n "addr2line") (r "^0.21") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.8.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "enum-iterator") (r "^2.1") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (f (quote ("1024"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost-build") (r "^0.12") (o #t) (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-circuit-recursion") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-circuit-rv32im") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-groth16") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.4") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serde_with") (r "^3.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tabled") (r "^0.15") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1fvg0glxml1q6k10pzwgnf1240vcdg9fwyjlgqcn6hs4sc7bh0j6") (f (quote (("std" "anyhow/std" "hex/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("seq" "risc0-circuit-rv32im/seq") ("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker" "risc0-groth16/docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:elf" "dep:lazy-regex" "dep:nvtx" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:rand" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:prost-build" "dep:protobuf-src" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-1.0.0-rc.5 (c (n "risc0-zkvm") (v "1.0.0-rc.5") (d (list (d (n "addr2line") (r "^0.22") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.8.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "enum-iterator") (r "^2.1") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (f (quote ("1024"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-circuit-recursion") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-circuit-rv32im") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-groth16") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.5") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serde_with") (r "^3.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tabled") (r "^0.15") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0myr34nz15mn05zgsj73r5flcp7jr8pks572234snv15d58sm7kl") (f (quote (("std" "anyhow/std" "hex/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("seq" "risc0-circuit-rv32im/seq") ("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker" "risc0-groth16/docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:elf" "dep:lazy-regex" "dep:nvtx" "dep:prost" "dep:rand" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:tempfile" "std"))))))

(define-public crate-risc0-zkvm-1.0.0-rc.6 (c (n "risc0-zkvm") (v "1.0.0-rc.6") (d (list (d (n "addr2line") (r "^0.22") (f (quote ("rustc-demangle"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bonsai-sdk") (r "^0.8.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "elf") (r "^0.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "enum-iterator") (r "^2.1") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "flate2") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "human-repr") (r "^1.0") (f (quote ("1024"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "prost") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-circuit-recursion") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-circuit-rv32im") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-groth16") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.6") (f (quote ("rust-runtime" "export-getrandom"))) (k 0)) (d (n "rrs-lib") (r "^0.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "semver") (r "^1.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "serde_with") (r "^3.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "sha2") (r "^0.10") (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tabled") (r "^0.15") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tar") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (t "cfg(not(target_os = \"zkvm\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "06xk6vp1r7h3702m31cqbpwhmip8zi981vw0ngh7pbapiwm31hl3") (f (quote (("std" "anyhow/std" "hex/std" "risc0-binfmt/std" "risc0-groth16/std" "risc0-zkp/std" "serde/std" "sha2/std") ("seq" "risc0-circuit-rv32im/seq") ("metal" "prove" "risc0-circuit-recursion/metal" "risc0-circuit-rv32im/metal" "risc0-zkp/metal") ("getrandom" "risc0-zkvm-platform/getrandom") ("dual") ("docker") ("disable-dev-mode") ("default" "client") ("cuda" "prove" "risc0-circuit-recursion/cuda" "risc0-circuit-rv32im/cuda" "risc0-zkp/cuda")))) (s 2) (e (quote (("prove" "client" "dep:addr2line" "dep:bincode" "dep:bytes" "dep:elf" "dep:lazy-regex" "dep:nvtx" "dep:prost" "dep:rand" "dep:rayon" "dep:rustc-demangle" "dep:tempfile" "dep:typetag" "risc0-circuit-recursion/prove" "risc0-circuit-rv32im/prove" "risc0-groth16/prove" "risc0-zkp/prove" "std") ("client" "dep:bincode" "dep:bonsai-sdk" "dep:bytes" "dep:prost" "dep:tempfile" "std"))))))

