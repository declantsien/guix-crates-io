(define-module (crates-io ri sc risc0-circuit-recursion) #:use-module (crates-io))

(define-public crate-risc0-circuit-recursion-0.19.0-rc.1 (c (n "risc0-circuit-recursion") (v "0.19.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "13clx677fka0x86k7crka5dbaqfbyj4fkddyihb831915i4s8idd") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.0-rc.2 (c (n "risc0-circuit-recursion") (v "0.19.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.2") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1fxy81xxwdkcc6lczil9l46j2f3ac7bl35ypq0sbih6rma6gawwy") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.0-rc.3 (c (n "risc0-circuit-recursion") (v "0.19.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.3") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0xfzb7mckzvmnvzdfysjsf9sap335q4bjd7ab5k0d2rilhai859b") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.0-rc.4 (c (n "risc0-circuit-recursion") (v "0.19.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.4") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0ldk02kn480bgrk73s9csbpmw24f8ijj0icydskh5b2xak2vfv10") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.0 (c (n "risc0-circuit-recursion") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0") (k 0)) (d (n "risc0-zkp") (r "^0.19.0") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "18dwj1an9p44ky0l9wm3cfbkjkpnzd0m8mhhdrah83q74x7vsjwj") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.1-rc.1 (c (n "risc0-circuit-recursion") (v "0.19.1-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.1-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.1-rc.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0nz6hck0bxamixyg9scgbxfwk3rx80d8bfg9qv9h0cqf89h6vl5j") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.19.1 (c (n "risc0-circuit-recursion") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("verify"))) (o #t) (d #t) (k 1)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.19.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0ah10gjf6bzix5n5q0b838xh47xkb30mvd7zcj5spapxx487wm4p") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.0-rc.1 (c (n "risc0-circuit-recursion") (v "0.20.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("zstd"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0sl0512dxfl63cb3kijnwfp5ri66ckvi17xmg6rg1kg662y77iii") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.0-rc.2 (c (n "risc0-circuit-recursion") (v "0.20.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.2") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0qszrx6q1k63f13858di46sarbhg85q6r6rjwv2h3jq3v94hri8v") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.0-rc.3 (c (n "risc0-circuit-recursion") (v "0.20.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.3") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0iy92v5xwjrwazcg360p77xfrnnjzyalfsyb13hvyp8mhy73ql8p") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.0-rc.4 (c (n "risc0-circuit-recursion") (v "0.20.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.4") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0dljvvxpqzpz22v55z0zpy03nc6hpfz7sks79n4n629m66n1q3c5") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.0 (c (n "risc0-circuit-recursion") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0") (k 0)) (d (n "risc0-zkp") (r "^0.20.0") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1kpyrv7fs00f9lrpc4qi7hcphik3xisycw3q4r3a7rdm6s5x4kj0") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.20.1 (c (n "risc0-circuit-recursion") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.20.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1fjf80hbxpcnmz6bj8q0ncs9valay21nlkmknjvfg819k433b65w") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.21.0-rc.1 (c (n "risc0-circuit-recursion") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.21.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1ld5g5mb07bx8a9lk99yfmhnjzm3f06k8kax0qi0mz406gq9ngmm") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.21.0-rc.2 (c (n "risc0-circuit-recursion") (v "0.21.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.21.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.2") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0nbpwql25m4lpmf40r2bicq5557ad4d9m12aq38bcbyn95xs23sy") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-0.21.0 (c (n "risc0-circuit-recursion") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^0.21.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0") (k 0)) (d (n "risc0-zkp") (r "^0.21.0") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0839kkrkia00dfr7g0xga9qghc9ka7hxbqagjyx83bbkbzissg54") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0-rc.3 (c (n "risc0-circuit-recursion") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.3") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "12g23qmgkavgb57vjdsfspsf1f2s2ig2dgf125pag5xhn459pb25") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0-rc.4 (c (n "risc0-circuit-recursion") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.4") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1lwcp6y269i3svqhhg38f97mz1kp4dl5259m7bv9klxwxwy0ywwr") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0-rc.5 (c (n "risc0-circuit-recursion") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0-rc.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.5") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^1.2") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "1ija0ci33vxqgy59x8h9xfsjb6blb9wm016nxslm0dmvk6l5rgzl") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0-rc.6 (c (n "risc0-circuit-recursion") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0-rc.6") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.6") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.6") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^2.0") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "0cfssbcabkbgp5isv43jprwjlai2l6snjck4gh6z7vws30mj9pgc") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0-rc.7 (c (n "risc0-circuit-recursion") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0-rc.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.7") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^2.0") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "15g25xsbw6fki5l8nv69n98jq21j1np44slb21wnbnp6wj80d7s5") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.0 (c (n "risc0-circuit-recursion") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0") (k 0)) (d (n "risc0-sys") (r "^1.0.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^2.0") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "147gqyn5dilk5p546r5nsvs6smk8fvmhadyg8hy8ixpmvrmfgcrd") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-recursion-1.0.1 (c (n "risc0-circuit-recursion") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "downloader") (r "^0.2") (f (quote ("rustls-tls" "verify"))) (o #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 1)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-recursion-sys") (r "^1.0.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.1") (k 0)) (d (n "risc0-sys") (r "^1.0.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-forest") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "zip") (r "^2.0") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)))) (h "185rfg0bjvl6lwsfv9zcml6ircjn0xmfmfh5awp2f84l0w3yl4jw") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:downloader" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "dep:zip" "risc0-zkp/prove" "risc0-circuit-recursion-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-recursion-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-recursion-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

