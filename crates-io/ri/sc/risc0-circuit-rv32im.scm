(define-module (crates-io ri sc risc0-circuit-rv32im) #:use-module (crates-io))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.1 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "07vyr4z95jnlfxm22bgkqmpvljz95x6n17axnnq285ad1ih4yvz7") (f (quote (("verify-only") ("test") ("std" "risc0-zkp/std") ("default" "std" "test")))) (s 2) (e (quote (("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.2 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0lwcdyxxfk8x7sff4mjrbxl21nf5gfas7vw58a2kahq40b4xyiic") (f (quote (("verify-only") ("test") ("std" "risc0-zkp/std") ("default" "std" "test")))) (s 2) (e (quote (("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.12.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.12.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.12.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "04j5rknivbfkpk01i3068cg075pxxzayq0lal6gngc6bh80zc0iv") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "std") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.12.0-rc.2 (c (n "risc0-circuit-rv32im") (v "0.12.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.12.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0-rc.2") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0l08c95sjphib3iymbjfmmw6kp5y2pb6x0krpbvwhid7ij4805gm") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "std") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.12.0 (c (n "risc0-circuit-rv32im") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.12.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.12.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1rvrnrd3p17x6vy6w9q3kiwmcirdjh1jgzgsliq3p0prjscqgdda") (f (quote (("test") ("std" "risc0-zkp/std") ("default" "prove" "test")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "std") ("metal" "dep:metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.13.0 (c (n "risc0-circuit-rv32im") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.13.0") (k 0)) (d (n "risc0-sys") (r "^0.13.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.13.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.13.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "15098f73b5cjjygcixsl74b6hs2g70plzhz6v8li5nfsc0zz770w") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "prove" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.14.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.14.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.14.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.14.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1l58pbrjkv11k0r05f92mdp11rw578vhraaqcql64z5sfdyza0f7") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.14.0 (c (n "risc0-circuit-rv32im") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.14.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.14.0") (k 0)) (d (n "risc0-sys") (r "^0.14.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.14.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "15mbpl3h632slppwx7ikcm529hdrhxdl3mkx137qvfd857pgghq3") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.15.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.15.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.15.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.15.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1qrwi6g4y9q8i12hyskd46sxmwys64f0m04j4j521sjd20g93g1x") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.15.0 (c (n "risc0-circuit-rv32im") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.15.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.0") (k 0)) (d (n "risc0-sys") (r "^0.15.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.15.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0ffgs3aa4iffpjipzs8wymb9rml15yhx47s822305xjhnwk70ygw") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.15.1 (c (n "risc0-circuit-rv32im") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.15.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.1") (k 0)) (d (n "risc0-sys") (r "^0.15.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.15.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0s09pn4xl1pkrndll182mjrh1kgd32rv8lddcfhfjnwxqjkvrlvd") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.15.2 (c (n "risc0-circuit-rv32im") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.15.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.2") (k 0)) (d (n "risc0-sys") (r "^0.15.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.15.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.2") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "07pz5bs87w9siw8fkpz4cpm1ngsfidhqdqpdspnnjlszvvrxpapx") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.15.3 (c (n "risc0-circuit-rv32im") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.15.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.3") (k 0)) (d (n "risc0-sys") (r "^0.15.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.15.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.3") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0zgvpchb1drpy6xx5jgm3a4w7f8arr4ydm2p4v598j0571b80xhd") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.16.0 (c (n "risc0-circuit-rv32im") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.16.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.16.0") (k 0)) (d (n "risc0-sys") (r "^0.16.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.16.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "13ygs0g7f9g6pl61bwp885r85mrm81zl2j93hv7wjngincv55nva") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.16.1 (c (n "risc0-circuit-rv32im") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.16.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.16.1") (k 0)) (d (n "risc0-sys") (r "^0.16.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.16.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1ivjp8ly4jw4pllff90wjccmlcpakz8fmlxyy01gacik2wvnl1p3") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.17.0 (c (n "risc0-circuit-rv32im") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.17.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.17.0") (k 0)) (d (n "risc0-sys") (r "^0.17.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.17.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.17.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1128q7xbhc2mgkh3lvg79wppj9pb0qvdwllggfc1xgz489g6iczv") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.18.0 (c (n "risc0-circuit-rv32im") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.18.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.18.0") (k 0)) (d (n "risc0-sys") (r "^0.18.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.18.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.18.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "05bldlnavnb49b180bp83s7i7s6bq2sq4rlvrk599p1g2li05q38") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0-alpha.1 (c (n "risc0-circuit-rv32im") (v "0.19.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0-alpha.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-sys") (r "^0.19.0-alpha.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-alpha.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0jcw3hj9b2splkx1wvfi69hs3gc2if90hgmn7h3vwakrvma1xmvx") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.19.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1rsa1ww09wq154dm9r78jsw08s1qkih5kfm99my4k5wdkv5xgplr") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0-rc.2 (c (n "risc0-circuit-rv32im") (v "0.19.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.2") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1spch7lkn3q8klq8msy4x1q5iib6qw1cvp1kyk7ilxqav2inr411") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0-rc.3 (c (n "risc0-circuit-rv32im") (v "0.19.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.3") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0cmhbnskxf3zijwvxd5dhrqikivripf6i3yifxfr1r2s8fkyqvd1") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0-rc.4 (c (n "risc0-circuit-rv32im") (v "0.19.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.4") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1xznw17gwriff9ympi0g6fm3nviml8l0pjvmvmpjx5ycfjmis7z7") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.0 (c (n "risc0-circuit-rv32im") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0") (k 0)) (d (n "risc0-zkp") (r "^0.19.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0gxlpcb2m14xlzi02qkc51fpk5r77z4wxv32il0khdnpjdj4pi2a") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.1-rc.1 (c (n "risc0-circuit-rv32im") (v "0.19.1-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.1-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1npf7zmyq3g342s5r5lxhq1vy7c51d2xhfw5h1ldb43g79yggcm0") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.19.1 (c (n "risc0-circuit-rv32im") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.19.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1") (k 0)) (d (n "risc0-zkp") (r "^0.19.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0bnyvhlr2bnify1ib7fpbrqfh8rnzhk8gxh83bp29flcn40rs9hs") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.20.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1qrh0idibh5jz22h615dbc3xmsyhd488llw0777vcsd2pl7kf7f9") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.0-rc.2 (c (n "risc0-circuit-rv32im") (v "0.20.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.2") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1fdsc4f7yaykddvdpk0y8qal215m9j1a2ql03da7mkicxw6ara9m") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.0-rc.3 (c (n "risc0-circuit-rv32im") (v "0.20.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.3") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0bd19vcmi8idl49lgsnaz3hcgcxbjl3ldqd40l0w907rjsgr3y61") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.0-rc.4 (c (n "risc0-circuit-rv32im") (v "0.20.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.4") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "190npp8s4xkrycbk0a85gn3g7wr2912mq3csp3k1idrn1dbpfwzs") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.0 (c (n "risc0-circuit-rv32im") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0") (k 0)) (d (n "risc0-zkp") (r "^0.20.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0aac9vhvdhq71qbpg81iv6w29ynija6pf9pr0pffzysvr3rr0j6c") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.20.1 (c (n "risc0-circuit-rv32im") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.20.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.1") (k 0)) (d (n "risc0-zkp") (r "^0.20.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0l5ndp20x7rna9m52wp5zmykjd5xynccybq6krvhhkdpk9ssl76b") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.21.0-rc.1 (c (n "risc0-circuit-rv32im") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.21.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.1") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0rfgafnrrad5933b879f2l4xspgs1mxh924kia9sr3gs7bh0lxv4") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.21.0-rc.2 (c (n "risc0-circuit-rv32im") (v "0.21.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.21.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.2") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1lp7c4nywxyxipqsnk9di1irj3g0sqdkq3mj9lygwqpvzh5hdq1w") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-0.21.0 (c (n "risc0-circuit-rv32im") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^0.21.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0") (k 0)) (d (n "risc0-zkp") (r "^0.21.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0") (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1nvda9vfvm674bs8kdzki3wvfsccav4pjl616xyjld3b2j4hji1i") (f (quote (("std" "risc0-zkp/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:rand" "dep:rayon" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.3 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "1arrbvyvjgxv4p9w07z23ihn56gzclbp2vp9cp6105xi6fqhznhp") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.4 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.27") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "0p57jsx6ghqip2d3i9cq7xi3azgl1rky5vpif8f5zq2g8bmhnb87") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.5 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0-rc.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "1fvxnh0p5gqybcfh2z2cs8jc7cbjnpxnwnpaw0k0ikycimgv28gc") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.6 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0-rc.6") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.6") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "0yjcfijrjdfq5ix2d63gjs12nlsqr0ad1xb141g4pb7k1qzqnl3v") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0-rc.7 (c (n "risc0-circuit-rv32im") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0-rc.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.7") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "1yi0rjzpdvzkjcfd9sh2ff340b8yk2yl3kwd1b9zqvc5pn68dq9m") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.0 (c (n "risc0-circuit-rv32im") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.0") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0") (k 0)) (d (n "risc0-sys") (r "^1.0.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "0q0k943yj0yl9pk9sq9d7ajwzh98d7klq2nz7n1rpjvid3bcdazn") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

(define-public crate-risc0-circuit-rv32im-1.0.1 (c (n "risc0-circuit-rv32im") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crossbeam") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "crypto-bigint") (r "^0.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "derive-debug") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "lazy-regex") (r "^3.1") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-binfmt") (r "^1.0.1") (k 0)) (d (n "risc0-circuit-rv32im-sys") (r "^1.0.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.1") (k 0)) (d (n "risc0-sys") (r "^1.0.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkp") (r "^1.0.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "1l61zqbyqsalkr4zsm1jx6kzvlvwvjcrri1myp3bwncfzqx7pxay") (f (quote (("std" "risc0-zkp/std" "serde/std") ("seq" "prove") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:bytemuck" "dep:cfg-if" "dep:crossbeam" "dep:crypto-bigint" "dep:derive-debug" "dep:lazy-regex" "dep:nvtx" "dep:rand" "dep:rayon" "dep:risc0-sys" "dep:sha2" "risc0-zkp/prove" "risc0-circuit-rv32im-sys" "std") ("metal" "dep:metal" "prove" "risc0-circuit-rv32im-sys/metal" "risc0-sys?/metal" "risc0-zkp/metal") ("cuda" "dep:cust" "prove" "risc0-circuit-rv32im-sys/cuda" "risc0-sys?/cuda" "risc0-zkp/cuda" "std"))))))

