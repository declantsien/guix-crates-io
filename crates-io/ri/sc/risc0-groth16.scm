(define-module (crates-io ri sc risc0-groth16) #:use-module (crates-io))

(define-public crate-risc0-groth16-0.21.0-rc.1 (c (n "risc0-groth16") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.1") (o #t) (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0bd1vr24mrkssb7dwqkdlyvplmad7q9yc4cyl603iv0bjpcyvhb6") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:bytemuck" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-0.21.0-rc.2 (c (n "risc0-groth16") (v "0.21.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.2") (o #t) (k 0)) (d (n "risc0-zkp") (r "^0.21.0-rc.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0fwnz7fx8z3z2xga4n24pfkw5vhb02r2wdy4r8i18kig286hr1wg") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:bytemuck" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-0.21.0 (c (n "risc0-groth16") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-core") (r "^0.21.0") (o #t) (k 0)) (d (n "risc0-zkp") (r "^0.21.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0dlayqfwy1vzd1mbvrbmg59mlbwsk092i2r7nri3i71zms6rn7ns") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:bytemuck" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-1.0.0-rc.3 (c (n "risc0-groth16") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.3") (o #t) (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1bbk2yh8kylbgw4zn3xdp33mb248zcfkmjnrhz4zg1nmnlaiw75n") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:bytemuck" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-1.0.0-rc.4 (c (n "risc0-groth16") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.4") (o #t) (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0n35x02h0pr6xjvq3dkphcy8p97428571vp46i0lsvpg3zpww030") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-1.0.0-rc.5 (c (n "risc0-groth16") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.5") (o #t) (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1s7h0ig356bgngqi7ys9hq2lngw3rif12p0hxa8qnxs8369q6d1i") (f (quote (("docker" "prove") ("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-1.0.0-rc.6 (c (n "risc0-groth16") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.6") (o #t) (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "12j12nfnillixr8rinyx3nyilk66247yxb9y1ns9ycas1988j3yg") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

(define-public crate-risc0-groth16-1.0.0-rc.7 (c (n "risc0-groth16") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "ark-bn254") (r "^0.4") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4") (d #t) (k 0)) (d (n "ark-groth16") (r "^0.4") (k 0)) (d (n "ark-serialize") (r "^0.4") (k 0)) (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "risc0-binfmt") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.7") (o #t) (k 0)) (d (n "risc0-zkp") (r "^1.0.0-rc.7") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1lgpfq9qb7ybl78wmh7z2q229xq1s8dga3y6rb08i1qnc2arl2i7") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow/std" "ark-bn254/std" "ark-groth16/std" "ark-serialize/std" "hex/std" "num-bigint/std" "num-traits?/std" "risc0-zkp/std" "serde/std") ("prove" "dep:num-traits" "dep:risc0-core" "dep:serde_json" "dep:tempfile" "dep:tracing" "risc0-zkp/prove" "std"))))))

