(define-module (crates-io ri sc risc0-zkp) #:use-module (crates-io))

(define-public crate-risc0-zkp-0.11.0-rc.1 (c (n "risc0-zkp") (v "0.11.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "1lkn4xm0q794hvizq9vs80s0k1a1mdf9zdycxqgq73lk9vpf382m") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-0.11.0-rc.2 (c (n "risc0-zkp") (v "0.11.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "0fq41yxws2l5j18klyn7a962q58ljl3hrmxvnjf8q4sl7vbg0ml3") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-0.11.0-rc.3 (c (n "risc0-zkp") (v "0.11.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "1ldzfxcfpsxcp8gi15a8qn9kgrnnp5r8cf15wa3ycnavkh66ci4g") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-0.11.0-rc.4 (c (n "risc0-zkp") (v "0.11.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "1lx7b8jz6pyzlnr8lb2wrh9a1fk3wi2w6bcdqkwpqvm0rcczdf97") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-0.11.0 (c (n "risc0-zkp") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "1qfknb15107drx77f709jsmdfl43jrdi70x8jw975j9ws7mw9fz7") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-0.11.1 (c (n "risc0-zkp") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "array-init") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)))) (h "1bzf0h5fwqq96brnq1iksq7340p84xa152b3dlb1vlf3sirar4dh") (f (quote (("verify") ("std") ("default" "prove" "std" "verify")))) (s 2) (e (quote (("prove" "dep:array-init" "hal" "rand/std" "rand/std_rng") ("hal" "dep:downcast-rs" "dep:ndarray" "dep:rayon"))))))

(define-public crate-risc0-zkp-1.0.0-rc.1 (c (n "risc0-zkp") (v "1.0.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zeroio") (r "^1.0.0-rc.1") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0yy9lmnfnh7mhfcv6xndi451j6n1sip84n0pn9r9czyf46migsgk") (f (quote (("std" "anyhow/std" "risc0-zeroio/std" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive"))))))

(define-public crate-risc0-zkp-1.0.0-rc.2 (c (n "risc0-zkp") (v "1.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (t "cfg(target_os = \"zkvm\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zeroio") (r "^1.0.0-rc.2") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "073xv1543sq0rrdqggk0bwfiriarj7hwfyxmvi1zmnbzfnfhpi6s") (f (quote (("std" "anyhow/std" "risc0-zeroio/std" "rand/std" "rand/std_rng") ("default" "std")))) (l "risc0-zkp") (s 2) (e (quote (("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive"))))))

(define-public crate-risc0-zkp-0.12.0-rc.1 (c (n "risc0-zkp") (v "0.12.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0-rc.1") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0g8mfb6zz2fwkycwsg261d2nybsk04yyzwnpx8blv52mmc0jkc8l") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (l "risc0-zkp") (s 2) (e (quote (("prove" "dep:ndarray" "dep:rand" "dep:rayon" "std") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive"))))))

(define-public crate-risc0-zkp-0.12.0-rc.2 (c (n "risc0-zkp") (v "0.12.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0-rc.2") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1n97brhnhx3wb3zf4hs9ln6bn67fhzn5g3xwxwxh3z4d79s86gsr") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (l "risc0-zkp") (s 2) (e (quote (("prove" "dep:ndarray" "dep:rand" "dep:rayon" "std") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive"))))))

(define-public crate-risc0-zkp-0.12.0 (c (n "risc0-zkp") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zeroio") (r "^0.12.0") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1956sifiirsym30agpim8wingcg9px8g3zrzr76qq5k756zyz157") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (l "risc0-zkp") (s 2) (e (quote (("prove" "dep:ndarray" "dep:rand" "dep:rayon" "std") ("metal" "dep:metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive"))))))

(define-public crate-risc0-zkp-0.13.0 (c (n "risc0-zkp") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.13.0") (k 0)) (d (n "risc0-sys") (r "^0.13.0") (o #t) (k 0)) (d (n "risc0-zeroio") (r "^0.13.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.13.0") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1y6hf7sgafh5cslyi5bmm0xf7crxa7zhq2cxcvvksxv8vgsfcsjr") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ndarray" "dep:rand" "dep:rayon" "std" "risc0-sys") ("metal" "dep:metal" "risc0-sys/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.14.0-rc.1 (c (n "risc0-zkp") (v "0.14.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.14.0-rc.1") (o #t) (k 0)) (d (n "risc0-zeroio") (r "^0.14.0-rc.1") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0-rc.1") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1xsxhj5qq4895qbngzsdag3ylyikpkk8blaal7hd2i9a187ichcg") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "risc0-sys/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.14.0 (c (n "risc0-zkp") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fil-rustacuda") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.14.0") (k 0)) (d (n "risc0-sys") (r "^0.14.0") (o #t) (k 0)) (d (n "risc0-zeroio") (r "^0.14.0") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.14.0") (k 0)) (d (n "rustacuda_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustacuda_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "17555j3r0l0p48p3zycw7kibzxb1h6flnkpv26s28dk2xqw34g37") (f (quote (("std" "anyhow/std" "risc0-zeroio/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "risc0-sys/metal") ("cuda" "dep:fil-rustacuda" "dep:rustacuda_core" "dep:rustacuda_derive" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.15.0-rc.1 (c (n "risc0-zkp") (v "0.15.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.15.0-rc.1") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "090lhh88cbmlbc6babqrvph5hdycab17gyaairnplvilfig9sd22") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.15.0 (c (n "risc0-zkp") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.0") (k 0)) (d (n "risc0-sys") (r "^0.15.0") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1rb5kb1ysyn2g1p7xbxpcz045w9m8asnbggyzhihbzh304r8j0ya") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.15.1 (c (n "risc0-zkp") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.1") (k 0)) (d (n "risc0-sys") (r "^0.15.1") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "04pskslj3lmxsa6281h272ch9gv1vi010fb7c0qn7indmzcljh6b") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.15.2 (c (n "risc0-zkp") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.2") (k 0)) (d (n "risc0-sys") (r "^0.15.2") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "027wlgb95rbn6a2526yafi8i22gx2n7fiyc27zk8nlgi52rz0pj2") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.15.3 (c (n "risc0-zkp") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.15.3") (k 0)) (d (n "risc0-sys") (r "^0.15.3") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.15.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "05kgw8dbhfk2xfzyn09vmzin5xk6m39jwj4v9vwlfnqn3p5qkrr9") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.16.0 (c (n "risc0-zkp") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.16.0") (k 0)) (d (n "risc0-sys") (r "^0.16.0") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0fjsy5dkp4h1xrx2a8p1bg2sxr84xvqh2hib6h3jw9krkdw4mifc") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.16.1 (c (n "risc0-zkp") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.16.1") (k 0)) (d (n "risc0-sys") (r "^0.16.1") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.16.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1yjkvmf9hr5286qcyylsd7x23ljb1bmzzwnpbqgnxfwzcd61bl2g") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.17.0 (c (n "risc0-zkp") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.17.0") (k 0)) (d (n "risc0-sys") (r "^0.17.0") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.17.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "14r9lmap9dbwsyvlhfbrivrhp3v5ksbc00nqwxw32mxlvz258d6x") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.18.0 (c (n "risc0-zkp") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.18.0") (k 0)) (d (n "risc0-sys") (r "^0.18.0") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.18.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "19bgab04hifk3cv35b5f6y0xmwzrk0qhi4afky9j8y0ppck6j5i8") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0-alpha.1 (c (n "risc0-zkp") (v "0.19.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-alpha.1") (k 0)) (d (n "risc0-sys") (r "^0.19.0-alpha.1") (o #t) (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-alpha.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0z67l6b99slfz7ah13g7d0mjm6czmcp18amfqp2xlhzh7d5hw79r") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0-rc.1 (c (n "risc0-zkp") (v "0.19.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.19.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1w1xsivbklkyrii4vdm02jqkhag5233ha0bfnsvicj9shyifmxbp") (f (quote (("std" "anyhow/std") ("default" "prove")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0-rc.2 (c (n "risc0-zkp") (v "0.19.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.2") (k 0)) (d (n "risc0-sys") (r "^0.19.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1nqk39m51af78yi5llxq9234ywr89r727ymsfmzp0382y9ixmb6l") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0-rc.3 (c (n "risc0-zkp") (v "0.19.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.3") (k 0)) (d (n "risc0-sys") (r "^0.19.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0lpmr09frc5aly9p2nm3fplk89fpsrzrqzspi16gwb6zmcys82wa") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0-rc.4 (c (n "risc0-zkp") (v "0.19.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0-rc.4") (k 0)) (d (n "risc0-sys") (r "^0.19.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0-rc.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "09p230hl9vm23v37vvhz0nm6nc58j90gslp5fcg9075p76jmphs9") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.0 (c (n "risc0-zkp") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.0") (k 0)) (d (n "risc0-sys") (r "^0.19.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0gdcqbsxxjp7niwcnb8adylwryaq6qq6jvy4w7jlbxjjxi3z1f6i") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.1-rc.1 (c (n "risc0-zkp") (v "0.19.1-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.19.1-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "09745vfwn4rp8pmpmhgag22n9w4f82b5gv6rrgbglsbadi4v4ll4") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.19.1 (c (n "risc0-zkp") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.19.1") (k 0)) (d (n "risc0-sys") (r "^0.19.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.19.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "10mxj34m4hhlywlapgvdlrxpw42qqdv3nmhyxnd3yzc4ryhb3aym") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.0-rc.1 (c (n "risc0-zkp") (v "0.20.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.20.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0daadvrhzjbzm6dpan9y701s0kpjkr1hm7zq7kn25piavqkl9zm4") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.0-rc.2 (c (n "risc0-zkp") (v "0.20.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.2") (k 0)) (d (n "risc0-sys") (r "^0.20.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1vkcb1g9ii75k691m7yp9mm78aki61w7mpl30mpz0d8azyagcp5c") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.0-rc.3 (c (n "risc0-zkp") (v "0.20.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.3") (k 0)) (d (n "risc0-sys") (r "^0.20.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0nqc1fq0a137n4hw0gmgnqvcvpd7h5cyspa3wbwznq178wmsxkid") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.0-rc.4 (c (n "risc0-zkp") (v "0.20.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0-rc.4") (k 0)) (d (n "risc0-sys") (r "^0.20.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0-rc.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0ar8qkwiz6418l7ndzvh28wr5wwg8dgz6zqrym20skv4phwk4xyq") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.0 (c (n "risc0-zkp") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.0") (k 0)) (d (n "risc0-sys") (r "^0.20.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "12vvkvnqh01z86fmcri6sr63vjc0xd7m1pzrza19mv2af4ybnlsf") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.20.1 (c (n "risc0-zkp") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.20.1") (k 0)) (d (n "risc0-sys") (r "^0.20.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.20.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "010cp655zwjbpxlvsx77s25zvx25c9a35lmmxfnsz9a093h5f2p2") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.21.0-rc.1 (c (n "risc0-zkp") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.1") (k 0)) (d (n "risc0-sys") (r "^0.21.0-rc.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0zpyf4pymi3vijz9dh5p0pjmxixjf2k9xamhhh9iyi3kv7mw9d1h") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.21.0-rc.2 (c (n "risc0-zkp") (v "0.21.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0-rc.2") (k 0)) (d (n "risc0-sys") (r "^0.21.0-rc.2") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0-rc.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0sp3x3sjgqpj9r4ry2nvy77h7z4mn65fmzv4dvb9gvz0yl034x7s") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-0.21.0 (c (n "risc0-zkp") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "metal") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^0.21.0") (k 0)) (d (n "risc0-sys") (r "^0.21.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^0.21.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0ycb174b9s8qv50z35zjnsx9qrnghny9kih9k1zamjjffigh6sxr") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:lazy_static" "dep:ndarray" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0-rc.3 (c (n "risc0-zkp") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "metal") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.3") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.3") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0cl11akak8inbdz88n3w7vsbcqdliiqi5n67da0vpak4v8v0i8a4") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0-rc.4 (c (n "risc0-zkp") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "metal") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.4") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.4") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "01gs367ja77y6kyd2zdcvvihkc3xp0my52wpq36j108gi2n1p8gs") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0-rc.5 (c (n "risc0-zkp") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.5") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.5") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "02c5kkhfvwbx1rgkp4li8mwlzd3a1iwij9hfmv6c5zrs2irkv2j8") (f (quote (("std" "anyhow/std") ("default")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0-rc.6 (c (n "risc0-zkp") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.6") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.6") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0hblglq63f4ywfsqjia4cl07y3qkvvmmd3whmw5f49pzwl7qqwq5") (f (quote (("std" "anyhow/std") ("default") ("circuit_debug")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0-rc.7 (c (n "risc0-zkp") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0-rc.7") (k 0)) (d (n "risc0-sys") (r "^1.0.0-rc.7") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0-rc.7") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "04q5wjxdq18f545yzdhi0wr68y10fk82v3yw3swvgqs22vzy964b") (f (quote (("std" "anyhow/std") ("default") ("circuit_debug")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.0 (c (n "risc0-zkp") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.0") (k 0)) (d (n "risc0-sys") (r "^1.0.0") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "00fykzsvcqq3cg8zny43fws091fnqsjsslc21q8hd62w5pdla7ms") (f (quote (("std" "anyhow/std") ("default") ("circuit_debug")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

(define-public crate-risc0-zkp-1.0.1 (c (n "risc0-zkp") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cust") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("oid"))) (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive" "bits"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "metal") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "nvtx") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-core") (r "^1.0.1") (k 0)) (d (n "risc0-sys") (r "^1.0.1") (o #t) (t "cfg(not(target_os = \"zkvm\"))") (k 0)) (d (n "risc0-zkvm-platform") (r "^1.0.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("compress"))) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1x7n3mg0zm0f4yr9a51fimkrxdnsa6qx9ri60p61rlzjms02fd2k") (f (quote (("std" "anyhow/std") ("default") ("circuit_debug")))) (s 2) (e (quote (("prove" "dep:ff" "dep:ndarray" "dep:nvtx" "dep:parking_lot" "dep:rand" "dep:rayon" "risc0-sys" "std") ("metal" "dep:metal" "prove" "risc0-sys/metal") ("cuda" "dep:cust" "prove" "risc0-sys/cuda"))))))

