(define-module (crates-io ri ic riichi) #:use-module (crates-io))

(define-public crate-riichi-0.1.0 (c (n "riichi") (v "0.1.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanovec") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "pretty_assertions_sorted") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "riichi-decomp") (r "^0.1.0") (d #t) (k 0)) (d (n "riichi-elements") (r "^0.1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "type-layout") (r "^0.2.0") (d #t) (k 2)))) (h "1a3906f5had7mn15dad1r2fdhdnjr0x0lqmws79vh0ypiwjsp781") (f (quote (("static-lut" "riichi-decomp/static-lut") ("default" "serde" "tenhou-log-json")))) (s 2) (e (quote (("tenhou-log-json" "serde" "dep:rand" "dep:regex") ("serde" "dep:serde" "dep:serde-big-array" "dep:serde_json" "dep:serde_tuple" "dep:serde_with" "riichi-elements/serde" "riichi-decomp/serde"))))))

