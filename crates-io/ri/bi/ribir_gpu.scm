(define-module (crates-io ri bi ribir_gpu) #:use-module (crates-io))

(define-public crate-ribir_gpu-0.0.0 (c (n "ribir_gpu") (v "0.0.0") (d (list (d (n "colored") (r "^1.9.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "lyon_tessellation") (r "^1.0.1") (d #t) (k 0)) (d (n "png") (r "^0.17.5") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.0") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.0") (d #t) (k 0)) (d (n "ribir_text") (r "^0.0.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 2)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "155ra19ja3kk80crk1cl0hfhaa67ibw2wd24cczlwkb81ayvahdl") (f (quote (("wgpu_gl" "wgpu" "raw-window-handle" "futures") ("ui_window") ("test_gpu"))))))

(define-public crate-ribir_gpu-0.0.1-alpha.1 (c (n "ribir_gpu") (v "0.0.1-alpha.1") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.1-alpha.1") (d #t) (k 0)) (d (n "ribir_dev_helper") (r "^0.0.1-alpha.1") (d #t) (k 2)) (d (n "ribir_geom") (r "^0.0.1-alpha.1") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.1-alpha.1") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.0-alpha.3") (d #t) (k 0)))) (h "1wblks2h44cz57r72bz3jwambafnvf2rzssg01n60r2f84v38xi6") (s 2) (e (quote (("wgpu" "dep:wgpu" "futures" "ribir_dev_helper/wgpu"))))))

(define-public crate-ribir_gpu-0.0.1-alpha.2 (c (n "ribir_gpu") (v "0.0.1-alpha.2") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.1-alpha.2") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.0.1-alpha.2") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.1-alpha.2") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.0-alpha.3") (d #t) (k 0)))) (h "1vc8702ia6h2dc7fyhirb3pkva8nadzi1rf9iwyr1rr4d3dmivc6") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.0.1-alpha.3 (c (n "ribir_gpu") (v "0.0.1-alpha.3") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.1-alpha.3") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.0.1-alpha.3") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.1-alpha.3") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.0-alpha.3") (d #t) (k 0)))) (h "057vj03qsh4jdc6z5ydagr69bn89qc8iygdax3r7vyb1war7z6z5") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.0.1-alpha.4 (c (n "ribir_gpu") (v "0.0.1-alpha.4") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.1-alpha.4") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.0.1-alpha.4") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.1-alpha.4") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.0-alpha.3") (d #t) (k 0)))) (h "1hbkkmwy4yx545b4wjrhykimml505kcmbcybp8fc6gsnmkpm8v8p") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.0.1-alpha.5 (c (n "ribir_gpu") (v "0.0.1-alpha.5") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.0.1-alpha.5") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.0.1-alpha.5") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.0.1-alpha.5") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.0-alpha.3") (d #t) (k 0)))) (h "1g3a2vk1fylnmril2ynbfcjk90aym6fjaspq0dc9qzj9gxr1g975") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-alpha.0 (c (n "ribir_gpu") (v "0.1.0-alpha.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-alpha.0") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1qzf2y1kqr93z1ibx0xzpf1mvmpzwzcvkapycmm4w4arspclh65z") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-beta.2 (c (n "ribir_gpu") (v "0.1.0-beta.2") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-beta.2") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0kgfjb2nqb5cipnds6zp6p64rhb9jhixhp8vjcgkwnmgyirl67rx") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-beta.4 (c (n "ribir_gpu") (v "0.1.0-beta.4") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-beta.4") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0bhgkn55z2iygg8cdmg6hjm023rfnkmyl0klwd9qvknxa8md46sc") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-beta.5 (c (n "ribir_gpu") (v "0.1.0-beta.5") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-beta.5") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "12c7jckimh6vl8zs515s3x7pivyrv90z8jkyy58a7vzpmr34ljsb") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-beta.6 (c (n "ribir_gpu") (v "0.1.0-beta.6") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-beta.6") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "18jhhq4k9hw5wvlwmwhkgyw1fs5cyxgg9d1fkg4vj4qlc1jkd9h7") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0-beta.7 (c (n "ribir_gpu") (v "0.1.0-beta.7") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0-beta.7") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1wqpwic2rf4x3ppdjb5csfwsxcsy121g0jhskhy14zpk3m951aj1") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.1 (c (n "ribir_gpu") (v "0.2.0-alpha.1") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.1") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "14x5n97wx6ihrdsx77ly7h996rjp9xqv9w0933m8gzixzvcvagcz") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.2 (c (n "ribir_gpu") (v "0.2.0-alpha.2") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.2") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "01a1b08y67a5kyn0c71vv7x05swi6jwdlhczp39y0lcycbkrgn7g") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.3 (c (n "ribir_gpu") (v "0.2.0-alpha.3") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.3") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1c5z80hgnwdhp5fpvmd4as1a0sp8lhlzgfbf6d20b576h26jd6s9") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.4 (c (n "ribir_gpu") (v "0.2.0-alpha.4") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.4") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0rnngiyg387i1jswabvhx2aarkf2a2i47rdbyjq2hcyx85pk6nsx") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.5 (c (n "ribir_gpu") (v "0.2.0-alpha.5") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.5") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.5") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.5") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1crcbar6ir6hw9fgdngfwifmmiak7637dqzass4xnx03sss7ynnl") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.6 (c (n "ribir_gpu") (v "0.2.0-alpha.6") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.6") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "03cagpvk8ddm388ny49246gipszsyvy44al4f0siilwmk7iflbaz") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-alpha.7 (c (n "ribir_gpu") (v "0.2.0-alpha.7") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-alpha.7") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1vrh2gin4sw41vkfh9cpnk0x3fpzma516rccqwb9g70h0rnicpa5") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.1.0 (c (n "ribir_gpu") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.1.0") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.1.0") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.1.0") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0gnnqiphkgpsnj8dv308hqvkf60kryw3dbngiqf9l9lsdyh4dn4d") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0-beta.1 (c (n "ribir_gpu") (v "0.2.0-beta.1") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0-beta.1") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0-beta.1") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0-beta.1") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0957625734xzngz0radrsbjv86cb9jfi06n3gnklbc8bi4nal264") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.3.0-alpha.1 (c (n "ribir_gpu") (v "0.3.0-alpha.1") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.3.0-alpha.1") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0xsj4zry55hy3ifj1bk6pjfygclm3ajgmpja88dvrc8a6zhdv5ia") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.3.0-alpha.2 (c (n "ribir_gpu") (v "0.3.0-alpha.2") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.3.0-alpha.2") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.3.0-alpha.2") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.3.0-alpha.2") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1hv71hrffil42anp7vk0zwpplimr6wrkbg1diq978gqgpvxrlkm9") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.3.0-alpha.3 (c (n "ribir_gpu") (v "0.3.0-alpha.3") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.3.0-alpha.3") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.3") (f (quote ("webgl"))) (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "00p00fmagaprp8lpsybjkxsj0x8bslihif00bm4wsipy0iir2dwf") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.3.0-alpha.4 (c (n "ribir_gpu") (v "0.3.0-alpha.4") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.3.0-alpha.4") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.3") (f (quote ("webgl"))) (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "04g0d92aya561n1vn2zfbps7gl8kg8wsg9j26kciwf3vih8db31p") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.3.0-alpha.5 (c (n "ribir_gpu") (v "0.3.0-alpha.5") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.3.0-alpha.5") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.3") (f (quote ("webgl"))) (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "0nva4qj67gadjyhd1q46viz6srj28gq58k14q1r2jfjhrm7bh37f") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

(define-public crate-ribir_gpu-0.2.0 (c (n "ribir_gpu") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ribir_algo") (r "^0.2.0") (d #t) (k 0)) (d (n "ribir_geom") (r "^0.2.0") (d #t) (k 0)) (d (n "ribir_painter") (r "^0.2.0") (f (quote ("tessellation"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.3") (f (quote ("derive"))) (d #t) (k 0)))) (h "1g5zy1s8zgvbz81sx69cy6fadhr3ddy63jwp6wfglhgl4cbdhivq") (f (quote (("default" "wgpu")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "futures"))))))

