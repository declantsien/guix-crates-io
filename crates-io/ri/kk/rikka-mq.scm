(define-module (crates-io ri kk rikka-mq) #:use-module (crates-io))

(define-public crate-rikka-mq-0.1.0 (c (n "rikka-mq") (v "0.1.0") (d (list (d (n "deadpool-redis") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "destructure") (r "^0.5.6") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "redis") (r "^0.25.3") (f (quote ("tokio" "streams"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "test-with") (r "^0.12.6") (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("registry" "env-filter" "fmt"))) (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0mnc4k43398ra6211i5zmkfzq6w9mfaa0qr6yarxhvxhdff5bvdd") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tokio" "dep:tokio") ("redis" "dep:redis" "deadpool-redis" "tokio"))))))

