(define-module (crates-io ri ng rings-snark) #:use-module (crates-io))

(define-public crate-rings-snark-0.6.0 (c (n "rings-snark") (v "0.6.0") (d (list (d (n "bellman_ce") (r "^0.3.2") (d #t) (k 0)) (d (n "bellpepper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "memory-stats") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "nova-snark") (r "^0.34") (d #t) (k 0)) (d (n "pasta_curves") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasmer") (r "^4.2.5") (f (quote ("js-default"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^4.2.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-compiler-llvm") (r "^4.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1fv9hapichk7f7g2vrbrh6lfg3f110s8qikqmzpklfcjkjabpiak") (f (quote (("llvm" "wasmer-compiler-llvm") ("default"))))))

(define-public crate-rings-snark-0.6.1 (c (n "rings-snark") (v "0.6.1") (d (list (d (n "bellman_ce") (r "^0.3.2") (d #t) (k 0)) (d (n "bellpepper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "memory-stats") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "nova-snark") (r "^0.34") (d #t) (k 0)) (d (n "pasta_curves") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasmer") (r "^4.2.5") (f (quote ("js-default"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^4.2.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-compiler-llvm") (r "^4.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1cy4l8qg6b7k0r104318sy7hs9inza6ww9zrnrzbw813riqx0r2q") (f (quote (("llvm" "wasmer-compiler-llvm") ("default")))) (y #t)))

(define-public crate-rings-snark-0.7.0 (c (n "rings-snark") (v "0.7.0") (d (list (d (n "bellman_ce") (r "^0.3.2") (d #t) (k 0)) (d (n "bellpepper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "memory-stats") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nova-snark") (r "^0.35") (f (quote ("portable"))) (k 0)) (d (n "pasta_curves") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^4.2.5") (f (quote ("js-default"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^4.2.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-compiler-llvm") (r "^4.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1lcyizi014k29xhhcjdk6njhhaag9i789fv89wazc7nazff31ssk") (f (quote (("llvm" "wasmer-compiler-llvm") ("default"))))))

