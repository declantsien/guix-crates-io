(define-module (crates-io ri tu ritual_common) #:use-module (crates-io))

(define-public crate-ritual_common-0.0.0 (c (n "ritual_common") (v "0.0.0") (d (list (d (n "bincode") (r "^1.0.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.34") (d #t) (k 0)) (d (n "term-painter") (r "^0.2.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.10") (d #t) (k 0)))) (h "0zrxjd4myzqd4g1r7f0f65c1ab30vs6kvljq8wk72aqvdlrjra21")))

(define-public crate-ritual_common-0.1.0 (c (n "ritual_common") (v "0.1.0") (d (list (d (n "bincode") (r "^1.0.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.9.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.34") (d #t) (k 0)) (d (n "term-painter") (r "^0.2.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.10") (d #t) (k 0)))) (h "0b31bgb4m7ilrn4bc6xk0r74bm0zsgl9168clvycrczpwy9pdczc")))

(define-public crate-ritual_common-0.2.0 (c (n "ritual_common") (v "0.2.0") (d (list (d (n "bincode") (r "^1.0.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.9.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.34") (d #t) (k 0)) (d (n "term-painter") (r "^0.2.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.10") (d #t) (k 0)))) (h "1y6d3q1kh6vg37pwjdvjmm5ry2gs61gj4b0n897a5mf84swl3zdq")))

(define-public crate-ritual_common-0.3.0 (c (n "ritual_common") (v "0.3.0") (d (list (d (n "bincode") (r "^1.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.9.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.34") (d #t) (k 0)) (d (n "shell-words") (r "^0.1.0") (d #t) (k 0)) (d (n "term-painter") (r "^0.2.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.10") (d #t) (k 0)))) (h "1byjm7qlbvgfcz3k663yzzvksqdvy0z5l7qbdzfbx0wn9kihvlr8")))

(define-public crate-ritual_common-0.4.0 (c (n "ritual_common") (v "0.4.0") (d (list (d (n "bincode") (r "^1.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1.9.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.84") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.34") (d #t) (k 0)) (d (n "shell-words") (r "^0.1.0") (d #t) (k 0)) (d (n "term-painter") (r "^0.2.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.10") (d #t) (k 0)))) (h "121g26pzq3qy8arzqf9x3k6fjymxpamvd559hhndi5j551s7sdsr")))

