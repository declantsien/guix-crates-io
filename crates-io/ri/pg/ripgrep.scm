(define-module (crates-io ri pg ripgrep) #:use-module (crates-io))

(define-public crate-ripgrep-0.1.0 (c (n "ripgrep") (v "0.1.0") (d (list (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "thread_local") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0729q87zy78xwj9055ax7yswnh0z3zwhxxwldqjbxi053q7fm6nw") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.1 (c (n "ripgrep") (v "0.1.1") (d (list (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1k72viv05gy2h6bflwf2g6aazksv1636ll54ymcz4c4wv4hxlhi7") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.2 (c (n "ripgrep") (v "0.1.2") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0lmga7fw8ciqbcqgqzy25hrmvs9l5hfp6krv6qjjdgf14f1v44sd") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.3 (c (n "ripgrep") (v "0.1.3") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "04y4pi6i7hm8lip57w0vlkrd918chi78dy2r5icg6nkixmd15pq3") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.4 (c (n "ripgrep") (v "0.1.4") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "11zvbwaml4x09aksjamhh8ypwmm6b4vs9gysr2yrx9wfqq9ckh2l") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.5 (c (n "ripgrep") (v "0.1.5") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1sjr8cx3h50kgbvqz90k47hb7zqd5qxy41sqyl6jagjpg6m36b3y") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.6 (c (n "ripgrep") (v "0.1.6") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0wccw5fvns1hss9hb8liy6pzxx2xabdv619hhqh6b2pribqfsvh6") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.7 (c (n "ripgrep") (v "0.1.7") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1ig5ki20lgyw8qigxxpacr56zha41p1001z4w5s3bnc3s5v71nx8") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.8 (c (n "ripgrep") (v "0.1.8") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "11rddydhsvn0qvn7mwpdbsg6b35hzaw1x8lm24z6w3hq2cl06s51") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.9 (c (n "ripgrep") (v "0.1.9") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.76") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1s2gw49553jv0i77fsg4pxk1jahm3qlskfj9mk4ssgghyn6lv5z5") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.10 (c (n "ripgrep") (v "0.1.10") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1in338i6fnlxckj3l1s3v88zzfv7z3jg49rcp67nm4d4aki8w8mm") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.11 (c (n "ripgrep") (v "0.1.11") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1ay1krr9v0fi4bzl714886zl78kqjs83w3m6maf8iz0yflvpsqhj") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.12 (c (n "ripgrep") (v "0.1.12") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0vxl57vwjynr2njf8dn0qqi2sbr8cl9bf03azmk92lylws2nw025") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.13 (c (n "ripgrep") (v "0.1.13") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1hwnm5yf30zhzr1skcrdh9p8n2ci6kzby4nqnsgy2d99h3rfm8a5") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.14 (c (n "ripgrep") (v "0.1.14") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1vzrjikj1xw8ayqi0bh74wbzyf0is4k0yps05fl4jgnxl1li2wc7") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.15 (c (n "ripgrep") (v "0.1.15") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0nqx6001gllz41anxc7aqj420j7f7ra81wlj3fixgp813q5sip8p") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.16 (c (n "ripgrep") (v "0.1.16") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "06mgynypysh9ykxfl40pz9p62qr7hvarlwrisjwammbh96rxnil5") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.1.17 (c (n "ripgrep") (v "0.1.17") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "12jggjyki2r0lvhjscfyrh438zfiyjillkzlmraawk06glby4zkg") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.0 (c (n "ripgrep") (v "0.2.0") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1a4cp3bqkq2q3gka13rav59m8qsalawl4h2cv8hs3hy35cvdclm0") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.1 (c (n "ripgrep") (v "0.2.1") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "02jxh9n9rrkl5yw8pf25wigygm9kjk334j8nc2p0fgphlqi3q8nr") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.2 (c (n "ripgrep") (v "0.2.2") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.1.0") (d #t) (k 0)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "01irfzxc56n1qzgwwzvg9di7ps9h8mfi13nir0jr9fdmlc2dayrr") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.3 (c (n "ripgrep") (v "0.2.3") (d (list (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.1.0") (d #t) (k 0)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "thread_local") (r "^0.2.7") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "04hz3hif6zv29xz41m5g2296zwi2kwmgbn040jsjc4c9vygqs0hh") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.4 (c (n "ripgrep") (v "0.2.4") (d (list (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "ignore") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "1qbi86i4md8cxgk06147fywfz7rxln5ram7s4xbfwr2s6xy0zg8v") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.5 (c (n "ripgrep") (v "0.2.5") (d (list (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "ignore") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "07wdwrdc44f8i5cf3nfw4zq4531s15y9bx6nmcz95d9jylcbfn7v") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.6 (c (n "ripgrep") (v "0.2.6") (d (list (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.3") (d #t) (k 0)) (d (n "ignore") (r "^0.1.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0d04s8phv989zw85l9f6fw15cvra2h2xfgq1l5p2nxjvxfxjli3s") (f (quote (("simd-accel" "regex/simd-accel"))))))

(define-public crate-ripgrep-0.2.7 (c (n "ripgrep") (v "0.2.7") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "136nd0mgsqsrpr13hwib7x6glkp9znvspgs5qlzx4yl08i4pp75d") (f (quote (("simd-accel" "bytecount/avx-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.2.8 (c (n "ripgrep") (v "0.2.8") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0xjl0p668iazdwp0d573v9n8azxa067h11y6njlf3v2qcbvisj9z") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.2.9 (c (n "ripgrep") (v "0.2.9") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.5") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "rustc-serialize") (r "= 0.3.19") (d #t) (k 0)) (d (n "term") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)))) (h "0ri7g0ygykcnipi7lrkq0q4jva2353shzd5y5agvdprfhyjc0j45") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.3.0 (c (n "ripgrep") (v "0.3.0") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 1)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.5") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "termcolor") (r "^0.1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "14jdhwmp44xhwzsd0r9fbb0vi8vmiyw14yi0n4w6q29jpsyds2xk") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.3.1 (c (n "ripgrep") (v "0.3.1") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.18.0") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 1)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.5") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "termcolor") (r "^0.1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "11qrnbyhznni827kp3fj9g5yipvjm5rgn3ym8cxk4h464m1b6dqg") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.3.2 (c (n "ripgrep") (v "0.3.2") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.19.0") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 1)) (d (n "ctrlc") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 0)) (d (n "grep") (r "^0.1.4") (d #t) (k 0)) (d (n "ignore") (r "^0.1.5") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.1.77") (d #t) (k 0)) (d (n "termcolor") (r "^0.1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "130w4yka7symc0qpsvmh5c12c9lp79hdc51029yg71hy35sk3y87") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.4.0 (c (n "ripgrep") (v "0.4.0") (d (list (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 1)) (d (n "env_logger") (r "^0.3") (k 0)) (d (n "grep") (r "^0.1.5") (d #t) (k 0)) (d (n "ignore") (r "^0.1.7") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^0.1.1") (d #t) (k 0)) (d (n "termcolor") (r "^0.2.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(windows)") (k 0)))) (h "0fli6yamk870ag4rqh4y0yh35vwzjg6xiywhhpq33zm37ya2v4j3") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.5.0 (c (n "ripgrep") (v "0.5.0") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.20.5") (d #t) (k 0)) (d (n "clap") (r "^2.18") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.5") (d #t) (k 0)) (d (n "ignore") (r "^0.1.7") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^0.1.1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.0") (d #t) (k 0)))) (h "0cv9kl4dnf4rrr7s8bkymjglddfm29f4fxss2qxfx55kpjvky2jw") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.5.1 (c (n "ripgrep") (v "0.5.1") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.23.1") (d #t) (k 0)) (d (n "clap") (r "^2.23.1") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.5") (d #t) (k 0)) (d (n "ignore") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^0.1.1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.0") (d #t) (k 0)))) (h "1r34z057p2vs77f78r7fj3aipd0dlrwchdifmy5l1pll32c66k6s") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.5.2 (c (n "ripgrep") (v "0.5.2") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.24.1") (d #t) (k 0)) (d (n "clap") (r "^2.24.1") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.5") (d #t) (k 0)) (d (n "ignore") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^0.1.1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.0") (d #t) (k 0)))) (h "18a2ncm1xknrlh59y68h884znyrzs0f05x3p4w8vcnxqa95phh8v") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.6.0 (c (n "ripgrep") (v "0.6.0") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.5") (d #t) (k 0)) (d (n "ignore") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^0.1.1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.0") (d #t) (k 0)))) (h "074wa40033drll6bf1k0nrm02zmlkjaclhlz0kci23x5dfzihs7p") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.7.0 (c (n "ripgrep") (v "0.7.0") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.7") (d #t) (k 0)) (d (n "ignore") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.3") (d #t) (k 0)))) (h "1nn2dwmsv7xjravsmnsmh299jvg3sdlj11bm4w0ygj5j7lxs5zwx") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.7.1 (c (n "ripgrep") (v "0.7.1") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 0)) (d (n "clap") (r "^2.26") (d #t) (k 1)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (k 0)) (d (n "grep") (r "^0.1.7") (d #t) (k 0)) (d (n "ignore") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "same-file") (r "^1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.3") (d #t) (k 0)))) (h "1rar57cqlrjr4p11lr9yl8l1xsxa360ms52mp5r239a1byl00741") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.8.0 (c (n "ripgrep") (v "0.8.0") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.3.1") (d #t) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 1)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "globset") (r "^0.3.0") (d #t) (k 0)) (d (n "grep") (r "^0.1.8") (d #t) (k 0)) (d (n "ignore") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "memmap") (r "^0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.4") (d #t) (k 0)) (d (n "same-file") (r "^1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("std" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0dh7wcn20slygiyxwjgjhms2gk6g986jy0d2grjn0z4jasx6d18a") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.8.1 (c (n "ripgrep") (v "0.8.1") (d (list (d (n "atty") (r "^0.2.2") (d #t) (k 0)) (d (n "bytecount") (r "^0.3.1") (d #t) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 1)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 0)) (d (n "globset") (r "^0.3.0") (d #t) (k 0)) (d (n "grep") (r "^0.1.8") (d #t) (k 0)) (d (n "ignore") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "memmap") (r "^0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^0.2.4") (d #t) (k 0)) (d (n "same-file") (r "^1") (d #t) (k 0)) (d (n "termcolor") (r "^0.3.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("std" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ag4766r5a5xb20v532j7ln8nv20yc3x2g8lhlz8xqkda2z5ib62") (f (quote (("simd-accel" "bytecount/simd-accel" "regex/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.9.0 (c (n "ripgrep") (v "0.9.0") (d (list (d (n "atty") (r "^0.2.11") (d #t) (k 0)) (d (n "bytecount") (r "^0.3.1") (d #t) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 0)) (d (n "clap") (r "^2.29.4") (f (quote ("suggestions" "color"))) (k 1)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.0") (d #t) (k 0)) (d (n "grep") (r "^0.1.8") (d #t) (k 0)) (d (n "ignore") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "memmap") (r "^0.6") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "same-file") (r "^1") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("std" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mp5x7mx0pgay9zbsddkzscv5ii7lxak6z10zs239iadwkkyng7y") (f (quote (("simd-accel" "bytecount/simd-accel" "encoding_rs/simd-accel") ("avx-accel" "bytecount/avx-accel"))))))

(define-public crate-ripgrep-0.10.0 (c (n "ripgrep") (v "0.10.0") (d (list (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.3") (d #t) (k 0)))) (h "0i6yybx8nn9xd53xfqqdmvfw0wpr1fcpy6p05yn7accr15rvffkz") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2") ("avx-accel" "grep/avx-accel"))))))

(define-public crate-ripgrep-11.0.0 (c (n "ripgrep") (v "11.0.0") (d (list (d (n "bstr") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.3") (d #t) (k 0)))) (h "041acmcvhr4ai1xclhx41q4spl56k7bbj9hk8bg2xl25q73kwsj8") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-11.0.1 (c (n "ripgrep") (v "11.0.1") (d (list (d (n "bstr") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.3") (d #t) (k 0)))) (h "0bn40lz9n08llq615p4qqqbi24zbkf0appfx3zgxg34a86ga9zds") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-11.0.2 (c (n "ripgrep") (v "11.0.2") (d (list (d (n "bstr") (r "^0.2.0") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.7") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.3") (d #t) (k 0)))) (h "0vqjr96s2rs45715hzf0g0wjahig4zjyiqfijmzzg4jyh9ni80yr") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-12.0.0 (c (n "ripgrep") (v "12.0.0") (d (list (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.12") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1h5n4r0i74l334wjr6zjjjjw1zwb739wnn7iv13vcl19m043czqi") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-12.0.1 (c (n "ripgrep") (v "12.0.1") (d (list (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.12") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1arw9pk1qiih0szd26wq76bc0wwbcmhyyy3d4dnwcflka8kfkikx") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-12.1.0 (c (n "ripgrep") (v "12.1.0") (d (list (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.6") (d #t) (k 0)) (d (n "ignore") (r "^0.4.15") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ifagbhvy6s4qpx2irxy23w1729f52ynh374vzzx0x46m9hs4ja5") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-12.1.1 (c (n "ripgrep") (v "12.1.1") (d (list (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.7") (d #t) (k 0)) (d (n "ignore") (r "^0.4.16") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1grfi0j9zczzipipc21lkdbqmd2lvy2wlqy65fy4sckqvix5amdr") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-13.0.0 (c (n "ripgrep") (v "13.0.0") (d (list (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 0)) (d (n "clap") (r "^2.33.0") (f (quote ("suggestions"))) (k 1)) (d (n "grep") (r "^0.2.8") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 1)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gv4imhjgxmyxaa996yshcjlakmrjw9pf4rycp90pq675cn9sz7k") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2"))))))

(define-public crate-ripgrep-14.0.0 (c (n "ripgrep") (v "14.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bstr") (r "^1.7.0") (d #t) (k 0)) (d (n "grep") (r "^0.3.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1qlgd4lrkq8x6pbsmxbgd6kqrynhs769b12bh6qy2bjgd6m8kxk8") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2")))) (r "1.72")))

(define-public crate-ripgrep-14.0.1 (c (n "ripgrep") (v "14.0.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bstr") (r "^1.7.0") (d #t) (k 0)) (d (n "grep") (r "^0.3.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "095gyalzd4msmv9az799l34zd3h4jkxjby2130ak4ypfkyqgncc4") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2")))) (r "1.72")))

(define-public crate-ripgrep-14.0.2 (c (n "ripgrep") (v "14.0.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bstr") (r "^1.7.0") (d #t) (k 0)) (d (n "grep") (r "^0.3.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1wgiy8yq8v49gga57bcnznp2cwps8ry0wzkyykm0l87vx6bs0h6y") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2")))) (r "1.72")))

(define-public crate-ripgrep-14.0.3 (c (n "ripgrep") (v "14.0.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bstr") (r "^1.7.0") (d #t) (k 0)) (d (n "grep") (r "^0.3.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "192n1lih9vzhf7r2ak985fap23x608qjdq9pqjcf43h3g9mjzjh0") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2")))) (r "1.72")))

(define-public crate-ripgrep-14.1.0 (c (n "ripgrep") (v "14.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bstr") (r "^1.7.0") (d #t) (k 0)) (d (n "grep") (r "^0.3.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(target_env = \"musl\", target_pointer_width = \"64\"))") (k 0)) (d (n "lexopt") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.77") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1n3zb5jfb8pv65jm4zmrcxlgpppkpd9pmcpg1ifvv13sqhxbrg6p") (f (quote (("simd-accel" "grep/simd-accel") ("pcre2" "grep/pcre2")))) (r "1.72")))

