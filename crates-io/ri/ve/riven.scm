(define-module (crates-io ri ve riven) #:use-module (crates-io))

(define-public crate-riven-0.0.1 (c (n "riven") (v "0.0.1") (h "0dm094szi4brgfhv387cgd6b261k5abvkxgp56lmlin9cn3qgvfl")))

(define-public crate-riven-0.0.2 (c (n "riven") (v "0.0.2") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "tokio-timer") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1xpflfkfhish2vdkddr9yvp9cqx593krbf3yf394nf91kw41vla1")))

(define-public crate-riven-0.0.3 (c (n "riven") (v "0.0.3") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "tokio-timer") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "10alcggvvczrd2pyzyf6xr71k2f2alaz231b0vwcjl38ciphqm2z")))

(define-public crate-riven-0.0.4 (c (n "riven") (v "0.0.4") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "tokio-timer") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1mzd172lax4h9l3vac6i6hxv25jfl9jwdm8pih8ixkhxl1zggb6j")))

(define-public crate-riven-0.0.5 (c (n "riven") (v "0.0.5") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "tokio-timer") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0zqgip0j5d01ab750w218p54nq8fym9g7xcqwz5f1d91q1vkvknh")))

(define-public crate-riven-0.1.0 (c (n "riven") (v "0.1.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures-util-preview") (r "^0.3.0-alpha.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (f (quote ("timer"))) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1ykndvcg2snlcif96chl0yqkjwbc71czg185g3a2d2pybf78n63v")))

(define-public crate-riven-0.1.1 (c (n "riven") (v "0.1.1") (d (list (d (n "async-compression") (r "= 0.1.0-alpha.7") (f (quote ("gzip" "stream"))) (o #t) (k 0)) (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures-util-preview") (r "^0.3.0-alpha.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.1") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (f (quote ("timer"))) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1mi92znfxbivnw2bac8b7ms0n1nn88ipfp1ajlcbpn4pa17z5aqi") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-0.1.2 (c (n "riven") (v "0.1.2") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures-util-preview") (r "^0.3.0-alpha.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.2") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (f (quote ("timer"))) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "12qg3zxlhx4vkz4pwk38njk39qswqc4vavlqibkwwm14fys9xs5z") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-0.1.3 (c (n "riven") (v "0.1.3") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures-util-preview") (r "^0.3.0-alpha.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.2") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (f (quote ("timer"))) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "12vrszzqjl9pz1ks58z6x9j1ap4fpkj4a84y2fk65rsy45dz0win") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-0.2.0 (c (n "riven") (v "0.2.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0srpsnsr9lc5hwkyamdhj21kgs91ypjbd3wzwzja3xvsv3ir2qwq") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-0.2.1 (c (n "riven") (v "0.2.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1282pnp04npaan0cy2g28wfk0567ydi4h8397ww3822j5mbb3axb") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-0.2.2 (c (n "riven") (v "0.2.2") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.16") (d #t) (k 0)) (d (n "strum_macros") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "132850w3rvln15ydy2rzzmc53q537bvl8lma5j1bla9pxzqnhmik") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.0.0 (c (n "riven") (v "1.0.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "08pkv9sqij1q115p4m1fcx7i0jhlwlz2kd18b1iv08fanbfrgmpd") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.1.0 (c (n "riven") (v "1.1.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0kf0i5m47hda310jc3m1sbn0b9mkrmrxc4d5102k4b677c1a3acf") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.2.0 (c (n "riven") (v "1.2.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "13py9m03fij2c28drcxc8ff9f0w28n3daqx8hrwk73x9p3q7r8y0") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.3.0 (c (n "riven") (v "1.3.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0s2rlmy81q5b49x4bajbpn6x8wzz7fmng100y98mcj0c31m7fa25") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.3.1 (c (n "riven") (v "1.3.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "13xcz1s7x9a581yb6kw4qy2i8sy9rh0688343frs11iykxip1rlb") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.4.0 (c (n "riven") (v "1.4.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "158d5fix6afcfvdxxpq2k8lw69gwql2s6l8675g33kwsihkxhp7f") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.5.0 (c (n "riven") (v "1.5.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1633pc9yr9dbdv83psxzhr2b4942p97w74vd442sf9i4x28ddgaw") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.5.1 (c (n "riven") (v "1.5.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0jsq6g9s72bpn81az1aynqyj1zm7z2i1d3vras3n978lzdkpzibc") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.6.0 (c (n "riven") (v "1.6.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "10cabfcw9896b38z1bg64kjrigw4zxg1jik6l51x128fkvsn8y24") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.7.0 (c (n "riven") (v "1.7.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "123xciqd52ar04bhrlfyi1q2ynx7m0kyk09far6mdbvyfi6z24qc") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.8.0 (c (n "riven") (v "1.8.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1nqhn8v4qwc5i2k182nb5y6lbhynxv6g994nqgwf586lnhbc9c40") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.9.0 (c (n "riven") (v "1.9.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0lmsggwa73amd1a3ng70ya7fs6g9vynd7v1jlhjb6g4n81xc7064") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.9.1 (c (n "riven") (v "1.9.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1pxdk95641hsvhbrzycc5028hspvhip2k86pc9x6gxl2franpj94") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.10.0 (c (n "riven") (v "1.10.0") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0bsx6kfbl2q17x1k6vzqn125jmgf6wqar2jiywl2djbc22jl1gkp") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.10.1 (c (n "riven") (v "1.10.1") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0ipyicypm9n6dnjl8xqry9mb1pv76wgcvlhkmk7z5w2mnanhg3lk") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.10.2 (c (n "riven") (v "1.10.2") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1imrlqjgrbrv80nlkpnds0raw63ld57vnlp56y1c9b6lb1qg76ya") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.10.3 (c (n "riven") (v "1.10.3") (d (list (d (n "colored") (r "^1.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.17") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1b7x74z8ajswkvgf5qb4zvkjmxb5zknlnfwcssj7bmicyi980svk") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.11.0 (c (n "riven") (v "1.11.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "14qi1qhr22jq2m8kchh4lqi9mnqqs3szsz0y0kri707ikx3xdx1n") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.11.1 (c (n "riven") (v "1.11.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1xkjibyyvwn23dxbawhp0mb8m64nxrpdfky3lj6nqhxgay23n0q0") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.11.2 (c (n "riven") (v "1.11.2") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1bb41nshd9qshs9jix9v81haw29hq7qkr2j53zxvsd6vygn6kfwl") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.12.0 (c (n "riven") (v "1.12.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1njg1nb3dknh0p5pxqqcasca280ipdc68r4qg9ivfad4ql6fzp1w") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.12.1 (c (n "riven") (v "1.12.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0l24k9zsmx2pkq7bk2jkw06cgiwgdkl8r6zzxca086wfr98493q2") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-2.0.0-beta.0 (c (n "riven") (v "2.0.0-beta.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)))) (h "00z4v8ri4v7nc8v0dswrd5rnsa9zmgfv2ir2dhy3fily4sdhlg7x") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-1.12.2 (c (n "riven") (v "1.12.2") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "16864wphd98hg55knj1cvf3fqi2fv6kh396m7b64gr9535ifs25n") (f (quote (("nightly" "parking_lot/nightly"))))))

(define-public crate-riven-2.0.0-beta.1 (c (n "riven") (v "2.0.0-beta.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)))) (h "0bcsjlr60941l5pzw8zb0gr3nflmadcf744zhgl8bab90kryp06r") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-1.13.0 (c (n "riven") (v "1.13.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1h2ypksbklkz2zfgvv8ghfayz1yq8h712bwk4xij25g5q9jdzmab") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.0.0-beta.2 (c (n "riven") (v "2.0.0-beta.2") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)))) (h "0ifs6gyws50gwylpcvgvraqiggzf0x5whmp8qn9zqg9ybp8hbh1d") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-1.13.1 (c (n "riven") (v "1.13.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0n9crkdq7bi4rdpnjz3d65pcfn5rv34da34x2gnk16s0s20cdx7c") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-1.13.2 (c (n "riven") (v "1.13.2") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0bfqfi4x4calfr0w0vq48hg27x3c6k8fd3hk9dx5p27avdcy2vib") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.0.0-beta.3 (c (n "riven") (v "2.0.0-beta.3") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)))) (h "1m7gmmmfv3g3qdj17az2q9vpx8j76y5m3qwr71ciczn099sjz4ks") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-1.13.3 (c (n "riven") (v "1.13.3") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1ybb2anjwndiq7vqga7nk0nyzg7kbvx4ll5xpq9j1pjdmmr79xyr") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.0.0-beta.4 (c (n "riven") (v "2.0.0-beta.4") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0b03gjpii2a6qybdr3j6hj6qyrksjycq4nii916l076vgylqxvvk") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-1.13.4 (c (n "riven") (v "1.13.4") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1q0n5h19rzrbvbvr0m2m90z7azzfnnsi4abbr4p0wn5kxhnvxw8x") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.0.0-beta.5 (c (n "riven") (v "2.0.0-beta.5") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "12nral814h9f6gwdypk4nfd12lxsx3mvf692bswq2rww8ijs6ckw") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.0.0-rc.1 (c (n "riven") (v "2.0.0-rc.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1p4fiv5094nybxylxi03984d9mwksqzmyf8w0m6p8prd17p969xk") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.0.0-rc.2 (c (n "riven") (v "2.0.0-rc.2") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0ms923g0q2y31993bqkhvrs5jn07p7am139dg40am1phj4xgnink") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.0.0-rc.3 (c (n "riven") (v "2.0.0-rc.3") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "043xkj6c5hb2vcv2b4wccywcnnppd40ixp79d38bd9m977wwmlsm") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-1.14.0 (c (n "riven") (v "1.14.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "06lww6b3hvvxndyxwfaj4nvr4p456xswlf8xizya11vsv6wqhf9l") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.0.0 (c (n "riven") (v "2.0.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1b3aqi3cxc4nskwpb3624a8hp0bkzdha5mpmrmf6za2szvwbcv6r") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.1.0 (c (n "riven") (v "2.1.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0wai7pd4ww29nvypg0m55lak0fg4dw0rhrrki8z50sxsnjq4qb5s") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-1.15.0 (c (n "riven") (v "1.15.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0kvfirag970w7sw6r975ia9978k45q7jsvbz04c0wmg5krby31km") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls"))))))

(define-public crate-riven-2.2.0 (c (n "riven") (v "2.2.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0knfh5qac6rb28ij0l0nszd2iqjzppyj9f5vljvsf9928hjx2pdw") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.3.0 (c (n "riven") (v "2.3.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1avk6jgch99byw4p56i57cd2rk3a9dphxf976rjscgd4cakxjinb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.4.0 (c (n "riven") (v "2.4.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0gkksh1bf0h84llnss5m9wkwxp1ii310a74vsfp19inhm5xm1q8p") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.5.0 (c (n "riven") (v "2.5.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "15glgbjx397rsa21g7gr6bfchq914y08aknbcich95n09i9ylki0") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.5.1 (c (n "riven") (v "2.5.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "03h54dvbwhpg3dcs7891sv7zdif4adil8k45g7wr68shnrm3r2vn") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.6.0 (c (n "riven") (v "2.6.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1llczws168s8v6jpf6sfk678xw4advfipcj9ng6a1m56y4q83f96") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.6.1 (c (n "riven") (v "2.6.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0w1jvb8yca5zfcr9z64qrk28d4n8a7d6pyfywq5q2kvmgb8zya6p") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.7.0-rc.0 (c (n "riven") (v "2.7.0-rc.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "05p7kgndakn8wb0agym36mvwd0xgwg1306kchwzv30gyx6qldqc5") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.7.0 (c (n "riven") (v "2.7.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0h61c7ccj90y6qnqlprj8xa1z0h6y1zx4ps065c4av3cda6rh3k6") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.7.1 (c (n "riven") (v "2.7.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "045xh6b3l423hlapp2jv9i745x9c1x4cbai0pixclvn0bg0bm9ah") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.8.0 (c (n "riven") (v "2.8.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1z4n82dlccd7dx3b0lykzd427xk5np8l06dlzahwqkhc24g8wp3k") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.9.0 (c (n "riven") (v "2.9.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hyg5rbnpjlkl0qwzd8nq8ng1snl7v6lg3j1lws8lqjs51xdnrhz") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.10.0 (c (n "riven") (v "2.10.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1akhjdaqxdd8mnrwb3f2gpk0djwm1i1mm8ax1i0zin145n799rlw") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.11.0 (c (n "riven") (v "2.11.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "03kp34906lp5vcv24fdxdgnszwd03aqiqm1kg1z1iq5xvlrrjg2r") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.12.0 (c (n "riven") (v "2.12.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0wgb3yi4qc11iq8wpii8v9d7y919cyhh12zv9ym3lh9pcsv0pj71") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.13.0 (c (n "riven") (v "2.13.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hcc579dmj9ddn3rpczlbhhqyq2adhkivpql08gmakhf7zj96qwc") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.14.0 (c (n "riven") (v "2.14.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hap3a34jxwim80hi1hbb9wg8dzbdz8c76dwv84svd1cadpcxwjs") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.15.0 (c (n "riven") (v "2.15.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1pxx55bjqm0ynxi0k40spj78hfykz5ymplgnag9fm8jxjw41f24n") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.17.0 (c (n "riven") (v "2.17.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake_instant") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0v910pzy0gd8yaxnrc601syk17wk6cnxj1lji33hrckadzzd7c7l") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.18.0 (c (n "riven") (v "2.18.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1avpn48h58633m2g15dszqbcfl5f7qrad606d24phf7spvy19jmb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.19.0 (c (n "riven") (v "2.19.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1qf584g7anzc0l0cxygfvzbspd4px7g5bkgfgi5ysg104wv1ilva") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.20.0 (c (n "riven") (v "2.20.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0xcdvx7i7hn8271il73qdzdq01ypi7qpbifhhdpzndn2rjk7khpg") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.21.0 (c (n "riven") (v "2.21.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0bvfnp6ngzg48b1i3q2vxrp1vkq5ighirjvs0zs81zhl73xyxwa5") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.22.0 (c (n "riven") (v "2.22.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0lzn8mkrkd63lc4j77ymnrmyk3hlxjpxm3i081dnpknw5v69124j") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.23.0 (c (n "riven") (v "2.23.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0y7yqbadxx31zxhxnbk2kazl03hd11862fldj4rb2ylvc81mnv3x") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.24.0 (c (n "riven") (v "2.24.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hmqp93gi3spa16mzpxww7x7jpffxkm3a86swaj2fxhhzz0mb843") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.25.0 (c (n "riven") (v "2.25.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1f3qr0prlx9pa0hzfqn0x9qj9afhgjzvj4ns7k23m4nm5dfxxjvx") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.26.0 (c (n "riven") (v "2.26.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "002nidzivplv72388m23g6c0m7jc44rj89w8ylnhmzpwdzqjvv2l") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.27.0 (c (n "riven") (v "2.27.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1rqsyp41xxqwv3azmqnqg0c0w3mphashz4a1shpv17jgnh9i3xqb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.28.0 (c (n "riven") (v "2.28.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "14pxicsybp1j3960dxp7lqzrjm4sckf80gmd7xracmqjxzgvj5zz") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.29.0 (c (n "riven") (v "2.29.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1zv3w0glvnknxrfmwl5432v3rcb78dc4yrdcfgwzl2fzm22j0cpf") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.30.0 (c (n "riven") (v "2.30.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1z1hybz9dsy8gqaj7a87mszd7wgfkkwabkajvwb6sl9xj7v09dac") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.31.0 (c (n "riven") (v "2.31.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "0qgmp27npvhc2j51v44dfzlj5bzzvx2iwfv9z460sizixrkvsmxz") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.32.0 (c (n "riven") (v "2.32.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "00r4kpy5i685v93capn80f9m67l28pxi67rnjyz7hdxmf0dhfiix") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.33.0 (c (n "riven") (v "2.33.0") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "macros" "parking_lot"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "0zs1fcd1fxsaq45akmflxbjihnixzjw3schmfwkys3xcz8h1idxc") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.33.1 (c (n "riven") (v "2.33.1") (d (list (d (n "colored") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "parking_lot" "sync" "time"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "1nxpl5j473dmwqikz30gl7fm30zzzd50cgffqjm7z16ywa3xqihb") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-riven-2.34.0-beta.0 (c (n "riven") (v "2.34.0-beta.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "11n74i8dv23mmj9gca3g1j70d0h10aqqi7kp9iydkcni8dm18ghi") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.34.0 (c (n "riven") (v "2.34.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0jymqfgf0ivky09wxc80flx1a552g92gmg3fhrvd3i7g8kqmd0aw") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.34.1 (c (n "riven") (v "2.34.1") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1xdrdxkxm3zai0hjzldwxv9l8lv2c1m34jjn6yr4ji3wx8d4mc4z") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.35.0 (c (n "riven") (v "2.35.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1g4k82x33qi8jl306b7wpm9ajbqdh8n087n8dca2ly5v8nqa6r9k") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.36.0 (c (n "riven") (v "2.36.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "115cgh9xhggli6lfrxx54m1r0d4frxv1hlq65shlj3qq44asjn88") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.37.0 (c (n "riven") (v "2.37.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0j57h5af7l73r6cbzi11n9sma3r8h6vrr8w1f91vzcl1s3qwl6vx") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.38.0 (c (n "riven") (v "2.38.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "10zw9pj6dcnx9lly382a2pms1aivb6v0jgglv52vwiyf7qcllws0") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.38.1 (c (n "riven") (v "2.38.1") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "01ib8jq8wz65czhnmnfbrn2n1ykfaaznadgxjy59jfpq275lyg8y") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.38.2 (c (n "riven") (v "2.38.2") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0kxw6iwn06x9k3nv7pfn931y5wbwbi8kwxmm2dy3i39pgajc9hhk") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.39.0 (c (n "riven") (v "2.39.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0966bmfmi84ac5s2nmpsikgilb7slzp9kc6dxi9k4wiihcvfwbis") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.40.0 (c (n "riven") (v "2.40.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0vinx7lfihh75by256bbh8xafppnjis0sld1wfdh5j8gqwmv17k6") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.41.0 (c (n "riven") (v "2.41.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0plsb2f97dvj8x41cmx82zrglf1wj3lyqzcqpdkvmp3qp3q1v5fp") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.42.0 (c (n "riven") (v "2.42.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1888py3scz766db941m9sng5cmsf3935md9sqyqyckwgi9lfx141") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.43.0 (c (n "riven") (v "2.43.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0nzh9sgh5h81gx1wxvm7bdar6ax379nx0cmbigckk0jdhrg2w5ws") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.44.0 (c (n "riven") (v "2.44.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "01m7g9q7p2f424y4z3bgpczvp06ja0a4ivcsq6kg5x4p8isjzgah") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.45.0 (c (n "riven") (v "2.45.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0ymy6365mvghbgdryf7a8wmcjcil3y2p0yi5csra7bma4zcl9rbp") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.46.0 (c (n "riven") (v "2.46.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "05mp4vr6iw48k9xp5nv9acirdsyaw33cj2f0w3x533l7bs181vz4") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.47.0 (c (n "riven") (v "2.47.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0y1v9m8h6axcisn01rzydhlzcq9ajb4qi7b7qk3iwwzf7j9b2pp7") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.48.0 (c (n "riven") (v "2.48.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0pw9m89cpgf8sai3nn5kj0k5s9asc0skhvfmwy8y9g8q3d9mjbm0") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.49.0 (c (n "riven") (v "2.49.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1div1jjlmwp99aqfw7mm3gdsyhxdxrsdzizb39r0hvpvkhrwxzd8") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.50.0 (c (n "riven") (v "2.50.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "11i5zid5by5gjihjrdrvlxv7xhxjzssfmafr0lhrhn1srxcj82ws") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.51.0 (c (n "riven") (v "2.51.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "09mk5x9in6dq2h445jyjys7w74pigjrhqpvrk1pqwapakzcqix33") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

(define-public crate-riven-2.52.0 (c (n "riven") (v "2.52.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fake_instant") (r "^0.5.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("gzip" "json"))) (k 0)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-shared-rt") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)) (d (n "web-time") (r "^1.0.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "125ghfx8mgxj1h2apcasji5rf1xxx2sq0a3r4af7pm1mydwxbcwx") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("nightly" "parking_lot/nightly") ("native-tls" "reqwest/native-tls") ("deny-unknown-fields") ("deny-unknown-enum-variants-strings") ("deny-unknown-enum-variants-integers") ("deny-unknown-enum-variants" "deny-unknown-enum-variants-strings" "deny-unknown-enum-variants-integers") ("deny-unknown" "deny-unknown-fields" "deny-unknown-enum-variants") ("default-tls" "reqwest/default-tls") ("default" "default-tls") ("__proxy"))))))

