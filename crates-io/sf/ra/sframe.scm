(define-module (crates-io sf ra sframe) #:use-module (crates-io))

(define-public crate-sframe-0.1.0 (c (n "sframe") (v "0.1.0") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00dsy02wix6273xdq90qmvwpik9sb37c9l0d09kg3c2033mpirc6") (f (quote (("wasm-bindgen" "ring/wasm32_c") ("verify-test-vectors") ("default"))))))

(define-public crate-sframe-0.2.0 (c (n "sframe") (v "0.2.0") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10j5h64mdj509i9cc0hcgcxqg497xwndn286xq3rs2w5pansjnfw") (f (quote (("wasm-bindgen" "ring/wasm32_c") ("default"))))))

(define-public crate-sframe-0.2.1 (c (n "sframe") (v "0.2.1") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("wasm32_c"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "084myry6iz12afn6rpjkrvbh5p0j56qhj0jy8ricdxiyba7yngnw") (f (quote (("default" "ring")))) (s 2) (e (quote (("ring" "dep:ring") ("openssl" "dep:openssl"))))))

(define-public crate-sframe-0.2.2 (c (n "sframe") (v "0.2.2") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("wasm32_c"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mn8kwcz4js4vcwi33n9jsgds2vks3y8jayg6pivfwr4zd0aciks") (f (quote (("default" "ring")))) (s 2) (e (quote (("ring" "dep:ring") ("openssl" "dep:openssl"))))))

(define-public crate-sframe-0.2.3 (c (n "sframe") (v "0.2.3") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "05b8npyqx51gp0bbswczz1bvczhpy3qsafjnwv3ryhy1py9dyxf9") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.3.0 (c (n "sframe") (v "0.3.0") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v5xhkns5vsp5sqkang716anbsw0dkk9z0afn12fqk1vsa8ysv77") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.4.0 (c (n "sframe") (v "0.4.0") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10g7514fhxd1hwbmdbzxwpk5s4wlcmacjsqp89w5gxr0vg0y2zzn") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.4.1 (c (n "sframe") (v "0.4.1") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1j4xvdvjdj5s5miy5yxk7xyw3xj4iwsz6fn0i57yiln66aikjisy") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.4.2 (c (n "sframe") (v "0.4.2") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0bxz9ii8clq6bzik68l2bxsih1qbwdj1zzk4qpd7z8da3ci4iymz") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.5.0 (c (n "sframe") (v "0.5.0") (d (list (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h3j4jws647l10rfx6chy4mnhzlqj1af9scic7fkdcag74177lv4") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.5.1 (c (n "sframe") (v "0.5.1") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 2)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgisf_lib") (r "^0.2") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2") (d #t) (k 2)) (d (n "test-case") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0v45g0l8yns2gqlql2n3s78qc73xqpbn8dvnw6ivamii9gmhlrcq") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.5.2 (c (n "sframe") (v "0.5.2") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 2)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgisf_lib") (r "^0.2") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2") (d #t) (k 2)) (d (n "test-case") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vxb5x7n0m4fk7d03i0b1vv5m6jmhpd0lgbkcggpqhhxrygrmwmj") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.6.0 (c (n "sframe") (v "0.6.0") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 2)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgisf_lib") (r "^0.2") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2") (d #t) (k 2)) (d (n "test-case") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qx3ma8365bbnf5z7im079ppnw2i5r2cpjwbxpqi6khy02dpgzzf") (f (quote (("default" "ring"))))))

(define-public crate-sframe-0.7.0 (c (n "sframe") (v "0.7.0") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 2)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cgisf_lib") (r "^0.2") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "ring") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("wasm32_unknown_unknown_js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_logger") (r "^4.2") (d #t) (k 2)) (d (n "test-case") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "18b93jyk4x98vcwn34vv8b23s94zx4dflpjgykgx95psyx8az44g") (f (quote (("default" "ring"))))))

