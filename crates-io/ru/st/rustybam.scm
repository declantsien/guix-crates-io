(define-module (crates-io ru st rustybam) #:use-module (crates-io))

(define-public crate-rustybam-0.1.0 (c (n "rustybam") (v "0.1.0") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.11.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0vq34h586xpzpxis2q66wicq2b4jn5ygdmj2z17dbnn7jbkn3lzc") (y #t)))

(define-public crate-rustybam-0.1.1 (c (n "rustybam") (v "0.1.1") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "034ccmj8l74mv6ri8r0rgibcgry0cfr7z6j9b522g30c6l5qzyc5") (y #t)))

(define-public crate-rustybam-0.1.2 (c (n "rustybam") (v "0.1.2") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1bk4pmf1ppddcdsz6gq3256ghzrz99aa24i3fxabsmrlv0pwqkg3") (y #t)))

(define-public crate-rustybam-0.1.3 (c (n "rustybam") (v "0.1.3") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0zxl6dqzk4fcaykx0bpmvwqwnp9zvj53liadlla4dxmmziibkhni") (y #t)))

(define-public crate-rustybam-0.1.4 (c (n "rustybam") (v "0.1.4") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1sll8j5aghjh5r4csxhkwgaijap3hqi2nvd51s2gw27ps3r332gq") (y #t)))

(define-public crate-rustybam-0.1.5 (c (n "rustybam") (v "0.1.5") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0z1mlvzjm9czhlj6vliw32xqggfsvpd84s759b50p8a8wxp8naiz") (y #t)))

(define-public crate-rustybam-0.1.6 (c (n "rustybam") (v "0.1.6") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "02mrkkmp6w9q9vkhqx609cgs1qld30q05j0vh95b8nfn7dihy0z7") (y #t)))

(define-public crate-rustybam-0.1.7 (c (n "rustybam") (v "0.1.7") (d (list (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "118hkwbnmjmq5b23wxmjnp3jfd5r69ygh8wfsbix5lmygkrsnn51") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.8 (c (n "rustybam") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "09xyhng6pin3vqn300ciggvrfn2hql4s3q1d4ski2z37z74ypjh1") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.9 (c (n "rustybam") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1rkpgh59g0skf6z4bxki6jjc0l4v3hrnv8s5gf4ni0gj1682gykq") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.10 (c (n "rustybam") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0sv2vxynwpzxd632i4viv8xgp3lag83xmfmrd7mbp5xc88p26wxd") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.11 (c (n "rustybam") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0mqbvrahpy7q5njb190sm7a99nixrjxd04drxv74sk0h2149kdv4") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.12 (c (n "rustybam") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1x7bn10ab984izamlyawch307pcp7mnhnz3xc39056srvaa4qkb0") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.13 (c (n "rustybam") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "13ms4h9asjhpir8rv4xykvfd3djbd7jklkjvq42yr265dg5ryb78") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.14 (c (n "rustybam") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "013alpxjhqqygl2qnwjibls0cbay514gfcif1fjq7qny2krmk8dy") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.15 (c (n "rustybam") (v "0.1.15") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0s25n27nwmmk23bdcykhw076ag935dgxjvas2v2kag3zmps4qdk4") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.16 (c (n "rustybam") (v "0.1.16") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "15cj7jnsgzhp6c8cmabjp71bw7k1qlmpfc0b25wjqmlz5yy6az6x") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.17 (c (n "rustybam") (v "0.1.17") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "014napyqgp8n3831ibfqjnp7kwfqdc64r6jn10j3vpfwchpv31z0") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.18 (c (n "rustybam") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "0d2gqwny5c0x1nlq12l4a2jpn012b26jcicfa6sav1nva2sc46md") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.19 (c (n "rustybam") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-beta.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1mmb5kb7g5d1k7582mcpbyz1y02k0z0ab8xkhab9xl6f96glc3kq") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.20 (c (n "rustybam") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-rc.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "1w0pxbrj65vkanqmz1xh6nqlxw1gijgqfi57jxjcwm4p1a1i5y4d") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.21 (c (n "rustybam") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-rc.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.36.0") (d #t) (k 0)))) (h "05kqscq6cwlks7fl49ik9ysj3ia4vmzyn1cxir608ygxvr5k2zfi") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.22 (c (n "rustybam") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-rc.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0lyzpchbpwg1648cmk8ni5x3d953cm47a6bdqjy0sxy9sh5q1r3w") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.23 (c (n "rustybam") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-rc.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "1iz95gq2w7bkv5mgv8lgjjqhy669lrp9w398z6qhf0clkijar9b3") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.24 (c (n "rustybam") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-rc.4") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0-rc.4") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.8.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0743j75l13mxhd323kqvs3n8ci7p8j74k5rh3d996iq94fd5g8bp") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.25 (c (n "rustybam") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0wwdfpg02id17rv0fbvn0j2v7157lbaip01lhxyvfls1zn1c5q00") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.26 (c (n "rustybam") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.34.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.2") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0f1q920729m5i2hvladpvh1rhwivqqrc1v4x6d59rwjgxzsv8nyg") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.27 (c (n "rustybam") (v "0.1.27") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.39.1") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.3") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "11va3g4nfgxvwb9mxhcmbzi44jibi6rfbm7jz5kc6lg98gnnagz1") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.28 (c (n "rustybam") (v "0.1.28") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.39.1") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.5") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0fkx46k8yl3jf3z1rpvir0x785bblwbjvhdv54ryswwzlpz4z2q4") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.29-alpha.1 (c (n "rustybam") (v "0.1.29-alpha.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.39.1") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("yaml" "derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.5") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "07hggzf4j8mchhhz4q3xnlv0al0j3nys6nzh5m4szaw3ky3vbdq4") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib")))) (y #t)))

(define-public crate-rustybam-0.1.29 (c (n "rustybam") (v "0.1.29") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.39.1") (d #t) (k 0)) (d (n "bio-types") (r "^0.12.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.5") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.38.2") (d #t) (k 0)))) (h "0yjir7hw5ql64ki4yv2j70mfskpnl2qgy51dxpkyncxv26p41lbg") (f (quote (("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.30 (c (n "rustybam") (v "0.1.30") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.42.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.13.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.5") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "snap") (r "^1.0.5") (o #t) (d #t) (k 0)))) (h "1wpj5s6sxsf6gisc8238xzmj9vh5c2q9mql69z4ava6z3h6hjvjq") (f (quote (("snappy") ("snap_default" "gzp/snappy_default" "snap" "snappy") ("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "snap_default" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.31 (c (n "rustybam") (v "0.1.31") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bimap") (r "^0.6.1") (d #t) (k 0)) (d (n "bio") (r "^0.42.0") (d #t) (k 0)) (d (n "bio-types") (r "^0.13.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_generate") (r "^3.0.0") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.9.5") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.39.5") (d #t) (k 0)) (d (n "snap") (r "^1.0.5") (o #t) (d #t) (k 0)))) (h "1pdyxz1gs9gwg45aganq34ghwz5l2hj56pqavbwnbkkp6yyfy0dk") (f (quote (("snappy") ("snap_default" "gzp/snappy_default" "snap" "snappy") ("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "snap_default" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.32 (c (n "rustybam") (v "0.1.32") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bio") (r "^1.3") (d #t) (k 0)) (d (n "bio-types") (r "^1.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.11") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44") (d #t) (k 0)) (d (n "snap") (r "^1.1") (o #t) (d #t) (k 0)))) (h "1w2sjs8aipbj0fz66w9f1j1zarsa7gg45kdxymjhbc2r87hblqqi") (f (quote (("snappy") ("snap_default" "gzp/snappy_default" "snap" "snappy") ("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "snap_default" "libdeflate") ("any_zlib"))))))

(define-public crate-rustybam-0.1.33 (c (n "rustybam") (v "0.1.33") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bio") (r "^1.3") (d #t) (k 0)) (d (n "bio-types") (r "^1.0") (d #t) (k 0)) (d (n "calm_io") (r "^0.1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 1)) (d (n "flate2") (r "~1") (k 0)) (d (n "gzp") (r "^0.11") (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 1)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "needletail") (r "^0.5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "rust-htslib") (r "^0.44") (d #t) (k 0)) (d (n "snap") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0zpka5z2x9v9sdm5wjph64c04nagmk8d18q0fbkk6l7k399fkra5") (f (quote (("snappy") ("snap_default" "gzp/snappy_default" "snap" "snappy") ("libdeflate" "gzp/libdeflate") ("deflate_zlib_ng" "gzp/deflate_zlib_ng" "flate2/zlib-ng-compat" "any_zlib") ("deflate_zlib" "gzp/deflate_zlib" "flate2/zlib" "any_zlib") ("deflate_rust" "gzp/deflate_rust" "flate2/rust_backend") ("default" "deflate_zlib_ng" "snap_default" "libdeflate") ("any_zlib"))))))

