(define-module (crates-io ru st rust-box) #:use-module (crates-io))

(define-public crate-rust-box-0.1.0 (c (n "rust-box") (v "0.1.0") (d (list (d (n "queue-ext") (r "^0.1") (o #t) (k 0)) (d (n "stream-ext") (r "^0.1") (o #t) (k 0)))) (h "0f4kvsgil7ffb5dq9a89r95xkdrh4104yx4lin34pbj4fwyfwmkc") (f (quote (("leaky-bucket" "stream-ext/leaky-bucket") ("governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext")))) (r "1.38")))

(define-public crate-rust-box-0.2.0 (c (n "rust-box") (v "0.2.0") (d (list (d (n "queue-ext") (r "^0.2") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.2") (o #t) (k 0)))) (h "1xfzxwgjzydxnh1pvf7wqnrz9a1pzmj2mw68zw81lx0kzvxnl26l") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor")))) (y #t)))

(define-public crate-rust-box-0.2.1 (c (n "rust-box") (v "0.2.1") (d (list (d (n "queue-ext") (r "^0.2") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.2") (o #t) (k 0)))) (h "181fcpd1dlpaj8yzdi5749cznii8w4yq27f8wrcvbhg1mdxqd0sp") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor"))))))

(define-public crate-rust-box-0.3.0 (c (n "rust-box") (v "0.3.0") (d (list (d (n "queue-ext") (r "^0.3") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.3") (o #t) (k 0)))) (h "0dmagg1byr2iphba2z2ar3kjm7fxdwy8f6i1x1y9zj76mcy1m0zy") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor"))))))

(define-public crate-rust-box-0.3.1 (c (n "rust-box") (v "0.3.1") (d (list (d (n "queue-ext") (r "^0.3") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.3") (o #t) (k 0)))) (h "0jgxlq1d6rffkbqfqygjf1x7f1ci3zc5djmsl03shpi9nj9vm763") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor"))))))

(define-public crate-rust-box-0.3.2 (c (n "rust-box") (v "0.3.2") (d (list (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.3.2") (o #t) (k 0)))) (h "16l1g10yzcfjg6h6qayfp6npd9cm6ff47ng0h2fddikfd25yhd6d") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor"))))))

(define-public crate-rust-box-0.3.3 (c (n "rust-box") (v "0.3.3") (d (list (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-executor") (r "^0.3.3") (o #t) (k 0)))) (h "0vvl8a9arxd9shj5fzdn55jkhzdjh6ikqsr8iib1y14g0b2zn3xq") (f (quote (("task-executor-rate" "task-executor/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-executor"))))))

(define-public crate-rust-box-0.4.0 (c (n "rust-box") (v "0.4.0") (d (list (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-exec-queue") (r "^0.4.0") (o #t) (k 0)))) (h "0yji5vbbsqkz60w7xiwkn4jyjf3rajj5vsz0djbvry0b839g0hc6") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("default" "queue-ext" "stream-ext" "task-exec-queue"))))))

(define-public crate-rust-box-0.4.1 (c (n "rust-box") (v "0.4.1") (d (list (d (n "event-notify") (r "^0.1.0") (o #t) (k 0)) (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-exec-queue") (r "^0.4.0") (o #t) (k 0)))) (h "0x5j4n2akgrfaqkv9yqy0xik28s2cjlbgg29l7irlzpqbs9gxpjq") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("event" "event-notify") ("default" "queue-ext" "stream-ext" "task-exec-queue" "event"))))))

(define-public crate-rust-box-0.5.0 (c (n "rust-box") (v "0.5.0") (d (list (d (n "event-notify") (r "^0.1.0") (o #t) (k 0)) (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "std-ext") (r "^0.1.0") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-exec-queue") (r "^0.4.0") (o #t) (k 0)))) (h "1scd3vsmrcvsjp8ha1gszzy95pbbdljjqp2q3ibqid4pfizsgr9j") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate") ("event" "event-notify") ("default"))))))

(define-public crate-rust-box-0.5.1 (c (n "rust-box") (v "0.5.1") (d (list (d (n "event-notify") (r "^0.1.0") (o #t) (k 0)) (d (n "queue-ext") (r "^0.3.0") (o #t) (k 0)) (d (n "std-ext") (r "^0.1.1") (o #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (k 0)) (d (n "task-exec-queue") (r "^0.4.1") (o #t) (k 0)))) (h "03kbbhkd5750865d4ih7lnn6cg2gqw9gpqgqfawwa6fw7gaj8nwb") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate") ("event" "event-notify") ("default"))))))

(define-public crate-rust-box-0.6.0 (c (n "rust-box") (v "0.6.0") (d (list (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0dcs6dmzd1ysyf5j6h2im5sm875zak5i1qsxx6qhj1abp7kq2fah") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap") ("event" "event-notify") ("default"))))))

(define-public crate-rust-box-0.6.1 (c (n "rust-box") (v "0.6.1") (d (list (d (n "dequemap") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "1m6s4v06dgqbqi6c2n3hvicdk94mi6irhb7namp2kn9zr3jzfsdy") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap") ("event" "event-notify") ("default"))))))

(define-public crate-rust-box-0.6.2 (c (n "rust-box") (v "0.6.2") (d (list (d (n "dequemap") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "14gqdwj3iydzy8rsqmb3qrfw5gfr9zpq6ihfnk9lwjd65gaya5z9") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("default"))))))

(define-public crate-rust-box-0.7.0 (c (n "rust-box") (v "0.7.0") (d (list (d (n "dequemap") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "170mznshnhhjnkaqqjxkwqngw5nx9xbqmzqsx73sk4l0r3vja7pj") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "dequemap-std" "dequemap-serde" "dequemap-btreemap") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default"))))))

(define-public crate-rust-box-0.7.1 (c (n "rust-box") (v "0.7.1") (d (list (d (n "dequemap") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "133f6qcrfdr1z34fy7wb10a7hwfhx04j9fbsqkxfk3sbjn8249pk") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "dequemap-std" "dequemap-serde" "dequemap-btreemap") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default"))))))

(define-public crate-rust-box-0.8.0 (c (n "rust-box") (v "0.8.0") (d (list (d (n "dequemap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "0x6n5qrx6813rgjdkwzfpfhap4sbckr47l26bpyf3xpns8wwnnrw") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "dequemap-std" "dequemap-serde" "dequemap-btreemap") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-btreemap" "dequemap/btreemap") ("default"))))))

(define-public crate-rust-box-0.9.0 (c (n "rust-box") (v "0.9.0") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "0vbydr73n10s4q5qbmr7lkr2xfk89hm80jq5x7dzkflpp2gh95rl") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.9.1 (c (n "rust-box") (v "0.9.1") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1ivsy892q47dp1l64sqfy55l4p9db5gg3cqy6lcw49nk10jy7bjn") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.9.2 (c (n "rust-box") (v "0.9.2") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "10hyji0s1arq2dwgrgc2126rz1wyyhjm7f4qslnghs3cnd37lkbl") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.9.3 (c (n "rust-box") (v "0.9.3") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "16xk431n2g9b7awnf5l3szanpmfn7vpw23sn46giljp363wkqavl") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("handy-grpc-reuse" "handy-grpc/reuse") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "handy-grpc-reuse" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.10.0 (c (n "rust-box") (v "0.10.0") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "counter") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-counter")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0k4vvplw9k2wymclm5bpzq5x2q0bnr7s11srpnxjxywkasam0y10") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("handy-grpc-reuse" "handy-grpc/reuse") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "handy-grpc-reuse" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue" "counter" "counter-rate" "counter-count") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("counter-rate" "counter/rate") ("counter-count" "counter/count") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.10.1 (c (n "rust-box") (v "0.10.1") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "counter") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-counter")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "08mq7ppsc4s6fphnx8lc9p5am062zp89c7zwch5a7mylvmgxmagj") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("handy-grpc-reuse" "handy-grpc/reuse") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "handy-grpc-reuse" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue" "counter" "counter-rate" "counter-count") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("counter-rate" "counter/rate") ("counter-count" "counter/count") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.11.0 (c (n "rust-box") (v "0.11.0") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "convert") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-convert")) (d (n "counter") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-counter")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1y0w04ig4v5pmn9mvqw4zbszfjapsmgyi52lsrn30l9gdwn7gw8g") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("handy-grpc-reuse" "handy-grpc/reuse") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "handy-grpc-reuse" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue" "counter" "counter-rate" "counter-count" "convert" "convert-bytesize") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("counter-rate" "counter/rate") ("counter-count" "counter/count") ("convert-bytesize" "convert/bytesize") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

(define-public crate-rust-box-0.11.1 (c (n "rust-box") (v "0.11.1") (d (list (d (n "collections") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-collections")) (d (n "convert") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-convert")) (d (n "counter") (r "^0.1.0") (o #t) (d #t) (k 0) (p "box-counter")) (d (n "dequemap") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "event-notify") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "handy-grpc") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "mpsc") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "queue-ext") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "std-ext") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "stream-ext") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "task-exec-queue") (r "^0.9.1") (o #t) (d #t) (k 0)))) (h "02v60c2zjgwfzcvdi1s6jm7542px7yrd3nkf5yzyks1wv83qkkxa") (f (quote (("task-exec-queue-rate" "task-exec-queue/rate") ("stream-ext-leaky-bucket" "stream-ext/leaky-bucket") ("stream-ext-governor" "stream-ext/governor") ("mpsc-vecdeque" "mpsc/vecdeque") ("mpsc-segqueue" "mpsc/segqueue") ("mpsc-priority" "mpsc/priority") ("mpsc-indexmap" "mpsc/indexmap") ("handy-grpc-reuse" "handy-grpc/reuse") ("full" "queue-ext" "stream-ext" "task-exec-queue" "event" "std-ext" "mpsc" "dequemap" "stream-ext-leaky-bucket" "stream-ext-governor" "task-exec-queue-rate" "mpsc-segqueue" "mpsc-vecdeque" "mpsc-indexmap" "mpsc-priority" "dequemap-std" "dequemap-serde" "dequemap-btreemap" "handy-grpc" "handy-grpc-reuse" "collections" "collections-std" "collections-serde" "collections-binary-heap" "collections-priority-queue" "counter" "counter-rate" "counter-count" "convert" "convert-bytesize") ("event" "event-notify") ("dequemap-std" "dequemap/std") ("dequemap-serde" "dequemap/serde") ("dequemap-hashmap" "dequemap/hashmap") ("dequemap-btreemap" "dequemap/btreemap") ("default") ("counter-rate" "counter/rate") ("counter-count" "counter/count") ("convert-bytesize" "convert/bytesize") ("collections-std" "collections/std") ("collections-serde" "collections/serde") ("collections-priority-queue" "collections/priority-queue") ("collections-binary-heap" "collections/binary-heap"))))))

