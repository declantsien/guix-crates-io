(define-module (crates-io ru st rustgym) #:use-module (crates-io))

(define-public crate-rustgym-0.1.0 (c (n "rustgym") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "18f15lqnqrkkv6r21jrsibip6vhi7m7jy88hvi8ybycf3la94a8z") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.1 (c (n "rustgym") (v "0.1.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "06fycp2k498xxm87kf3wy20ww02z313lc5l9npfs5w71rsxf7ij3") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.2 (c (n "rustgym") (v "0.1.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "0x91678wzyss1blg682ijxj32pcpfpwhrlnwkb386ynb5kl00hm4") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.3 (c (n "rustgym") (v "0.1.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "14c48nm7zy83ncqc9sispcfj39nbqgpkcjzmjj5i030qh6c7ijbs") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.4 (c (n "rustgym") (v "0.1.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "1wx17pbchn63dx085mp3q0p8a6w2y30wd40gpnj2p75pc4lx7mij") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.5 (c (n "rustgym") (v "0.1.5") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "1x2bsrvaw7v26f8jji3iw34nnj5kr4haxahqmwy1gplz22ax2fg7") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.6 (c (n "rustgym") (v "0.1.6") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "1cphk8497j4zjykpbi2irk370z4i8jvhmmjixziczld8hvaqklj4") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.1.7 (c (n "rustgym") (v "0.1.7") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-gvc") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-testcpp") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustgym-util") (r "^0.1.0") (d #t) (k 0)))) (h "10nd2p3sx7vzkbhlfq8l8fkyma5i937f1s8x1k8x4mrkz8qc82pj") (f (quote (("default" "rustgym-testcpp" "rustgym-gvc"))))))

(define-public crate-rustgym-0.2.0 (c (n "rustgym") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustgym-util") (r "^0.2.1") (d #t) (k 0)))) (h "0d2m6rwcf7cdrrx10mhczzp0vjk26xwwjbjn346v02hdf10zsn75") (f (quote (("default"))))))

