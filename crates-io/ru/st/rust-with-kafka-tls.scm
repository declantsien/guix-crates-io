(define-module (crates-io ru st rust-with-kafka-tls) #:use-module (crates-io))

(define-public crate-rust-with-kafka-tls-1.0.0 (c (n "rust-with-kafka-tls") (v "1.0.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "09piyyfxs2w4wh40p4yykiq04f161qdfamz10gjc4v2ckkvirv4n")))

(define-public crate-rust-with-kafka-tls-1.0.1 (c (n "rust-with-kafka-tls") (v "1.0.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "02x6b375qd61dzjahyvm8c5ykfcz7k3j121y2x2j1z9m3kwa4nkf")))

(define-public crate-rust-with-kafka-tls-1.0.2 (c (n "rust-with-kafka-tls") (v "1.0.2") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1ncl9wm6qicaijschfhgx7nk8bg6kwzg1738fig5isk90ckpbvqh")))

(define-public crate-rust-with-kafka-tls-1.0.3 (c (n "rust-with-kafka-tls") (v "1.0.3") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "01ipjzrp5q0jy4cb8xl5rvwnk368avms04cy6fp45iswzibin026")))

(define-public crate-rust-with-kafka-tls-1.0.4 (c (n "rust-with-kafka-tls") (v "1.0.4") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1qdnh5lbs0jilfn8xnkqmqclfik1hrxrll02lv8056jwnx50cf26")))

(define-public crate-rust-with-kafka-tls-1.0.5 (c (n "rust-with-kafka-tls") (v "1.0.5") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "0srd53mg3svpzfj1ga3fkwx5s40ds8ghvl8cb22aqmsqg4swc14b")))

(define-public crate-rust-with-kafka-tls-1.0.6 (c (n "rust-with-kafka-tls") (v "1.0.6") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "backoff") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build" "ssl" "ssl-vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "0dqb1bcxpwbqd11sx571gzf1af81qszkkg72jmywsmzwbdsdlw6m")))

