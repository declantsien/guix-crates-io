(define-module (crates-io ru st rust-cryptoauthlib) #:use-module (crates-io))

(define-public crate-rust-cryptoauthlib-0.1.0 (c (n "rust-cryptoauthlib") (v "0.1.0") (d (list (d (n "cryptoauthlib-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "0qb6n8q0zxg4xqk4hiqy5qis3angvlblxlajcfp8baiynbm6rpz0")))

(define-public crate-rust-cryptoauthlib-0.2.0 (c (n "rust-cryptoauthlib") (v "0.2.0") (d (list (d (n "cryptoauthlib-sys") (r "0.2.*") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "15mrm4l7lhjlykjswm0kp31yr5pk2n6j4i8yp7814ks4fz95jc84")))

(define-public crate-rust-cryptoauthlib-0.3.0 (c (n "rust-cryptoauthlib") (v "0.3.0") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "0wm09b583p3qvdsv2v9zygcdnbavrgp5128al20z2s7rfx0qgla0") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.3.1 (c (n "rust-cryptoauthlib") (v "0.3.1") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "0ykvsxfaq329w3bf1fd9lnj4qv7c41c2frpgab63gzgmvn9dyyrc") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.0 (c (n "rust-cryptoauthlib") (v "0.4.0") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "1c548lgxrndbab86i5pd9nrc8dj58mp07irm4dijlmpz1iw9sg9n") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.1 (c (n "rust-cryptoauthlib") (v "0.4.1") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "0jkxhikw6wys63izh36crpvlgfkngb0s7q098jp4vrqy9dp0vswh") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.2 (c (n "rust-cryptoauthlib") (v "0.4.2") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.19.4") (d #t) (k 0)) (d (n "toml") (r "^0.4.2") (d #t) (k 2)))) (h "1paf747pkjfj4diw8rf1mrv0crjyjp7r6nx66m8phbv18xrprkw3") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.3 (c (n "rust-cryptoauthlib") (v "0.4.3") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.21.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)))) (h "08v6s18vvg270c96nga0yzcgwk0zwik7n16gkjhk3rjk42n11c88") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.4 (c (n "rust-cryptoauthlib") (v "0.4.4") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.21.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)))) (h "0d77yp4zzkq7nr4rkr0splhd4bhvd45mwvy7h3gcamhfbf0iqip3") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

(define-public crate-rust-cryptoauthlib-0.4.5 (c (n "rust-cryptoauthlib") (v "0.4.5") (d (list (d (n "cryptoauthlib-sys") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.21.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)))) (h "18i5bcdna6fqsghikby50jg7w3dni8mjy1rxrnjia1q9ii80gaxd") (f (quote (("software-backend") ("hardware-backend") ("default" "hardware-backend"))))))

