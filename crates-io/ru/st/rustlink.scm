(define-module (crates-io ru st rustlink) #:use-module (crates-io))

(define-public crate-rustlink-0.0.1 (c (n "rustlink") (v "0.0.1") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "ethers") (r "^2.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.69") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.69") (d #t) (k 0)) (d (n "workflow-rs") (r "^0.12.1") (f (quote ("full"))) (d #t) (k 0)))) (h "0c28j1njbyayg78s5lvsz7mz6h5535vsj378sswwdilnig5nqr8w")))

(define-public crate-rustlink-0.0.2 (c (n "rustlink") (v "0.0.2") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "ethers") (r "^2.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.69") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.69") (d #t) (k 0)) (d (n "workflow-rs") (r "^0.12.1") (f (quote ("full"))) (d #t) (k 0)))) (h "0kaixmicin42ajy1aapgx8lbfcp9n3lhr3rwg0hcp26xb54lih9n")))

