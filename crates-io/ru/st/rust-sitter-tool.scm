(define-module (crates-io ru st rust-sitter-tool) #:use-module (crates-io))

(define-public crate-rust-sitter-tool-0.1.0 (c (n "rust-sitter-tool") (v "0.1.0") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cli") (r "^0.20.6") (o #t) (d #t) (k 0)))) (h "02fh223k4rbdwjizy3b1c7nf25r8bmp7qj7fzpnwznyijglfg2pi") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempdir" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.1.1 (c (n "rust-sitter-tool") (v "0.1.1") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cli") (r "^0.20.6") (o #t) (d #t) (k 0)))) (h "1g03sl971pfvpr48g7kbqwvxpc02lgs4yf60z6jf83q12w4bvn2s") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempdir" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.1.2 (c (n "rust-sitter-tool") (v "0.1.2") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cli") (r "^0.20.6") (o #t) (d #t) (k 0)))) (h "1m2s595y2wgxh4pavibhgcran0w2chcbps8rr4hk1l1l3pjzkwrd") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempdir" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.2.0 (c (n "rust-sitter-tool") (v "0.2.0") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cli") (r "^0.20.6") (o #t) (d #t) (k 0)))) (h "0v432gp2h67w58wbj4jv99iih0y5v0dp3kw73mn82y1wdwfjfyp4") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.2.1 (c (n "rust-sitter-tool") (v "0.2.1") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "1jagi4kwd5y9wvz51abqbw91ixwpijzwzz2r4jrm1vzqhpddyg0x") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.3.0 (c (n "rust-sitter-tool") (v "0.3.0") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "0y0gnpi514ma94n5s0m218qqdj5ynixjg9if2b653sypy9asdhhh") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.3.1 (c (n "rust-sitter-tool") (v "0.3.1") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "05xpdnd2fr0ccm2n490mqkd6fk3krpw9d87bv2sgj7fb094vgmsi") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.3.2 (c (n "rust-sitter-tool") (v "0.3.2") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "19wq7ylwrky4sxgnmmmlz62zcrj51hyp1ymlb7an5dkg16n9wqrh") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.3.3 (c (n "rust-sitter-tool") (v "0.3.3") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "0wmylcfm1n6f230afi7qdhfs6ziph25k8wgvxbf6kxz2rhphjm84") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.3.4 (c (n "rust-sitter-tool") (v "0.3.4") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.3.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "0n7i58k21mldcjjxlz0700p20sljga9fn1l1s56ql63a8yb6ag40") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.4.1 (c (n "rust-sitter-tool") (v "0.4.1") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.9") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.20.7") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "0djk11b9zxv9yqzcgbrrbkn3rk4d5ycfqk9kcw4ysja6cq48whrp") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

(define-public crate-rust-sitter-tool-0.4.2 (c (n "rust-sitter-tool") (v "0.4.2") (d (list (d (n "cc") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "rust-sitter-common") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-inline-mod") (r "^0.5.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.22.5") (o #t) (d #t) (k 0) (p "tree-sitter")) (d (n "tree-sitter-cli") (r "^0.22.5") (o #t) (d #t) (k 0) (p "tree-sitter-cli")))) (h "04hazbb6y77sz3glx7r3hdfqd68zqkqp52zn2dyvd3yh88phah5q") (f (quote (("default" "build_parsers")))) (s 2) (e (quote (("build_parsers" "dep:tempfile" "dep:tree-sitter" "dep:tree-sitter-cli" "dep:cc"))))))

