(define-module (crates-io ru st rust_hls) #:use-module (crates-io))

(define-public crate-rust_hls-0.1.0 (c (n "rust_hls") (v "0.1.0") (d (list (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.56") (d #t) (k 0)) (d (n "quote") (r "^1.0.26") (d #t) (k 0)) (d (n "rust-hdl") (r "^0.45.1") (d #t) (k 0)) (d (n "syn") (r "^2.0.15") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.80") (d #t) (k 2)))) (h "145jmzv2l9r9rlssdg583vyrchw6jxhh3a1x84fqcg9gqbzmkbgj")))

(define-public crate-rust_hls-0.1.1 (c (n "rust_hls") (v "0.1.1") (d (list (d (n "itertools") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.56") (f (quote ("span-locations"))) (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.26") (o #t) (d #t) (k 0)) (d (n "rust-hdl") (r "^0.45.1") (o #t) (d #t) (k 0)) (d (n "rust_hls_lib") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^2.0.15") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.80") (f (quote ("diff"))) (d #t) (k 2)))) (h "1akkvksl3amh0yvn0m3xw57gyzzilxr6g1rv3cxz61g56dcnkndp") (f (quote (("default" "perform-hls")))) (s 2) (e (quote (("perform-hls" "dep:itertools" "dep:proc-macro2" "dep:quote" "dep:rust-hdl" "dep:rust_hls_lib" "dep:syn" "dep:thiserror"))))))

(define-public crate-rust_hls-0.2.0 (c (n "rust_hls") (v "0.2.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15.2") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.0") (d #t) (k 0)) (d (n "extract_rust_hdl_interface") (r "^0.2.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (d #t) (k 0)) (d (n "fslock") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "merkle_hash") (r "^3.5.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.2.6") (k 0)) (d (n "proc-macro2") (r "^1.0.60") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0.28") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rust_hls_macro") (r "^0.2.0") (d #t) (k 2)) (d (n "rust_hls_macro_lib") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "spanned_error_message") (r "^0.1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.18") (f (quote ("full" "parsing" "extra-traits" "printing" "clone-impls" "derive" "visit" "visit-mut" "fold"))) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)) (d (n "verilated") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "verilated-module") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "verilator") (r "^0.1.0") (f (quote ("gen" "module"))) (o #t) (d #t) (k 0)))) (h "1wyzs8bpjkps6528d25cid7v5qy363a8lp1zwzrqlpw5gcl2axps") (f (quote (("default" "verilator")))) (s 2) (e (quote (("verilator" "dep:verilator" "dep:verilated" "dep:verilated-module"))))))

