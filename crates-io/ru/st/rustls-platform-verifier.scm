(define-module (crates-io ru st rustls-platform-verifier) #:use-module (crates-io))

(define-public crate-rustls-platform-verifier-0.1.0 (c (n "rustls-platform-verifier") (v "0.1.0") (d (list (d (n "android_logger") (r "^0.13") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "jni") (r "^0.19") (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni") (r "^0.19") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.21") (f (quote ("dangerous_configuration" "tls12" "logging"))) (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rustls-platform-verifier-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "security-framework") (r "^2.6") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "security-framework-sys") (r "^2.4") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "webpki") (r "^0.101") (f (quote ("alloc" "std"))) (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "rustls-webpki")) (d (n "webpki") (r "^0.101") (f (quote ("alloc" "std"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0) (p "rustls-webpki")) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10phbnzlg9qzsxhsyjcr8gh4wb99cqfh9vk40bycks4vw5jy2wy5") (f (quote (("ffi-testing" "android_logger") ("docsrs" "jni" "once_cell") ("dbg") ("cert-logging" "base64")))) (r "1.64.0")))

(define-public crate-rustls-platform-verifier-0.2.0 (c (n "rustls-platform-verifier") (v "0.2.0") (d (list (d (n "android_logger") (r "^0.13") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "jni") (r "^0.19") (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni") (r "^0.19") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.22.1") (f (quote ("tls12" "logging"))) (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.7") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0)) (d (n "rustls-platform-verifier-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "security-framework") (r "^2.6") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "security-framework-sys") (r "^2.4") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0) (p "rustls-webpki")) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "rustls-webpki")) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_os = \"freebsd\")") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1k2kjhqknd979c4afgacyc87f1bddbaa060x5vxz3275jyjbjd9c") (f (quote (("ffi-testing" "android_logger") ("docsrs" "jni" "once_cell") ("dbg") ("cert-logging" "base64")))) (r "1.64.0")))

(define-public crate-rustls-platform-verifier-0.1.1 (c (n "rustls-platform-verifier") (v "0.1.1") (d (list (d (n "android_logger") (r "^0.13") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "jni") (r "^0.19") (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni") (r "^0.19") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.21") (f (quote ("dangerous_configuration" "tls12" "logging"))) (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0)) (d (n "rustls-platform-verifier-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "security-framework") (r "^2.6") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "security-framework-sys") (r "^2.4") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "webpki") (r "^0.101") (f (quote ("alloc" "std"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0) (p "rustls-webpki")) (d (n "webpki") (r "^0.101") (f (quote ("alloc" "std"))) (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "rustls-webpki")) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(target_os = \"freebsd\")") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 0)))) (h "110vx7gdpjf3p80hnrnypmx9l3vp57x13rrggw439nhjw1fppicj") (f (quote (("ffi-testing" "android_logger") ("docsrs" "jni" "once_cell") ("dbg") ("cert-logging" "base64")))) (r "1.64.0")))

(define-public crate-rustls-platform-verifier-0.3.0 (c (n "rustls-platform-verifier") (v "0.3.0") (d (list (d (n "android_logger") (r "^0.13") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "jni") (r "^0.19") (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni") (r "^0.19") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rustls") (r "^0.23") (f (quote ("std"))) (k 0)) (d (n "rustls") (r "^0.23") (f (quote ("ring"))) (k 2)) (d (n "rustls-native-certs") (r "^0.7") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0)) (d (n "rustls-platform-verifier-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "security-framework") (r "^2.6") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "security-framework-sys") (r "^2.4") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\")))") (k 0) (p "rustls-webpki")) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "rustls-webpki")) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_os = \"freebsd\")") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 0)))) (h "04c1vpfiyirwfjz4z9g0ghv5hx0xhb7zgm95g5jnlgc2w8d52kq3") (f (quote (("ffi-testing" "android_logger" "rustls/ring") ("docsrs" "jni") ("dbg") ("cert-logging" "base64")))) (r "1.64.0")))

(define-public crate-rustls-platform-verifier-0.3.1 (c (n "rustls-platform-verifier") (v "0.3.1") (d (list (d (n "android_logger") (r "^0.13") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"tvos\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"tvos\"))") (k 0)) (d (n "jni") (r "^0.19") (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni") (r "^0.19") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rustls") (r "^0.23") (f (quote ("std"))) (k 0)) (d (n "rustls") (r "^0.23") (f (quote ("ring"))) (k 2)) (d (n "rustls-native-certs") (r "^0.7") (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"tvos\")))") (k 0)) (d (n "rustls-platform-verifier-android") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "security-framework") (r "^2.10") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"tvos\"))") (k 0)) (d (n "security-framework-sys") (r "^2.10") (f (quote ("OSX_10_14"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"tvos\"))") (k 0)) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(all(unix, not(target_os = \"android\"), not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"tvos\")))") (k 0) (p "rustls-webpki")) (d (n "webpki") (r "^0.102") (f (quote ("ring" "alloc" "std"))) (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "rustls-webpki")) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26") (d #t) (t "cfg(target_os = \"freebsd\")") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0z8m3j3kpap26gwjaicmrd5096i8140qz1lhjl7pjg6fl5px5w5m") (f (quote (("ffi-testing" "android_logger" "rustls/ring") ("docsrs" "jni") ("dbg") ("cert-logging" "base64")))) (r "1.64.0")))

