(define-module (crates-io ru st rust-ipfs) #:use-module (crates-io))

(define-public crate-rust-ipfs-0.3.0-alpha (c (n "rust-ipfs") (v "0.3.0-alpha") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "igd-next") (r "^0.12") (f (quote ("aio"))) (o #t) (d #t) (k 0)) (d (n "ipfs-bitswap") (r "^0.3.0-alpha") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.8.3") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "061130cna29p6nrry9nmi5ng7wkq0p1j2w9dmghsr8y85qsdag9s") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("port_mapping" "igd-next") ("default" "port_mapping"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.1 (c (n "rust-ipfs") (v "0.3.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "igd-next") (r "^0.12") (f (quote ("aio"))) (d #t) (k 0)) (d (n "ipfs-bitswap") (r "^0.3.0-alpha") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "131s0d9zl0qfbav4m7jv5cmh85cwwl57x6mngdc1b4j9xwhda07p") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.2 (c (n "rust-ipfs") (v "0.3.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "igd-next") (r "^0.12") (f (quote ("aio"))) (d #t) (k 0)) (d (n "ipfs-bitswap") (r "^0.3.0-alpha.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.3.0-alpha.2") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "08kjv9l9m68rbfbz0i0wxyhhyx4q8s560l6ar0j6kn0m4m70l0w1") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.3 (c (n "rust-ipfs") (v "0.3.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "^0.3.0-alpha.3") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "15038qyd71dk3rxpps8d6qhrygx58na89dh8ahr3k4xjil6vb8yd") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.4 (c (n "rust-ipfs") (v "0.3.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0-alpha.4") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "1jg15npyl7qvr2q7xsss4823yrjxhirr6pi3rs9qmcdikgimx6dr") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.5 (c (n "rust-ipfs") (v "0.3.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0-alpha.4") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "1z4q6bv76vzn5imgariijbx0s7z0bklxz1c4j6gslzizhggjkzag") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0-alpha.6 (c (n "rust-ipfs") (v "0.3.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0-alpha.4") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0jmp5ad2ys6bdr3r4zv5vda895wc1nsqm9x445k5x22mgq0b0zhx") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.0 (c (n "rust-ipfs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0w5j2p5hh6my1y7q352869zv3zqvlbi74clxqmasgsza452d0pkd") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.1 (c (n "rust-ipfs") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "19kpkd9a3r3xld0vamkjanafsx3rn0kpfp8zcq6gl1lpmf9p5xwj") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.2 (c (n "rust-ipfs") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0z9brf71xncfc7vbkpn06dspc157dnwfpq7hsw4akxfzghbk7pc7") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.3 (c (n "rust-ipfs") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1k0m66r8vx57511ay2kx0zj6ladnypjp7isbh6pnbcs5q541ky0i") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.4 (c (n "rust-ipfs") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0x3paym2w22fhh972nvz5gbxsghrmggm2gkavq3i0249sz1r80lb") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.5 (c (n "rust-ipfs") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1yris6lzcs7xvjs8d90p4c0asxqpgv52pnksw2gqgs5my49cvdmm") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.6 (c (n "rust-ipfs") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.0") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "05j39r3shbv1jgvq3qdhy6p97g4wn3d6bq3nq4dhkdcf9pyrlcp7") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.7 (c (n "rust-ipfs") (v "0.3.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.1") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1rk88lsa3a5mh8rhhfpb2cpdqpvkc1wdggav9smgjb7i0flxjvg2") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.8 (c (n "rust-ipfs") (v "0.3.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "02l3jjpvrmvzm32b9dacd6hb6b0lz0hfh0glfl4s0kw1zfrhvqz4") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.9 (c (n "rust-ipfs") (v "0.3.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0rx48ikdkw1q3ipz0laz4fqzjc852y4sn8qr7kar1zxlmih1zqac") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.10 (c (n "rust-ipfs") (v "0.3.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0w6jdmq0nlfjxndppx81spk59r2xr1ckpylsz96kmkclnbvwy0dz") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.11 (c (n "rust-ipfs") (v "0.3.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "=0.51.1") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1p2mywzlk2jg9yylx5jxvv6acw4y4wsxvg5ppnnvpfqs8qiqm20g") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.12 (c (n "rust-ipfs") (v "0.3.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.2") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0f7vzwwiccawwa8yd93ng6dwa91ij90d4wqlfyqhrnxfgh5yqi4j") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.13 (c (n "rust-ipfs") (v "0.3.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.2") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1c40x8k81hxgw5k843qky1jv8cdyc26pmjd5z463j60liqxjrf9c") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.14 (c (n "rust-ipfs") (v "0.3.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.2") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.2") (f (quote ("autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-gossipsub") (r "=0.44.1") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "015hq1dq7y5kfazvb5m2ipai681x7z09yki2f4a48xryzi1yxj69") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store"))))))

(define-public crate-rust-ipfs-0.3.15 (c (n "rust-ipfs") (v "0.3.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.3") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1165wfcdbpqyc61sw8b7qv6cx4qp1gbp6w0b1vzkhpbjv3mk8w8z") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.68")))

(define-public crate-rust-ipfs-0.3.16 (c (n "rust-ipfs") (v "0.3.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "ipfs-bitswap") (r "=0.3.3") (d #t) (k 0) (p "rust-ipfs-bitswap")) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0rg22flnhxaf0kl4kgapfj81y3s3zbfwj547mh0jkh2bacrl1kql") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.68")))

(define-public crate-rust-ipfs-0.3.17 (c (n "rust-ipfs") (v "0.3.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.3.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1f1n8frzi0c7j0h3cwbahvq7ycpw5np7j43q4698lm9d9gysyxvh") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.68")))

(define-public crate-rust-ipfs-0.3.18 (c (n "rust-ipfs") (v "0.3.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.3.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.15") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-build") (r "^0.11") (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "=0.3.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "19wnyrgzbjhd9v6awhllii119vdskq8awr3h0bmsqgf101li67vz") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.68")))

(define-public crate-rust-ipfs-0.3.19 (c (n "rust-ipfs") (v "0.3.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.3.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1.5") (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.51.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "quic" "tokio" "mplex" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response"))) (k 0)) (d (n "libp2p-nat") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.9") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.3.2") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0w1aa3iv4i868zqhllswxpghh6asf0d85h7j0vm0p983w7wvfsb7") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.0 (c (n "rust-ipfs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1dg7agkbmmashsgqds805cqq4hlma53c4npjl76apx6q6r1dsnpz") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("experimental" "rust-ipns")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.1 (c (n "rust-ipfs") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "176i4fqaf708jqadlxkivl06gvadiiv22p7s55829n04qb31nkwm") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("experimental" "rust-ipns")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.2 (c (n "rust-ipfs") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1183jr8jq6khb4sjz88h2cvsmhdzxy9aj45a1g2f42chyiwjmyff") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("experimental" "rust-ipns")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.3 (c (n "rust-ipfs") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0pnifbk8vndbybhfr6cp0lms8b0jd1chmk2hkhky0qid06cs96yv") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("experimental" "rust-ipns")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.4 (c (n "rust-ipfs") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0y0m5gm3q3v614snryyv12yppwvsil1j8r4q06x8pp964vskdrv1") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.5 (c (n "rust-ipfs") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0s63r2mixaqwda14vasn7kfqzgh19p7sabkskh34fd47x7acasd2") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.4.6 (c (n "rust-ipfs") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "05ijchsy7i52zfyn9l6srmdn8z6s33cv21cj5k1nj1dvaisk2hls") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.5.0 (c (n "rust-ipfs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "08mzq6mx6066zm19fyk29m9yzji3z1pb6cqk30jh6xjy8v77rpsz") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.5.1 (c (n "rust-ipfs") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.4.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1m6h3k5s7q1wh5x074hz8gpgdnjxrgzzwf4y9syywkhmhqxwgzd7") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.6.0 (c (n "rust-ipfs") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.4") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.1") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.23") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1nyga22vlhw9dq035n8s1wk165ys583i3wwjr7a6zfwn43xi8a5j") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.7.0 (c (n "rust-ipfs") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.2") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.2") (d #t) (k 2)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "030xqf6kij42vkqqkl0m6486021ayw1jv48yc7snfh3axg3fnzrh") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.7.1 (c (n "rust-ipfs") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.2") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1q3dqx1k6r1a2ikgghjqaxlhkn9i9hkipj8w5xsl56wvmsj372y3") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.8.0 (c (n "rust-ipfs") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.2") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0pwc3ray9931ixbkcayw423r04a7b16pf0z5ipvzd5w2crfkrc3k") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.8.1 (c (n "rust-ipfs") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.2") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0hhi6sswcqnfvn2acan9pvwxcjrjrdfw9f87ja3b8yfxpbp1hm65") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store")))) (r "1.70")))

(define-public crate-rust-ipfs-0.9.0 (c (n "rust-ipfs") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-nat") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.3") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.0") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0p9lgb5ali1mjn9986a0r2xbdjwc3mhqchvmvx93zy6b7gm1hfk5") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.10.0 (c (n "rust-ipfs") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.4") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0gfc7k1n4ws5prf9lin9a1a6wb3r534z3bkm21jn9mzzkn947wac") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("experimental_stream" "libp2p-stream") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (y #t) (r "1.70")))

(define-public crate-rust-ipfs-0.10.1 (c (n "rust-ipfs") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.4") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "11si9qi17c9jp870q1gmnqqw7j4f2fb86dmy17dnpp69zssl4sn7") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("experimental_stream" "libp2p-stream") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.10.2 (c (n "rust-ipfs") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.4") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1rj8vhyxc9i5adf2mc7s290xqn8mw393kbdldimibl1a1xiykknz") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("experimental_stream" "libp2p-stream") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.10.3 (c (n "rust-ipfs") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.4") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1gzrziq17a3f0zw3qrgq19bzj95c6xv0rxjdb3piww7a67w82f41") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("experimental_stream" "libp2p-stream") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.10.4 (c (n "rust-ipfs") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.4") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1v61hwdmjjg51dixvhxl1dj8b946mavfvczxphg591iqi8484bhi") (f (quote (("test_js_interop") ("test_go_interop") ("sled_data_store") ("redb_data_store") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next/compat") ("libp2p_bitswap" "libp2p-bitswap-next") ("experimental_stream" "libp2p-stream") ("default" "beetle_bitswap") ("beetle_bitswap" "beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.0 (c (n "rust-ipfs") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.5") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "07hcwkia5xz4px0dhjdqgnc7i4j4dg0a0ghpqbz66l14yl5zgjck") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.1 (c (n "rust-ipfs") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.5") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "18m5b20ln1h0c773xx44nvhfx6cn4m4px4yl5f6sl43jsjvh0kw6") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.2 (c (n "rust-ipfs") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.5") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "17c4fkjr56c38afnq4qaqh815wd409bjv04010nk1m0mh7a3nyrk") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.3 (c (n "rust-ipfs") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.5") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0h7m6qnckfvxsxzm85fwjl4wij7351j1hzar9qqza9ll0m7jajx4") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.4 (c (n "rust-ipfs") (v "0.11.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "redb") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (k 0)) (d (n "rust-ipns") (r "^0.5") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1vpmh5fkavagdyjgfvb9qdk0vyrbdj3513v75mcp0m376cnzi49r") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.5 (c (n "rust-ipfs") (v "0.11.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0b2i9dmp6661w6jsb9rpafj6cb3jdrsbl2xqinydkzrha0hmjn5m") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.6 (c (n "rust-ipfs") (v "0.11.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1hhzwawgdcvxyi5ng12s2a815b4c4pr84mkxbnln9y4w3nfdi17f") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.7 (c (n "rust-ipfs") (v "0.11.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1j112yva5n11g2qmi692fmm693xhp8jq9a25597nrbkl0473h2mn") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (y #t) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.8 (c (n "rust-ipfs") (v "0.11.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1n7wxkvdyxb6ms9qx01j22z6q08w74fi055brvhrcnwyryblfcif") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.9 (c (n "rust-ipfs") (v "0.11.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1lkffrgp88wxla61ryiwh45x7fv9z0jb8mfxf1ihmra0jgxfgfnj") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.10 (c (n "rust-ipfs") (v "0.11.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.2") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "12wdbn66m7xaca92i0zcckmm5s6kmzcgl9ih6hsmjwbymn36q0wq") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.11 (c (n "rust-ipfs") (v "0.11.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0l6wggvl3dzsjlpl9m4hw7qf19xhbq0fy1a0fxbkywxc0i3ggsl5") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (y #t) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.12 (c (n "rust-ipfs") (v "0.11.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1sz77av1wc4jfmya6rspkykngfizgdw764frhann647p4z6rsm4f") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.13 (c (n "rust-ipfs") (v "0.11.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1s3lgv66bjcsim2d6q7y7f7g3jf7c4xd50fj720r6zz7cagrsv9m") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.14 (c (n "rust-ipfs") (v "0.11.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1s3lgrpimmi6djq602zaqx2ip2d2d2n84sm703dvsxibvqyyx9qg") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.15 (c (n "rust-ipfs") (v "0.11.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "sec1") (r "^0.7.3") (f (quote ("pem" "pkcs8"))) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1jx61an1lk8xihzzsya05wyxaziav66rvj3jcs104lqzpzsmm6kx") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.16 (c (n "rust-ipfs") (v "0.11.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser" "aws_lc_rs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "sec1") (r "^0.7.3") (f (quote ("pem" "pkcs8"))) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "01vcxrqc4k7xzn32v8myxyqdq83x9wgjpalpyahv4xyqlibkbpck") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.17 (c (n "rust-ipfs") (v "0.11.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "sec1") (r "^0.7.3") (f (quote ("pem" "pkcs8"))) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0an3x3f1bl0pmv1hinppx7fxfdz0kgfd225q9q7fpgf54kvbswsn") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.18 (c (n "rust-ipfs") (v "0.11.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.15") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "tls" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "sec1") (r "^0.7.3") (f (quote ("pem" "pkcs8"))) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "simple_x509") (r "=1.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0fm9k0n1hnmrd91adi13kxmsl3ybps5w3p7lpy2im618svx7hf6s") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

(define-public crate-rust-ipfs-0.11.19 (c (n "rust-ipfs") (v "0.11.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("alloc"))) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "beetle-bitswap-next") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timeout") (r "^0.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "=0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex-literal") (r "^0.4") (k 2)) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "idb") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket" "tcp" "macros" "tokio" "noise" "tls" "ping" "yamux" "dns" "mdns" "ed25519" "secp256k1" "ecdsa" "rsa" "serde" "request-response" "json" "cbor" "rendezvous" "upnp" "quic"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("gossipsub" "autonat" "relay" "dcutr" "identify" "kad" "websocket-websys" "webtransport-websys" "macros" "noise" "ping" "yamux" "dns" "ed25519" "secp256k1" "ecdsa" "serde" "request-response" "json" "cbor" "rendezvous" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3") (d #t) (k 0)) (d (n "libp2p-bitswap-next") (r "^0.26.3") (o #t) (d #t) (k 0)) (d (n "libp2p-relay-manager") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.7.1-alpha") (f (quote ("pem" "tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webrtc-websys") (r "^0.3.0-alpha") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rcgen") (r "^0.13.1") (f (quote ("pem" "x509-parser"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "redb") (r "^1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlimit") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-ipns") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-unixfs") (r "^0.4.1") (d #t) (k 0)) (d (n "rustyline-async") (r "^0.4") (d #t) (k 2)) (d (n "sec1") (r "^0.7.3") (f (quote ("pem" "pkcs8"))) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "simple_x509") (r "=1.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sled") (r "^0.34") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("full"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "log"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log" "ansi" "env-filter"))) (k 2)) (d (n "unsigned-varint") (r "^0.7.1") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0c23sglvwlvlnadd84hd7x23phxhl9ggf9jpx4fdpw9b146yahn5") (f (quote (("test_js_interop") ("test_go_interop") ("default")))) (s 2) (e (quote (("webrtc_transport" "dep:libp2p-webrtc") ("sled_data_store" "dep:sled") ("redb_data_store" "dep:redb") ("libp2p_bitswap_compat" "libp2p_bitswap" "libp2p-bitswap-next?/compat") ("libp2p_bitswap" "dep:libp2p-bitswap-next") ("experimental_stream" "dep:libp2p-stream") ("beetle_bitswap" "dep:beetle-bitswap-next")))) (r "1.70")))

