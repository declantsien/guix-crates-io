(define-module (crates-io ru st rustpython-stdlib) #:use-module (crates-io))

(define-public crate-rustpython-stdlib-0.3.0 (c (n "rustpython-stdlib") (v "0.3.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "ascii") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.9") (d #t) (k 0)) (d (n "csv-core") (r "^0.1.10") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dyn-clone") (r "^1.0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.23") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gethostname") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.133") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.25") (f (quote ("min_sqlite_version_3_7_16" "bundled"))) (d #t) (t "cfg(not(any(target_os = \"android\", target_arch = \"wasm32\")))") (k 0)) (d (n "libz-sys") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1.3") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"android\", target_os = \"windows\", target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "malachite-bigint") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "memchr") (r "^2.4.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.4") (d #t) (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "mt19937") (r "^2.0.1") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-probe") (r "^0.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-sys") (r "^0.9.80") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "page_size") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "puruspe") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rustpython-common") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-vm") (r "^0.3.0") (d #t) (k 0)) (d (n "schannel") (r "^0.1.19") (d #t) (t "cfg(windows)") (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.4") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "termios") (r "^0.3.3") (d #t) (t "cfg(all(unix, not(target_os = \"redox\"), not(target_os = \"ios\")))") (k 0)) (d (n "ucd") (r "^0.1.1") (d #t) (k 0)) (d (n "unic-char-property") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-age") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-bidi") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-category") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-ident") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_names2") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v1" "fast-rng" "macro-diagnostics"))) (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"android\", target_os = \"windows\", target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winsock2" "handleapi" "ws2def" "std" "winbase" "wincrypt" "fileapi" "processenv" "namedpipeapi" "winnt" "processthreadsapi" "errhandlingapi" "winuser" "synchapi" "wincon" "impl-default" "vcruntime" "ifdef" "netioapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xml-rs") (r "^0.8.14") (d #t) (k 0)))) (h "0shpn98lms722v1sswafjkdbrah6384x925kbj6fb103bzhs9sdf") (f (quote (("zlib" "libz-sys" "flate2/zlib") ("threading" "rustpython-common/threading" "rustpython-vm/threading") ("ssl-vendor" "ssl" "openssl/vendored" "openssl-probe") ("ssl" "openssl" "openssl-sys" "foreign-types-shared") ("bz2" "bzip2"))))))

(define-public crate-rustpython-stdlib-0.3.1 (c (n "rustpython-stdlib") (v "0.3.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "ascii") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.19") (d #t) (k 0)) (d (n "csv-core") (r "^0.1.10") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "dns-lookup") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dyn-clone") (r "^1.0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gethostname") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.25") (f (quote ("min_sqlite_version_3_7_16" "bundled"))) (d #t) (t "cfg(not(any(target_os = \"android\", target_arch = \"wasm32\")))") (k 0)) (d (n "libz-sys") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1.3") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"android\", target_os = \"windows\", target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "malachite-bigint") (r "^0.2.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.4") (d #t) (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "mt19937") (r "^2.0.1") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("fs" "user" "process" "term" "time" "signal" "ioctl" "socket" "sched" "zerocopy" "dir" "hostname" "net" "poll"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.62") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-probe") (r "^0.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-sys") (r "^0.9.80") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "page_size") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "puruspe") (r "^0.2.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rustpython-common") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-vm") (r "^0.3.1") (f (quote ("compiler"))) (k 0)) (d (n "schannel") (r "^0.1.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "socket2") (r "^0.5.4") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "termios") (r "^0.3.3") (d #t) (t "cfg(all(unix, not(target_os = \"redox\"), not(target_os = \"ios\")))") (k 0)) (d (n "ucd") (r "^0.1.1") (d #t) (k 0)) (d (n "unic-char-property") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-age") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-bidi") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-category") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-ident") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_names2") (r "^1.1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v1" "fast-rng" "macro-diagnostics"))) (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"android\", target_os = \"windows\", target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "widestring") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winsock2" "ifdef" "netioapi" "ws2tcpip"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Networking_WinSock" "Win32_NetworkManagement_IpHelper" "Win32_NetworkManagement_Ndis" "Win32_Security_Cryptography"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xml-rs") (r "^0.8.14") (d #t) (k 0)))) (h "0y1mw1f7h3rg276xkvjp0br17fc4hdlyxrr8wps5wy35c5v7bhal") (f (quote (("zlib" "libz-sys" "flate2/zlib") ("threading" "rustpython-common/threading" "rustpython-vm/threading") ("ssl-vendor" "ssl" "openssl/vendored" "openssl-probe") ("ssl" "openssl" "openssl-sys" "foreign-types-shared") ("bz2" "bzip2"))))))

