(define-module (crates-io ru st rusticsearch) #:use-module (crates-io))

(define-public crate-rusticsearch-0.0.1 (c (n "rusticsearch") (v "0.0.1") (d (list (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 0)) (d (n "kite") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "persistent") (r "^0.2.0") (d #t) (k 0)) (d (n "roaring") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^0.6") (d #t) (k 0)) (d (n "slog-term") (r "^0.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^1.1.1") (d #t) (k 0)))) (h "0rxhsx43njcg7bpbx5dh3ga528yb9xkyrnajpiz31la12pycim8a")))

(define-public crate-rusticsearch-0.0.2 (c (n "rusticsearch") (v "0.0.2") (d (list (d (n "atomicwrites") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 0)) (d (n "kite") (r "^0.1.0") (d #t) (k 0)) (d (n "kite_rocksdb") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "persistent") (r "^0.2.0") (d #t) (k 0)) (d (n "roaring") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "slog") (r "^0.6") (d #t) (k 0)) (d (n "slog-term") (r "^0.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.3") (f (quote ("v4"))) (d #t) (k 0)))) (h "10804x986i2lvm5aj0i6gf523g9ryfd0qis46rfdffka5flxrgb5")))

