(define-module (crates-io ru st rusttype) #:use-module (crates-io))

(define-public crate-rusttype-0.1.0 (c (n "rusttype") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.3.13") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.1.0") (d #t) (k 0)))) (h "10hwc2f22i2k42pk2xfip488lvmjff1yx4ipyhy8xnhkdjqm36ij")))

(define-public crate-rusttype-0.1.1 (c (n "rusttype") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.3.13") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.1.1") (d #t) (k 0)))) (h "18dw1b2ry9fdl0hd69541zqy75gb1ab18l47ld1j5p59qf0djli0")))

(define-public crate-rusttype-0.1.2 (c (n "rusttype") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.3.13") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.1.2") (d #t) (k 0)))) (h "05zyqd4jygsa6jj6ml60swmbybfz1xn7ashc0abvmddmnf6q9f07")))

(define-public crate-rusttype-0.2.0 (c (n "rusttype") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.3.13") (d #t) (k 0)) (d (n "glium") (r "^0.13.5") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.3") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.2") (d #t) (k 2)))) (h "0k25gpzwmf4zz2n15d7kfr0j25hs5bx9qd5ja3lm6b934iv452wf")))

(define-public crate-rusttype-0.2.1 (c (n "rusttype") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.3.13") (d #t) (k 0)) (d (n "glium") (r "^0.14") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.0.10") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.2") (d #t) (k 2)))) (h "0zkrlyyp1ifs3f16xmqx18g2gc4280mdm12ybrpmmk5hjgy4zin3")))

(define-public crate-rusttype-0.2.2 (c (n "rusttype") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1p0qxwxvrpzmxsv2p8w7hhxcjfmczjjci8fbqw2siby5qwj7m36p") (f (quote (("bench"))))))

(define-public crate-rusttype-0.2.3 (c (n "rusttype") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1ccwr3i613vf5m9mnlq707cqad1wz1wmrmicpx1f12m78z3pq11h") (f (quote (("bench"))))))

(define-public crate-rusttype-0.3.0 (c (n "rusttype") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1i8c8sz49m8w5lyfsh51bab07v3jwlvx8cwl8s7951vypi1ffmc8") (f (quote (("bench"))))))

(define-public crate-rusttype-0.3.1 (c (n "rusttype") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "image") (r "^0.16.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1l90nr7jq1njln68imm2swmgw0v1liswp2k0vyhh67y7x4ckazyx") (f (quote (("gpu_cache" "linked-hash-map") ("bench")))) (y #t)))

(define-public crate-rusttype-0.4.0 (c (n "rusttype") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "image") (r "^0.16.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0mw5bfcamn61qq3jm11541mcha6zzvs535g4sc7gd24rs41q751b") (f (quote (("gpu_cache" "linked-hash-map") ("bench"))))))

(define-public crate-rusttype-0.4.1 (c (n "rusttype") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "image") (r "^0.16.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1jmlczw44w47qh9c5z7jsgqnj8vncdlpbd6h1d443431l4nd7wr4") (f (quote (("gpu_cache" "linked-hash-map") ("bench"))))))

(define-public crate-rusttype-0.4.3 (c (n "rusttype") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.20") (d #t) (k 2)) (d (n "image") (r "^0.18") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "16aryqlcqwsrqg3kpf8kl1pbv6pz0gnmxiayxsxl1lzn0bd07zqi") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.5.0 (c (n "rusttype") (v "0.5.0") (d (list (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.20") (d #t) (k 2)) (d (n "image") (r "^0.18") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1hi22sgix34zx9ddpcvkj98anhvkg32vi65m0a096h839qbzxi60") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.5.1 (c (n "rusttype") (v "0.5.1") (d (list (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.20") (d #t) (k 2)) (d (n "image") (r "^0.18") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "028f4jgw6xr6iwy5rg9zbsz01d3rkx4g4j5961myk9v7zwnpxaj8") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.5.2 (c (n "rusttype") (v "0.5.2") (d (list (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.20") (d #t) (k 2)) (d (n "image") (r "^0.18") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0kak78a77rfynl9y3h13y8kshdyc11yzr76fb2rhh3ij484y8rs6") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.0 (c (n "rusttype") (v "0.6.0") (d (list (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.21") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0qhzgj03nli1z469pm8kk8dzxkypnrn2bj5d5lmy2r9cvx112mmm") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.1 (c (n "rusttype") (v "0.6.1") (d (list (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "fnv") (r "^1") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.21") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0ah7slhw664g1lh1970a57d9c79bliyiilyaav4v0laf6fg653id") (f (quote (("gpu_cache" "linked-hash-map" "fnv") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.2 (c (n "rusttype") (v "0.6.2") (d (list (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "glium") (r "^0.21") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0m64m6xvgvcn94h7mbmwfxkcbgkh6601dbb9mdmnyr05lsz9zpwc") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.3 (c (n "rusttype") (v "0.6.3") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0jw1xfgi5r0p8k110dn6ksg32flgsxap3pbhw634fa6nv269hlai") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.4 (c (n "rusttype") (v "0.6.4") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1xph18alz6n7by9inkbgzaljdxvm9p1hzf8w5af4kh93vsans82m") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.0 (c (n "rusttype") (v "0.7.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "09yk9jqlxw48nrld36ai7hbhh7na37daxnymz5dz5f4jr8p1dslp") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.6.5 (c (n "rusttype") (v "0.6.5") (d (list (d (n "approx") (r "^0.3") (k 2)) (d (n "arrayvec") (r "^0.4") (k 2)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.7") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1i8pb5c7lcjdr0hqsbhbbkphrmcdm6h8sa61sfxg8wyk2pnrj21j") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.1 (c (n "rusttype") (v "0.7.1") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "09cdbcm6qbrfmq3qrxnn9ghm8g340cmnmmlms6p296jkw8zl85cl") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.2 (c (n "rusttype") (v "0.7.2") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.7") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.19") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "087b1vys0qx0z0bb8sp4hc73933dci13yj5i5z58x359n3si3sxq") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.3 (c (n "rusttype") (v "0.7.3") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.22") (d #t) (k 2)) (d (n "image") (r "^0.20") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0986lg4lc2xq3fx0yps05fw6vq8fg2bfvhvp257g290d1np6fv23") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.4 (c (n "rusttype") (v "0.7.4") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.23") (d #t) (k 2)) (d (n "image") (r "^0.21") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1crirgx9cca11nnp8sr3pzp1mbp17k5rqg1pdmb2ryx5gingd45f") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.5 (c (n "rusttype") (v "0.7.5") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.23") (d #t) (k 2)) (d (n "image") (r "^0.21") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "12x3jsfdm32krlhpc4prm0v99wcp3vn1qvfaicz5ncbv0ni2cfff") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.6 (c (n "rusttype") (v "0.7.6") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glium") (r "^0.24") (d #t) (k 2)) (d (n "image") (r "^0.21") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0jnw3jixs9zl1cwqk9a6fk85nni4ja9mab7pd44rcir6pf2ix595") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.7.7 (c (n "rusttype") (v "0.7.7") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glium") (r "^0.25") (d #t) (k 2)) (d (n "image") (r "^0.21") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0f8ip0xkdsnzv4763whm07yg08713icgcz0hi8k4n1q53bb06hb5") (f (quote (("gpu_cache" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.2.4 (c (n "rusttype") (v "0.2.4") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "glium") (r "^0.17") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "0nk9p3n20zk8iq3j7x1c79wv6dkpclqr46mhf68mgba54kkjkmyq") (f (quote (("bench"))))))

(define-public crate-rusttype-0.7.8 (c (n "rusttype") (v "0.7.8") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.1.4") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.2.7") (k 0)))) (h "075crxap2f33xgl68i42fbc3kn4pfqlskymc3ajm9f8fy3555jai") (f (quote (("std" "has-atomics" "stb_truetype/std") ("libm-math" "libm" "stb_truetype/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std" "has-atomics")))) (y #t)))

(define-public crate-rusttype-0.8.0 (c (n "rusttype") (v "0.8.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.4") (k 0)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.1.4") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.3") (k 0)))) (h "0hk9j3fghwf6kgxkynhs2gprvlmvrylkyacyqfb05k0dz56pvih7") (f (quote (("std" "has-atomics" "stb_truetype/std") ("libm-math" "libm" "stb_truetype/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std" "has-atomics"))))))

(define-public crate-rusttype-0.7.9 (c (n "rusttype") (v "0.7.9") (d (list (d (n "arrayvec") (r "^0.4") (k 2)) (d (n "blake2") (r "^0.8") (d #t) (k 2)) (d (n "glium") (r "^0.25") (d #t) (k 2)) (d (n "image") (r "^0.21") (f (quote ("png_codec"))) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rusttype_next") (r "^0.8") (d #t) (k 0) (p "rusttype")) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 2)))) (h "1m9ms4p94cgif74y1rzkj04rx8i1la193c0jgvnip61rd904429i") (f (quote (("gpu_cache" "rusttype_next/gpu_cache") ("bench" "gpu_cache"))))))

(define-public crate-rusttype-0.8.1 (c (n "rusttype") (v "0.8.1") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.5") (k 0)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.1.4") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.3") (k 0)))) (h "1vslcmgxmb1k8xfba2jvg2d1nbq1nmf75qhmz5kzpwnbnl38b8vg") (f (quote (("std" "has-atomics" "stb_truetype/std") ("libm-math" "libm" "stb_truetype/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std" "has-atomics"))))))

(define-public crate-rusttype-0.8.2 (c (n "rusttype") (v "0.8.2") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "arrayvec") (r "^0.5") (k 0)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.3.1") (k 0)))) (h "12hwfg85iii7sbgsyyr23yw862dzp7f8zwn9xv5iqydm5w1i3a8l") (f (quote (("std" "has-atomics" "stb_truetype/std") ("libm-math" "libm" "stb_truetype/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std" "has-atomics"))))))

(define-public crate-rusttype-0.8.3 (c (n "rusttype") (v "0.8.3") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ordered-float") (r "^1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "stb_truetype") (r "^0.3.1") (k 0)))) (h "1h5lyr61ffgg0wzp4yhc1fr5y83lzf3is17ixih7n7qhal842qcz") (f (quote (("std" "has-atomics" "stb_truetype/std") ("libm-math" "libm" "stb_truetype/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std" "has-atomics"))))))

(define-public crate-rusttype-0.9.0 (c (n "rusttype") (v "0.9.0") (d (list (d (n "ab_glyph_rasterizer") (r "^0.1.1") (k 0)) (d (n "approx") (r "^0.3") (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "ttf-parser") (r "^0.5") (k 0)))) (h "0j9031bhy5glm13lq1vang750xg3y5rjlkzihi3zydmmpbrf7js0") (f (quote (("std" "has-atomics" "ttf-parser/default" "ab_glyph_rasterizer/default") ("libm-math" "libm" "ab_glyph_rasterizer/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std"))))))

(define-public crate-rusttype-0.9.1 (c (n "rusttype") (v "0.9.1") (d (list (d (n "ab_glyph_rasterizer") (r "^0.1.1") (k 0)) (d (n "approx") (r "^0.3") (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "owned_ttf_parser") (r "^0.5.1") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)))) (h "047xhkfrnf3p69hq0iipy8c0j10hph48ajvy9nbicwms0wx7vgh3") (f (quote (("std" "has-atomics" "owned_ttf_parser/default" "ab_glyph_rasterizer/default") ("libm-math" "libm" "ab_glyph_rasterizer/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std"))))))

(define-public crate-rusttype-0.9.2 (c (n "rusttype") (v "0.9.2") (d (list (d (n "ab_glyph_rasterizer") (r "^0.1.1") (k 0)) (d (n "approx") (r "^0.3") (k 2)) (d (n "crossbeam-deque") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "owned_ttf_parser") (r "^0.6") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)))) (h "0ngcwn7d2dybjrylga3gpxm3k3mcw3m405hcp32iignhvrx74z6w") (f (quote (("std" "has-atomics" "owned_ttf_parser/default" "ab_glyph_rasterizer/default") ("libm-math" "libm" "ab_glyph_rasterizer/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std"))))))

(define-public crate-rusttype-0.9.3 (c (n "rusttype") (v "0.9.3") (d (list (d (n "ab_glyph_rasterizer") (r "^0.1.5") (k 0)) (d (n "approx") (r "^0.5") (k 2)) (d (n "crossbeam-deque") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "owned_ttf_parser") (r "^0.15") (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)))) (h "0rx9z8pdg9rxall8nlk9dwizgis1vk9kmdlmg55jad21l153gy1z") (f (quote (("std" "has-atomics" "owned_ttf_parser/default" "ab_glyph_rasterizer/default") ("libm-math" "libm" "ab_glyph_rasterizer/libm") ("has-atomics") ("gpu_cache" "std" "linked-hash-map" "rustc-hash" "crossbeam-deque" "crossbeam-utils" "num_cpus") ("default" "std"))))))

