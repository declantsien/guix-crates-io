(define-module (crates-io ru st rust_socketio) #:use-module (crates-io))

(define-public crate-rust_socketio-0.1.0 (c (n "rust_socketio") (v "0.1.0") (d (list (d (n "actix-rt") (r "^1.1.1") (d #t) (k 2)) (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0iz3bcyvplbg9lmk2bbrs1fqsv0qclzlpj8s7iasknk80szn66bh")))

(define-public crate-rust_socketio-0.1.1 (c (n "rust_socketio") (v "0.1.1") (d (list (d (n "actix-rt") (r "^2.0.0-beta.2") (d #t) (k 2)) (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1ibppx53fsi79wvbv5wfv3zgdsmcfdzz8h2y6j5svwqs7hgm1j5r")))

(define-public crate-rust_socketio-0.2.0 (c (n "rust_socketio") (v "0.2.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "websocket") (r "^0.26.2") (d #t) (k 0)))) (h "0shzp0y8nm7axwm2204lvmsmwfmf0sh5j1bymzjp4m1whw6n9fnh")))

(define-public crate-rust_socketio-0.2.1 (c (n "rust_socketio") (v "0.2.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "websocket") (r "^0.26.2") (d #t) (k 0)))) (h "0fc69hpg2bsjkp28cdscizq65l1vsjmggxhripi381j46cdv91fd")))

(define-public crate-rust_socketio-0.2.2 (c (n "rust_socketio") (v "0.2.2") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "websocket") (r "^0.26.2") (d #t) (k 0)))) (h "1rh53fl819h6xm2jd06w616dnggl5xxc87x7q04mm0wdcd162wsz")))

(define-public crate-rust_socketio-0.2.3 (c (n "rust_socketio") (v "0.2.3") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "websocket") (r "^0.26.2") (d #t) (k 0)))) (h "0kly02lnfsgf9masdbsn3n2yfri65g3fr60217shaf4gw4mxl0md")))

(define-public crate-rust_socketio-0.2.4 (c (n "rust_socketio") (v "0.2.4") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "websocket") (r "^0.26.2") (d #t) (k 0)))) (h "1ap6fax645fvf9z7l8rinmxj1sh6i1k4msdrnvy9n26wrlaw1yim")))

(define-public crate-rust_socketio-0.3.0-alpha.1 (c (n "rust_socketio") (v "0.3.0-alpha.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.0-alpha3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1mf2x8xgss3gax8kdw6265v1andw89ansvdh3wj1gc1hpg169bxd")))

(define-public crate-rust_socketio-0.3.0-alpha.2 (c (n "rust_socketio") (v "0.3.0-alpha.2") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.0-alpha3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.3.0-alpha.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1x0gnj5s0p7hm13ph14pp7a52wvv2rwljcpzyxdqgdzzpb2qc3sv")))

(define-public crate-rust_socketio-0.3.0-alpha.3 (c (n "rust_socketio") (v "0.3.0-alpha.3") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "11jjd2z98xbmvp92ki6y46kb3q7s9p50iwgichrfyc7srmrfrlh8")))

(define-public crate-rust_socketio-0.3.0 (c (n "rust_socketio") (v "0.3.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0csznbhja1qsav5hwzzqv5nyrydg51a62px7qk4kciapwh6nhbzj")))

(define-public crate-rust_socketio-0.3.1 (c (n "rust_socketio") (v "0.3.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1713f59gdhz39a3vp69lvbahmmbs0nibn5fyqbp2ad0jq20s95ji")))

(define-public crate-rust_socketio-0.4.0 (c (n "rust_socketio") (v "0.4.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3.0") (d #t) (k 0)))) (h "140vfnljjbzw4mz5fqd42yk9abq418c20zhdplicx8g56ifn1ibv")))

(define-public crate-rust_socketio-0.4.1 (c (n "rust_socketio") (v "0.4.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1dxp2bc9x1mqn6aa02bq80fhcig29l9ixf3wr27s26kq2999lpzp")))

(define-public crate-rust_socketio-0.4.1-alpha.1 (c (n "rust_socketio") (v "0.4.1-alpha.1") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.1-alpha.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1i9q1v5388ddam8plq12zizgdnnwvs3l223y0ivkwx1hdxyxsqxr") (f (quote (("default" "async") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

(define-public crate-rust_socketio-0.4.1-alpha.2 (c (n "rust_socketio") (v "0.4.1-alpha.2") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "byte") (r "^0.2.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.1-alpha.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0a3kqws1mlzfzkqdrir6pq3fjfanaxvw37mlfjbsj8kapvkar06r") (f (quote (("default" "async") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

(define-public crate-rust_socketio-0.4.2 (c (n "rust_socketio") (v "0.4.2") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0gmy4016xb97n8fgqy7dy5qvp5kdn8rvrhd1g2cahrvz27152lvl") (f (quote (("default" "async") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream")))) (y #t)))

(define-public crate-rust_socketio-0.4.3 (c (n "rust_socketio") (v "0.4.3") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0xyhdfvgpal6ir55msx7z2y5rv8xbsy7hxlq1ysh5iipc61macv2") (f (quote (("default") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

(define-public crate-rust_socketio-0.4.4 (c (n "rust_socketio") (v "0.4.4") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "0rvp2r08xpfhjpikhd60p0k4xmb9j7vxqm4zxg18knkj3x9wkcs8") (f (quote (("default") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

(define-public crate-rust_socketio-0.5.0 (c (n "rust_socketio") (v "0.5.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "0aa38bi749wwc7jszikml3flrgd8ycqknwsz18lqdr0pijwgnlgb") (f (quote (("default") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

(define-public crate-rust_socketio-0.6.0 (c (n "rust_socketio") (v "0.6.0") (d (list (d (n "adler32") (r "^1.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "backoff") (r "^0.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cargo-tarpaulin") (r "^0.18.5") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_engineio") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "07hyxvjl7rq4c3k6rpxs6axkw4cq7q6lr2hb7ixmcpc9vdr8cska") (f (quote (("default") ("async-callbacks" "rust_engineio/async-callbacks") ("async" "async-callbacks" "rust_engineio/async" "tokio" "futures-util" "async-stream"))))))

