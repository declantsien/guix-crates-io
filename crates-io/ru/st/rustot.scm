(define-module (crates-io ru st rustot) #:use-module (crates-io))

(define-public crate-rustot-0.2.0 (c (n "rustot") (v "0.2.0") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.2.0") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.2.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "smlang") (r "^0.4.0") (d #t) (k 0)))) (h "1grr9dckfrlhvwkhf55xqim4c5d4nsl67r9ii58454smn3vhgs0d") (f (quote (("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "ota_mqtt_data"))))))

(define-public crate-rustot-0.3.0 (c (n "rustot") (v "0.3.0") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.4.0") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "smlang") (r "^0.4.0") (d #t) (k 0)))) (h "0iksvl8q8dbyy0nr5wjxrimm80c531dii67pnazahb3wszlka2ax") (f (quote (("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("defmt-warn" "defmt-impl") ("defmt-trace" "defmt-impl") ("defmt-info" "defmt-impl") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl") ("defmt-error" "defmt-impl") ("defmt-default" "defmt-impl") ("defmt-debug" "defmt-impl") ("default" "ota_mqtt_data"))))))

(define-public crate-rustot-0.3.1 (c (n "rustot") (v "0.3.1") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.4.0") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "smlang") (r "^0.4.0") (d #t) (k 0)))) (h "1inx533mnjzv5srfkr057jcsikr17fcddz2nbbzck1f6yha6b7f0") (f (quote (("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("defmt-warn" "defmt-impl") ("defmt-trace" "defmt-impl") ("defmt-info" "defmt-impl") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl") ("defmt-error" "defmt-impl") ("defmt-default" "defmt-impl") ("defmt-debug" "defmt-impl") ("default" "ota_mqtt_data"))))))

(define-public crate-rustot-0.3.2 (c (n "rustot") (v "0.3.2") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.4.0") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "smlang") (r "^0.4.0") (d #t) (k 0)))) (h "14cva0c5gk96g978ccjiy0ffrh6k0v0sp679f0qghadim94dad4r") (f (quote (("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("defmt-warn" "defmt-impl") ("defmt-trace" "defmt-impl") ("defmt-info" "defmt-impl") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl") ("defmt-error" "defmt-impl") ("defmt-default" "defmt-impl") ("defmt-debug" "defmt-impl") ("default" "ota_mqtt_data"))))))

(define-public crate-rustot-0.4.0 (c (n "rustot") (v "0.4.0") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "ecdsa") (r "^0.13.4") (f (quote ("pkcs8"))) (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.6") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.6") (f (quote ("log"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 2)) (d (n "p256") (r "^0.10.1") (d #t) (k 2)) (d (n "pkcs8") (r "^0.8") (f (quote ("encryption" "pem"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "shadow-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "smlang") (r "^0.5.0") (d #t) (k 0)) (d (n "timebomb") (r "^0.1.2") (d #t) (k 2)))) (h "1dp5888zgb2cx30gz9m25pgcihqfgwp80kdjpjiznr91ssi4wp4b") (f (quote (("provision_cbor" "serde_cbor") ("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("graphviz" "smlang/graphviz") ("default" "ota_mqtt_data" "provision_cbor")))) (s 2) (e (quote (("std" "serde/std" "serde_cbor?/std") ("defmt" "dep:defmt" "mqttrust/defmt-impl" "heapless/defmt-impl"))))))

(define-public crate-rustot-0.4.1 (c (n "rustot") (v "0.4.1") (d (list (d (n "bitmaps") (r "^3.1") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "ecdsa") (r "^0.13.4") (f (quote ("pkcs8"))) (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.6") (d #t) (k 0)) (d (n "mqttrust_core") (r "^0.6") (f (quote ("log"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 2)) (d (n "p256") (r "^0.10.1") (d #t) (k 2)) (d (n "pkcs8") (r "^0.8") (f (quote ("encryption" "pem"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "shadow-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "smlang") (r "^0.5.0") (d #t) (k 0)) (d (n "timebomb") (r "^0.1.2") (d #t) (k 2)))) (h "1bln7l8ym8d996j0zhfphag077qnpyryhinsfrlch8qhwnwnq2s0") (f (quote (("provision_cbor" "serde_cbor") ("ota_mqtt_data" "serde_cbor") ("ota_http_data") ("graphviz" "smlang/graphviz") ("default" "ota_mqtt_data" "provision_cbor")))) (s 2) (e (quote (("std" "serde/std" "serde_cbor?/std") ("defmt" "dep:defmt" "mqttrust/defmt-impl" "heapless/defmt-impl"))))))

