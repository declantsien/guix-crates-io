(define-module (crates-io ru st rust-pipes) #:use-module (crates-io))

(define-public crate-rust-pipes-0.1.0 (c (n "rust-pipes") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "fastrand") (r "^2.0.1") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.1") (f (quote ("std" "js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "three-d") (r "^0.16.3") (d #t) (k 0)) (d (n "three-d-asset") (r "^0.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0r265k9pi41wqrsg46ybhn6b7adssjnw2ycayj0z2f85aic7678q")))

