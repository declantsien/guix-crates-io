(define-module (crates-io ru st rust-webvr) #:use-module (crates-io))

(define-public crate-rust-webvr-0.1.0 (c (n "rust-webvr") (v "0.1.0") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "06kb7xncmlbkb0dp3vqqwcvv4n4v407d3wiwl38ylqswfxa8f4vr") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.1.1 (c (n "rust-webvr") (v "0.1.1") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "07b271566xyxn2dzjpaksabxby1dgzybzbkicr664bh7x57lk32k") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.1.3 (c (n "rust-webvr") (v "0.1.3") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "03b281wlmb2fyh92vm4fq58wgjjsf9chpfdb0iy9qixwzcgd6fvk") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.1.4 (c (n "rust-webvr") (v "0.1.4") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1swb7597b6schbba94ivxi9s4fisya7ajc0wmcv9w4qgf1nk4na1") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.1.5 (c (n "rust-webvr") (v "0.1.5") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "07p6mwpvi0vk92rnbwk158jhl82qqvsbg7wmnr84jd6yx9q2f70g") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.2.0 (c (n "rust-webvr") (v "0.2.0") (d (list (d (n "cgmath") (r "^0.12") (d #t) (k 2)) (d (n "glium") (r "^0.15") (d #t) (k 2)) (d (n "image") (r "^0.10") (d #t) (k 2)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0wg22q1icn1krac1pds6cdpxyx7ykd7piwixipq4kkbny45mdq2a") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.3.0 (c (n "rust-webvr") (v "0.3.0") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1grxif33phxdlnn3z7fmzcfllmxk6qmgml3k4pfr1i3n9bn8x4gf") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.3.1 (c (n "rust-webvr") (v "0.3.1") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0ndb7qi4cihvslg9ngqvyrh5z5mz057w2a2m5jw9l0l6lz1w8ks5") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.3.2 (c (n "rust-webvr") (v "0.3.2") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1rgcr7acbswvgwfm81mdvsxwq18v958i0cb76hhyn5hrjhn0rwr2") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock")))) (y #t)))

(define-public crate-rust-webvr-0.4.0 (c (n "rust-webvr") (v "0.4.0") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "069bb74qcflf6ah8andh81rp54mc41lwqkbyfggrh9s63myf0fr6") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.5.0 (c (n "rust-webvr") (v "0.5.0") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0dwvlijzym3mg6hl2h8qiialvx04c2my6sjsnb4i8vpkkp2d1430") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.5.1 (c (n "rust-webvr") (v "0.5.1") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0zyc4zbzvg4d2rqzy3inz57wl80byd3rmyyr4jb2n2sc8xg4dpk1") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.6.0 (c (n "rust-webvr") (v "0.6.0") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "155drcrn9l1c8zbmkiln88m3dmic3f5wx9chrj4a75hbxny2faqv") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.6.1 (c (n "rust-webvr") (v "0.6.1") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0hlfg3wcshj7yk1lxy7n7g0i9kyi23kj2zjd8vwks8vndmdd1wxg") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.7.0 (c (n "rust-webvr") (v "0.7.0") (d (list (d (n "android_injected_glue") (r "^0.2.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0gwbqqznps6nj9dqhpbpmjfa4p5v5psaq2ycc612hy7fx1fd0ggr") (f (quote (("serde-serialization" "serde" "serde_derive") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.8.0 (c (n "rust-webvr") (v "0.8.0") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0ykx292vm3ayy7izyq8lw8cv31571zrpaz9miy6f6jz0i42q1bg2") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.8.1 (c (n "rust-webvr") (v "0.8.1") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.8.2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "00r0fhafggdb37ri3qg056k7gkf94429zwdc700f1xxiw10w0525") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.8.2 (c (n "rust-webvr") (v "0.8.2") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1al2qc3d7h29z5f8mfzxpdbs97lb5f9jflxca2l8784f8msq9bzg") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.0 (c (n "rust-webvr") (v "0.9.0") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9") (d #t) (k 0)))) (h "0xrkvn6ld5wl0df14xpsrcx1qqjm7iv0kpblp4zish9ch1238c6k") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.1 (c (n "rust-webvr") (v "0.9.1") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "0536qzn1qbk9x1gymbwi7nhsxfmmbxy1zwig7rz2dds9mf3x8801") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.2 (c (n "rust-webvr") (v "0.9.2") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "1s67gj0vy9if2ja7wgk38jlyaiwx2wvylpfix14adss9qmp28124") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.3 (c (n "rust-webvr") (v "0.9.3") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "1llnvqfsypd1xsaiy5zrfmv4s1qb6ak724qpx8mfm50fm4k98pv1") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.4 (c (n "rust-webvr") (v "0.9.4") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "16mpi5s02bvaq72jdf26k51a4x4zbrhzriqi6nbkwqkszwpmgay1") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.5 (c (n "rust-webvr") (v "0.9.5") (d (list (d (n "gl_generator") (r "^0.5.0") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "12bfwy7gshwgnap7v930mhm59dmqwpl4b2clcb9rgiqgi3nl9k4h") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.6 (c (n "rust-webvr") (v "0.9.6") (d (list (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "04yyr5pnrhajl0gnhwjsm39j1zcmx5xw4q1wsc9wr3vlm2drza11") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.7 (c (n "rust-webvr") (v "0.9.7") (d (list (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "1k942ly0v32lvgj7cqnvdm78rgwp5nlpbi04xbv117nsmcam22jg") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.8 (c (n "rust-webvr") (v "0.9.8") (d (list (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "1zs77w3xcwx1ai3qimy5d5vrn7lcw6fs82wy6n51qh4j8nwy1m33") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.9 (c (n "rust-webvr") (v "0.9.9") (d (list (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "0vhivh0rd7ia8ii894lmpd9jy65icfmgbxgadd3i5qbcipa7p1k8") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.10 (c (n "rust-webvr") (v "0.9.10") (d (list (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "1cmavq2x4p90aqq8sdbhq5arrwysa6c66pi2kljhbniwbidwwacn") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.11 (c (n "rust-webvr") (v "0.9.11") (d (list (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "12fzsgp6h5agz1rd5pk22dcz2zclxjl6873qk4scw4skfmmgskkg") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.12 (c (n "rust-webvr") (v "0.9.12") (d (list (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.2") (d #t) (k 0)))) (h "18j6vyk1vi78y180939dy9dmp4vhy4gfb9zkv1kzawm0r4saymck") (f (quote (("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.13 (c (n "rust-webvr") (v "0.9.13") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.3") (d #t) (k 0)))) (h "1c2xqq082mjza84hcmqqaaghmz2zn91pkw82kcqyakb53gdj5amq") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.14 (c (n "rust-webvr") (v "0.9.14") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.3") (d #t) (k 0)))) (h "0rdz2r9jczfa1xk588cgi46g9awka5jx3rp2q24786bcw0i31mjd") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.15 (c (n "rust-webvr") (v "0.9.15") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.3") (d #t) (k 0)))) (h "1f6csa5m96nn9frc0mafdwbvs7gnnqslz67lcm0zpvlvcac140ci") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.16 (c (n "rust-webvr") (v "0.9.16") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.3") (d #t) (k 0)))) (h "0xkbh3z2k2ks8zqsvymmvchd8j56xhszfq88wz8l1j8mcmrq96fc") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.9.17 (c (n "rust-webvr") (v "0.9.17") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.9.3") (d #t) (k 0)))) (h "19z9xhcm95fq1krwhdvxmcfg5hn1s2yy0n6117lkwymnz2rasky4") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.10.0 (c (n "rust-webvr") (v "0.10.0") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.10") (d #t) (k 0)))) (h "02cpnhns6snqs0z9f95cwd2ah0avibbn21r1228vp6iz8rh5q7lp") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.10.1 (c (n "rust-webvr") (v "0.10.1") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.10") (d #t) (k 0)))) (h "0wzlp8l26y99vbshrbff8m0pa34lwq72gqs7lwbwxqi7zibf2la2") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.10.2 (c (n "rust-webvr") (v "0.10.2") (d (list (d (n "bindgen") (r "^0.46") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.10.4") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0q1wcj6vbrh8hw5cjh6bm0qggmdn56rx5jbs54il7yl51p7h4x5b") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin" "winit") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.10.3 (c (n "rust-webvr") (v "0.10.3") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.10.4") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "02yhyhj137api02k38sxvd8cb8aj2prpq7bi8sjgrxrxwcfp77m5") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin" "winit") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.10.4 (c (n "rust-webvr") (v "0.10.4") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.10.4") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0xdqdx5clx1ifsaza254bgxm7gd823zy333ks65ff228vdj849nx") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin" "winit") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.0 (c (n "rust-webvr") (v "0.11.0") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.0") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "1ajgxw6x30h0kxjzxg5qmzpn41n8crwdw7ay5z8crgimf10jgj79") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin" "winit") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.1 (c (n "rust-webvr") (v "0.11.1") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.0") (d #t) (k 0)))) (h "05dbq18lm32gp9bh7qfynr8f5p8s1yzzd6r2w9yl1pys5n40xcy5") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.2 (c (n "rust-webvr") (v "0.11.2") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.0") (d #t) (k 0)))) (h "1zvgs629m53168l5wmcmra7wmy982m8cnk056d156yax7j75q89s") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.3 (c (n "rust-webvr") (v "0.11.3") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.1") (d #t) (k 0)))) (h "1yzrnml9vmm9bv25gh2psrz5qmbm5m7a11133x35nb6mzlwiq5vs") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.4 (c (n "rust-webvr") (v "0.11.4") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.1") (d #t) (k 0)))) (h "1alyaxmilfgc4xv6zpv2ndiisff0kqnyyiag295m4qmp85grk6l2") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.12.0 (c (n "rust-webvr") (v "0.12.0") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.12.0") (d #t) (k 0)))) (h "0cb9f29591cy1jar7h47iv5cbqaw3hy178kbgg0w2jss0iv4k84b") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.12.1 (c (n "rust-webvr") (v "0.12.1") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.12.0") (d #t) (k 0)))) (h "0d1s27xc0gan3qy6dqagygbp57j40lm4pxbw360dx2szk4ji1zx9") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.11.5 (c (n "rust-webvr") (v "0.11.5") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.11.1") (d #t) (k 0)))) (h "00psaszfzcm0ycj2zqv63a4596kbj9hyrfwc9nrby57dlwhp5aq8") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.12.2 (c (n "rust-webvr") (v "0.12.2") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.12.0") (d #t) (k 0)))) (h "01l05qxman89zjxhq1qnn5v6xr5jy9i95lppshfgajvyfdgi8fnv") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.13.0 (c (n "rust-webvr") (v "0.13.0") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.13.0") (d #t) (k 0)))) (h "15ni9p47c1p2bfm531ck1vfgcanlhh0mx2kqhdj4kjmcm9vqnqmb") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.14.0 (c (n "rust-webvr") (v "0.14.0") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.14") (d #t) (k 0)))) (h "08v7y876jhijc1y2hmj0c1n8bsbjha97i5sjnmixcdxxf6lxr6k4") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.14.1 (c (n "rust-webvr") (v "0.14.1") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.14") (d #t) (k 0)))) (h "1g3kjvj0piz2mb5mjrms1jc6sxy2h4wqyp7fx3wxyh45y379qz6h") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.14.2 (c (n "rust-webvr") (v "0.14.2") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.14") (d #t) (k 0)))) (h "0xl2vkd1nrral2hn34ynjb5niq714kijkrnljaz5sfjfvv027pd6") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.16.0 (c (n "rust-webvr") (v "0.16.0") (d (list (d (n "bindgen") (r "^0.49.0") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.16") (d #t) (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0n5ai5b7n21xi296i8q194m3l6y1rmkvm2rg8m5jdi954klx27gx") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam" "sparkle") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "sparkle" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.16.1 (c (n "rust-webvr") (v "0.16.1") (d (list (d (n "bindgen") (r "^0.51") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.16") (d #t) (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1kycrp6h7hgj70gm4vjvrh9kmy7r1wahblngz986kjnfkqv9csyc") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam" "sparkle") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "sparkle" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.17.0 (c (n "rust-webvr") (v "0.17.0") (d (list (d (n "bindgen") (r "^0.51") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.17") (d #t) (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0mw2vdf9kyb0z4qsycdnn5vf925m4qfxcj35896h47i7lnw65bzy") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam" "sparkle") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "sparkle" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.18.0 (c (n "rust-webvr") (v "0.18.0") (d (list (d (n "bindgen") (r "^0.51") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.17") (d #t) (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)))) (h "053ygk6a80hw04zkdj2d6zkrrdpxrmlrn6wjnwiss3kr4gzxygsr") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam" "sparkle") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "sparkle" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

(define-public crate-rust-webvr-0.19.0 (c (n "rust-webvr") (v "0.19.0") (d (list (d (n "bindgen") (r "^0.53") (d #t) (k 1)) (d (n "euclid") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "gvr-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ovr-mobile-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-webvr-api") (r "^0.17") (d #t) (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0cz6pggr2sjp6n18jh0ij400066s8r07f8azkqs2bxpy6jwxfrd9") (f (quote (("vrexternal") ("openvr" "libloading") ("oculusvr" "ovr-mobile-sys") ("mock") ("magicleap" "euclid" "gleam" "sparkle") ("googlevr" "gvr-sys") ("glwindow" "euclid" "gleam" "sparkle" "glutin") ("default" "vrexternal" "openvr" "mock"))))))

