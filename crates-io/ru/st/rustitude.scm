(define-module (crates-io ru st rustitude) #:use-module (crates-io))

(define-public crate-rustitude-0.1.0 (c (n "rustitude") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (f (quote ("openblas-static"))) (d #t) (k 0)) (d (n "nshare") (r "^0.9.0") (f (quote ("nalgebra" "ndarray"))) (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "polars") (r "^0.34.2") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)))) (h "1fk98czq4ghkzf0fn3lr9m3nj9g6h116pk93j11ngxl974a1rfwh")))

(define-public crate-rustitude-0.1.1 (c (n "rustitude") (v "0.1.1") (d (list (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)))) (h "1yl2nbyg6jq7ailx2kaxx1j7zmikv4zgicdb9imrszpibya01s76") (f (quote (("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-rustitude-0.1.2-beta.1 (c (n "rustitude") (v "0.1.2-beta.1") (d (list (d (n "accelerate-src") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "00gfhskknv09d7ikdnjlzsaid4rh4kr7y3c6ir2giqzcsb29q7a2") (f (quote (("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-rustitude-0.1.2-beta.2 (c (n "rustitude") (v "0.1.2-beta.2") (d (list (d (n "accelerate-src") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "1500fn0n5yzlbnvslkmrl4hbgyzgpdd2p1b2capgn7h5x5bnh86l") (f (quote (("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-rustitude-0.1.3 (c (n "rustitude") (v "0.1.3") (d (list (d (n "accelerate-src") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "0gvr1gjm914k5sx96jz1033lqc0y0b4wd3v69pm9ykqag8qprgza") (f (quote (("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-rustitude-0.2.0-alpha (c (n "rustitude") (v "0.2.0-alpha") (d (list (d (n "accelerate-src") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "anyinput") (r "^0.1.6") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polars") (r "^0.36.2") (f (quote ("parquet" "describe"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "0r44lvnjdqb3a1xm5558qawkx3dd9xiic6k2jqa76qcw8g2x5b9b") (f (quote (("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-rustitude-0.1.3-beta.2 (c (n "rustitude") (v "0.1.3-beta.2") (d (list (d (n "anyinput") (r "^0.1.6") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.10.0") (d #t) (k 0)) (d (n "argmin-math") (r "^0.4.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "gomez") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "ordered_hash_map") (r "^0.4.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "19a0r3ghgc8c1ppr71i1rgkjsrp8j9zqr4y5bgq63c17rj6if0hd") (f (quote (("simd"))))))

(define-public crate-rustitude-0.3.0 (c (n "rustitude") (v "0.3.0") (d (list (d (n "anyinput") (r "^0.1.6") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.10.0") (d #t) (k 0)) (d (n "argmin-math") (r "^0.4.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "gomez") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "ordered_hash_map") (r "^0.4.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "0z3hmk0g15wy6xvq67z465971n7xsh0g0piwss7202r8c2p0iqdj") (f (quote (("simd"))))))

(define-public crate-rustitude-0.3.1 (c (n "rustitude") (v "0.3.1") (d (list (d (n "anyinput") (r "^0.1.6") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "argmin") (r "^0.10.0") (d #t) (k 0)) (d (n "argmin-math") (r "^0.4.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("is_variant" "unwrap" "display"))) (k 0)) (d (n "gomez") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "ordered_hash_map") (r "^0.4.0") (d #t) (k 0)) (d (n "parquet") (r "^51.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sphrs") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "variantly") (r "^0.4.0") (d #t) (k 0)))) (h "1f42vivlsq9597szi2b69n0hd8xapb4kf67l2ryl23qz8vv9bz5z") (f (quote (("simd"))))))

(define-public crate-rustitude-0.3.2 (c (n "rustitude") (v "0.3.2") (d (list (d (n "pyo3") (r "^0.21.2") (f (quote ("abi3-py37"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rustitude-core") (r "^0.3.3") (d #t) (k 0)) (d (n "rustitude-gluex") (r "^0.1.3") (o #t) (d #t) (k 0)))) (h "1a8g9j6fdx2mpmlqsxx2jarpws45h0fwsmb8n2q41789d8n09zp1") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.3.3 (c (n "rustitude") (v "0.3.3") (d (list (d (n "pyo3") (r "^0.21.2") (f (quote ("abi3-py37"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rustitude-core") (r "^0.3.3") (d #t) (k 0)) (d (n "rustitude-gluex") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "02msmsmli50kp02iy3rgnr0bjihjszwz5l3q7bh58bwmjaw8mzik") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.3.4 (c (n "rustitude") (v "0.3.4") (d (list (d (n "pyo3") (r "^0.21.2") (f (quote ("abi3-py37"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rustitude-core") (r "^0.3.3") (d #t) (k 0)) (d (n "rustitude-gluex") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1f46qjmcbfg97kvyf60l43bzmislw5w5mla9yaiqvvhkmdaw8rc4") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.4.0 (c (n "rustitude") (v "0.4.0") (d (list (d (n "pyo3") (r "^0.21.2") (f (quote ("abi3-py37"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rustitude-core") (r "^1.0.0") (d #t) (k 0)) (d (n "rustitude-gluex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0xrcmwlp72qrn2wsixdbv6drjdrmvm47zg1qy2pzkrrvhig7qy9f") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.4.1 (c (n "rustitude") (v "0.4.1") (d (list (d (n "pyo3") (r "^0.21.2") (f (quote ("abi3-py37"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rustitude-core") (r "^1.0.0") (d #t) (k 0)) (d (n "rustitude-gluex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "08rjlc54xv8xg19znan38wwhr01dmf4dxsl83snirg52azyh5ny7") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.4.2 (c (n "rustitude") (v "0.4.2") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "rustitude-core") (r "^1.0.0") (k 0)) (d (n "rustitude-gluex") (r "^0.2.0") (o #t) (k 0)))) (h "1463lmhvy4jh16zc5wsjymnd1dakxxk62ap9z991ksdxxmak9pqs") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.4.3 (c (n "rustitude") (v "0.4.3") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "rustitude-core") (r "^1.0.0") (k 0)) (d (n "rustitude-gluex") (r "^0.2.0") (o #t) (k 0)))) (h "06h39b1wjdqxr4i852q3y6sz8hv7v50xqxfqz1q93b8r8h3l8h1p") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.5.0 (c (n "rustitude") (v "0.5.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustitude-core") (r "^1.1.0") (k 0)) (d (n "rustitude-gluex") (r "^0.3.0") (o #t) (k 0)))) (h "1c98jgjrs7s6r5cz7wz3q74aygmgn5wg8qjkr5wr3s9kxbnsx5yd") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

(define-public crate-rustitude-0.6.0 (c (n "rustitude") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustitude-core") (r "^2.0.0") (k 0)) (d (n "rustitude-gluex") (r "^0.4.0") (o #t) (k 0)))) (h "1aih544apfrmzb7ialirknra92iir0hsal41631x0chwvx1zvdgk") (f (quote (("default" "gluex")))) (s 2) (e (quote (("gluex" "dep:rustitude-gluex"))))))

