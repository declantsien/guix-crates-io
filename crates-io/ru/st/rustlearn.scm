(define-module (crates-io ru st rustlearn) #:use-module (crates-io))

(define-public crate-rustlearn-0.1.0 (c (n "rustlearn") (v "0.1.0") (d (list (d (n "bincode") (r "^0.4.0") (d #t) (k 2)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "1yrbr4pqn0svpn7hhkkx3qcmnpncq31ycfzwwlj60s2xgdwiirdf") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.2.0 (c (n "rustlearn") (v "0.2.0") (d (list (d (n "bincode") (r "^0.4.0") (d #t) (k 2)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "1ijlz25akh6g1ybld1rbyl1nnf107485xjs1hppinnjy34qjk4jh") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.3.0 (c (n "rustlearn") (v "0.3.0") (d (list (d (n "bincode") (r "^0.4.0") (d #t) (k 2)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "1rlawx1m1ncxsidhv53ccr8c9mij0cc9nqcx7nlr53awihiszjdc") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.3.1 (c (n "rustlearn") (v "0.3.1") (d (list (d (n "bincode") (r "^0.4.1") (d #t) (k 2)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "0553m2gbmphrgqa6b95rf8cnm5xpgwyls88gfrmbmph5n3q4n3lv") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.4.0 (c (n "rustlearn") (v "0.4.0") (d (list (d (n "bincode") (r "^0.4.1") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "1lvxsil30xjp47mxg0xpwkxa311lshigcil1k3il2pd16xgw3xhf") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.4.1 (c (n "rustlearn") (v "0.4.1") (d (list (d (n "bincode") (r "^0.4.1") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "096yad52ik1fkbndl2mrgs9q4d15drrf61iwbh0d890bmcpgmaq7") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.4.2 (c (n "rustlearn") (v "0.4.2") (d (list (d (n "bincode") (r "^0.6.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "0r3l21sw6can4z0c6z3n563dbx9mdqjsmlkwzb1aw0y0dd15l9qr") (f (quote (("bench") ("all_tests"))))))

(define-public crate-rustlearn-0.4.3 (c (n "rustlearn") (v "0.4.3") (d (list (d (n "bincode") (r "^0.6.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "19d53djlkz81a9a245f27q0h5cwfa2yilqyfnkzqyrza7mpbcwxa") (f (quote (("bench") ("all_tests")))) (l "libsvm")))

(define-public crate-rustlearn-0.5.0 (c (n "rustlearn") (v "0.5.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2.9") (d #t) (k 0)) (d (n "csv") (r "^0.14") (d #t) (k 2)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "hyper") (r "^0.7.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 2)))) (h "0v5dw1mp8bqx50147zb956vhhd0b26ghzp14w7wzy06m684rx1k5") (f (quote (("bench") ("all_tests")))) (l "libsvm")))

