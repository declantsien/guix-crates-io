(define-module (crates-io ru st rustfst) #:use-module (crates-io))

(define-public crate-rustfst-0.1.0 (c (n "rustfst") (v "0.1.0") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "04isf5zs10ai94lci6qx2kb4p6ig81m5pp7xrnhr8248d1b32w1a")))

(define-public crate-rustfst-0.1.1 (c (n "rustfst") (v "0.1.1") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "1kc2c5bm8731c8y2g80wk8iqywpbrbcq8fmbnvqs4afp2ycqv01g")))

(define-public crate-rustfst-0.1.2 (c (n "rustfst") (v "0.1.2") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0g7v82fdl6ha5159a8mqffvsxz664bij68p83pynyf76vihgnc2f")))

(define-public crate-rustfst-0.1.3 (c (n "rustfst") (v "0.1.3") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0mj0awr21zn96r46frvkirnnqnvhm2wbj248xpl2a057cyxvazwf")))

(define-public crate-rustfst-0.1.4 (c (n "rustfst") (v "0.1.4") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "1z03jn10rnxl58glk58scc564p7lv78nl4brfx9771pkpli84ffj")))

(define-public crate-rustfst-0.1.5 (c (n "rustfst") (v "0.1.5") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "11dvx3b8g5krg9x5z3i3bvz59lx1pgv5y5prl3c0msq975fn5d8i")))

(define-public crate-rustfst-0.1.6 (c (n "rustfst") (v "0.1.6") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "09d9mhzndvxjc4axd34rngnaf2z2xz2011yzbdm5kx6mp7xy0gkm")))

(define-public crate-rustfst-0.1.7 (c (n "rustfst") (v "0.1.7") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0c46p4nfrlaqx1bm8xnyv0fp9182aqwdnjaz1w8yz5x5kqczbvqs")))

(define-public crate-rustfst-0.2.0 (c (n "rustfst") (v "0.2.0") (d (list (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "128k6icp7vyins8b6lwvi08p6wif5hsyfn92zbbz2r1k50skwfvh")))

(define-public crate-rustfst-0.3.0 (c (n "rustfst") (v "0.3.0") (d (list (d (n "bimap") (r "^0.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10.0") (d #t) (k 0)))) (h "06l8j6lxd8l0qwliissikz50gd83wmynwa6j2283f7z6vh1mq10j")))

(define-public crate-rustfst-0.4.0 (c (n "rustfst") (v "0.4.0") (d (list (d (n "bimap") (r "^0.3.1") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1xps8bix84m6mxw17b50clq728grsw774drbzf96x9rb58ych4wz")))

(define-public crate-rustfst-0.5.0 (c (n "rustfst") (v "0.5.0") (d (list (d (n "bimap") (r "^0.3.1") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0x8fzhxh7y0i56qdiybvamfcbfr4i5vbhvxpzk8hixzpqbqskcbv")))

(define-public crate-rustfst-0.6.1 (c (n "rustfst") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0cgdzr8ijk07p4vs4q61pcgdwimvdg9wys63ih113mihi83q6xrj")))

(define-public crate-rustfst-0.6.2 (c (n "rustfst") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1qwq4z5xa5wprb4yiy6y0vrqs152a8vl8k8r649qbiy17vvb42jq")))

(define-public crate-rustfst-0.6.3 (c (n "rustfst") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "107h4h78mj5jlb8r3hzakvxb8bsa08nqahdl2x5j0a6v3k8clpi1")))

(define-public crate-rustfst-0.7.0 (c (n "rustfst") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1mmh8mav6mkn37fiaqwmnvbgv2p0kprkkvp2bkvdwhv0ijhpgg3v")))

(define-public crate-rustfst-0.7.1 (c (n "rustfst") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0mpxgrbgfpxq63czdhhhjwamhyaw1idnhhyi8vcqfxdynaj6504c")))

(define-public crate-rustfst-0.7.2 (c (n "rustfst") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0jc304vwp34k82yj2i90hl6a4d5v50vdiv7fl2qhdjq88nkbak65")))

(define-public crate-rustfst-0.7.3 (c (n "rustfst") (v "0.7.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "10izii939fj5j3aaawsv17p3mql7bbyq18bnc365i4yhba98y9a0")))

(define-public crate-rustfst-0.7.4 (c (n "rustfst") (v "0.7.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1kigd9v5cmvpy36g8b47c8yp28v6b2bvc3m1mdggzw7gmm0ls96k")))

(define-public crate-rustfst-0.8.0 (c (n "rustfst") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1bh1dixkbak9mx4al16zjzc7x6vazz57wk1rdakyphyy5rlnvmll") (f (quote (("state-label-u32") ("default"))))))

(define-public crate-rustfst-0.8.1 (c (n "rustfst") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0mdfqg88g8c5i0lgmxks0caj60p41pihy1hs3l1xm9ffjk2xjvk3") (f (quote (("state-label-u32") ("default"))))))

(define-public crate-rustfst-0.9.0 (c (n "rustfst") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1rkg54cq7f2nbh6kv06am333n7q16icsh6k5s1kpv2kg5zpa9gmh") (f (quote (("state-label-u32") ("default"))))))

(define-public crate-rustfst-0.9.1-alpha.6 (c (n "rustfst") (v "0.9.1-alpha.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1m7h7ka3cki34yagvcbcjg16z0gdi0vbsxc81830dcb2q8pzb4a4") (f (quote (("state-label-u32") ("default"))))))

(define-public crate-rustfst-0.9.1-alpha.8 (c (n "rustfst") (v "0.9.1-alpha.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "06gz6nws5aj32aba5x56h49c6rgnw4ap4m8grqpmy1yrshalvg5k") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.9.1-alpha.9 (c (n "rustfst") (v "0.9.1-alpha.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "020s0pdzhw4vjp8xqrydp6yij0fd8hzhjkrhj3sxw1qyijlkq947") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.9.1-alpha.10 (c (n "rustfst") (v "0.9.1-alpha.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1aj1kw94qa4an56518w4cndvzdnbhwp0likyirps4mk5xdlgbx21") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.9.1-alpha.11 (c (n "rustfst") (v "0.9.1-alpha.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0hbw4wj8wz0x5z2fqr69czqj5lb1f295mw7rm8dn8426zpnq7758") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.9.1-alpha.12 (c (n "rustfst") (v "0.9.1-alpha.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1wvg1bj4kx25n4zi1f88sna8rgnvz3gcbs6lrszwf1iabavppxgc") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.10.0 (c (n "rustfst") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0lndh93rqchiya08h1hlwz6yvcblk4d872gplwqa8vmscsb6m924") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.0 (c (n "rustfst") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0ldf35xiys5lxarn8yrl9hlmdknly09pzs12np3ijwpfhvwys9pn") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.1 (c (n "rustfst") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1iy76lk4cifffx7hp94q58j50p33a9b44lxp0rlh6kskcsh9jqnm") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.2 (c (n "rustfst") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "144w59gpalgiqv0pa4p5qwqcg9pb3d0xd32ns98idrq331cldgff") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.3 (c (n "rustfst") (v "0.11.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0wr49xrb51iy1865ayrzy1m3951ajfj7ccmqhmmgl65vm00ng5rk") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.4 (c (n "rustfst") (v "0.11.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0hxzvrgr2zsc5p2pwxyxaz2q9flzi5a1b3yyppqsp4427cm26fc2") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.5 (c (n "rustfst") (v "0.11.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0ghffs4mp7m6r5wp64135zghschsrm6hd8sn7rp4jylp4ijrwhyh") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.11.6 (c (n "rustfst") (v "0.11.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0yrrskpqv6d5pxxqc216mghf40aq0yjcn3891680y13ylymbvp0q") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.12.0 (c (n "rustfst") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1f3vqnrq6mymj6f1rxj6vn8yirwqpk0jdhr0a375d2z03xaz018s") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.0 (c (n "rustfst") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1xqrdmp88454j4539r7z45bsdjsb6vhrksz930g95a5jiq7gw0fm") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.1 (c (n "rustfst") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "00zl9rij9pkzp7ycd4mpy4bfh1wxhvmfnkd54acabpngj2wi7g7b") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.2 (c (n "rustfst") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0401ky3wg7sijp4xnldgf79cn0sfffvlkwic8ypp9aim7d388wa7") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.3 (c (n "rustfst") (v "0.13.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1jlhj8lbcda0d35dam3kn2ds6dmkbf48kfwi9imii6nnmjrgnrxn") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.4 (c (n "rustfst") (v "0.13.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0k6n070bxm0y2kcnlzsxjmm16kavmsrg4gql3ahjm4g3ysy2kvdj") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.5 (c (n "rustfst") (v "0.13.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0s44cnxdindiknpwpwfnl905k4lk2ndmxynp466miqwvibfvlgag") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-0.13.6 (c (n "rustfst") (v "0.13.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.3") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "19m9g0ac04ip69j4hxh4cs4siwfdl4qw0yf8db5nhx979nxbirmh") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-1.0.0 (c (n "rustfst") (v "1.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "0dqim27ncncyk12hinva131llsgv3i9c9x0bzldhvik8dnw3vghs") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

(define-public crate-rustfst-1.0.1 (c (n "rustfst") (v "1.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "binary-heap-plus") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (d #t) (k 0)) (d (n "counter") (r "^0.4") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4.0") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stable_bst") (r "^0.2") (d #t) (k 0)) (d (n "superslice") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1") (d #t) (k 0)))) (h "1sx3sz80mxwphxda5ybdf541jw6ynwfbfsm8r1i1gir7prw7rclr") (f (quote (("state-label-u32") ("default" "state-label-u32"))))))

