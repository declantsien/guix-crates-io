(define-module (crates-io ru st rustpython-vm) #:use-module (crates-io))

(define-public crate-rustpython-vm-0.1.0 (c (n "rustpython-vm") (v "0.1.0") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.6") (d #t) (k 0)) (d (n "caseless") (r "^0.2.1") (d #t) (k 0)) (d (n "crc") (r "^1.0.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "hexf") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^2.0.0") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.39") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "pwd") (r "^1") (d #t) (t "cfg(all(unix, not(target_os = \"android\")))") (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustc_version_runtime") (r "0.1.*") (d #t) (k 0)) (d (n "rustpython-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "rustpython-compiler") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "statrs") (r "^0.10.0") (d #t) (k 0)) (d (n "unic") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_names2") (r "^0.2.2") (d #t) (k 0)))) (h "1q6h0v8nm90m2r3ykccvf5p3mbsiq8fb2ly31k75vkd18fbgl8qg") (f (quote (("default" "rustpython-parser" "rustpython-compiler")))) (y #t)))

(define-public crate-rustpython-vm-0.1.1 (c (n "rustpython-vm") (v "0.1.1") (d (list (d (n "adler32") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "arr_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.6") (d #t) (k 0)) (d (n "caseless") (r "^0.2.1") (d #t) (k 0)) (d (n "chrono") (r "= 0.4.7") (d #t) (k 0)) (d (n "crc") (r "^1.0.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "flame") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flamer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gethostname") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "hexf-parse") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "lexical") (r "^2.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libz-sys") (r "^1.0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8") (d #t) (k 0)) (d (n "nix") (r "^0.14.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.41") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.39") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro-hack") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pwd") (r "^1") (d #t) (t "cfg(all(unix, not(any(target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustc_version_runtime") (r "0.1.*") (d #t) (k 0)) (d (n "rustpython-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "rustpython-compiler") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.26") (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "statrs") (r "^0.10.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.1.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unic") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_names2") (r "^0.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wtf8") (r "^0.0.3") (d #t) (k 0)))) (h "0il9jh2ar5yqafk24nmh6jqc5ldphyh21mxnykl464am7vwybcih") (f (quote (("vm-tracing-logging") ("use-proc-macro-hack" "proc-macro-hack" "rustpython-derive/proc-macro-hack") ("freeze-stdlib") ("flame-it" "flame" "flamer") ("default" "rustpython-parser" "rustpython-compiler" "use-proc-macro-hack")))) (y #t)))

(define-public crate-rustpython-vm-0.1.2 (c (n "rustpython-vm") (v "0.1.2") (d (list (d (n "adler32") (r "^1.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "arr_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "bstr") (r "^0.2.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.6") (d #t) (k 0)) (d (n "caseless") (r "^0.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind"))) (d #t) (k 0)) (d (n "crc") (r "^1.0.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 0)) (d (n "csv") (r "^1.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "flame") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flamer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (t "cfg(not(any(target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "foreign-types-shared") (r "^0.1") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hexf-parse") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lexical") (r "^4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libz-sys") (r "^1.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_os = \"redox\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8") (d #t) (k 0)) (d (n "mt19937") (r "^1.0") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.41") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.39") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (t "cfg(any(not(target_arch = \"wasm32\"), target_os = \"wasi\"))") (k 0)) (d (n "num_enum") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-probe") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl-sys") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "pwd") (r "^1") (d #t) (t "cfg(all(unix, not(any(target_os = \"android\", target_os = \"redox\"))))") (k 0)) (d (n "rand") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "result-like") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version_runtime") (r "0.1.*") (d #t) (k 0)) (d (n "rustpython-bytecode") (r "^0.1.1") (d #t) (k 0)) (d (n "rustpython-compiler") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rustyline") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schannel") (r "^0.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "serde") (r "^1.0.66") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "smallbox") (r "^0.8") (d #t) (k 0)) (d (n "socket2") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "statrs") (r "^0.12.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thread_local") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "unic-bidi") (r "^0.9") (d #t) (k 0)) (d (n "unic-char-property") (r "^0.9") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9") (d #t) (k 0)) (d (n "unic-ucd-age") (r "^0.9") (d #t) (k 0)) (d (n "unic-ucd-category") (r "^0.9") (d #t) (k 0)) (d (n "unic-ucd-ident") (r "^0.9") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1") (d #t) (k 0)) (d (n "unicode_names2") (r "^0.4") (d #t) (k 0)) (d (n "volatile") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winsock2" "handleapi" "ws2def" "std" "winbase" "wincrypt" "fileapi" "wincon"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winreg") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)))) (h "09lfk7y5m1jhcaf4gx3nwhs1dzpalw70j453bkd9nclwyg87lap6") (f (quote (("vm-tracing-logging") ("ssl" "openssl" "openssl-sys" "openssl-probe") ("freeze-stdlib") ("flame-it" "flame" "flamer") ("default" "rustpython-parser" "rustpython-compiler")))) (y #t)))

(define-public crate-rustpython-vm-0.3.0 (c (n "rustpython-vm") (v "0.3.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "ascii") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "caseless") (r "^0.2.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("wasmbind"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.9") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "flame") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "flamer") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "half") (r "^1.8.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.133") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "malachite-bigint") (r "^0.1.0") (d #t) (k 0)) (d (n "memchr") (r "^2.4.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(any(not(target_arch = \"wasm32\"), target_os = \"wasi\"))") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "optional") (r "^0.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "result-like") (r "^0.4.5") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustpython-ast") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rustpython-codegen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rustpython-common") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-compiler") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rustpython-compiler-core") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-format") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-jit") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rustpython-literal") (r "^0.3.0") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rustpython-parser-core") (r "^0.3.0") (d #t) (k 0)) (d (n "rustyline") (r "^11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schannel") (r "^0.1.19") (d #t) (t "cfg(windows)") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sre-engine") (r "^0.4.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 0)) (d (n "timsort") (r "^0.1.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "unic-ucd-bidi") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-category") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-ident") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_names2") (r "^0.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "which") (r "^4.2.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winsock2" "handleapi" "ws2def" "std" "winbase" "wincrypt" "fileapi" "processenv" "namedpipeapi" "winnt" "processthreadsapi" "errhandlingapi" "winuser" "synchapi" "wincon" "impl-default" "vcruntime" "ifdef" "netioapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_UI_Shell" "Win32_System_LibraryLoader" "Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winreg") (r "^0.10.1") (d #t) (t "cfg(windows)") (k 0)))) (h "16j10grvv407yaa83bazdasq6ykzsfkpj0pq7hqz2cs0hfcrxlz2") (f (quote (("vm-tracing-logging") ("threading" "rustpython-common/threading") ("parser" "rustpython-parser" "ast") ("jit" "rustpython-jit") ("importlib") ("freeze-stdlib" "encodings") ("flame-it" "flame" "flamer") ("encodings" "importlib") ("default" "compiler") ("compiler" "parser" "codegen" "rustpython-compiler") ("codegen" "rustpython-codegen" "ast") ("ast" "rustpython-ast")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-rustpython-vm-0.3.1 (c (n "rustpython-vm") (v "0.3.1") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "ascii") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "caseless") (r "^0.2.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (f (quote ("wasmbind"))) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.19") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "flame") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "flamer") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (f (quote ("js"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "half") (r "^1.8.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "malachite-bigint") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.7.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.1") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("fs" "user" "process" "term" "time" "signal" "ioctl" "socket" "sched" "zerocopy" "dir" "hostname" "net" "poll"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (t "cfg(any(not(target_arch = \"wasm32\"), target_os = \"wasi\"))") (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "optional") (r "^0.5.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "result-like") (r "^0.4.6") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustpython-ast") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustpython-codegen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustpython-common") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-compiler") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustpython-compiler-core") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-format") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-jit") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustpython-literal") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustpython-parser-core") (r "^0.3.1") (d #t) (k 0)) (d (n "rustpython-sre_engine") (r "^0.3.1") (d #t) (k 0)) (d (n "rustyline") (r "^14.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schannel") (r "^0.1.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "serde") (r "^1.0.133") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 0)) (d (n "timsort") (r "^0.1.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "unic-ucd-bidi") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-category") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd-ident") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-casing") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode_names2") (r "^1.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "which") (r "^4.2.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "widestring") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52.0") (f (quote ("Win32_Foundation" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_UI_Shell"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_Console" "Win32_System_Diagnostics_Debug" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Performance" "Win32_System_Pipes" "Win32_System_Registry" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winreg") (r "^0.10.1") (d #t) (t "cfg(windows)") (k 0)))) (h "13fj6y17mrj8qjqar015hqdn37z9ir2iwcxz9bsxw57rwk6aw16k") (f (quote (("vm-tracing-logging") ("threading" "rustpython-common/threading") ("parser" "rustpython-parser" "ast") ("jit" "rustpython-jit") ("importlib") ("freeze-stdlib" "encodings") ("flame-it" "flame" "flamer") ("encodings" "importlib") ("default" "compiler") ("compiler" "parser" "codegen" "rustpython-compiler") ("codegen" "rustpython-codegen" "ast") ("ast" "rustpython-ast")))) (s 2) (e (quote (("serde" "dep:serde"))))))

