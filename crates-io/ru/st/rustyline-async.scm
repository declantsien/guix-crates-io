(define-module (crates-io ru st rustyline-async) #:use-module (crates-io))

(define-public crate-rustyline-async-0.1.0 (c (n "rustyline-async") (v "0.1.0") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0fnf4hpmmjy9gjl5zn5xfd8g6l448lliq8zjdh75px7yybbh4j5q")))

(define-public crate-rustyline-async-0.1.1 (c (n "rustyline-async") (v "0.1.1") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0mcv97r43hpj30pb7nm1hnl5jcx1irpzv70fgq68dfxrcmqymsrs")))

(define-public crate-rustyline-async-0.1.2 (c (n "rustyline-async") (v "0.1.2") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "09lz35b62dp5s9n9w0nmpz81yjn2riyihip3zh774alp9q7vm6f3")))

(define-public crate-rustyline-async-0.2.0 (c (n "rustyline-async") (v "0.2.0") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0q8rc6v3dkj448rld8c8g5xwbbacf8w0ljfxpdl7y2azp1fz172r")))

(define-public crate-rustyline-async-0.2.1 (c (n "rustyline-async") (v "0.2.1") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "159px1hvbhqccrrr0rna4r16wdk6xpam52z395ign6rwfxjn8smj")))

(define-public crate-rustyline-async-0.2.2 (c (n "rustyline-async") (v "0.2.2") (d (list (d (n "crossterm") (r "^0.23.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "07pmq4x18cjmgg0gack6ss3isaj8bhxascp8q04f247i2c7v31cf")))

(define-public crate-rustyline-async-0.2.3 (c (n "rustyline-async") (v "0.2.3") (d (list (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0q9qxdrki7gayd13f3w0fnbxrm5ydaihhgpyjfk772rvfi9x09ck") (f (quote (("emacs") ("default" "emacs")))) (y #t)))

(define-public crate-rustyline-async-0.2.4 (c (n "rustyline-async") (v "0.2.4") (d (list (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "thingbuf") (r "^0.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "12day50fs5rvl64l8x65q5nhbrlin5nhp1nnx9pbf6hlh064ljjp") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.2.5 (c (n "rustyline-async") (v "0.2.5") (d (list (d (n "async-std") (r "^1.11.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0cmmvf5888ylhs0a59dmfwdvp15c1gzqnkz4ams07db6wlk861sf") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.2.6 (c (n "rustyline-async") (v "0.2.6") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.24") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0n0dsbypklwjxjy6ghs2h3p6abhcifdka6awdz54nvrp5wgzgfns") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.3.0 (c (n "rustyline-async") (v "0.3.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.25") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "07arzwjsadvg78pfssrxw7q0m69x321dw6d0fd6aqzvj5hns1q80") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.3.1 (c (n "rustyline-async") (v "0.3.1") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1pz1hg5kdjxr28pp1sv829ayggxikll0a4hbbl5fhphjr7x6rap6") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.3.2 (c (n "rustyline-async") (v "0.3.2") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0s3aizyfa0aga7rijy2cgml0b5q7gzr8n6pldwg7abkr6nch3676") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.3.3 (c (n "rustyline-async") (v "0.3.3") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1papsflf5v0vy2n2lq7lknq48380ikycg0g0slz3dh2sbii2dyfp") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.4.0 (c (n "rustyline-async") (v "0.4.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "04pscn8cs07llmnvfb6wa885zd5kxr6gmw45fn5gijjgc4h04xsp") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.4.1 (c (n "rustyline-async") (v "0.4.1") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "17lbvrq6wji92ddwhnaaiv2lf9941dk83k2kq80qrssw8r3l9jly") (f (quote (("emacs") ("default" "emacs"))))))

(define-public crate-rustyline-async-0.4.2 (c (n "rustyline-async") (v "0.4.2") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 2)) (d (n "thingbuf") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1m9p5dy1hrsjqg2z8hp4icp319d0lh8mqh55y2222fsij5iv0vlb") (f (quote (("emacs") ("default" "emacs"))))))

