(define-module (crates-io ru sv rusvid_core) #:use-module (crates-io))

(define-public crate-rusvid_core-0.2.0 (c (n "rusvid_core") (v "0.2.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.4") (d #t) (k 0)) (d (n "flo_curves") (r "^0.6.1") (d #t) (k 0)) (d (n "geo") (r "^0.23.1") (d #t) (k 0)) (d (n "glam") (r "^0.22.0") (f (quote ("approx"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "bmp" "jpeg"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "png") (r "^0.17.7") (d #t) (k 0)) (d (n "resvg") (r "^0.28.0") (k 0)) (d (n "rhai") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "js"))) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "image-compare") (r "^0.2.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)))) (h "0iz55p3n0vl9bh19xzs50bdvd2g05p7qhr4kwp3jkyhkdb0d3dbh") (s 2) (e (quote (("scripting" "dep:rhai"))))))

(define-public crate-rusvid_core-0.2.1 (c (n "rusvid_core") (v "0.2.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.4") (d #t) (k 0)) (d (n "flo_curves") (r "^0.6.1") (d #t) (k 0)) (d (n "geo") (r "^0.23.1") (d #t) (k 0)) (d (n "glam") (r "^0.22.0") (f (quote ("approx"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "bmp" "jpeg"))) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "png") (r "^0.17.7") (d #t) (k 0)) (d (n "resvg") (r "^0.28.0") (k 0)) (d (n "rhai") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "js"))) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "image-compare") (r "^0.2.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)))) (h "0a24bxr3n66sk7knadds5il5cw5c51jgqfwx5mmigp4kj0878pcg") (s 2) (e (quote (("scripting" "dep:rhai"))))))

