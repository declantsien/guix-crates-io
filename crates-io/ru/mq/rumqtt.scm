(define-module (crates-io ru mq rumqtt) #:use-module (crates-io))

(define-public crate-rumqtt-0.3.0 (c (n "rumqtt") (v "0.3.0") (d (list (d (n "chan") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mioco") (r "^0.7") (d #t) (k 0)) (d (n "mqtt-protocol") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.7") (f (quote ("tlsv1_1" "tlsv1_2"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0jh803sgm3g2xibsgj37pj10v1x44wfayylcszkn3jadwgaqygz5") (f (quote (("ssl" "openssl") ("default" "ssl"))))))

(define-public crate-rumqtt-0.5.0 (c (n "rumqtt") (v "0.5.0") (d (list (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mio") (r "^0.5") (d #t) (k 0)) (d (n "mqtt-protocol") (r "^0.1") (d #t) (k 0)) (d (n "openssl") (r "^0.7") (f (quote ("tlsv1_2"))) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0plz8izvvgkafpybqxf391mg1ba3q8y99p4akragw9v8xwxfvdx0")))

(define-public crate-rumqtt-0.10.0 (c (n "rumqtt") (v "0.10.0") (d (list (d (n "clippy") (r "^0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mqtt-protocol") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.9") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "10d9cyd8fy6z24958rpqaqq3pyn492i8297qsvdvig90ccljrip9")))

(define-public crate-rumqtt-0.10.1 (c (n "rumqtt") (v "0.10.1") (d (list (d (n "clippy") (r "^0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "mqtt-protocol") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.9") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (d #t) (k 0)))) (h "0mignr3sh49wb81cf98kmyqb3wfcwv9w34msni9sjy6s2a48wd0j")))

(define-public crate-rumqtt-0.30.0 (c (n "rumqtt") (v "0.30.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 2)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.13") (d #t) (k 0)) (d (n "envy") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mqtt311") (r "^0.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^0.1.9") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.7") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "webpki") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0c1ka547zyz2srci2smlm7z7dmq84xdk43rx5jn4pynyihq2b3k2") (f (quote (("rustls" "tokio-rustls" "webpki") ("nativetls" "native-tls" "tokio-tls") ("jwt" "jsonwebtoken" "chrono" "serde" "serde_derive") ("default" "rustls" "jwt") ("acknotify"))))))

(define-public crate-rumqtt-0.30.1 (c (n "rumqtt") (v "0.30.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 2)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.13") (d #t) (k 0)) (d (n "envy") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mqtt311") (r "^0.2") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^0.1.9") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2.7") (d #t) (k 0)) (d (n "tokio-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "webpki") (r "^0.18") (o #t) (d #t) (k 0)))) (h "076in98ri61jcan7q9lrzwwdqrwq840n9d9qjxysfh19w6prbnmy") (f (quote (("rustls" "tokio-rustls" "webpki") ("nativetls" "native-tls" "tokio-tls") ("jwt" "jsonwebtoken" "chrono" "serde" "serde_derive") ("default" "rustls" "jwt") ("acknotify"))))))

(define-public crate-rumqtt-0.31.0 (c (n "rumqtt") (v "0.31.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.13") (d #t) (k 0)) (d (n "envy") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "jsonwebtoken") (r ">= 5.0.1, <= 6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mqtt311") (r "^0.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^0.1.21") (f (quote ("codec" "io" "rt-full" "tcp" "timer"))) (k 0)) (d (n "tokio-rustls") (r ">= 0.8, <= 0.9") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "webpki") (r ">= 0.8, <= 0.19") (d #t) (k 0)))) (h "1hp64sw06z6w96zw6ninzy61nydqgnzd1zb29wbn8jlvzxh0bw42") (f (quote (("jwt" "jsonwebtoken" "chrono" "serde" "serde_derive") ("default" "jwt") ("acknotify"))))))

