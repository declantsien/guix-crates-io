(define-module (crates-io ru mq rumqttc-async-std) #:use-module (crates-io))

(define-public crate-rumqttc-async-std-0.5.0 (c (n "rumqttc-async-std") (v "0.5.0") (d (list (d (n "async-channel") (r "^1.5") (d #t) (k 0)) (d (n "async-io") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.6") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.11.0") (f (quote ("async-std-runtime" "async-tls"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "envy") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 2)) (d (n "rustls-native-certs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "ws_stream_tungstenite") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0fv53q7jv6d11ri3ahngl2pmkhirx5vqc5af42m6p3wy23lz7msz") (f (quote (("websocket" "async-tungstenite" "ws_stream_tungstenite"))))))

