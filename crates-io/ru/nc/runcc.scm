(define-module (crates-io ru nc runcc) #:use-module (crates-io))

(define-public crate-runcc-1.0.1 (c (n "runcc") (v "1.0.1") (d (list (d (n "clap") (r "^3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "000is8rmqrcwh7afdq707yv1gw8f1jhqhsmirv0ikls7pqp62r8g") (f (quote (("default" "cli") ("cli" "clap"))))))

(define-public crate-runcc-1.0.2 (c (n "runcc") (v "1.0.2") (d (list (d (n "clap") (r "^3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "15kvmiyh3dh6wn1z80hf1vmwr482nwha1k6rjbawsn99b9ndp8a7") (f (quote (("default" "cli") ("cli" "clap"))))))

(define-public crate-runcc-1.1.0 (c (n "runcc") (v "1.1.0") (d (list (d (n "clap") (r "^3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1zqhxqg5kywxgyb5l5zms47qqryhsvbaxmjjpsl0sbky9hg87vym") (f (quote (("default" "cli" "auto_ansi_escape") ("cli" "clap") ("auto_ansi_escape" "regex" "lazy_static"))))))

(define-public crate-runcc-1.1.2 (c (n "runcc") (v "1.1.2") (d (list (d (n "clap") (r "=3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0fycdlga72cbjz9hc1wnihdmi1g06r1izs5p8b10vz52a1648bym") (f (quote (("default" "cli" "auto_ansi_escape") ("cli" "clap" "clap_derive") ("auto_ansi_escape" "regex" "lazy_static"))))))

(define-public crate-runcc-2.0.0 (c (n "runcc") (v "2.0.0") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "trycmd") (r "^0.9.0") (d #t) (k 2)))) (h "1jmlwpaqp0wmdyf9sag43q33ndi691kypwpkhnbiv6j4xddbyzj2") (f (quote (("default" "cli" "auto_ansi_escape") ("cli" "clap") ("auto_ansi_escape" "regex" "lazy_static"))))))

(define-public crate-runcc-2.0.2 (c (n "runcc") (v "2.0.2") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "trycmd") (r "^0.9.0") (d #t) (k 2)))) (h "15a947r0id5mkh2ms4z6m2rz2ga1xrnwavxb9qnyn3kp3a1waw6f") (f (quote (("default" "cli" "auto_ansi_escape") ("cli" "clap") ("auto_ansi_escape" "regex" "lazy_static"))))))

(define-public crate-runcc-2.0.3 (c (n "runcc") (v "2.0.3") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("process" "macros" "rt" "sync" "signal" "io-util" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "trycmd") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1h8di20iixk56qxd7jdcqnhwx7j59b7mv9idhy0scm6bl2cjsk2s") (f (quote (("default" "cli" "auto_ansi_escape") ("cli" "clap") ("auto_ansi_escape" "regex" "lazy_static"))))))

