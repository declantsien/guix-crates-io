(define-module (crates-io ru na runa-core) #:use-module (crates-io))

(define-public crate-runa-core-0.0.1-alpha1 (c (n "runa-core") (v "0.0.1-alpha1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5.0") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dlv-list") (r "^0.5.0") (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.7") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.12") (d #t) (k 0)) (d (n "runa-io") (r "^0.0.1-alpha1") (d #t) (k 0)) (d (n "runa-macros") (r "^0.0.1-alpha1") (d #t) (k 0)) (d (n "runa-wayland-protocols") (r "^0.1.0") (d #t) (k 0)) (d (n "runa-wayland-types") (r "^0.1.0") (d #t) (k 0)) (d (n "rustix") (r "^0.37.3") (f (quote ("fs"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "1r6mfsgqi8arl6kz2rzhq8i61l4qy7q6l2m9g77psvrxmw724ii7") (f (quote (("default"))))))

