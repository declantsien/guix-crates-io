(define-module (crates-io ru na runa-io) #:use-module (crates-io))

(define-public crate-runa-io-0.0.1-alpha1 (c (n "runa-io") (v "0.0.1-alpha1") (d (list (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.24") (d #t) (k 0)) (d (n "futures-lite") (r "^1.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "runa-io-traits") (r "^0.0.1-alpha1") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "arbitrary") (r "^1.1.6") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3.24") (d #t) (k 2)) (d (n "futures-test") (r "^0.3.25") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng" "std"))) (k 2)) (d (n "runa-wayland-protocols") (r "^0.1.0") (d #t) (k 2)) (d (n "runa-wayland-types") (r "^0.1.0") (d #t) (k 2)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.15") (d #t) (k 2)))) (h "00b3izfwd719d9zsy46ys0dj3spjnfjbsj480hsbqazaifkra4kq")))

