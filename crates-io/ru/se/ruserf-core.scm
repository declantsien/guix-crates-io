(define-module (crates-io ru se ruserf-core) #:use-module (crates-io))

(define-public crate-ruserf-core-0.1.0 (c (n "ruserf-core") (v "0.1.0") (d (list (d (n "agnostic-lite") (r "^0.3") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-channel") (r "^2") (d #t) (k 0)) (d (n "async-graphql") (r "^7") (o #t) (d #t) (k 0)) (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("default"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "humantime-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "memberlist-core") (r "^0.2") (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "ruserf-types") (r "^0.1.0") (k 0)) (d (n "scopeguard") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "viewit") (r "^0.1.5") (d #t) (k 0)))) (h "055fm78cjnizs784mj04cq1y6ilc8iyssgg5gw8i4p1hz5dv75gp") (f (quote (("test" "memberlist-core/test" "paste" "tracing-subscriber" "tempfile") ("encryption" "memberlist-core/encryption" "ruserf-types/encryption" "base64" "serde") ("default" "metrics")))) (s 2) (e (quote (("serde" "dep:serde" "dep:humantime-serde" "memberlist-core/serde" "ruserf-types/serde" "smol_str/serde" "smallvec/serde" "indexmap/serde") ("metrics" "memberlist-core/metrics" "dep:metrics" "ruserf-types/metrics") ("async-graphql" "dep:async-graphql")))) (r "1.75.0")))

