(define-module (crates-io ru se ruserf-types) #:use-module (crates-io))

(define-public crate-ruserf-types-0.1.0 (c (n "ruserf-types") (v "0.1.0") (d (list (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "memberlist-types") (r "^0.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transformable") (r "^0.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "viewit") (r "^0.1.5") (d #t) (k 0)))) (h "19a4wia81ws2pgk3kz3s42n92f69z0nmzk6sl9dys25dyxf8kq97") (f (quote (("metrics" "memberlist-types/metrics") ("encryption" "memberlist-types/encryption" "futures")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde" "memberlist-types/serde" "smol_str/serde" "bitflags/serde")))) (r "1.75.0")))

