(define-module (crates-io xt as xtask-wasm) #:use-module (crates-io))

(define-public crate-xtask-wasm-0.1.0 (c (n "xtask-wasm") (v "0.1.0") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.0") (d #t) (k 0)))) (h "08p0dj2asvx3lr7wprzzgmrjsz3hk806l7yjrcph4nld0lq9xd5j") (f (quote (("wasm-opt" "binary-install" "platforms") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.1 (c (n "xtask-wasm") (v "0.1.1") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.1") (d #t) (k 0)))) (h "0rz2s0q37swryqvmv0mkmr2dkxvb298fpybpzps23ixikag11l36") (f (quote (("wasm-opt" "binary-install" "platforms") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.2 (c (n "xtask-wasm") (v "0.1.2") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1my78fsjlcs67jpynk9ysn1palfhy222hk8mmvkbszk8ydis5crb") (f (quote (("wasm-opt" "binary-install" "platforms") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.3 (c (n "xtask-wasm") (v "0.1.3") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0bx10bmh16y12n4c58rmqygc5cf2ghn40ddikv55nll0ir8ikqa2") (f (quote (("wasm-opt" "binary-install" "platforms") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.4 (c (n "xtask-wasm") (v "0.1.4") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0v01x372q95dld9al5kvydb49v66qmaxdssiq4d1ixrmqhhqj1rs") (f (quote (("wasm-opt" "binary-install" "platforms") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.5 (c (n "xtask-wasm") (v "0.1.5") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0y7i2jbfbjcwvplx0vnwcwks4nc6smn1nh3dy5f51dhh4qbgrf3j") (f (quote (("wasm-opt" "binary-install" "platforms") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.6 (c (n "xtask-wasm") (v "0.1.6") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "platforms") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "129y3mxv7p18n29acp8pss7c9cgn3c6lccglxvnx2v1nfdbfkbpl") (f (quote (("wasm-opt" "binary-install" "platforms") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.7 (c (n "xtask-wasm") (v "0.1.7") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qfjnyqqhyay3c4j48pn77jzs9y730b97jzq73h6lg8n4blr7jm9") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.8 (c (n "xtask-wasm") (v "0.1.8") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0xsqjg648injhkrj4xc058fk906s0as971kf0kz706fmf1myh648") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.9 (c (n "xtask-wasm") (v "0.1.9") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jhv8hg3ls6a66ywgwb8szs5kin01xi2sabnyfhvzanhhyzvymvk") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.1.10 (c (n "xtask-wasm") (v "0.1.10") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0d302z706j9xrk8yg6y7akpxpy3r3j50cxs6krhdbys37zs8kghn") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

(define-public crate-xtask-wasm-0.2.0 (c (n "xtask-wasm") (v "0.2.0") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ck5wfmy5w64q5dmclk5f4hhwf05fw2zcsgalfijl2yy2z75sss2") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (y #t) (r "1.58.1")))

(define-public crate-xtask-wasm-0.2.1 (c (n "xtask-wasm") (v "0.2.1") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "07chj3csb5pas7fh4w1n6r6msag04v0adz1ljwk7ksy2pq2sajnx") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (y #t) (r "1.58.1")))

(define-public crate-xtask-wasm-0.2.2 (c (n "xtask-wasm") (v "0.2.2") (d (list (d (n "binary-install") (r "^0.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sass-rs") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walrus") (r "^0.19.0") (f (quote ("parallel"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-cli-support") (r "^0.2.68") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "xtask-wasm-run-example") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "xtask-watch") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0yz2c5b7z6yg71vs3mfmczmvz1r6syk165a3i0ydzx8wbl90ns73") (f (quote (("wasm-opt" "binary-install") ("sass" "sass-rs" "walkdir") ("run-example" "xtask-wasm-run-example" "console_error_panic_hook" "wasm-bindgen" "env_logger")))) (r "1.58.1")))

