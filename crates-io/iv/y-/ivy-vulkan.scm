(define-module (crates-io iv y- ivy-vulkan) #:use-module (crates-io))

(define-public crate-ivy-vulkan-0.10.0 (c (n "ivy-vulkan") (v "0.10.0") (d (list (d (n "ash") (r "^0.35.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "glam") (r "^0.20") (d #t) (k 0)) (d (n "glfw") (r "^0.43.0") (f (quote ("vulkan"))) (d #t) (k 0)) (d (n "gpu-allocator") (r "^0.14.0") (d #t) (k 0)) (d (n "ivy-base") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-image") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-resources") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "records") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0ajcc0ydg6kv3p3cn80kfkrmkpgdsnxpb6r8h3k8n5ki8iabfp8g") (f (quote (("serialize" "serde" "glam/serde") ("default"))))))

(define-public crate-ivy-vulkan-0.10.3 (c (n "ivy-vulkan") (v "0.10.3") (d (list (d (n "ash") (r "^0.35.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "glfw") (r "^0.43.0") (f (quote ("vulkan"))) (d #t) (k 0)) (d (n "gpu-allocator") (r "^0.15.1") (d #t) (k 0)) (d (n "ivy-base") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-image") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-resources") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "records") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0qs4sds4p7xmj0qn0gangpqw0c7pckgnllyzzczjnn8c5jqpaz1p") (f (quote (("serialize" "serde" "glam/serde") ("default"))))))

