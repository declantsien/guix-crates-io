(define-module (crates-io iv y- ivy-base) #:use-module (crates-io))

(define-public crate-ivy-base-0.10.0 (c (n "ivy-base") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "derive-for") (r "^1.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.9") (d #t) (k 0)) (d (n "glam") (r "^0.20") (d #t) (k 0)) (d (n "hecs") (r "^0.7.3") (d #t) (k 0)) (d (n "ivy-random") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-resources") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "palette") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1pvb5flh2j4m7fywg63z59rfq3fsak72fwp1dd8wz73bp9gwrr6n") (f (quote (("serialize" "serde" "glam/serde" "palette/serializing") ("default"))))))

(define-public crate-ivy-base-0.10.3 (c (n "ivy-base") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "derive-for") (r "^1.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10.10") (d #t) (k 0)) (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "hecs") (r "^0.7.3") (d #t) (k 0)) (d (n "ivy-random") (r "^0.10.0") (d #t) (k 0)) (d (n "ivy-resources") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "palette") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0dywfgn1l05d1f3lkmljm3r34yq3vp6a45n25lbhz3klfzyjz3a0") (f (quote (("serialize" "serde" "glam/serde" "palette/serializing") ("default"))))))

