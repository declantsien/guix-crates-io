(define-module (crates-io sg p4 sgp4) #:use-module (crates-io))

(define-public crate-sgp4-0.1.0 (c (n "sgp4") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1d1yxznz7rcg8a4mf8jlwkvbzd98qzarpwbgdmgnvx4zschclgcs")))

(define-public crate-sgp4-0.2.0 (c (n "sgp4") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "01sn23fibwxzbyx5ldpw8glcckgjaa902xm9gmkssp1b7yw3n8d0")))

(define-public crate-sgp4-0.2.1 (c (n "sgp4") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "0fc7s3wyvkrf46c3ca4x3k5rcz0nqxwbikr7kqhg75z6m43garqb")))

(define-public crate-sgp4-0.3.0 (c (n "sgp4") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "0kanrw7l3k5b19dww6rihb4yz39rkar0f6jrigq263v2byag81hl")))

(define-public crate-sgp4-0.3.1 (c (n "sgp4") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "0ahwmpfs1q8j7akpw8a3szp0vyw83i426lli9ik9lydp18y4ynwj")))

(define-public crate-sgp4-0.4.0 (c (n "sgp4") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "1hpz6sxjlv59navivl446hsxjjk9f25w9w62nrp3gq1f3mzcpkfy")))

(define-public crate-sgp4-0.5.0 (c (n "sgp4") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.3.0") (f (quote ("json"))) (d #t) (k 2)))) (h "1w4sfk4zqmjb6222crrvfag9hyf3wk68q9i97k1sa9mklkz9brnc")))

(define-public crate-sgp4-0.6.0 (c (n "sgp4") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (d #t) (k 2)))) (h "0yycdyzbiz7apisb44ssnw3j29zpajw5l21psabvrgs0yzdddah8")))

(define-public crate-sgp4-0.6.1 (c (n "sgp4") (v "0.6.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (d #t) (k 2)))) (h "0aprs92sfz1kcb9ss3836argmhs4zd55b35saqjhfapllh9jnmcz")))

(define-public crate-sgp4-0.6.2 (c (n "sgp4") (v "0.6.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (d #t) (k 2)))) (h "0dn7r2758s31s29a5xangmwryqvy06a37h5w4qwjbbfwp5hzw08r")))

(define-public crate-sgp4-0.7.0 (c (n "sgp4") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("json"))) (d #t) (k 2)))) (h "1k9l1d2r340gq6k0ajp2bwvirzmfp2x0mfa7mzf0ybds5m1mlqp6")))

(define-public crate-sgp4-0.8.0 (c (n "sgp4") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("json"))) (d #t) (k 2)))) (h "0k36nvy6ibn7sa24663br4dq2h2mw0rlsiyfwafdhp9zsyhpxcgr") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-0.8.1 (c (n "sgp4") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("json"))) (d #t) (k 2)))) (h "0v3v2jl7897sbhm7h0w0fq251zy5dvq4zlpfhbg3in854pbn4ya5") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-0.8.2 (c (n "sgp4") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("json"))) (d #t) (k 2)))) (h "1vhk0wrrbk7ai36hg7fyfan7xhkc7sj7cx3j1gkqvwf8745zim07") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-0.9.0 (c (n "sgp4") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "1wna9vd6np42pjqaw7241ppv809c2pbhq1j5ba4r3cygsgz8c6m6") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-0.9.1 (c (n "sgp4") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "1664pkmymxs62qm8hpb0x644hadm74rwijli9yb0zgx1igj6ap1p") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-1.0.0 (c (n "sgp4") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "0c92pxihybq50dyxgazhar10xp39gdy0rrkw28jn3sff8fyp95l2") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-1.1.0 (c (n "sgp4") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "0x093p5lzdrhfk06xpjrzcv910sz4slnxldk06s15fp4kp02rgfa") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-1.2.0 (c (n "sgp4") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "1p14bh5a8c011q82nn7q1szi703m2nvpaj891a0i2zvlb5ibq857") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (y #t) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-1.2.1 (c (n "sgp4") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "060rvi4dr3wpisbg0kqwgmyj0ni7bw3jw9c55fgya6saxmgcgbr8") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (y #t) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-1.2.2 (c (n "sgp4") (v "1.2.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "ureq") (r "^2.6") (f (quote ("json"))) (d #t) (k 2)))) (h "0z3g4simbi7rwvqs60fmyr9ijzypg3jsgh3vi23hshgryda2ivk9") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-2.0.0 (c (n "sgp4") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "ureq") (r "^2.8") (f (quote ("json"))) (d #t) (k 2)))) (h "1slbw6j33l3g76isqhbm5zy2dslilyjphdl1ndwka8gsnzvb35jn") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-2.1.0 (c (n "sgp4") (v "2.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "ureq") (r "^2.8") (f (quote ("json"))) (d #t) (k 2)))) (h "18282gca5acfzvrjiqgbw17zy4b8vr0lsq7z1ij7bcf75hpyl3d9") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("libm" "num-traits/libm") ("default" "alloc" "serde" "std") ("alloc" "anyhow")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std"))))))

(define-public crate-sgp4-2.2.0 (c (n "sgp4") (v "2.2.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "chrono") (r "^0.4.38") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.19") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "toml") (r "^0.8.13") (d #t) (k 2)) (d (n "ureq") (r "^2.9.7") (f (quote ("json"))) (d #t) (k 2)))) (h "1wbwcdqdpdz5h9rq22qn366m5mgk4y0jhx3crznw3ydnfi21yjqy") (f (quote (("serde" "alloc" "chrono/serde" "serde/alloc" "serde/derive" "serde_json/alloc") ("default" "alloc" "std" "serde") ("alloc")))) (s 2) (e (quote (("std" "alloc" "anyhow/std" "chrono/std" "serde?/std" "serde_json?/std") ("libm" "dep:num-traits" "num-traits/libm"))))))

