(define-module (crates-io sg -m sg-marketplace-common) #:use-module (crates-io))

(define-public crate-sg-marketplace-common-1.0.0 (c (n "sg-marketplace-common") (v "1.0.0") (d (list (d (n "base-minter") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2.1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2.1") (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^1.2.1") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.0") (d #t) (k 2)) (d (n "cw-storage-macro") (r "^0.16.0") (d #t) (k 0)) (d (n "cw-storage-plus") (r "^0.16.0") (d #t) (k 0)) (d (n "cw-utils") (r "^0.16.0") (d #t) (k 0)) (d (n "cw2") (r "^0.16.0") (d #t) (k 0)) (d (n "cw721") (r "^0.16.0") (d #t) (k 0)) (d (n "cw721-base") (r "^0.16.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (k 0)) (d (n "sg-multi-test") (r "^2.1.0") (d #t) (k 2)) (d (n "sg-std") (r "^2.1.0") (d #t) (k 0)) (d (n "sg1") (r "^2.1.0") (d #t) (k 0)) (d (n "sg721") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "sg721-base") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "stargaze-fair-burn") (r "^1.0.4") (f (quote ("library"))) (d #t) (k 0)) (d (n "test-suite") (r "^2.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0adir6s9p3lkaqzmkjibybl087xjzzda729qxr8v5b705fh5dh0d") (f (quote (("library") ("backtraces" "cosmwasm-std/backtraces"))))))

(define-public crate-sg-marketplace-common-1.1.0 (c (n "sg-marketplace-common") (v "1.1.0") (d (list (d (n "base-minter") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2.1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2.1") (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^1.2.1") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.0") (d #t) (k 2)) (d (n "cw-storage-macro") (r "^0.16.0") (d #t) (k 0)) (d (n "cw-storage-plus") (r "^0.16.0") (d #t) (k 0)) (d (n "cw-utils") (r "^0.16.0") (d #t) (k 0)) (d (n "cw2") (r "^0.16.0") (d #t) (k 0)) (d (n "cw721") (r "^0.16.0") (d #t) (k 0)) (d (n "cw721-base") (r "^0.16.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (k 0)) (d (n "sg-multi-test") (r "^2.1.0") (d #t) (k 2)) (d (n "sg-std") (r "^2.1.0") (d #t) (k 0)) (d (n "sg1") (r "^2.1.0") (d #t) (k 0)) (d (n "sg721") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "sg721-base") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "stargaze-fair-burn") (r "^1.0.2") (f (quote ("library"))) (d #t) (k 0)) (d (n "test-suite") (r "^2.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "18cmzl2ly6q773vzs4alsm9ymg4myp2kkxq5biblxni3pwxwlxl5") (f (quote (("library") ("backtraces" "cosmwasm-std/backtraces"))))))

(define-public crate-sg-marketplace-common-1.2.0 (c (n "sg-marketplace-common") (v "1.2.0") (d (list (d (n "base-minter") (r "^2.1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.3") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw2") (r "^1.1.2") (d #t) (k 0)) (d (n "cw721") (r "^0.18.0") (d #t) (k 0)) (d (n "cw721-base") (r "^0.18.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "sg-multi-test") (r "^2.1.0") (d #t) (k 2)) (d (n "sg-std") (r "^2.1.0") (d #t) (k 0)) (d (n "sg1") (r "^2.1.0") (d #t) (k 0)) (d (n "sg721") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "sg721-base") (r "^2.1.0") (f (quote ("library"))) (d #t) (k 0)) (d (n "stargaze-fair-burn") (r "^1.0.4") (f (quote ("library"))) (d #t) (k 0)) (d (n "test-suite") (r "^2.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "11prcraqz0nyv1vwbjaxy2a2qz7ggd9vkrwvs5sqplvnxqr4j6g8") (f (quote (("library") ("backtraces" "cosmwasm-std/backtraces"))))))

