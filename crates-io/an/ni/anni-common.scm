(define-module (crates-io an ni anni-common) #:use-module (crates-io))

(define-public crate-anni-common-0.1.1 (c (n "anni-common") (v "0.1.1") (d (list (d (n "anni-artist") (r "^0.1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0.13") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "trash") (r "^2.0") (o #t) (d #t) (k 0)))) (h "1anx6c83a3yyv46rzdk40bh0iw3dgqz4izs6zh2v3b34gkn6qdcv") (f (quote (("default" "trash"))))))

(define-public crate-anni-common-0.1.2 (c (n "anni-common") (v "0.1.2") (d (list (d (n "anni-artist") (r "^0.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0.13") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "trash") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0b44hz88wg9x9xglnb8g8g1drjyr5bdkanhas2qzwspjkv6vgsx7") (f (quote (("default" "trash"))))))

(define-public crate-anni-common-0.1.3 (c (n "anni-common") (v "0.1.3") (d (list (d (n "anni-artist") (r "^0.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0.13") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "trash") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0swaa79hiy9sqnf4zcngrhxhy545f9z6lnw2dgr1rm6vyvidv37d") (f (quote (("default" "trash"))))))

(define-public crate-anni-common-0.1.4 (c (n "anni-common") (v "0.1.4") (d (list (d (n "anni-artist") (r "^0.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0.13") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "trash") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0iqryqc4ynrfbwx3gvynz0sbkn5zfwkahhylhxdhhc1rzdb2g4v0") (f (quote (("default" "trash"))))))

