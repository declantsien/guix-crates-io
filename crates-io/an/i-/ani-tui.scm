(define-module (crates-io an i- ani-tui) #:use-module (crates-io))

(define-public crate-ani-tui-0.1.0 (c (n "ani-tui") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "easy-scraper") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockall_double") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "user-error") (r "^1.2") (d #t) (k 0)) (d (n "with-macro") (r "^0.1") (d #t) (k 0)))) (h "07afh1wgmwn6d99ip81638r4q7gbqj8w89m9wnr53nnz2s44pgbk") (y #t)))

(define-public crate-ani-tui-0.1.1 (c (n "ani-tui") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "easy-scraper") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockall_double") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "user-error") (r "^1.2") (d #t) (k 0)) (d (n "with-macro") (r "^0.1") (d #t) (k 0)))) (h "0dlbdaqcqncq4qmgimjfkzyww1d4jmnjsw4ma44l1jwivcc0llvv")))

(define-public crate-ani-tui-0.2.0 (c (n "ani-tui") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "easy-scraper") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockall_double") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "user-error") (r "^1.2") (d #t) (k 0)) (d (n "with-macro") (r "^0.1") (d #t) (k 0)))) (h "0dm2qw23ld2zp9kdn8pfiq385486bj95iqgpwb19j21i9fs1vhwh")))

(define-public crate-ani-tui-0.2.1 (c (n "ani-tui") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "easy-scraper") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockall_double") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "user-error") (r "^1.2") (d #t) (k 0)) (d (n "with-macro") (r "^0.1") (d #t) (k 0)))) (h "1k27jz4ws3r6bw7rfjgw9iiw6psmbd2h32i7zcv01jdcjbp6ig2h")))

