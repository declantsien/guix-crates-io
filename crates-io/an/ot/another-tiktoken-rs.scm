(define-module (crates-io an ot another-tiktoken-rs) #:use-module (crates-io))

(define-public crate-another-tiktoken-rs-0.1.0 (c (n "another-tiktoken-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-openai") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)))) (h "176yznxx7c7swkg4a0ikdmgjv84n2sng836iry4zghjxmzvvljlz") (s 2) (e (quote (("python" "dep:pyo3") ("async-openai" "dep:async-openai")))) (r "1.72.0")))

(define-public crate-another-tiktoken-rs-0.1.1 (c (n "another-tiktoken-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-openai") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)))) (h "0plwqavj60qyvw5ax5v54qxmh0jq26w0p3kfbxd52vwm049fmrmw") (s 2) (e (quote (("python" "dep:pyo3") ("async-openai" "dep:async-openai")))) (r "1.70.0")))

(define-public crate-another-tiktoken-rs-0.1.2 (c (n "another-tiktoken-rs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-openai") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0255vzrqwz7ggb95ipmxqf9dlq0aiaq0dax5r01r9k73j0bpnzny") (s 2) (e (quote (("python" "dep:pyo3") ("async-openai" "dep:async-openai")))) (r "1.70.0")))

