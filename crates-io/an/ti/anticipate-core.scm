(define-module (crates-io an ti anticipate-core) #:use-module (crates-io))

(define-public crate-anticipate-core-0.1.0 (c (n "anticipate-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "1cyma2pg2zkqddv21xr6xfxqljcfkyqjihnwxagqj3qbkikvaf49")))

(define-public crate-anticipate-core-0.1.1 (c (n "anticipate-core") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "1pbbggjw08bnqlg9pmyxmxpm4xx71axi7jl859xdw157d96rbabi")))

(define-public crate-anticipate-core-0.2.0 (c (n "anticipate-core") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "09alw3cwgbc4vx9mvzlzllwjabhdbvgj59amnqn6n23f71kp7263")))

(define-public crate-anticipate-core-0.3.0 (c (n "anticipate-core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "1asv6hg22pv1ln0my1glkb43wbp90i9rq6bn135zjy5niw06h121")))

(define-public crate-anticipate-core-0.4.0 (c (n "anticipate-core") (v "0.4.0") (d (list (d (n "anticipate") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "comma") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "0ggkcs0gi30050jjgrs40id7zf942i3774dqsmfipnlz6phwh3xb")))

