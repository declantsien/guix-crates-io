(define-module (crates-io an ti anticipate) #:use-module (crates-io))

(define-public crate-anticipate-0.1.0 (c (n "anticipate") (v "0.1.0") (d (list (d (n "anticipate-core") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "wrap_help" "env"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "0ncgnfdl6abjqq2x26hillq9ldwxc3wqg81p4mbfv0217r8f4nic")))

(define-public crate-anticipate-0.2.0 (c (n "anticipate") (v "0.2.0") (d (list (d (n "anticipate-core") (r "^0.2") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "wrap_help" "env"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "1qk6ycgi8k07wqyk72g2a9hfhzax3gcawh18ifxkdvhv626wa7mq")))

(define-public crate-anticipate-0.3.0 (c (n "anticipate") (v "0.3.0") (d (list (d (n "anticipate-core") (r "^0.3") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "wrap_help" "env"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "0n413jrj4ng3dqsf9v90qxnz94kdx7kglvz9zi4hlzpwf7mjpi4d")))

(define-public crate-anticipate-0.8.0 (c (n "anticipate") (v "0.8.0") (d (list (d (n "async-io") (r "^1.9.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "conpty") (r "^0.5.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(unix)") (k 0)) (d (n "polling") (r "^2.3.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "ptyprocess") (r "^0.4.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)))) (h "0j4gsa6shl38vs9zi8hmxqzvdnc9vcck5xnv0bq0ccyv8jk8fk7a") (f (quote (("async" "futures-lite" "futures-timer" "async-io" "blocking" "async-trait")))) (s 2) (e (quote (("polling" "dep:polling" "dep:crossbeam-channel"))))))

(define-public crate-anticipate-0.8.1 (c (n "anticipate") (v "0.8.1") (d (list (d (n "async-io") (r "^1.9.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "conpty") (r "^0.5.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(unix)") (k 0)) (d (n "polling") (r "^2.3.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "ptyprocess") (r "^0.4.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)))) (h "0xccfix852x3swz8695vhbc37q3673914icq2hy0h3hjf852c5mx") (f (quote (("async" "futures-lite" "futures-timer" "async-io" "blocking" "async-trait")))) (s 2) (e (quote (("polling" "dep:polling" "dep:crossbeam-channel"))))))

(define-public crate-anticipate-0.9.0 (c (n "anticipate") (v "0.9.0") (d (list (d (n "conpty") (r "^0.5.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(unix)") (k 0)) (d (n "ptyprocess") (r "^0.4.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0k0yp4gi8yl6h1y61syvyici3gn8h7b1i92nw7i1a2wa7w5s4f3w")))

(define-public crate-anticipate-0.10.0 (c (n "anticipate") (v "0.10.0") (d (list (d (n "conpty") (r "^0.5.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(unix)") (k 0)) (d (n "ptyprocess") (r "^0.4.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hkx63lb4dv33gdm1bxz2akfiab5i0hg4hqvrihvm44r04b4hyjj")))

