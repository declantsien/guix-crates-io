(define-module (crates-io an ti anticipate-runner) #:use-module (crates-io))

(define-public crate-anticipate-runner-0.4.0 (c (n "anticipate-runner") (v "0.4.0") (d (list (d (n "anticipate") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "comma") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "1c95blx3baac7v3lzvwq2xbpnwz9fgq703jiisvbxfyl0ns2svkp")))

(define-public crate-anticipate-runner-0.5.0 (c (n "anticipate-runner") (v "0.5.0") (d (list (d (n "anticipate") (r "^0.9") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "comma") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "0h0nvvyd1sykpwmlspv0s25n6aynxffya8ac38zlrv44vs86bhcv")))

(define-public crate-anticipate-runner-0.5.1 (c (n "anticipate-runner") (v "0.5.1") (d (list (d (n "anticipate") (r "^0.10") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "comma") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "probability") (r "^0.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)))) (h "1qfcjzd2qb3a1dx0ijv5g2mxqmby5xj649hnyid7d8pwbdkm0aq9")))

