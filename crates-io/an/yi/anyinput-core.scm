(define-module (crates-io an yi anyinput-core) #:use-module (crates-io))

(define-public crate-anyinput-core-0.1.0 (c (n "anyinput-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "032h05396g3ihkzy0f9phq3yngnb6qvj5z06v8vw34gdakli60xr") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-anyinput-core-0.1.2 (c (n "anyinput-core") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "0pa16v9svy7ds0w506x2ppqx05y5ng2wr6yassrbj1332k08ijq9") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-anyinput-core-0.1.3 (c (n "anyinput-core") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "1vd9g9gg2xcsxrzalj73w0gnrgvzjwm3zy6mc0whqfb8k4lz8yjc") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-anyinput-core-0.1.4 (c (n "anyinput-core") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "0lbd2yhlha5i0ax5mc94nc721rmh1dywfil8ljxvmsigkcf4slbn") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-anyinput-core-0.1.5 (c (n "anyinput-core") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "0kcgbrmp992p6hhidbb9d0gj3gq3cwvc13dp2xqpq1mf0f3rnsc6") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-anyinput-core-0.1.6 (c (n "anyinput-core") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "colored-diff") (r "^0.2.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("extra-traits" "full" "fold"))) (d #t) (k 0)))) (h "1jha27ayndy42cvrhjqfm9lxcq37z8385a6fhvjkvnmsx46vp8qn") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

