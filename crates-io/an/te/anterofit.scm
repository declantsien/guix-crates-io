(define-module (crates-io an te anterofit) #:use-module (crates-io))

(define-public crate-anterofit-0.0.1 (c (n "anterofit") (v "0.0.1") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0-alpha.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde_xml") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "1hzivfj6shiqgbqr39231w66vs3lr4r0c3jskx86050k5ljm616b") (f (quote (("serde-all" "serde" "serde_json" "serde_xml") ("pool" "threadpool") ("nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.2 (c (n "anterofit") (v "0.0.2") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0-alpha.9") (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde_xml") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0cmfvvqb00fnzw0nk27np1ycd8f5ch3xbifwq6fwvkdg1wicwpr5") (f (quote (("serde-all" "serde" "serde_json" "serde_xml") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.3 (c (n "anterofit") (v "0.0.3") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0-alpha.9") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde_xml") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "1lp7rbf9bnzv0cv6m8njacjasbn9c5gj96mp45hd1ny80dr41pj9") (f (quote (("serde-all" "serde" "serde_json" "serde_xml") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.4 (c (n "anterofit") (v "0.0.4") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde_xml") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0mz5sm2ln5wnyixwg54yw30i8gds5v2nc0xh3wjh5yc5709cg5pb") (f (quote (("service-attr") ("serde-all" "serde" "serde_json" "serde_xml") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.5 (c (n "anterofit") (v "0.0.5") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0lfqlgzgbps354j6m5qs1zyih7iqknj05sz3p7gd3v6gvcci7pmv") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.6 (c (n "anterofit") (v "0.0.6") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0wwimpnwa2hh7g1gxbq0qhm7warxwa7v6lwdl3gf0ckv7shlj9zx") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.7 (c (n "anterofit") (v "0.0.7") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0wshiq40hh9klp10c01y1kjhxnxga4pyi7ixz38sa945j3sp5lgn") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.0.8 (c (n "anterofit") (v "0.0.8") (d (list (d (n "futures") (r "^0.1.3") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.9.0") (f (quote ("client" "hyper"))) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "08fnswzy281baj1zk2w9lx21g08kz9rawsh5ipjf4lp1v0lqj7n2") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("pool" "threadpool") ("nightly" "multipart/nightly") ("default" "rustc-serialize" "pool"))))))

(define-public crate-anterofit-0.1.0 (c (n "anterofit") (v "0.1.0") (d (list (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.10") (f (quote ("client" "hyper"))) (k 0)) (d (n "parking_lot") (r "^0.3.7") (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0n9blzchz9zjhhjn8vl2y3hi8ca9xvb1daabmk59x4d47bly6mr8") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("nightly" "multipart/nightly") ("default" "rustc-serialize")))) (y #t)))

(define-public crate-anterofit-0.1.1 (c (n "anterofit") (v "0.1.1") (d (list (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.12") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.10") (f (quote ("client" "hyper"))) (k 0)) (d (n "parking_lot") (r "^0.3.7") (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "0m1jh0p4i7d8wm0lxdy15g6n7kba17r1z4962s25qfx5w7q0g9wi") (f (quote (("service-attr") ("serde-all" "serde" "serde_json") ("nightly" "multipart/nightly") ("default" "serde-all"))))))

(define-public crate-anterofit-0.2.0 (c (n "anterofit") (v "0.2.0") (d (list (d (n "clippy") (r ">= 0.0, < 0.1") (o #t) (d #t) (k 0)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "mime") (r ">= 0.2.2, < 0.3") (d #t) (k 0)) (d (n "multipart") (r "^0.15") (f (quote ("client" "hyper"))) (k 0)) (d (n "parking_lot") (r "^0.3.7") (d #t) (k 0)) (d (n "quick-error") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.0") (d #t) (k 0)))) (h "1qrprjs2h0nxai4qw53z5mh0qak7rj0hj0mcj7s8g4mi2ykd9c36") (f (quote (("xml" "serde-xml-rs") ("service-attr") ("nightly" "multipart/nightly") ("json" "serde_json") ("default" "json" "xml"))))))

