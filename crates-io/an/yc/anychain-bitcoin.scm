(define-module (crates-io an yc anychain-bitcoin) #:use-module (crates-io))

(define-public crate-anychain-bitcoin-0.1.0 (c (n "anychain-bitcoin") (v "0.1.0") (d (list (d (n "anychain-core") (r "^0.0.1") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1js80sn2vx4d89lx76x749fcgnd5iyg1x7hcs0nagq9c46kld77d") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.1 (c (n "anychain-bitcoin") (v "0.1.1") (d (list (d (n "anychain-core") (r "^0.1.1") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jm6n9m3s1n94c900j0hifjmqlibgnj471zc1p5z1y1xzhy7ik6k") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.2 (c (n "anychain-bitcoin") (v "0.1.2") (d (list (d (n "anychain-core") (r "^0.1.2") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1w6rd0ql7y5xcpad862gnr0x9nf2ly58avgv86hm0dgl89ca86g9") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.3 (c (n "anychain-bitcoin") (v "0.1.3") (d (list (d (n "anychain-core") (r "^0.1.2") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0grh72x51fq03x8kllbwsdh6yd1qszhs03ybs6mq0zcgbz79a4i0") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.4 (c (n "anychain-bitcoin") (v "0.1.4") (d (list (d (n "anychain-core") (r "^0.1.3") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l3az9np0cj1jlm26qhzcqnfyzsdgc3h4v8yl9i983a2xws3ddgl") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.5 (c (n "anychain-bitcoin") (v "0.1.5") (d (list (d (n "anychain-core") (r "^0.1.5") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "049zkrd7jlhjh0vxf6c5h0g8b78scvcdifn5d9rirgzp7acq8paf") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

(define-public crate-anychain-bitcoin-0.1.6 (c (n "anychain-bitcoin") (v "0.1.6") (d (list (d (n "anychain-core") (r "^0.1.6") (d #t) (k 0)) (d (n "base58") (r "^0.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1awc0a62f47m3k3hnv37kvv5c7bbch9102q818iy2qgvig79zivr") (f (quote (("std" "anychain-core/std") ("default" "std"))))))

