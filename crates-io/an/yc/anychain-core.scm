(define-module (crates-io an yc anychain-core) #:use-module (crates-io))

(define-public crate-anychain-core-0.0.1 (c (n "anychain-core") (v "0.0.1") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "083gqxh8k6886z5y709nym8avzqlyqkx4xh2i83l18jd8hb5z511") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.1 (c (n "anychain-core") (v "0.1.1") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08fh780mh2d1fcpm60r6418pmbp2xbdvh8yh7yz9h1x6f509f1sb") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.2 (c (n "anychain-core") (v "0.1.2") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13xl5yv0jdzzhdbna74s2wfrvjvpbi53za5b7alaha5if3ij0927") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.3 (c (n "anychain-core") (v "0.1.3") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.14.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02w3h28ky80pqsncsi3xfnwx4bl3f323f4l68ql4ccgjfwxssc3l") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.4 (c (n "anychain-core") (v "0.1.4") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dlmsb769sz1fzl3r11r92xrgxiyh3i0mm2kd14rk763ymkqfvbp") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.5 (c (n "anychain-core") (v "0.1.5") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zlhwrc94ip858wcim7y68x2qn0llpwa4nyi4xm51a6b3ql5fiw3") (f (quote (("std" "base58") ("default" "std"))))))

(define-public crate-anychain-core-0.1.6 (c (n "anychain-core") (v "0.1.6") (d (list (d (n "base58") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (k 0)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "047zs5xhqhwa2s0qrkhd28yl0dqcnql8c9qxydkls9lnis57g38v") (f (quote (("std" "base58") ("default" "std"))))))

