(define-module (crates-io rs ol rsolr) #:use-module (crates-io))

(define-public crate-rsolr-0.1.0 (c (n "rsolr") (v "0.1.0") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0vjscvk5z69br25qn3c7kq0as7858j5dvs85wky2fx0kmy0wj03r")))

(define-public crate-rsolr-0.2.0 (c (n "rsolr") (v "0.2.0") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0lksa9ifxpr1xcml9hsnbqr1831f6w2j6x972317dspl5mj0rbn2")))

(define-public crate-rsolr-0.3.0 (c (n "rsolr") (v "0.3.0") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "182ca1gbzgjmalmbrqyb3vd0n0zx4m26v236l04g2b5l4k1blnar")))

(define-public crate-rsolr-0.3.1 (c (n "rsolr") (v "0.3.1") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "11v4mgfa8plb8q34jwr08lbx8lyi85hdd41ldasdx9wvxblisi34")))

(define-public crate-rsolr-0.3.2 (c (n "rsolr") (v "0.3.2") (d (list (d (n "cloneable-file") (r "^0.1.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "15r2digv1vvg3ggali18hmpjv9mr8lcvzfnipg57qh0wfz0w8pdx")))

