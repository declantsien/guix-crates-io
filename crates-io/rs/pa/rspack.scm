(define-module (crates-io rs pa rspack) #:use-module (crates-io))

(define-public crate-rspack-0.0.1 (c (n "rspack") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.0.0") (d #t) (k 0)) (d (n "ena") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (d #t) (k 0)) (d (n "sugar_path") (r "^0.0.4") (d #t) (k 0)) (d (n "swc") (r "^0.161.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.98.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-chrome") (r "^0.4.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0h3brpqvgawpbd9bnag6yb2n8b7fhhy58mglfqh5spwfznjfp925")))

