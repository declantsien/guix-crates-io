(define-module (crates-io rs pa rspack_sources) #:use-module (crates-io))

(define-public crate-rspack_sources-0.0.1 (c (n "rspack_sources") (v "0.0.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.2") (d #t) (k 0)))) (h "0xdhyg2sg5zvqx39kvf3b7pniimzhn6f502mn8552hgk4fp6sv8d")))

(define-public crate-rspack_sources-0.0.2 (c (n "rspack_sources") (v "0.0.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.2") (d #t) (k 0)))) (h "085pcjs8qqiphh8nmxj84z17qac219nsajlhw7fxban2aywsz41b")))

(define-public crate-rspack_sources-0.0.3 (c (n "rspack_sources") (v "0.0.3") (d (list (d (n "base64-simd") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-chrome") (r "^0.6.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0c83nc7800pqdq58mdqq7q7dplwraz5xarzd3sh0qwg7phnni6k3")))

(define-public crate-rspack_sources-0.1.0 (c (n "rspack_sources") (v "0.1.0") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1rvc3vxgzknx0yca423xqvss63b9bh0nv83yrgqkary7q8pan880")))

(define-public crate-rspack_sources-0.1.1 (c (n "rspack_sources") (v "0.1.1") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1giaf2rwd2i2ckdk0y3jpfpls0wms2ghyi3s76df0f807glg9g5h")))

(define-public crate-rspack_sources-0.1.2 (c (n "rspack_sources") (v "0.1.2") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0xjish83i7h1yqm2wdim524q0w2h6z7pmygspzyramdfgb40h19x")))

(define-public crate-rspack_sources-0.1.3 (c (n "rspack_sources") (v "0.1.3") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1vfqbp6y1fp5ji8bfjskgrjrsg9aj9l7pscp2b5ikgh599l5ws1w")))

(define-public crate-rspack_sources-0.1.4 (c (n "rspack_sources") (v "0.1.4") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "03rjss8d3pcx0w22pni49k3s5562b5ibqj9mrxrv4yzbn9jfbn3w")))

(define-public crate-rspack_sources-0.1.5 (c (n "rspack_sources") (v "0.1.5") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0wnslxqa3rgzcqm7cg5xqzyww149p1dg1iry5x6g6anbxqyagbpv")))

(define-public crate-rspack_sources-0.1.6 (c (n "rspack_sources") (v "0.1.6") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1jiiq0qglmv59vvj8dvy38qrif9y6pmrsyplpy77v4xzqscg7s3x")))

(define-public crate-rspack_sources-0.1.7 (c (n "rspack_sources") (v "0.1.7") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "04xmdr6ddmi7lg1ciizx96kxd2bzwkajxk68g64qxmxw2a78vmn3")))

(define-public crate-rspack_sources-0.1.8 (c (n "rspack_sources") (v "0.1.8") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "14vq9g1vzk3g2jwa2za23b7isr7vrwbhb8h9ym03c9cd2vvr79d7")))

(define-public crate-rspack_sources-0.1.9 (c (n "rspack_sources") (v "0.1.9") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0h34zlacgidq93mydvq6nr497d15sjvdfcarln158n54b5kbqlfq")))

(define-public crate-rspack_sources-0.1.10 (c (n "rspack_sources") (v "0.1.10") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "19hvhxl1h76g8ly2g4vgmv8wj6jnpmyv99f56cyzxggqc2apk9v4")))

(define-public crate-rspack_sources-0.1.11 (c (n "rspack_sources") (v "0.1.11") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1irs9bjwqszz7p9shlacbvjn8ymlq0hl7rir7i9yl062dg337fsy")))

(define-public crate-rspack_sources-0.1.12 (c (n "rspack_sources") (v "0.1.12") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1wpvlxwyvz7bqbfmnlcq8wx4512nhxlrlkxr1kawrhcc1dghi8vc")))

(define-public crate-rspack_sources-0.1.13 (c (n "rspack_sources") (v "0.1.13") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0vfkfli5b9nq9nhw6hnkk2nqv9gzf16qan0bx6r4dwcaclp7nvgi")))

(define-public crate-rspack_sources-0.1.14 (c (n "rspack_sources") (v "0.1.14") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0x1148s7fz3zz861b3arfqxmmbc55pmh0aml6b1pdgrm1pv89p0g")))

(define-public crate-rspack_sources-0.1.15 (c (n "rspack_sources") (v "0.1.15") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1ycm250zb7mbr13sp0wipccgpy34ci0jninzqg6v5l9gs9cfk4qx")))

(define-public crate-rspack_sources-0.1.16 (c (n "rspack_sources") (v "0.1.16") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "02rr17829bbl9r9w1ss1jwd3wwk86n0cj1gw710wfyr38cg9qiin")))

(define-public crate-rspack_sources-0.1.17 (c (n "rspack_sources") (v "0.1.17") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0i6znzlgm4m2amkcix7a5l06x72i5086704cjxa91l90q87d5slz")))

(define-public crate-rspack_sources-0.1.18 (c (n "rspack_sources") (v "0.1.18") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "09a5lkihzyyj9wayxhsiqm5mk4q0gl9qra93vg9q72gg898vjqn7")))

(define-public crate-rspack_sources-0.1.19 (c (n "rspack_sources") (v "0.1.19") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "12ajg59skxxsgn7zabahbwk9vppv9ngnwh5aivmd6kjfd2wzisk7")))

(define-public crate-rspack_sources-0.2.0 (c (n "rspack_sources") (v "0.2.0") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0cswih3f4qa2yvdzi21ds7fhchymz2r2kbx1nx99nv91h7qp66mv")))

(define-public crate-rspack_sources-0.2.1 (c (n "rspack_sources") (v "0.2.1") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0faz52v7z20xpxq3li5jprw9g44s7qsd7m0yagdlcffkbznghdbm")))

(define-public crate-rspack_sources-0.2.2 (c (n "rspack_sources") (v "0.2.2") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0ivrq11zrniw3s8nldhl0my27zsvnsxfg3j68rnks3nd74rk37ip")))

(define-public crate-rspack_sources-0.2.3 (c (n "rspack_sources") (v "0.2.3") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0kxjjl7pzzvmrn6sz4s0dw1v3xb5qanr58anrrg2pv4i5jj6xwpf")))

(define-public crate-rspack_sources-0.2.4 (c (n "rspack_sources") (v "0.2.4") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "00wfaznkfnp10amgnm4w3sgscsbk7frdjp8s8l5gv0l8k6bs5zn8")))

(define-public crate-rspack_sources-0.2.5 (c (n "rspack_sources") (v "0.2.5") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1y26ymchy797dji0d9mkcn9j6l3qcrf7y7d63cgys5mrd1nvk7a7")))

(define-public crate-rspack_sources-0.2.6 (c (n "rspack_sources") (v "0.2.6") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0dr8bgirjajn1zhklvasb7glk8s9480nd5bb1jx0xa7hag4mancl")))

(define-public crate-rspack_sources-0.2.7 (c (n "rspack_sources") (v "0.2.7") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.1") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1gfp3g0na0h8155hqkxs82nzzfx0ibxyxgnlpab3kdy1spil39r5")))

(define-public crate-rspack_sources-0.2.8 (c (n "rspack_sources") (v "0.2.8") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1plhp2x1glrw3h79mbk8qppy3d7cys70g7wh94x3263n71n4pr6z") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.9 (c (n "rspack_sources") (v "0.2.9") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0s9idddv6z5ygbzswccl8wna990kkb5skrar9fhfam7dqhdr62bg") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.10 (c (n "rspack_sources") (v "0.2.10") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "079c8pki1lf1hp4hqw0cbg9m4l9nf9677w4hnwklsqh5lf09wwd9") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.11 (c (n "rspack_sources") (v "0.2.11") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "0www0x6ai6gr2pkmd6p9gxapigr0kdpsq8agv6gnwnwh6pn2zhn2") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.12 (c (n "rspack_sources") (v "0.2.12") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1aw0c6jd3vr0hx3ydnd4vw4swh948gpvfn5w46w815jkhwabmwl1") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.13 (c (n "rspack_sources") (v "0.2.13") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1k5pridycmc35x03fa07z3k79f9w6p6z3qziwcgpqh176cgbq9rx") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

(define-public crate-rspack_sources-0.2.14 (c (n "rspack_sources") (v "0.2.14") (d (list (d (n "base64-simd") (r "^0.7") (d #t) (k 2)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "memchr") (r "^2.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "str_indices") (r "^0.4.3") (d #t) (k 0)) (d (n "substring") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 2)))) (h "1mmj0zmsms6jacx5lz7sk8950s1j8sixkb0hras9ybv95h6gm9k2") (f (quote (("codspeed" "codspeed-criterion-compat"))))))

