(define-module (crates-io rs rl rsrl) #:use-module (crates-io))

(define-public crate-rsrl-0.1.0 (c (n "rsrl") (v "0.1.0") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)))) (h "0s0a472n2ga5z7wssk943r2mrygfiswlj77yj2iddzdhhdlzd6xk")))

(define-public crate-rsrl-0.1.1 (c (n "rsrl") (v "0.1.1") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)))) (h "10ji3gi0jdppvk1kf5l25prhz1zknrnvmn8g13z8ix4vs9h14kz6")))

(define-public crate-rsrl-0.2.0 (c (n "rsrl") (v "0.2.0") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)))) (h "1v14k42dc373vz491g3gq7rdsa66i7706mq66my71k692psmljnp")))

(define-public crate-rsrl-0.2.1 (c (n "rsrl") (v "0.2.1") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)))) (h "04h7nxs63vswlcc8av7vsgb694saqpd6p2p2rkcj8lsazyxfcg2g")))

(define-public crate-rsrl-0.2.2 (c (n "rsrl") (v "0.2.2") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)))) (h "0s6v21r8fml86rvbxdxqi4cwh6dpnjjrwsjwk65gnpfmf344sa60")))

(define-public crate-rsrl-0.2.3 (c (n "rsrl") (v "0.2.3") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "cpython") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "11bwlmz592wi5s6092xqb12fvzr5js654xy90ndhf0cdm5703k8y")))

(define-public crate-rsrl-0.3.0 (c (n "rsrl") (v "0.3.0") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "cpython") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "seahash") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1xh9f41q3n2nqrsyng8413fcb8g08jkr5zmj5kxxwd3jg22cvvq1")))

(define-public crate-rsrl-0.4.0 (c (n "rsrl") (v "0.4.0") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "cpython") (r "^0.1") (d #t) (k 0)) (d (n "lfa") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "spaces") (r "^0.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1lv21xxhrd8wwhrd3hw7d36scykhrfyv8kzvqayg83m2cf97cskk")))

(define-public crate-rsrl-0.4.1 (c (n "rsrl") (v "0.4.1") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "cpython") (r "^0.1") (d #t) (k 0)) (d (n "lfa") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rusty-machine") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "spaces") (r "^0.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0pc9gjqr4f17aw7awiminj894rp0fkwq936v6x19mb77icsys626")))

(define-public crate-rsrl-0.4.2 (c (n "rsrl") (v "0.4.2") (d (list (d (n "blas") (r "^0.19") (d #t) (k 0)) (d (n "cpython") (r "^0.1") (d #t) (k 0)) (d (n "lfa") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "spaces") (r "^0.0") (d #t) (k 0)))) (h "1d1a9bv8lblh5grhlyvciyr7l6w2xc89cnlvm03dyd90y2x3lpbc")))

(define-public crate-rsrl-0.5.0 (c (n "rsrl") (v "0.5.0") (d (list (d (n "blas-src") (r "^0.1.2") (f (quote ("openblas"))) (k 2)) (d (n "cpython") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lfa") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.2") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.6") (f (quote ("cblas" "system"))) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 0)) (d (n "spaces") (r "^2.1") (d #t) (k 0)))) (h "03ggqb16jfnv6hr8d4npc8xznpv2gs81bahsl39krakpdc2dczfh") (f (quote (("openai" "cpython") ("default"))))))

(define-public crate-rsrl-0.5.1 (c (n "rsrl") (v "0.5.1") (d (list (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (k 2)) (d (n "cpython") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lfa") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("cblas" "system"))) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.3") (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "spaces") (r "^2.2") (d #t) (k 0)))) (h "1dd874p1869hhx3idf0d27c5j6hcgasdzfjv14qlga9j2f4chwgq") (f (quote (("openai" "cpython") ("default"))))))

(define-public crate-rsrl-0.6.0 (c (n "rsrl") (v "0.6.0") (d (list (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (k 2)) (d (n "cpython") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lfa") (r "^0.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("cblas" "system"))) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.4") (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "spaces") (r "^4.1") (d #t) (k 0)))) (h "19w28v7csha8fl07calb6zqd1ndnpxf4l73nh2y7mbb9m1nxp7a2") (f (quote (("openai" "cpython") ("default"))))))

(define-public crate-rsrl-0.7.0 (c (n "rsrl") (v "0.7.0") (d (list (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (k 2)) (d (n "lfa") (r "^0.13") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("cblas" "system"))) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "rsrl_domains") (r "^0.1") (d #t) (k 0)) (d (n "rstat") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.5") (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "1za90dsma3jjykvg7izn2jkyrwwkz6wslqwb0mzb8dngbwqxsaag") (f (quote (("serialize" "lfa/serialize" "spaces/serialize" "ndarray/serde-1") ("default"))))))

(define-public crate-rsrl-0.7.1 (c (n "rsrl") (v "0.7.1") (d (list (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (k 2)) (d (n "lfa") (r "^0.13") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas" "serde-1"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("cblas" "system"))) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "rsrl_domains") (r "^0.1") (d #t) (k 0)) (d (n "rstat") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "slog") (r "^2.5") (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "0c4i31pqcggk0v7d6yw7k6vfj0bhwmzbw45i61fav5b76m6imlmg") (f (quote (("serialize" "lfa/serialize" "spaces/serialize" "ndarray/serde-1") ("default"))))))

(define-public crate-rsrl-0.8.0 (c (n "rsrl") (v "0.8.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "lfa") (r "^0.15") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (f (quote ("cblas" "system"))) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "rsrl_derive") (r "^0.1") (d #t) (k 0)) (d (n "rsrl_domains") (r "^0.2") (d #t) (k 0)) (d (n "rstat") (r "^0.6") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "1k4zid06gc2978yb85vfzfa5c1qgaixs7dhdvbf0yd61caszg91m") (f (quote (("serde" "serde_crate" "lfa/serde" "spaces/serialize" "ndarray/serde" "rstat/serde") ("default") ("blas" "ndarray/blas" "lfa/blas"))))))

(define-public crate-rsrl-0.8.1 (c (n "rsrl") (v "0.8.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "lfa") (r "^0.15") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (f (quote ("cblas" "system"))) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "rsrl_derive") (r "^0.1") (d #t) (k 0)) (d (n "rsrl_domains") (r "^0.2") (d #t) (k 0)) (d (n "rstat") (r "^0.6") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "112jlvrjyfl4p64iagpfsrbzbynrnlq6mjbapcygvw48sjlqxm07") (f (quote (("serde" "serde_crate" "lfa/serde" "spaces/serialize" "ndarray/serde" "rstat/serde") ("default") ("blas" "ndarray/blas" "lfa/blas"))))))

