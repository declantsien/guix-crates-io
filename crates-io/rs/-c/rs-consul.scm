(define-module (crates-io rs -c rs-consul) #:use-module (crates-io))

(define-public crate-rs-consul-0.1.0 (c (n "rs-consul") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.12") (f (quote ("tokio-support"))) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "04jagzv2l9h3v6j9qz87pni3wna0fn4z4akfh31grz300lm17yp0")))

(define-public crate-rs-consul-0.1.1 (c (n "rs-consul") (v "0.1.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.15") (f (quote ("tokio" "rt-tokio"))) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "1ns6gi1b155bqsqd741xcqr5s832fcphbbdlpnj10bac7822zm0z")))

(define-public crate-rs-consul-0.2.0 (c (n "rs-consul") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.15") (f (quote ("tokio" "rt-tokio"))) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "0c7cm8l0mm9qq33c2hrpc5ydnx8da2xxm4lc1xymnvvldi6ryd6m")))

(define-public crate-rs-consul-0.2.1 (c (n "rs-consul") (v "0.2.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.15") (f (quote ("tokio" "rt-tokio"))) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "0qq02wlgg5qfk43fc5n2hmwf5ih6gfqrw0c6gm3qcx1apg5gbi40")))

(define-public crate-rs-consul-0.2.2 (c (n "rs-consul") (v "0.2.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.15") (f (quote ("tokio" "rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "12667ilb3z4fkng5y651hp1m1w0gxd4zrprsnxkxz5kb1rkd3nzf") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default-tls" "hyper-tls") ("default" "default-tls"))))))

(define-public crate-rs-consul-0.2.3 (c (n "rs-consul") (v "0.2.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.15") (f (quote ("tokio" "rt-tokio"))) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4.3") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^1.5.4") (f (quote ("json"))) (d #t) (k 0)))) (h "1x09dh63qf674ik4naw0hnq3hm9zjil7y3arc933650aszwsm85h") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default-tls" "hyper-tls") ("default" "default-tls"))))))

(define-public crate-rs-consul-0.3.0 (c (n "rs-consul") (v "0.3.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)))) (h "0f2959zkyi0lk9mfzhcvqsk8pwwxv6ar300awz8qsfzk5da6ll1n") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default" "rustls-native")))) (s 2) (e (quote (("trace" "dep:opentelemetry"))))))

(define-public crate-rs-consul-0.4.0 (c (n "rs-consul") (v "0.4.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)))) (h "0db3lwjgb3ianqp1nv6cfy2snn6k5gy3w7ilh4xlib2vxryc3qam") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default" "rustls-native")))) (s 2) (e (quote (("trace" "dep:opentelemetry"))))))

(define-public crate-rs-consul-0.5.0 (c (n "rs-consul") (v "0.5.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)))) (h "0gjzwpqimlvcivknf6bqacjdbnfscbn94mpjv6xm7f0f0qm7919n") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default" "rustls-native")))) (s 2) (e (quote (("trace" "dep:opentelemetry"))))))

(define-public crate-rs-consul-0.6.0 (c (n "rs-consul") (v "0.6.0") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog-scope") (r "^4") (d #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)))) (h "0m4hanrqqmipgx93vm9bvi7f0p9pyrfv7ddx1wvzfc9flcfij41d") (f (quote (("rustls-webpki" "hyper-rustls/webpki-roots") ("rustls-native" "hyper-rustls/rustls-native-certs") ("metrics" "prometheus" "lazy_static") ("default" "rustls-native")))) (s 2) (e (quote (("trace" "dep:opentelemetry"))))))

