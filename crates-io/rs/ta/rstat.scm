(define-module (crates-io rs ta rstat) #:use-module (crates-io))

(define-public crate-rstat-0.0.0 (c (n "rstat") (v "0.0.0") (d (list (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "spaces") (r "^4.2") (d #t) (k 0)) (d (n "special-fun") (r "^0.1") (d #t) (k 0)))) (h "06km79mjzbdlc0xl6d9239yb2fp8yk4clky18fxxdcws3mb436nn")))

(define-public crate-rstat-0.1.0 (c (n "rstat") (v "0.1.0") (d (list (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "spaces") (r "^4.3") (d #t) (k 0)) (d (n "special-fun") (r "^0.1") (d #t) (k 0)))) (h "1afilchxmhkbbi9vd75j85awyxgbddb81l0ism0xz6xjnfb7m9zf")))

(define-public crate-rstat-0.2.0 (c (n "rstat") (v "0.2.0") (d (list (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "spaces") (r "^4.3") (d #t) (k 0)) (d (n "special-fun") (r "^0.1") (d #t) (k 0)))) (h "1n1vscj08vhcn2df3fbagsn76z84cx6n3znixzfr5970bhh6idv8")))

(define-public crate-rstat-0.3.0 (c (n "rstat") (v "0.3.0") (d (list (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "0cmfn6db9yvnzdbg3rccq17nk7ngd1jjkp7dgypj81vkg767s9m9")))

(define-public crate-rstat-0.4.0 (c (n "rstat") (v "0.4.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "08cjd6k35ds78kv46d172qw0cdy1zfp6p5c2x7p5c9lczx5cxjhp") (f (quote (("default"))))))

(define-public crate-rstat-0.5.0 (c (n "rstat") (v "0.5.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "04asljl8p0p7843gisrgrj0xpgrxqqbyi5bj0x6p2zj6wzcbpcrz") (f (quote (("serde" "serde_crate" "ndarray/serde" "spaces/serialize") ("default"))))))

(define-public crate-rstat-0.6.0 (c (n "rstat") (v "0.6.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "spaces") (r "^5.0") (d #t) (k 0)) (d (n "special-fun") (r "^0.2") (d #t) (k 0)))) (h "01xqfc1zv3ycislkj3d35illpcw283cv4xsxvli3snkvy2lh6vwn") (f (quote (("serde" "serde_crate" "ndarray/serde" "spaces/serialize") ("default"))))))

