(define-module (crates-io rs pc rspc) #:use-module (crates-io))

(define-public crate-rspc-0.0.3 (c (n "rspc") (v "0.0.3") (d (list (d (n "axum") (r "^0.5.9") (f (quote ("ws"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5.9") (d #t) (k 2)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "rspc-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("cors"))) (k 2)) (d (n "ts-rs") (r "^6.2.0") (d #t) (k 0)))) (h "0yzhcxw6znfy0mrriic0k1gxm0h49mwsqv7xqwmrqhls2nwizggh") (f (quote (("default")))) (s 2) (e (quote (("axum" "dep:axum"))))))

(define-public crate-rspc-0.0.4 (c (n "rspc") (v "0.0.4") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "axum") (r "^0.5.9") (f (quote ("ws"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5.9") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "specta") (r "^0.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt-multi-thread" "macros" "time" "sync"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("cors"))) (k 2)) (d (n "tracing") (r "^0.1.35") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1nw0lz36xk6br6isf67cbrx21cw166j1zp9046818qza57148nqp") (f (quote (("uuid" "specta/uuid") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("axum" "dep:axum"))))))

(define-public crate-rspc-0.0.5 (c (n "rspc") (v "0.0.5") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "axum") (r "^0.5.9") (f (quote ("ws"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.5.9") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "specta") (r "^0.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt-multi-thread" "macros" "time" "sync"))) (d #t) (k 2)) (d (n "tower-http") (r "^0.3.4") (f (quote ("cors"))) (k 2)) (d (n "tracing") (r "^0.1.35") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0cq3apb76fhkv5gq574r2ki6my32j1xpks6w4x79p340v2qk6dj4") (f (quote (("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("axum" "dep:axum"))))))

(define-public crate-rspc-0.0.6 (c (n "rspc") (v "0.0.6") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "httpz") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "specta") (r "^0.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "0nhw0cijx4mrc9i91v1vdf2dm2gf8b7g2z7xfr31bj9ca2lnhm5c") (f (quote (("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("httpz" "dep:httpz" "httpz/tokio-ws"))))))

(define-public crate-rspc-0.1.0 (c (n "rspc") (v "0.1.0") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "httpz") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "specta") (r "^0.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "0na97hyqil4qr9dckwww7ml6azjmk3pndm0ji6baz12l0p034ms9") (f (quote (("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("httpz" "dep:httpz" "httpz/tokio-ws"))))))

(define-public crate-rspc-0.1.1 (c (n "rspc") (v "0.1.1") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "httpz") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "specta") (r "^0.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "0p8sdjhh5rhcd5bldfbhza3k5czg54df1ffmznwlp1j0p5ppksiv") (f (quote (("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("httpz" "dep:httpz" "httpz/tokio-ws"))))))

(define-public crate-rspc-0.1.2 (c (n "rspc") (v "0.1.2") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "httpz") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "specta") (r "^0.0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tauri") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "0fajmfp3h9rrzdnl94ij1rhzfywnyqcmymx4iwq7sabrzkic8bvi") (f (quote (("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("httpz" "dep:httpz" "httpz/tokio-ws"))))))

(define-public crate-rspc-0.1.3 (c (n "rspc") (v "0.1.3") (d (list (d (n "async-stream") (r "^0.3.4") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "httpz") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "specta") (r "^1.0.0") (f (quote ("serde" "typescript"))) (d #t) (k 0)) (d (n "tauri") (r "^1.2.4") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)))) (h "13wiib0q4izv5w38acd7arqxbvm0nx0hq55bmq1haa0iikxpg166") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("httpz" "dep:httpz" "httpz/cookies"))))))

(define-public crate-rspc-1.0.0-rc.1 (c (n "rspc") (v "1.0.0-rc.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "httpz") (r "^0.0.5") (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("flamegraph" "criterion" "protobuf-codec" "frame-pointer"))) (d #t) (k 2)) (d (n "rspc_legacy") (r "^0.1.3") (d #t) (k 2) (p "rspc")) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (k 0)) (d (n "specta") (r "=2.0.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "tauri") (r "^1.4.1") (o #t) (k 0)) (d (n "tauri") (r "^1.4.1") (f (quote ("api-all"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (k 0)) (d (n "worker") (r "^0.0.17") (o #t) (k 0)))) (h "0ajycxnjh7rjqcyif1wd3l5dfg8bymsprff5rqld8nfvmry1xkmc") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("vercel" "httpz" "httpz/vercel" "httpz/ws" "axum") ("unstable") ("typescript" "specta/typescript") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("default" "typescript") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tokio" "dep:tokio" "specta/tokio") ("tauri" "dep:tauri" "tokio" "tauri/wry") ("httpz" "dep:httpz" "httpz/cookies" "tokio" "tokio/sync") ("anyhow" "dep:anyhow"))))))

(define-public crate-rspc-1.0.0-rc.2 (c (n "rspc") (v "1.0.0-rc.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "httpz") (r "^0.0.5") (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("flamegraph" "criterion" "protobuf-codec" "frame-pointer"))) (d #t) (k 2)) (d (n "rspc_legacy") (r "^0.1.3") (d #t) (k 2) (p "rspc")) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (k 0)) (d (n "specta") (r "=2.0.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "tauri") (r "^1.4.1") (o #t) (k 0)) (d (n "tauri") (r "^1.4.1") (f (quote ("api-all"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (k 0)) (d (n "worker") (r "^0.0.17") (o #t) (k 0)))) (h "1bac33yp3a1ksp86jlbx25hjbyh07506zgdwkg21gn5php79xjiw") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("vercel" "httpz" "httpz/vercel" "httpz/ws" "axum") ("unstable") ("typescript" "specta/typescript") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("default" "typescript") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tokio" "dep:tokio" "specta/tokio") ("tauri" "dep:tauri" "tokio" "tauri/wry") ("httpz" "dep:httpz" "httpz/cookies" "tokio" "tokio/sync") ("anyhow" "dep:anyhow"))))))

(define-public crate-rspc-1.0.0-rc.3 (c (n "rspc") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "httpz") (r "^0.0.5") (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("flamegraph" "criterion" "protobuf-codec" "frame-pointer"))) (d #t) (k 2)) (d (n "rspc_legacy") (r "^0.1.3") (d #t) (k 2) (p "rspc")) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (k 0)) (d (n "specta") (r "=2.0.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "tauri") (r "^1.4.1") (o #t) (k 0)) (d (n "tauri") (r "^1.4.1") (f (quote ("api-all"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (k 0)) (d (n "worker") (r "^0.0.17") (o #t) (k 0)))) (h "0s626qbp52v7zs53ds6s52kq0jqy5f8nz1ry44nqdn88ksqw51bg") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("vercel" "httpz" "httpz/vercel" "httpz/ws" "axum") ("unstable") ("typescript" "specta/typescript") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("default" "typescript") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tokio" "dep:tokio" "specta/tokio") ("tauri" "dep:tauri" "tokio" "tauri/wry") ("httpz" "dep:httpz" "httpz/cookies" "tokio" "tokio/sync") ("anyhow" "dep:anyhow"))))))

(define-public crate-rspc-1.0.0-rc.4 (c (n "rspc") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "httpz") (r "^0.0.5") (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("flamegraph" "criterion" "protobuf-codec" "frame-pointer"))) (d #t) (k 2)) (d (n "rspc_legacy") (r "^0.1.3") (d #t) (k 2) (p "rspc")) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (k 0)) (d (n "specta") (r "=2.0.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "tauri") (r "^1.4.1") (o #t) (k 0)) (d (n "tauri") (r "^1.4.1") (f (quote ("api-all"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (k 0)) (d (n "worker") (r "^0.0.17") (o #t) (k 0)))) (h "15j1yki3arlvafmcigb3fcxxsirm1x40w54v96fbs4ldd77jayn8") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("vercel" "httpz" "httpz/vercel" "httpz/ws" "axum") ("unstable") ("typescript" "specta/typescript") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("default" "typescript") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tokio" "dep:tokio" "specta/tokio") ("tauri" "dep:tauri" "tokio" "tauri/wry") ("httpz" "dep:httpz" "httpz/cookies" "tokio" "tokio/sync") ("anyhow" "dep:anyhow"))))))

(define-public crate-rspc-1.0.0-rc.5 (c (n "rspc") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "httpz") (r "^0.0.5") (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.10") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("flamegraph" "criterion" "protobuf-codec" "frame-pointer"))) (d #t) (k 2)) (d (n "rspc_legacy") (r "^0.1.3") (d #t) (k 2) (p "rspc")) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (k 0)) (d (n "specta") (r "=2.0.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "tauri") (r "^1.4.1") (o #t) (k 0)) (d (n "tauri") (r "^1.4.1") (f (quote ("api-all"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (o #t) (k 0)) (d (n "worker") (r "^0.0.17") (o #t) (k 0)))) (h "0khd4bkjhjnripcvs8rbn6y0jwqz38gfhkpb5g5x2fyj1knwqy52") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("vercel" "httpz" "httpz/vercel" "httpz/ws" "axum") ("unstable") ("typescript" "specta/typescript") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("default" "typescript") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-futures") ("tokio" "dep:tokio" "specta/tokio") ("tauri" "dep:tauri" "tokio" "tauri/wry") ("httpz" "dep:httpz" "httpz/cookies" "tokio" "tokio/sync") ("anyhow" "dep:anyhow"))))))

(define-public crate-rspc-0.1.4 (c (n "rspc") (v "0.1.4") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "httpz") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("serde" "typescript"))) (d #t) (k 0)) (d (n "tauri") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)))) (h "1wx16b7jxqf8arnk8s7s3m2wd4kcwk30bafj8z2bzkdqrcdas09a") (f (quote (("workers" "httpz" "httpz/workers" "httpz/ws") ("uuid" "specta/uuid") ("time" "specta/time") ("rust_decimal" "specta/rust_decimal") ("mac_address" "specta/mac_address") ("lambda" "httpz" "httpz/lambda" "httpz/ws" "httpz/axum") ("ipnetwork" "specta/ipnetwork") ("indexmap" "specta/indexmap") ("default") ("chrono" "specta/chrono") ("bson" "specta/bson") ("bit-vec" "specta/bit-vec") ("bigdecimal" "specta/bigdecimal") ("axum" "httpz" "httpz/axum" "httpz/tokio-ws" "httpz/axum")))) (s 2) (e (quote (("tracing" "dep:tracing") ("tauri" "dep:tauri") ("internal_axum_07" "dep:axum") ("httpz" "dep:httpz" "httpz/cookies"))))))

(define-public crate-rspc-0.2.0 (c (n "rspc") (v "0.2.0") (d (list (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("serde" "typescript"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)))) (h "1ay2b6g6q51d008nys4s8xhcwn6w87hbm3kf9yp8nxzxwn38c1by") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

