(define-module (crates-io rs hu rshub) #:use-module (crates-io))

(define-public crate-rshub-0.1.0 (c (n "rshub") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (d #t) (k 0)))) (h "1ygjqb270qa3k4803k08l9c5mlij5v35yr8wicpybr8ygx4f6yih") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.1 (c (n "rshub") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (d #t) (k 0)))) (h "079qs2j4v0ha6c4ff7plqbrmbc6rab7spj7cgxyiha4j97bnyzjj") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.2 (c (n "rshub") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (d #t) (k 0)))) (h "00hsm6yrbq37crrznzd6kf96yq39fyir3p5grdghqw03dkibpdbb") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.3 (c (n "rshub") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (d #t) (k 0)))) (h "0shaa5y4xiv5ly0phb2laakngwgssnw3ydfr3y5jk28abqcygbvj") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.4 (c (n "rshub") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (k 0)))) (h "0z2wlz6cmzhydha3j4b9wpv9hkxlnhwbdb3gndxzvvhj8l62myw0") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.5 (c (n "rshub") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "crossterm") (r "^0.21") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (k 0)))) (h "0f6lwih3gjy2xgsfs80ybb1d1r8bs592jp0agr75albmkimphx04") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

(define-public crate-rshub-0.1.6 (c (n "rshub") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "better-panic") (r "^0.2.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.5") (f (quote ("std" "derive" "cargo" "env" "suggestions"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "simplelog") (r "^0.11.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "fs" "process" "macros" "time"))) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (k 0)) (d (n "zip") (r "^0.5.13") (f (quote ("deflate"))) (k 0)))) (h "05iz81dc60bdnlf5gc9marvwfv9mxjlpni5g0way5bf1whcvks94") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("geolocation") ("default" "rustls"))))))

