(define-module (crates-io rs on rsonpath) #:use-module (crates-io))

(define-public crate-rsonpath-0.1.0 (c (n "rsonpath") (v "0.1.0") (d (list (d (n "aligners") (r "^0.0.8") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "len-trait") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "simple_logger") (r "^2.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "test-case") (r "^2.1.0") (d #t) (k 2)) (d (n "vector-map") (r "^1.0.1") (d #t) (k 0)))) (h "135zn8xf0ph9r38jac1jlh2f3aj1yplgl0fzkjw2ndd8r1g0dqkh") (f (quote (("simd") ("default" "simd"))))))

(define-public crate-rsonpath-0.1.1 (c (n "rsonpath") (v "0.1.1") (d (list (d (n "aligners") (r "^0.0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 1)) (d (n "len-trait") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "simple_logger") (r "^2.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "test-case") (r "^2.1.0") (d #t) (k 2)) (d (n "vector-map") (r "^1.0.1") (d #t) (k 0)))) (h "1m3zwfrz39gk52dp4ii5xahz63i5nibinh15lhrk1n1j1hdlxcb8") (f (quote (("simd") ("default" "simd"))))))

(define-public crate-rsonpath-0.1.2 (c (n "rsonpath") (v "0.1.2") (d (list (d (n "aligners") (r "^0.0.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 1)) (d (n "len-trait") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "simple_logger") (r "^2.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "test-case") (r "^2.1.0") (d #t) (k 2)) (d (n "vector-map") (r "^1.0.1") (d #t) (k 0)))) (h "0vxj2w81bc6m1dfff0gziw9x7v6dclca2p4j5c6ryycwaxkamcm9") (f (quote (("simd") ("default" "simd"))))))

(define-public crate-rsonpath-0.2.0 (c (n "rsonpath") (v "0.2.0") (d (list (d (n "clap") (r "^4.0.25") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.2.0") (k 0)) (d (n "simple_logger") (r "^4.0.0") (d #t) (k 0)))) (h "09969nyrh0n0sk590lm1q4n0f97f8xzvbv1pz7cfx20zdiwgf146") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd") ("commas" "rsonpath-lib/commas"))))))

(define-public crate-rsonpath-0.2.1 (c (n "rsonpath") (v "0.2.1") (d (list (d (n "clap") (r "^4.0.25") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.2.1") (k 0)) (d (n "simple_logger") (r "^4.0.0") (d #t) (k 0)))) (h "187csij6bznw13klpmxksl7glq1sxzp9q81r44p7s801vahlqsr2") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd") ("commas" "rsonpath-lib/commas"))))))

(define-public crate-rsonpath-0.3.0 (c (n "rsonpath") (v "0.3.0") (d (list (d (n "clap") (r "^4.1.4") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.3.0") (k 0)) (d (n "simple_logger") (r "^4.0.0") (d #t) (k 0)))) (h "086ds7z9zspyvz7wap8spbga1ba4karc895k37svbzsqfhs0k8l9") (f (quote (("unique-labels" "tail-skip" "rsonpath-lib/unique-labels") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-labels") ("default" "simd" "default-optimizations"))))))

(define-public crate-rsonpath-0.3.1 (c (n "rsonpath") (v "0.3.1") (d (list (d (n "clap") (r "^4.1.6") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.3.1") (k 0)) (d (n "simple_logger") (r "^4.0.0") (d #t) (k 0)))) (h "1vkhw1znhlpd06i1dn7p3a65b32cqlbll3118y2l9sqi7sygs809") (f (quote (("unique-labels" "tail-skip" "rsonpath-lib/unique-labels") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-labels") ("default" "simd" "default-optimizations"))))))

(define-public crate-rsonpath-0.3.2 (c (n "rsonpath") (v "0.3.2") (d (list (d (n "clap") (r "^4.1.6") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.3.2") (k 0)) (d (n "simple_logger") (r "^4.0.0") (d #t) (k 0)))) (h "0y23ar9495ycsm8qny0ivqk6zzkx524ck58kgy86caiv7afkpdwd") (f (quote (("unique-labels" "tail-skip" "rsonpath-lib/unique-labels") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-labels") ("default" "simd" "default-optimizations"))))))

(define-public crate-rsonpath-0.3.3 (c (n "rsonpath") (v "0.3.3") (d (list (d (n "clap") (r "^4.1.11") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.3.3") (k 0)) (d (n "simple_logger") (r "^4.1.0") (d #t) (k 0)))) (h "11k114z3lg764xr7g1vyw91bqspmmyxrb3pdvx82xykf5dfww2dn") (f (quote (("unique-labels" "tail-skip" "rsonpath-lib/unique-labels") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-labels") ("default" "simd" "default-optimizations"))))))

(define-public crate-rsonpath-0.4.0 (c (n "rsonpath") (v "0.4.0") (d (list (d (n "clap") (r "^4.1.11") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.4.0") (k 0)) (d (n "simple_logger") (r "^4.1.0") (d #t) (k 0)))) (h "1nrg5g5k5wb2d9bfizbkyd1gyxk5wg9c3il4gb7h9hf642x60dxb") (f (quote (("unique-labels" "tail-skip" "rsonpath-lib/unique-labels") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-labels") ("default" "simd" "default-optimizations"))))))

(define-public crate-rsonpath-0.5.0 (c (n "rsonpath") (v "0.5.0") (d (list (d (n "clap") (r "^4.1.11") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.5.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.3") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "vergen") (r "^8.2.1") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "17lli5mvsp8fyxq4c3lkvfj5iqnxyqiwdrv50gky9m6b56x7dvna") (f (quote (("unique-members" "tail-skip" "rsonpath-lib/unique-members") ("tail-skip" "rsonpath-lib/tail-skip") ("simd" "rsonpath-lib/simd") ("head-skip" "rsonpath-lib/head-skip") ("default-optimizations" "head-skip" "tail-skip" "unique-members") ("default" "simd" "default-optimizations")))) (r "1.70")))

(define-public crate-rsonpath-0.5.1 (c (n "rsonpath") (v "0.5.1") (d (list (d (n "clap") (r "^4.3.10") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.5.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.3") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "vergen") (r "^8.2.1") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "12rx90xsnbbf89z4dsfqrv6j3bwz2nmybsg5za1kpprrj9cfdvhg") (f (quote (("unique-members" "rsonpath-lib/unique-members") ("simd" "rsonpath-lib/simd") ("default-optimizations" "unique-members") ("default" "simd" "default-optimizations")))) (r "1.70")))

(define-public crate-rsonpath-0.6.0 (c (n "rsonpath") (v "0.6.0") (d (list (d (n "clap") (r "^4.3.19") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.6.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "vergen") (r "^8.2.4") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "1gymnpn9lggw97hp40jv2x73pagm5d60ych35hzcig454r811s9f") (f (quote (("unique-members" "rsonpath-lib/unique-members") ("simd" "rsonpath-lib/simd") ("default-optimizations" "unique-members") ("default" "simd" "default-optimizations")))) (r "1.70")))

(define-public crate-rsonpath-0.6.1 (c (n "rsonpath") (v "0.6.1") (d (list (d (n "clap") (r "^4.3.19") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.6.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.16") (d #t) (k 2)) (d (n "vergen") (r "^8.2.4") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "1fwg0xb9cdnawkhfyrr1inksqq7b7aqxlz2v8w9zg7isia7ph9fd") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.7.0 (c (n "rsonpath") (v "0.7.0") (d (list (d (n "clap") (r "^4.4.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.7.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.17") (d #t) (k 2)) (d (n "vergen") (r "^8.2.4") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "0bwmcb49lwikyxiwc6wlb42ik0w5l7fx142jv5cdk4s4jd2cmajx") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.7.1 (c (n "rsonpath") (v "0.7.1") (d (list (d (n "clap") (r "^4.4.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.7.1") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.17") (d #t) (k 2)) (d (n "vergen") (r "^8.2.4") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "00xg03nps3bmn9dxvlinnwblksrfpcsqrsq7ri4nsiqsawmxv061") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.0 (c (n "rsonpath") (v "0.8.0") (d (list (d (n "clap") (r "^4.4.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.0") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.17") (d #t) (k 2)) (d (n "vergen") (r "^8.2.4") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "1kqksv8lrssx2v314p4nv4qf4llr114vis9dkzxslyc24ydbb23k") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.1 (c (n "rsonpath") (v "0.8.1") (d (list (d (n "clap") (r "^4.4.4") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.1") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.17") (d #t) (k 2)) (d (n "vergen") (r "^8.2.5") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "14b49x2bklw7xn725gl5q0n947jnx340d93lll8kqwkq3cs74478") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.2 (c (n "rsonpath") (v "0.8.2") (d (list (d (n "clap") (r "^4.4.4") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.2") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.17") (d #t) (k 2)) (d (n "vergen") (r "^8.2.5") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "09l3yv7p4jyn66cysqa47v22gfr967gbq6dkw23blkfxmby5y3l9") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.3 (c (n "rsonpath") (v "0.8.3") (d (list (d (n "clap") (r "^4.4.6") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.3") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)) (d (n "vergen") (r "^8.2.5") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "00z49sg2v76snmxmj2dzf3jhmawia39xk24n9yvikg736i7q6y98") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.4 (c (n "rsonpath") (v "0.8.4") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.4") (k 0) (p "rsonpath-lib")) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.2.0") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)) (d (n "vergen") (r "^8.2.5") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "1j89ylkj790kyf0h220g6nbv6qjv7p0zlzs0b2p5rrgjs2syrq6x") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.5 (c (n "rsonpath") (v "0.8.5") (d (list (d (n "clap") (r "^4.4.14") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.5") (k 0) (p "rsonpath-lib")) (d (n "rsonpath-syntax") (r "^0.1.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.3.3") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)) (d (n "vergen") (r "^8.2.6") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "1446pgnbjh2nc4p7mhbda2wzrqm3lxwg5z1v8czk38r7rg7zbbq8") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.6 (c (n "rsonpath") (v "0.8.6") (d (list (d (n "clap") (r "^4.4.16") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.11") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.6") (k 0) (p "rsonpath-lib")) (d (n "rsonpath-syntax") (r "^0.2.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.3.3") (d #t) (k 0)) (d (n "trycmd") (r "^0.14.20") (d #t) (k 2)) (d (n "vergen") (r "^8.2.9") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "07hj8x4nqs2900m6ypczskac14nink2xbdsq6r51ygix58yfpm91") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.70")))

(define-public crate-rsonpath-0.8.7 (c (n "rsonpath") (v "0.8.7") (d (list (d (n "clap") (r "^4.5.1") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.8.7") (k 0) (p "rsonpath-lib")) (d (n "rsonpath-syntax") (r "^0.3.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.3.3") (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)) (d (n "vergen") (r "^8.3.1") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "0zg5izy37cqblhc0ps3kgh14hmc7dg9l17mnlh49ir3hdxcj4d8b") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.74.0")))

(define-public crate-rsonpath-0.9.0 (c (n "rsonpath") (v "0.9.0") (d (list (d (n "clap") (r "^4.5.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.9.0") (k 0) (p "rsonpath-lib")) (d (n "rsonpath-syntax") (r "^0.3.1") (f (quote ("color"))) (d #t) (k 0)) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.3.3") (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)) (d (n "vergen") (r "^8.3.1") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "0k71sl78jzrzsp0xcl6xr6insl1xx9f2699qdab349jqycvkdjf8") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.74.0")))

(define-public crate-rsonpath-0.9.1 (c (n "rsonpath") (v "0.9.1") (d (list (d (n "clap") (r "^4.5.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rsonpath-lib") (r "^0.9.1") (k 0) (p "rsonpath-lib")) (d (n "rsonpath-syntax") (r "^0.3.1") (f (quote ("color"))) (d #t) (k 0)) (d (n "rustflags") (r "^0.1.4") (d #t) (k 1)) (d (n "simple_logger") (r "^4.3.3") (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)) (d (n "vergen") (r "^8.3.1") (f (quote ("cargo" "git" "gitcl" "rustc"))) (d #t) (k 1)))) (h "0793mknhh5s83d37rbv8vm167nwx7nklmwc3i29q0nvjv4cx6y6p") (f (quote (("simd" "rsonpath-lib/simd") ("default" "simd")))) (r "1.74.0")))

