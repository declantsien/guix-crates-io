(define-module (crates-io st m3 stm32f1xx-hal-bxcan) #:use-module (crates-io))

(define-public crate-stm32f1xx-hal-bxcan-0.8.0 (c (n "stm32f1xx-hal-bxcan") (v "0.8.0") (d (list (d (n "bxcan") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (k 2)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cobs") (r "^0.1.4") (k 2)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "crc16") (r "^0.4.0") (k 2)) (d (n "either") (r "^1.5.2") (k 2)) (d (n "embedded-dma") (r "^0.1.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (d #t) (k 2)) (d (n "m") (r "^0.1.1") (d #t) (k 2)) (d (n "mfrc522") (r "^0.2.0") (d #t) (k 2)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-itm") (r "^0.4.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.90") (k 2)) (d (n "serde_derive") (r "^1.0.90") (d #t) (k 2)) (d (n "stm32-usbd") (r "^0.5.0") (f (quote ("ram_access_1x16"))) (o #t) (d #t) (k 0)) (d (n "stm32f1") (r "^0.11.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.3") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1xf6k8cc6s8qvr14jmzyci1fdgpfabjxjw978hvdzljbpp07sjlm") (f (quote (("xl" "high") ("stm32f107" "stm32f1/stm32f107" "device-selected" "connectivity") ("stm32f105" "stm32f1/stm32f107" "device-selected" "connectivity") ("stm32f103" "stm32f1/stm32f103" "device-selected" "has-can") ("stm32f101" "stm32f1/stm32f101" "device-selected") ("stm32f100" "stm32f1/stm32f100" "device-selected") ("rt" "stm32f1/rt") ("medium") ("high" "medium") ("has-can") ("doc") ("device-selected") ("connectivity" "medium" "has-can"))))))

