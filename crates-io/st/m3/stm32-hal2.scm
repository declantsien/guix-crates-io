(define-module (crates-io st m3 stm32-hal2) #:use-module (crates-io))

(define-public crate-stm32-hal2-0.1.0 (c (n "stm32-hal2") (v "0.1.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0vf6nhxiyhqn1srzpz5r8xa89jqwzlh6vm5r12j7ms2gx7miyg7s") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.0 (c (n "stm32-hal2") (v "0.2.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0aiip7dwg1q6q7pfx392l1lbnkkpjlsbiwg15nrhqyc469k61506") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f446" "stm32f4/stm32f446" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.1 (c (n "stm32-hal2") (v "0.2.1") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0xxm7hgpqbirhy93xjmnni85jzvw5vxfpf35xygl4yxr1f1v6swp") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.2 (c (n "stm32-hal2") (v "0.2.2") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1gbzg9xwbkdw4fqahf5l1fd8idiwl8cbkdzrqskh532964rb98bi") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.3 (c (n "stm32-hal2") (v "0.2.3") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "086d07aa7184sfkh0b46idk2z87wr2bii5d1wfsknifaxay63w25") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.4 (c (n "stm32-hal2") (v "0.2.4") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0s4ycgm186337gl42bs6r2fp0gwxnfghfxxx3f9hhx794c9qd09w") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.5 (c (n "stm32-hal2") (v "0.2.5") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0bp8vvxa081f37r6i6yyh8qlbhkac5x70bw45nmab086q26n553g") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.6 (c (n "stm32-hal2") (v "0.2.6") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0zcf42di5kap9m6nikqsnvxwzg659yjwb8njgb8pxh4f6m1hcyr8") (f (quote (("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3"))))))

(define-public crate-stm32-hal2-0.2.7 (c (n "stm32-hal2") (v "0.2.7") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "03ml8fv1jk6v51j1kxqr2pdfsd4iyahp2iq6b8l7v1n3ik2qnz4n") (f (quote (("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-0.2.8 (c (n "stm32-hal2") (v "0.2.8") (d (list (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0kw8dah8ggd11i593j9j9z9mw3cpsxr2j7lxqby6cz7f2ic3y93i") (f (quote (("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-0.2.9 (c (n "stm32-hal2") (v "0.2.9") (d (list (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.0") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.0") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1qi81sdivhykqqglhmqh9zfvf6yvqpzl8kv3sz19vzadvsgp3i4q") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-0.2.10 (c (n "stm32-hal2") (v "0.2.10") (d (list (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "01zyr0aijlj7kyji3zwzi5vaqg155b675981l2xw7z7yw3i32s6w") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-0.2.11 (c (n "stm32-hal2") (v "0.2.11") (d (list (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0j29z2gc0kq71qawngg59i00hy83cwdl4r6xf11097cn83bgi6db") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.0.0 (c (n "stm32-hal2") (v "1.0.0") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0j878v4rz3yjc3is3bhqls906syf2fl8hz3gbj2c17a1sf81d87r") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan")))) (y #t)))

(define-public crate-stm32-hal2-1.0.1 (c (n "stm32-hal2") (v "1.0.1") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0yw9pnw1d58imxbw9ilizr3fyg8qp4in93zchg7zwcr5kffy0svp") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.0.2 (c (n "stm32-hal2") (v "1.0.2") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "037mz6w62kvs7a23q2kx7q5k0yxdikhlv8b2hvi14jban6anwnd7") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.0.3 (c (n "stm32-hal2") (v "1.0.3") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0f8pk14c5hq3ggc01cm4fkcv0y7n5bdky7h7cjgplyk2vzdd0ld7") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.1.0 (c (n "stm32-hal2") (v "1.1.0") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "09k790kh4sff2hd8j34qld0jj3c1bqq9qh8wzgxv0fmiqfj6rd3k") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.2.0 (c (n "stm32-hal2") (v "1.2.0") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1yaajnxm3ksg2xnssb60cxp4c1iwjx2d9my95a9hgwyy8q5f11dl") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.2.1 (c (n "stm32-hal2") (v "1.2.1") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32l4-stm32hal")) (d (n "stm32l5") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.13.1") (o #t) (d #t) (k 0) (p "stm32wb-stm32hal")) (d (n "stm32wl") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0digq5nlj11dzjjw8dkfyrb8j40ind2fsg9ashfx0w11bpinsfl2") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.0 (c (n "stm32-hal2") (v "1.3.0") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0p09rg542505b0lx24bvrp4z8i32i7saawrvsa9scl1sfyrv3nsq") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.1 (c (n "stm32-hal2") (v "1.3.1") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bluetooth-hci") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0rcr20lfqy7s4bpdw9idmngpkshqgjph13y47m7sv19ynlarf5gv") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "bluetooth-hci" "byteorder" "bitflags" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.2 (c (n "stm32-hal2") (v "1.3.2") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "04m602vczahcwzhvnvzqwdpvhpfzgmx6p5kdiqkk1sd18h33nz4i") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.3 (c (n "stm32-hal2") (v "1.3.3") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0l8d3594ildy2yf1mmsc6vrrqhx3lqp175wn9lhzwyan5kg0naw8") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.4 (c (n "stm32-hal2") (v "1.3.4") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1fp6qq91449a3njvmq8hpibym1bpdzbpag9ls48alw6kk74d4nd8") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.3.5 (c (n "stm32-hal2") (v "1.3.5") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "1fckn3z0i0gzijs3mb0i6hzjvm8hdz8aygr0fq4lc6mbfsmdrzv8") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.0 (c (n "stm32-hal2") (v "1.4.0") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "02y8nvknzg3cvqsf5028qd3pgd77pzvk6sh5mbg8rgl53kjnpihj") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.1 (c (n "stm32-hal2") (v "1.4.1") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "0mgmifqrh544amj16iab98ln1mppfq2f6gwz525sdlayxssw17yd") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.2 (c (n "stm32-hal2") (v "1.4.2") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "15f8ffx9lha9z71qc12cm17nlz6rmv200xxy17393kxg2j1n9dnj") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.3 (c (n "stm32-hal2") (v "1.4.3") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "1kym86nhpk4853q5ja2z31rq0k5d9170r8jy089nb9nxp25ypazd") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.4 (c (n "stm32-hal2") (v "1.4.4") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "1fdimlsif5srp9vcn254bqhd4jcg1kx5bazyqgjwksdm3pz8a760") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.5 (c (n "stm32-hal2") (v "1.4.5") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "05aavahl3pciqx3ripj59cmpl3wdh5piap7m1kpzh4cv68f700wx") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.6 (c (n "stm32-hal2") (v "1.4.6") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "0ipc0pr818hh58glldcc556i5skza7ys945grjrqv65i2b0rm6l6") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.7 (c (n "stm32-hal2") (v "1.4.7") (d (list (d (n "bbqueue") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "bit_field") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-device-signature") (r "^0.3.3") (f (quote ("stm32wb5x"))) (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1v7jdgjly5a1if29hq1dfay1b24w0n0a0iq1iv99va8vay1d5wqk") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb" "bit_field" "stm32-device-signature" "heapless" "byteorder" "bbqueue") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.4.8 (c (n "stm32-hal2") (v "1.4.8") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "0g6zf1869npmnlyv99z4i7xl62yhkhzj1rhmfd3h62f9776y7i8n") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.0 (c (n "stm32-hal2") (v "1.5.0") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1kvqxy3q22a3bkpjmgg9rhr2sw8sp89j4byxchnllq4bzd9isbwx") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.1 (c (n "stm32-hal2") (v "1.5.1") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "02ki1lwdmkvd0s4dwyrnfyhkby0ckryk02dnvp7xm7spxb3pci1g") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.2 (c (n "stm32-hal2") (v "1.5.2") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1c54lldad8z4picj8b121f3756p47zyr6ksvjqzn84zrxj64dxr0") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.3 (c (n "stm32-hal2") (v "1.5.3") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "00jn133l9kpp0sj8x81phy14vaw7hsihxqs0s2lhflfyx5cvplcz") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.4 (c (n "stm32-hal2") (v "1.5.4") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1d999fw151vjj252c816s214kkr66p9ws1smqfg7cfs2s77kzbql") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("monotonic" "rtic-monotonic") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.5.5 (c (n "stm32-hal2") (v "1.5.5") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.0") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1pm4ji4p0z07049v3ld6jhmn2jj0bcl46mv9lnwaf2j8l7gm86d9") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("monotonic" "rtic-monotonic") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.6.0 (c (n "stm32-hal2") (v "1.6.0") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "1br0rmrysw4nr63pswavgzf6nlqfiaggpbg5qq9chsfbjklgwdi7") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("monotonic" "rtic-monotonic") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb" "void" "embedded-time") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.6.1 (c (n "stm32-hal2") (v "1.6.1") (d (list (d (n "bxcan") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "1k2sb1cnw9qj8lsps3nrw4hg71d7vjv8hd7zysv7wwdvka8w3vhv") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("usb" "stm32-usbd") ("net" "smoltcp") ("monotonic" "rtic-monotonic") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("embedded_hal" "embedded-hal" "nb" "void" "embedded-time") ("bx_can" "bxcan"))))))

(define-public crate-stm32-hal2-1.6.2 (c (n "stm32-hal2") (v "1.6.2") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "07z0my2md5i3m0lbm23jhrh0cx7jgb3m78iab6jhrv733izwqby2") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal" "dep:nb" "dep:void" "dep:embedded-time") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.6.3 (c (n "stm32-hal2") (v "1.6.3") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "04i9qxfd2s9zh84qcydzysfgvlqm0chndnyb5qpgqbp43nl5nkfc") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal" "dep:nb" "dep:void" "dep:embedded-time") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.6.4 (c (n "stm32-hal2") (v "1.6.4") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "0swlsq7l11a5j2q3irhqpdvd0m6iz8jn1rwpzkc1wm0rwizzi89y") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal" "dep:nb" "dep:void" "dep:embedded-time") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.7.0 (c (n "stm32-hal2") (v "1.7.0") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "1r3gvy26cginm7fbiaii9jqgjml7ywziyc3a6b3a2ang41p0sfyq") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal" "dep:nb" "dep:void" "dep:embedded-time") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.8.0 (c (n "stm32-hal2") (v "1.8.0") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1wwlppyzcdi7d4zzv3bcxgcyz8yd9pqp2q2n48jpp13pb9476q9c") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.8.1 (c (n "stm32-hal2") (v "1.8.1") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1a9rnll83y8gaippjrdsd442fqd5h91lm59c8r4y7a6bsk8s7dqc") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.8.2 (c (n "stm32-hal2") (v "1.8.2") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "1fdhgfwmnpqp0iihkwgzdqibkv40n8a6cwml4r1jh3aqs9ylrsk0") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal") ("can_bx" "dep:bxcan"))))))

(define-public crate-stm32-hal2-1.8.3 (c (n "stm32-hal2") (v "1.8.3") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (f (quote ("defmt-03"))) (o #t) (d #t) (k 0)) (d (n "fdcan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smoltcp") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.7.0") (o #t) (d #t) (k 0) (p "stm32-usbd2")) (d (n "stm32f3") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g0") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32h7") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32l5") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wb") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "stm32wl") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.3.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)))) (h "0y6fflf9c23cqka129nmrl99awmxc55ad4hdlklz18xlv519brfa") (f (quote (("wlrt" "stm32wl/rt") ("wle5" "stm32wl/stm32wle5" "wl") ("wl") ("wbrt" "stm32wb/rt") ("wb55" "stm32wb/stm32wb55" "wb") ("wb") ("usbotg_hs" "synopsys-usb-otg/hs") ("usbotg_fs" "synopsys-usb-otg/fs") ("l5rt" "stm32l5/rt") ("l562" "stm32l5/stm32l562" "l5") ("l552" "stm32l5/stm32l552" "l5") ("l5") ("l4x6" "stm32l4/stm32l4x6" "l4") ("l4x5" "stm32l4/stm32l4x5" "l4") ("l4x3" "stm32l4/stm32l4x3" "l4") ("l4x2" "stm32l4/stm32l4x2" "l4") ("l4x1" "stm32l4/stm32l4x1" "l4") ("l4rt" "stm32l4/rt") ("l412" "stm32l4/stm32l412" "l4") ("l4") ("h7rt" "stm32h7/rt") ("h7b3" "stm32h7/stm32h7b3" "h7") ("h753v" "stm32h7/stm32h753v" "h7") ("h753" "stm32h7/stm32h753" "h7") ("h747cm7" "stm32h7/stm32h747cm7" "h7") ("h747cm4" "stm32h7/stm32h747cm4" "h7") ("h743v" "stm32h7/stm32h743v" "h7") ("h743" "stm32h7/stm32h743" "h7") ("h735" "stm32h7/stm32h735" "h7") ("h7") ("h5") ("g4rt" "stm32g4/rt") ("g4a1" "stm32g4/stm32g4a1" "g4") ("g491" "stm32g4/stm32g491" "g4") ("g484" "stm32g4/stm32g484" "g4") ("g483" "stm32g4/stm32g483" "g4") ("g474" "stm32g4/stm32g474" "g4") ("g473" "stm32g4/stm32g473" "g4") ("g471" "stm32g4/stm32g471" "g4") ("g441" "stm32g4/stm32g441" "g4") ("g431" "stm32g4/stm32g431" "g4") ("g4") ("g0rt" "stm32g0/rt") ("g0c1" "stm32g0/stm32g0c1" "g0") ("g0b1" "stm32g0/stm32g0b1" "g0") ("g0b0" "stm32g0/stm32g0b0" "g0") ("g081" "stm32g0/stm32g081" "g0") ("g071" "stm32g0/stm32g071" "g0") ("g070" "stm32g0/stm32g070" "g0") ("g061" "stm32g0/stm32g061" "g0") ("g051" "stm32g0/stm32g051" "g0") ("g050" "stm32g0/stm32g050" "g0") ("g041" "stm32g0/stm32g041" "g0") ("g031" "stm32g0/stm32g031" "g0") ("g030" "stm32g0/stm32g030" "g0") ("g0") ("f4rt" "stm32f4/rt") ("f469" "stm32f4/stm32f469" "f4") ("f446" "stm32f4/stm32f446" "f4") ("f429" "stm32f4/stm32f429" "f4") ("f427" "stm32f4/stm32f427" "f4") ("f413" "stm32f4/stm32f413" "f4") ("f412" "stm32f4/stm32f412" "f4") ("f411" "stm32f4/stm32f411" "f4") ("f410" "stm32f4/stm32f410" "f4") ("f407" "stm32f4/stm32f407" "f4") ("f405" "stm32f4/stm32f405" "f4") ("f401" "stm32f4/stm32f401" "f4") ("f4") ("f3x4" "stm32f3/stm32f3x4" "f3") ("f3rt" "stm32f3/rt") ("f373" "stm32f3/stm32f373" "f3") ("f303" "stm32f3/stm32f303" "f3") ("f302" "stm32f3/stm32f302" "f3") ("f301" "stm32f3/stm32f301" "f3") ("f3") ("can_fd_h" "fdcan/fdcan_h7") ("can_fd_g" "fdcan/fdcan_g0_g4_l5")))) (s 2) (e (quote (("usb" "dep:stm32-usbd") ("net" "dep:smoltcp") ("monotonic" "dep:rtic-monotonic") ("embedded_hal" "dep:embedded-hal") ("can_bx" "dep:bxcan"))))))

