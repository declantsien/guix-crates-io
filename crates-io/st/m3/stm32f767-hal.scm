(define-module (crates-io st m3 stm32f767-hal) #:use-module (crates-io))

(define-public crate-stm32f767-hal-0.1.0 (c (n "stm32f767-hal") (v "0.1.0") (d (list (d (n "bare-metal") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.1.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "ina260") (r "^0.1.1") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "numtoa") (r "^0.0.7") (d #t) (k 2)) (d (n "panic-abort") (r "^0.1.1") (d #t) (k 0)) (d (n "stm32f7") (r "^0.1.1") (f (quote ("stm32f7x7" "rt"))) (d #t) (k 0)))) (h "09n81swxdkp42qhg011awmzv2cg0amm7viikrngc77gmmrhk7bhd") (f (quote (("rt") ("default" "rt"))))))

(define-public crate-stm32f767-hal-0.2.0 (c (n "stm32f767-hal") (v "0.2.0") (d (list (d (n "bare-metal") (r "^0.2.0") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.5.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.1") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "ina260") (r "^0.2.1") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "numtoa") (r "^0.0.7") (d #t) (k 2)) (d (n "panic-abort") (r "^0.2.0") (d #t) (k 0)) (d (n "stm32f7") (r "^0.2.0") (f (quote ("stm32f7x7" "rt"))) (d #t) (k 0)))) (h "0zrxkli6qcw7v83k4i93gd224prr1mwawi974bmfai9qkswwy83s") (f (quote (("rt") ("default" "rt"))))))

