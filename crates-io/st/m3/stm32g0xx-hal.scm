(define-module (crates-io st m3 stm32g0xx-hal) #:use-module (crates-io))

(define-public crate-stm32g0xx-hal-0.0.0 (c (n "stm32g0xx-hal") (v "0.0.0") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)))) (h "0wdgr7djfwbwq9s47r9irllbayknxi20sclxqm7h4jicqvrpssqv")))

(define-public crate-stm32g0xx-hal-0.0.1 (c (n "stm32g0xx-hal") (v "0.0.1") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.6.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "09h4wd2ihd6y3lplk2imgsh33yqclnmh9jbjj6j6xwm0bb21k0hi") (f (quote (("stm32g081" "stm32g0/stm32g0x1") ("stm32g071" "stm32g0/stm32g0x1") ("stm32g070" "stm32g0/stm32g0x0") ("rt" "stm32g0/rt") ("default" "rt"))))))

(define-public crate-stm32g0xx-hal-0.0.2 (c (n "stm32g0xx-hal") (v "0.0.2") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.6.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1r02d22g8x95icdy1jhchagxdbynz2mvfmp639s68j4nagn2xcjj") (f (quote (("stm32g081" "stm32g0/stm32g0x1") ("stm32g071" "stm32g0/stm32g0x1") ("stm32g070" "stm32g0/stm32g0x0") ("rt" "stm32g0/rt") ("default" "rt" "stm32g071"))))))

(define-public crate-stm32g0xx-hal-0.0.3 (c (n "stm32g0xx-hal") (v "0.0.3") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32g0") (r "^0.7.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1kwvrxkrqgpck92hqdalpl1hvzs7jwn4gd115ajv6qmkyh3aqahf") (f (quote (("stm32g081" "stm32g0/stm32g0x1") ("stm32g071" "stm32g0/stm32g0x1") ("stm32g070" "stm32g0/stm32g0x0") ("rt" "stm32g0/rt") ("default" "rt" "stm32g071"))))))

(define-public crate-stm32g0xx-hal-0.0.4 (c (n "stm32g0xx-hal") (v "0.0.4") (d (list (d (n "as-slice") (r "^0.2.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32g0") (r "^0.9.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0pkzcm1n0y78x33ndic39nimwz4mjw7vzsibwmxixv1pchzyhhzx") (f (quote (("stm32g081" "stm32g0/stm32g081") ("stm32g07x" "stm32g0/stm32g07x") ("stm32g041" "stm32g0/stm32g041") ("stm32g031" "stm32g0/stm32g031") ("stm32g030" "stm32g0/stm32g030") ("rt" "stm32g0/rt") ("default" "rt" "stm32g07x"))))))

(define-public crate-stm32g0xx-hal-0.0.5 (c (n "stm32g0xx-hal") (v "0.0.5") (d (list (d (n "as-slice") (r "^0.2.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32g0") (r "^0.9.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "01cifqlgwk2sjfbbygcfa3ckvppf97aw0in40883plq6pgrw7aah") (f (quote (("stm32g081" "stm32g0/stm32g081") ("stm32g07x" "stm32g0/stm32g07x") ("stm32g041" "stm32g0/stm32g041") ("stm32g031" "stm32g0/stm32g031") ("stm32g030" "stm32g0/stm32g030") ("rt" "stm32g0/rt") ("default" "rt" "stm32g07x"))))))

(define-public crate-stm32g0xx-hal-0.0.6 (c (n "stm32g0xx-hal") (v "0.0.6") (d (list (d (n "as-slice") (r "^0.2.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32g0") (r "^0.9.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "17c6aba2gd7kbvh38bl89knfdk6fz4xai446a7swvx9mhc4wr0b1") (f (quote (("stm32g081" "stm32g0/stm32g081") ("stm32g07x" "stm32g0/stm32g07x") ("stm32g041" "stm32g0/stm32g041") ("stm32g031" "stm32g0/stm32g031") ("stm32g030" "stm32g0/stm32g030") ("rt" "stm32g0/rt") ("default" "rt" "stm32g07x"))))))

(define-public crate-stm32g0xx-hal-0.0.7 (c (n "stm32g0xx-hal") (v "0.0.7") (d (list (d (n "as-slice") (r "^0.1.2") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.10.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0sk50vbqsplw4l80asaji6wknrb5rpz7sj27l1sbh5djsz6kjcdi") (f (quote (("stm32g081" "stm32g0/stm32g081") ("stm32g07x" "stm32g0/stm32g07x") ("stm32g041" "stm32g0/stm32g041") ("stm32g031" "stm32g0/stm32g031") ("stm32g030" "stm32g0/stm32g030") ("rt" "stm32g0/rt") ("default" "rt" "stm32g07x"))))))

(define-public crate-stm32g0xx-hal-0.0.8 (c (n "stm32g0xx-hal") (v "0.0.8") (d (list (d (n "as-slice") (r "^0.1.2") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (f (quote ("const-fn"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.10.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0gdgx3sxr48cszmp836mz0gas1ynv6nh12yvck10gahzayi09vjd") (f (quote (("stm32g081" "stm32g0/stm32g081") ("stm32g07x" "stm32g0/stm32g07x") ("stm32g041" "stm32g0/stm32g041") ("stm32g031" "stm32g0/stm32g031") ("stm32g030" "stm32g0/stm32g030") ("rt" "stm32g0/rt"))))))

(define-public crate-stm32g0xx-hal-0.0.9 (c (n "stm32g0xx-hal") (v "0.0.9") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (f (quote ("const-fn"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.12.1") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0cfk9zmz30ka3cma95q8bbbybph9i1h6iib7d88c7gz89gyjqv1b") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0") ("rt" "stm32g0/rt"))))))

(define-public crate-stm32g0xx-hal-0.1.0 (c (n "stm32g0xx-hal") (v "0.1.0") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "14isq4gis4lm4rzkmw0ing4brvp3l2qfj2blpvbzg837zn73vnf2") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0") ("rt" "stm32g0/rt"))))))

(define-public crate-stm32g0xx-hal-0.1.1 (c (n "stm32g0xx-hal") (v "0.1.1") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1mkacs3qkfgdxd4v6qlv4sv2iahid6z1h8p85ja3zchdpjdz0s2q") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0") ("rt" "stm32g0/rt"))))))

(define-public crate-stm32g0xx-hal-0.1.2 (c (n "stm32g0xx-hal") (v "0.1.2") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)) (d (n "ws2812-spi") (r "^0.3.0") (d #t) (k 2)))) (h "03957hy4lk7gms080qdzqy2spvxysvhzx37mzvdb3b6347s5gywb") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0") ("rt" "stm32g0/rt"))))))

(define-public crate-stm32g0xx-hal-0.1.3 (c (n "stm32g0xx-hal") (v "0.1.3") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)) (d (n "ws2812-spi") (r "^0.3.0") (d #t) (k 2)))) (h "05rd49qg4zjz24iw5xcnlf7jxjffmrlk0s9n4hhh3jj0mxvwaml9") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1" "device-selected") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1" "device-selected") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0" "device-selected") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1" "device-selected") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1" "device-selected") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0" "device-selected") ("rt" "stm32g0/rt") ("device-selected"))))))

(define-public crate-stm32g0xx-hal-0.1.4 (c (n "stm32g0xx-hal") (v "0.1.4") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.15") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)) (d (n "ws2812-spi") (r "^0.3.0") (d #t) (k 2)))) (h "0kipl4w36kybk5djx5cckg55q4m8wgk6mihrp25xbrv993y1nl9l") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1" "device-selected") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1" "device-selected") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0" "device-selected") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1" "device-selected") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1" "device-selected") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0" "device-selected") ("rt" "stm32g0/rt") ("device-selected")))) (y #t)))

(define-public crate-stm32g0xx-hal-0.1.5 (c (n "stm32g0xx-hal") (v "0.1.5") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "stm32g0") (r "^0.13.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)) (d (n "ws2812-spi") (r "^0.3.0") (d #t) (k 2)))) (h "1hzlrkp158kknvsm0hni9rnl72dhv6bkz36w2f97ags5m1wlb78a") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1" "device-selected") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1" "device-selected") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0" "device-selected") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1" "device-selected") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1" "device-selected") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0" "device-selected") ("rt" "stm32g0/rt") ("device-selected"))))))

(define-public crate-stm32g0xx-hal-0.2.0 (c (n "stm32g0xx-hal") (v "0.2.0") (d (list (d (n "bare-metal") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fugit") (r "^0.3.5") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "stm32g0") (r "^0.14.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.5") (d #t) (k 2)) (d (n "embedded-sdmmc") (r "^0.2.1") (d #t) (k 2)) (d (n "infrared") (r "^0.11.0") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.6.1") (d #t) (k 2)) (d (n "ws2812-spi") (r "^0.3.0") (d #t) (k 2)))) (h "0rr04imspjpgd078x3w9aylhxj0j6q7a5p4jbcf140cn3zl5gr7s") (f (quote (("stm32g0x1") ("stm32g0x0") ("stm32g081" "stm32g0/stm32g081" "stm32g0x1" "device-selected") ("stm32g071" "stm32g0/stm32g071" "stm32g0x1" "device-selected") ("stm32g070" "stm32g0/stm32g070" "stm32g0x0" "device-selected") ("stm32g041" "stm32g0/stm32g041" "stm32g0x1" "device-selected") ("stm32g031" "stm32g0/stm32g031" "stm32g0x1" "device-selected") ("stm32g030" "stm32g0/stm32g030" "stm32g0x0" "device-selected") ("rt" "stm32g0/rt") ("i2c-nonblocking") ("i2c-blocking") ("device-selected") ("default" "i2c-blocking"))))))

