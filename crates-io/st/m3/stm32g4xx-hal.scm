(define-module (crates-io st m3 stm32g4xx-hal) #:use-module (crates-io))

(define-public crate-stm32g4xx-hal-0.0.0 (c (n "stm32g4xx-hal") (v "0.0.0") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0cxn223hgbxgkdxzx3ziz3iqzs1jqpj8y1ipbbxpwsi1yxqlymay")))

(define-public crate-stm32g4xx-hal-0.0.1 (c (n "stm32g4xx-hal") (v "0.0.1") (d (list (d (n "bare-metal") (r "^0.2.5") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bme680") (r "^0.6.0") (d #t) (k 2)) (d (n "cast") (r "^0.2.7") (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 2)) (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 0)) (d (n "cortex-m-log") (r "^0.7") (f (quote ("log-integration"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.2") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.8") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4.0") (d #t) (k 2)) (d (n "embedded-dma") (r "^0.1.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (d #t) (k 2)) (d (n "fdcan") (r "^0.1.2") (f (quote ("fdcan_g0_g4_l5"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (f (quote ("spin_no_std"))) (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 2)) (d (n "mpu6050") (r "^0.1.4") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-itm") (r "^0.4.2") (d #t) (k 2)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.3") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rtt-target") (r "^0.3.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "stm32g4") (r "^0.15.1") (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0b7a94yar1rvlca4pqg5p72k6a7dzma16y1kfqbk9ls2ch5ywgcd") (f (quote (("stm32g4a1" "stm32g4/stm32g4a1") ("stm32g491" "stm32g4/stm32g491") ("stm32g484" "stm32g4/stm32g484") ("stm32g483" "stm32g4/stm32g483") ("stm32g474" "stm32g4/stm32g474") ("stm32g473" "stm32g4/stm32g473") ("stm32g471" "stm32g4/stm32g471") ("stm32g441" "stm32g4/stm32g441") ("stm32g431" "stm32g4/stm32g431") ("rt" "stm32g4/rt") ("log-semihost" "cortex-m-log/semihosting") ("log-rtt") ("log-itm" "cortex-m-log/itm") ("defmt-logging" "defmt") ("default" "rt"))))))

