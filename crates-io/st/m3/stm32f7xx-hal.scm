(define-module (crates-io st m3 stm32f7xx-hal) #:use-module (crates-io))

(define-public crate-stm32f7xx-hal-0.1.0 (c (n "stm32f7xx-hal") (v "0.1.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "stm32f7") (r "^0.8.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1zrip3r4zsgav91mg9nfipvmyf7hxgnirxdrk0sf3cd034bj1x92") (f (quote (("stm32f779" "stm32f7/stm32f7x9") ("stm32f778" "stm32f7/stm32f7x9") ("stm32f777" "stm32f7/stm32f7x7") ("stm32f769" "stm32f7/stm32f7x9") ("stm32f767" "stm32f7/stm32f7x7") ("stm32f765" "stm32f7/stm32f7x5") ("stm32f756" "stm32f7/stm32f7x6") ("stm32f746" "stm32f7/stm32f7x6") ("stm32f745" "stm32f7/stm32f7x5") ("stm32f733" "stm32f7/stm32f7x3") ("stm32f732" "stm32f7/stm32f7x2") ("stm32f723" "stm32f7/stm32f7x3") ("stm32f722" "stm32f7/stm32f7x2") ("rt" "stm32f7/rt"))))))

(define-public crate-stm32f7xx-hal-0.2.0 (c (n "stm32f7xx-hal") (v "0.2.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "micromath") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "stm32f7") (r "^0.11.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1ihxa20a9y0p1cl7i897gc2sykd392jcs694ly3m2nk0vvzx4iii") (f (quote (("stm32f779" "stm32f7/stm32f7x9" "device-selected" "ltdc") ("stm32f778" "stm32f7/stm32f7x9" "device-selected" "ltdc") ("stm32f777" "stm32f7/stm32f7x7" "device-selected" "ltdc") ("stm32f769" "stm32f7/stm32f7x9" "device-selected" "ltdc") ("stm32f767" "stm32f7/stm32f7x7" "device-selected" "ltdc") ("stm32f765" "stm32f7/stm32f765" "device-selected") ("stm32f756" "stm32f7/stm32f7x6" "device-selected" "ltdc") ("stm32f746" "stm32f7/stm32f7x6" "device-selected" "ltdc") ("stm32f745" "stm32f7/stm32f745" "device-selected") ("stm32f733" "stm32f7/stm32f7x3" "device-selected") ("stm32f732" "stm32f7/stm32f7x2" "device-selected") ("stm32f730" "stm32f7/stm32f730" "device-selected") ("stm32f723" "stm32f7/stm32f7x3" "device-selected") ("stm32f722" "stm32f7/stm32f7x2" "device-selected") ("rt" "stm32f7/rt") ("ltdc") ("device-selected"))))))

(define-public crate-stm32f7xx-hal-0.3.0 (c (n "stm32f7xx-hal") (v "0.3.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "bxcan") (r ">=0.4, <0.6") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "micromath") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-fmc") (r "^0.2.0") (f (quote ("sdram"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.11.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.3") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.5") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1chi21a3vsb75yrzcs0pw12cy9a4qvb69dvqixrr27crydp35b7n") (f (quote (("usb_hs_phy") ("usb_hs" "synopsys-usb-otg" "synopsys-usb-otg/hs") ("usb_fs" "synopsys-usb-otg" "synopsys-usb-otg/fs") ("stm32f779" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f778" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f777" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f769" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f767" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f765" "stm32f7/stm32f765" "device-selected" "fmc") ("stm32f756" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc") ("stm32f746" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc" "has-can") ("stm32f745" "stm32f7/stm32f745" "device-selected" "fmc") ("stm32f733" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f732" "stm32f7/stm32f7x2" "device-selected") ("stm32f730" "stm32f7/stm32f730" "device-selected" "usb_hs_phy") ("stm32f723" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f722" "stm32f7/stm32f7x2" "device-selected") ("rt" "stm32f7/rt") ("ltdc") ("has-can") ("fmc" "stm32-fmc") ("device-selected"))))))

(define-public crate-stm32f7xx-hal-0.4.0 (c (n "stm32f7xx-hal") (v "0.4.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "bxcan") (r ">=0.4, <0.6") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "display-interface") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "micromath") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-fmc") (r "^0.2.0") (f (quote ("sdram"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.11.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.3") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.5") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1jb3v2n7qjrrvkdh00wzlqb7qz8vixa6h33djirl49qghc7fw1lh") (f (quote (("usb_hs_phy") ("usb_hs" "synopsys-usb-otg" "synopsys-usb-otg/hs") ("usb_fs" "synopsys-usb-otg" "synopsys-usb-otg/fs") ("stm32f779" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f778" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f777" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f769" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f767" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f765" "stm32f7/stm32f765" "device-selected" "fmc") ("stm32f756" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc") ("stm32f746" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc" "has-can") ("stm32f745" "stm32f7/stm32f745" "device-selected" "fmc") ("stm32f733" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f732" "stm32f7/stm32f7x2" "device-selected") ("stm32f730" "stm32f7/stm32f730" "device-selected" "usb_hs_phy" "fmc") ("stm32f723" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f722" "stm32f7/stm32f7x2" "device-selected") ("rt" "stm32f7/rt") ("ltdc") ("has-can") ("fmc_lcd" "display-interface") ("fmc" "stm32-fmc") ("device-selected"))))))

(define-public crate-stm32f7xx-hal-0.5.0 (c (n "stm32f7xx-hal") (v "0.5.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "bxcan") (r ">=0.4, <0.6") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.0") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "display-interface") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "micromath") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-fmc") (r "^0.2.0") (f (quote ("sdram"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.11.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.3") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.5") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "093n2aflzv9fna0dj777pgwm77hyxryd26fnw2jlmj4g4qgp3jyk") (f (quote (("usb_hs_phy") ("usb_hs" "synopsys-usb-otg" "synopsys-usb-otg/hs") ("usb_fs" "synopsys-usb-otg" "synopsys-usb-otg/fs") ("stm32f779" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f778" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f777" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f769" "stm32f7/stm32f7x9" "device-selected" "ltdc" "fmc") ("stm32f767" "stm32f7/stm32f7x7" "device-selected" "ltdc" "fmc") ("stm32f765" "stm32f7/stm32f765" "device-selected" "fmc") ("stm32f756" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc") ("stm32f746" "stm32f7/stm32f7x6" "device-selected" "ltdc" "fmc" "has-can") ("stm32f745" "stm32f7/stm32f745" "device-selected" "fmc") ("stm32f733" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f732" "stm32f7/stm32f7x2" "device-selected") ("stm32f730" "stm32f7/stm32f730" "device-selected" "usb_hs_phy" "fmc") ("stm32f723" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f722" "stm32f7/stm32f7x2" "device-selected") ("rt" "stm32f7/rt") ("ltdc") ("has-can") ("fmc_lcd" "display-interface") ("fmc" "stm32-fmc") ("device-selected"))))))

(define-public crate-stm32f7xx-hal-0.6.0 (c (n "stm32f7xx-hal") (v "0.6.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "bxcan") (r ">=0.4, <0.6") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r ">=0.6.15, <0.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "display-interface") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "micromath") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtcc") (r "^0.2") (d #t) (k 0)) (d (n "stm32-fmc") (r "^0.2.0") (f (quote ("sdram"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.14.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.3") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.5") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "12lhz9jxk39i93nbffp1h2w3mn8nqvq9s5backsv9hhrgq55arzv") (f (quote (("usb_hs_phy") ("usb_hs" "synopsys-usb-otg" "synopsys-usb-otg/hs") ("usb_fs" "synopsys-usb-otg" "synopsys-usb-otg/fs") ("stm32f779" "stm32f7/stm32f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f778" "stm32f7/stm32f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f777" "stm32f7/stm32f7x7" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f769" "stm32f7/stm32f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f767" "stm32f7/stm32f7x7" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f765" "stm32f7/stm32f765" "device-selected" "gpioj" "gpiok" "fmc") ("stm32f756" "stm32f7/stm32f7x6" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f746" "stm32f7/stm32f7x6" "device-selected" "gpioj" "gpiok" "ltdc" "fmc" "has-can") ("stm32f745" "stm32f7/stm32f745" "device-selected" "gpioj" "gpiok" "fmc") ("stm32f733" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f732" "stm32f7/stm32f7x2" "device-selected") ("stm32f730" "stm32f7/stm32f730" "device-selected" "usb_hs_phy" "fmc") ("stm32f723" "stm32f7/stm32f7x3" "device-selected" "usb_hs_phy") ("stm32f722" "stm32f7/stm32f7x2" "device-selected") ("rt" "stm32f7/rt") ("ltdc") ("has-can") ("gpiok") ("gpioj") ("fmc_lcd" "display-interface") ("fmc" "stm32-fmc") ("device-selected"))))))

(define-public crate-stm32f7xx-hal-0.7.0 (c (n "stm32f7xx-hal") (v "0.7.0") (d (list (d (n "as-slice") (r "^0.2") (d #t) (k 0)) (d (n "bare-metal") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bxcan") (r "^0.6") (d #t) (k 0)) (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cortex-m") (r "^0.7.4") (d #t) (k 0)) (d (n "cortex-m-rt") (r ">=0.6.15, <0.8") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.3") (d #t) (k 2)) (d (n "display-interface") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.6.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fugit") (r "^0.3.5") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.3") (d #t) (k 0)) (d (n "micromath") (r "^2.0") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.2") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "stm32-fmc") (r "^0.2.0") (f (quote ("sdram"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.14.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.3") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros"))) (k 2)) (d (n "usb-device") (r "^0.2.5") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0735b82qvc8g3hkzm0d8fv7rk6jn07x5d235pr5day21lhhfi3yh") (f (quote (("usb_hs_phy") ("usb_hs" "synopsys-usb-otg" "synopsys-usb-otg/hs") ("usb_fs" "synopsys-usb-otg" "synopsys-usb-otg/fs") ("svd-f7x9" "stm32f7/stm32f7x9") ("svd-f7x7" "stm32f7/stm32f7x7") ("svd-f7x6" "stm32f7/stm32f7x6") ("svd-f7x3" "stm32f7/stm32f7x3") ("svd-f7x2" "stm32f7/stm32f7x2") ("svd-f765" "stm32f7/stm32f765") ("svd-f745" "stm32f7/stm32f745") ("svd-f730" "stm32f7/stm32f730") ("stm32f779" "svd-f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f778" "svd-f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f777" "svd-f7x7" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f769" "svd-f7x9" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f767" "svd-f7x7" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f765" "svd-f765" "device-selected" "gpioj" "gpiok" "fmc") ("stm32f756" "svd-f7x6" "device-selected" "gpioj" "gpiok" "ltdc" "fmc") ("stm32f746" "svd-f7x6" "device-selected" "gpioj" "gpiok" "ltdc" "fmc" "has-can") ("stm32f745" "svd-f745" "device-selected" "gpioj" "gpiok" "fmc") ("stm32f733" "svd-f7x3" "device-selected" "usb_hs_phy") ("stm32f732" "svd-f7x2" "device-selected") ("stm32f730" "svd-f730" "device-selected" "usb_hs_phy" "fmc") ("stm32f723" "svd-f7x3" "device-selected" "usb_hs_phy") ("stm32f722" "svd-f7x2" "device-selected") ("rtic" "rt" "rtic-monotonic") ("rt" "stm32f7/rt") ("ltdc") ("has-can") ("gpiok") ("gpioj") ("fmc_lcd" "display-interface") ("fmc" "stm32-fmc") ("device-selected")))) (r "1.59")))

