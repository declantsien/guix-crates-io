(define-module (crates-io st m3 stm32l4xx-hal) #:use-module (crates-io))

(define-public crate-stm32l4xx-hal-0.3.0 (c (n "stm32l4xx-hal") (v "0.3.0") (d (list (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stm32l4") (r "^0.4.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0g4h3vxq5c8m12jw5sgrgy2s10q1d1yd63ykbpgcirkhb585rh25") (f (quote (("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.1 (c (n "stm32l4xx-hal") (v "0.3.1") (d (list (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stm32l4") (r "^0.4.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0bwvgvhvk6qy06bw95h4415z0akn0ya3fqrcy8ih0jk4x9n6d9gy") (f (quote (("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.2 (c (n "stm32l4xx-hal") (v "0.3.2") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.4.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0k7s1839gs18dkp8wdbqk4qhnjqb3ci3v5hykc66z3cz91lg7d4b") (f (quote (("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.3 (c (n "stm32l4xx-hal") (v "0.3.3") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.5.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "10b0qzqbp4filahnkzpxw6mypjag9mjipr8gl82vrdvpdsfqqlj5") (f (quote (("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.4 (c (n "stm32l4xx-hal") (v "0.3.4") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.5.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "06g9mzqszj57k45w51irdysadqhj0y67i1n3pxdnq2wi3k5s0f66") (f (quote (("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.5 (c (n "stm32l4xx-hal") (v "0.3.5") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.5.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1yfyw7icfl361kr9zygcbc8w91yafsx2j64nyq90cf6z29m4p6mp") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.3.6 (c (n "stm32l4xx-hal") (v "0.3.6") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.6.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "161hymapn97jcdyvyy38ws65blhlgl2lz85biqna09c2hp1xpn60") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.4.0 (c (n "stm32l4xx-hal") (v "0.4.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.7.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "18ps4mlwpdfzgwlsa8ss4wacddfdssgn4dwdav6qqlngl3djmax3") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.5.0 (c (n "stm32l4xx-hal") (v "0.5.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32l4") (r "^0.8.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "18pfd56qz8j3krj64mdf22xdq9kys62zcb3q1c1xy3fyxcwdzh3p") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.6.0 (c (n "stm32l4xx-hal") (v "0.6.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "heapless") (r "^0.5") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.2") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.5.0") (f (quote ("ram_access_2x16"))) (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.12.1") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.3") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1ypsx2x5nrxypzfb5qlj8iwkjrnqfnacnk3im15x1vrv8kvzxj1z") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4x6" "stm32l4/stm32l4x6") ("stm32l4x5" "stm32l4/stm32l4x5") ("stm32l4x3" "stm32l4/stm32l4x3") ("stm32l4x2" "stm32l4/stm32l4x2") ("stm32l4x1" "stm32l4/stm32l4x1") ("rt" "stm32l4/rt"))))))

(define-public crate-stm32l4xx-hal-0.7.0 (c (n "stm32l4xx-hal") (v "0.7.0") (d (list (d (n "bxcan") (r ">=0.4, <0.7") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.9") (f (quote ("cortex-m-7"))) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-dma") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fugit") (r "^0.3.5") (d #t) (k 0)) (d (n "heapless") (r "^0.5") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "rtt-target") (r "^0.2.2") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (f (quote ("cortex-m" "fs"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.3") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1w05l8qdvgp97wamh4iqyhxnpi3s722x6j79w373yjkyflksydj1") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4s9" "stm32l4/stm32l4r9") ("stm32l4r9" "stm32l4/stm32l4r9") ("stm32l4a6" "stm32l4/stm32l4x6") ("stm32l496" "stm32l4/stm32l4x6") ("stm32l486" "stm32l4/stm32l4x6") ("stm32l476" "stm32l4/stm32l4x6") ("stm32l475" "stm32l4/stm32l4x5") ("stm32l471" "stm32l4/stm32l4x1") ("stm32l462" "stm32l4/stm32l4x2") ("stm32l452" "stm32l4/stm32l4x2") ("stm32l451" "stm32l4/stm32l4x1") ("stm32l443" "stm32l4/stm32l4x3") ("stm32l442" "stm32l4/stm32l4x2") ("stm32l433" "stm32l4/stm32l4x3") ("stm32l432" "stm32l4/stm32l4x2") ("stm32l431" "stm32l4/stm32l4x1") ("stm32l422" "stm32l4/stm32l412") ("stm32l412" "stm32l4/stm32l412") ("rt" "stm32l4/rt") ("otg_fs" "synopsys-usb-otg"))))))

(define-public crate-stm32l4xx-hal-0.7.1 (c (n "stm32l4xx-hal") (v "0.7.1") (d (list (d (n "bxcan") (r ">=0.4, <0.7") (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.9") (f (quote ("cortex-m-7"))) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "embedded-dma") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fugit") (r "^0.3.5") (d #t) (k 0)) (d (n "heapless") (r "^0.5") (d #t) (k 2)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "rtt-target") (r "^0.2.2") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.1") (k 0)) (d (n "stm32-usbd") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "stm32l4") (r "^0.14.0") (d #t) (k 0)) (d (n "synopsys-usb-otg") (r "^0.2.4") (f (quote ("cortex-m" "fs"))) (o #t) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.3") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "14qx41344hbnbvs6ajsrbwfac6v955j0h3rb73ik0q4rgvlgkc08") (f (quote (("unproven" "embedded-hal/unproven") ("stm32l4s9" "stm32l4/stm32l4r9") ("stm32l4r9" "stm32l4/stm32l4r9") ("stm32l4a6" "stm32l4/stm32l4x6") ("stm32l496" "stm32l4/stm32l4x6") ("stm32l486" "stm32l4/stm32l4x6") ("stm32l476" "stm32l4/stm32l4x6") ("stm32l475" "stm32l4/stm32l4x5") ("stm32l471" "stm32l4/stm32l4x1") ("stm32l462" "stm32l4/stm32l4x2") ("stm32l452" "stm32l4/stm32l4x2") ("stm32l451" "stm32l4/stm32l4x1") ("stm32l443" "stm32l4/stm32l4x3") ("stm32l442" "stm32l4/stm32l4x2") ("stm32l433" "stm32l4/stm32l4x3") ("stm32l432" "stm32l4/stm32l4x2") ("stm32l431" "stm32l4/stm32l4x1") ("stm32l422" "stm32l4/stm32l412") ("stm32l412" "stm32l4/stm32l412") ("rt" "stm32l4/rt") ("otg_fs" "synopsys-usb-otg"))))))

