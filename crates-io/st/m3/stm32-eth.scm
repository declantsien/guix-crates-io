(define-module (crates-io st m3 stm32-eth) #:use-module (crates-io))

(define-public crate-stm32-eth-0.0.0 (c (n "stm32-eth") (v "0.0.0") (d (list (d (n "aligned") (r "^0.1.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.4.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.4.0") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.2.0") (d #t) (k 0)) (d (n "panic-itm") (r "^0.1.0") (d #t) (k 2)) (d (n "stm32f429") (r "^0.3.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "volatile-register") (r "^0.2.0") (d #t) (k 0)))) (h "1884lx4ai96d6r3vyfang1iicvdrdydj1d4wv3l9wm9zf5rxl7v9") (f (quote (("target-stm32f429" "stm32f429") ("default"))))))

(define-public crate-stm32-eth-0.0.1 (c (n "stm32-eth") (v "0.0.1") (d (list (d (n "aligned") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.5.0") (f (quote ("proto-ipv4" "proto-ipv6" "socket-icmp" "socket-udp" "socket-tcp" "log" "verbose"))) (o #t) (k 0)) (d (n "stm32f429") (r "^0.6.1") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "stm32f7") (r "^0.6.0") (f (quote ("stm32f7x9" "rt"))) (o #t) (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "1w64i29kvpcy1a7cx847vk4sf4niaizkjlqsnww2lagp6hkj8zi7") (f (quote (("target-stm32f7x9" "stm32f7") ("target-stm32f429" "stm32f429") ("smoltcp-phy" "smoltcp" "log") ("default"))))))

(define-public crate-stm32-eth-0.1.0 (c (n "stm32-eth") (v "0.1.0") (d (list (d (n "aligned") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.5.0") (f (quote ("proto-ipv4" "proto-ipv6" "socket-icmp" "socket-udp" "socket-tcp" "log" "verbose"))) (o #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.3.0") (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "177sp3fl3al13j21mw83y6cz94nzqm0m0n1aq6rvrsjaxxp79psy") (f (quote (("smoltcp-phy" "smoltcp" "log") ("nucleo-f429zi" "stm32f4xx-hal/stm32f429") ("default"))))))

(define-public crate-stm32-eth-0.1.1 (c (n "stm32-eth") (v "0.1.1") (d (list (d (n "aligned") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.5.0") (f (quote ("proto-ipv4" "proto-ipv6" "socket-icmp" "socket-udp" "socket-tcp" "log" "verbose"))) (o #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.4") (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "0p67y4k6lxlvybv6cl3jhghan5mgbgfnr83c1vsq2qr24vzr86ym") (f (quote (("smoltcp-phy" "smoltcp" "log") ("nucleo-f429zi" "stm32f4xx-hal/stm32f429") ("default"))))))

(define-public crate-stm32-eth-0.1.2 (c (n "stm32-eth") (v "0.1.2") (d (list (d (n "aligned") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.5") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.5.0") (f (quote ("proto-ipv4" "proto-ipv6" "socket-icmp" "socket-udp" "socket-tcp" "log" "verbose"))) (o #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.5") (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "1jmbjkcvjpdl18zmhmcs5ynr0gnz3bhkwpkq06aqczhscml3d01f") (f (quote (("smoltcp-phy" "smoltcp" "log") ("nucleo-f429zi" "stm32f4xx-hal/stm32f429") ("default"))))))

(define-public crate-stm32-eth-0.2.0 (c (n "stm32-eth") (v "0.2.0") (d (list (d (n "aligned") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.7.0") (f (quote ("ethernet" "proto-ipv4"))) (o #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.8.3") (f (quote ("rt"))) (d #t) (k 2)) (d (n "stm32f7xx-hal") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "1nbh4vapk9kcns8a0lw5hjyv5amjf997haf7gdprna70jmga1ygg") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "device-selected") ("smoltcp-phy" "smoltcp") ("fence") ("device-selected"))))))

(define-public crate-stm32-eth-0.3.0 (c (n "stm32-eth") (v "0.3.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-itm") (r "^0.4") (d #t) (k 2)) (d (n "smoltcp") (r "^0.8") (f (quote ("medium-ethernet" "proto-ipv4"))) (o #t) (k 0)) (d (n "stm32f1xx-hal") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "0c8v45zwwr1d3jj6pil3zgn4x0fyakk9083q6xbcz7gqs07y5xh9") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("smi") ("fence") ("device-selected"))))))

(define-public crate-stm32-eth-0.4.0 (c (n "stm32-eth") (v "0.4.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "smoltcp") (r "^0.8.2") (o #t) (k 0)) (d (n "smoltcp") (r "^0.8") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "06xcnil1ghri21bdhzfz1h1alnh8zpnijfy173ppvk6rcjrpkd98") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp") ("fence") ("device-selected") ("default" "defmt" "ptp"))))))

(define-public crate-stm32-eth-0.4.1 (c (n "stm32-eth") (v "0.4.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "smoltcp") (r "^0.8.2") (o #t) (k 0)) (d (n "smoltcp") (r "^0.8") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "1biyncnnv90b6rhv4qa1hck69ya4nvixr8di6xbsawlbic3p9jip") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp") ("fence") ("device-selected") ("default" "defmt" "ptp"))))))

(define-public crate-stm32-eth-0.5.0 (c (n "stm32-eth") (v "0.5.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "async-rtic") (r "^2") (f (quote ("thumbv7-backend"))) (d #t) (k 2) (p "rtic")) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (o #t) (k 0)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "rtic") (r "^1.0") (d #t) (k 2) (p "cortex-m-rtic")) (d (n "rtic-sync") (r "^1.0") (d #t) (k 2) (p "rtic-sync")) (d (n "smoltcp") (r "^0.10") (o #t) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "0xki5ssja8qnrn1xnds2zd609fxzy866xfdj6gyb9bb0jxvhlm8c") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp" "smoltcp/packetmeta-id") ("fence") ("device-selected") ("default" "defmt" "ptp")))) (s 2) (e (quote (("async-await" "dep:futures"))))))

(define-public crate-stm32-eth-0.5.1 (c (n "stm32-eth") (v "0.5.1") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "async-rtic") (r "^2") (f (quote ("thumbv7-backend"))) (d #t) (k 2) (p "rtic")) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (o #t) (k 0)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "rtic") (r "^1.0") (d #t) (k 2) (p "cortex-m-rtic")) (d (n "rtic-sync") (r "^1.0") (d #t) (k 2) (p "rtic-sync")) (d (n "smoltcp") (r "^0.10") (o #t) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "12h0jq0pgavwj4nd5h6lmnwg1aic17zzhf4an7i60w6j2hd7kcvh") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp" "smoltcp/packetmeta-id") ("fence") ("device-selected") ("default" "defmt" "ptp")))) (s 2) (e (quote (("async-await" "dep:futures"))))))

(define-public crate-stm32-eth-0.5.2 (c (n "stm32-eth") (v "0.5.2") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "async-rtic") (r "^2") (f (quote ("thumbv7-backend"))) (d #t) (k 2) (p "rtic")) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (o #t) (k 0)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "rtic") (r "^1.0") (d #t) (k 2) (p "cortex-m-rtic")) (d (n "rtic-sync") (r "^1.0") (d #t) (k 2) (p "rtic-sync")) (d (n "smoltcp") (r "^0.10") (o #t) (k 0)) (d (n "smoltcp") (r "^0.10") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "0fq9dih9k5ab272krxdklzif5wj6h2s67zxkqiywk5p1brjwskhi") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp" "smoltcp/packetmeta-id") ("fence") ("device-selected") ("default" "defmt" "ptp")))) (s 2) (e (quote (("async-await" "dep:futures"))))))

(define-public crate-stm32-eth-0.6.0 (c (n "stm32-eth") (v "0.6.0") (d (list (d (n "aligned") (r "^0.4") (d #t) (k 0)) (d (n "async-rtic") (r "^2") (f (quote ("thumbv7-backend"))) (d #t) (k 2) (p "rtic")) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (o #t) (k 0)) (d (n "ieee802_3_miim") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "rtic") (r "^1.0") (d #t) (k 2) (p "cortex-m-rtic")) (d (n "rtic-sync") (r "^1.3") (d #t) (k 2) (p "rtic-sync")) (d (n "smoltcp") (r "^0.11") (o #t) (k 0)) (d (n "smoltcp") (r "^0.11") (f (quote ("medium-ethernet" "proto-ipv4" "socket-udp" "socket-tcp" "defmt"))) (k 2)) (d (n "stm32f1xx-hal") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "stm32f4") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "stm32f4xx-hal") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "stm32f7xx-hal") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "systick-monotonic") (r "^1.0") (d #t) (k 2)) (d (n "volatile-register") (r "^0.2") (d #t) (k 0)))) (h "0px6mqv1fz6wfcz4q0dv9s0hjrik7lv703jh6049kbh47samif4p") (f (quote (("stm32f779" "stm32f7xx-hal/stm32f779" "device-selected" "fence") ("stm32f778" "stm32f7xx-hal/stm32f778" "device-selected" "fence") ("stm32f777" "stm32f7xx-hal/stm32f777" "device-selected" "fence") ("stm32f769" "stm32f7xx-hal/stm32f769" "device-selected" "fence") ("stm32f767" "stm32f7xx-hal/stm32f767" "device-selected" "fence") ("stm32f765" "stm32f7xx-hal/stm32f765" "device-selected" "fence") ("stm32f756" "stm32f7xx-hal/stm32f756" "device-selected" "fence") ("stm32f746" "stm32f7xx-hal/stm32f746" "device-selected" "fence") ("stm32f745" "stm32f7xx-hal/stm32f745" "device-selected" "fence") ("stm32f479" "stm32f4xx-hal/stm32f479" "stm32f4" "device-selected") ("stm32f469" "stm32f4xx-hal/stm32f469" "stm32f4" "device-selected") ("stm32f439" "stm32f4xx-hal/stm32f439" "stm32f4" "device-selected") ("stm32f437" "stm32f4xx-hal/stm32f437" "stm32f4" "device-selected") ("stm32f429" "stm32f4xx-hal/stm32f429" "stm32f4" "device-selected") ("stm32f427" "stm32f4xx-hal/stm32f427" "stm32f4" "device-selected") ("stm32f417" "stm32f4xx-hal/stm32f417" "stm32f4" "device-selected") ("stm32f407" "stm32f4xx-hal/stm32f407" "stm32f4" "device-selected") ("stm32f107" "stm32f1xx-hal/stm32f107" "device-selected") ("smoltcp-phy" "smoltcp") ("ptp" "smoltcp/packetmeta-id") ("fence") ("device-selected") ("default" "defmt" "ptp")))) (s 2) (e (quote (("async-await" "dep:futures"))))))

