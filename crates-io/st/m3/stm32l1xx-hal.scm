(define-module (crates-io st m3 stm32l1xx-hal) #:use-module (crates-io))

(define-public crate-stm32l1xx-hal-0.0.0 (c (n "stm32l1xx-hal") (v "0.0.0") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32l1") (r "^0.4.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1rlry03jk6q5dfsv411gj1gj8fsmjaszlff7jd10ibjyn1506hfc") (f (quote (("stm32l162" "stm32l1/stm32l162") ("stm32l152" "stm32l1/stm32l151") ("stm32l151" "stm32l1/stm32l151") ("stm32l100" "stm32l1/stm32l100") ("rt" "stm32l1/rt") ("default" "stm32l100" "rt"))))))

(define-public crate-stm32l1xx-hal-0.0.1 (c (n "stm32l1xx-hal") (v "0.0.1") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32l1") (r "^0.5.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0mnb8969ic2ds13dz5y7pixd8l2lxjc71gskkkmh5ry2car21cvg") (f (quote (("stm32l162" "stm32l1/stm32l162") ("stm32l152" "stm32l1/stm32l151") ("stm32l151" "stm32l1/stm32l151") ("stm32l100" "stm32l1/stm32l100") ("rt" "stm32l1/rt") ("default" "rt"))))))

(define-public crate-stm32l1xx-hal-0.1.0 (c (n "stm32l1xx-hal") (v "0.1.0") (d (list (d (n "bare-metal") (r "^0.2.4") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "cast") (r "^0.2.2") (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.4.2") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.2") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32l1") (r "^0.5.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "193s9vbgmx0bd6z209dkw605s78x7pw6h93myyim3zhmhq0aviad") (f (quote (("stm32l162" "stm32l1/stm32l162") ("stm32l152" "stm32l1/stm32l151") ("stm32l151" "stm32l1/stm32l151") ("stm32l100" "stm32l1/stm32l100") ("rt" "stm32l1/rt") ("default" "rt" "stm32l162"))))))

