(define-module (crates-io st m3 stm32wlxx-hal) #:use-module (crates-io))

(define-public crate-stm32wlxx-hal-0.1.0 (c (n "stm32wlxx-hal") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.7.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 0)) (d (n "defmt") (r "^0.2.0") (d #t) (k 2)) (d (n "defmt-rtt") (r "^0.2.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.2.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "stm32wl") (r "^0.13.0") (d #t) (k 0)))) (h "1w6agywg7dwq9n51zwbk8b4jz1bvsvrlmwf6s34df88zcj7f2i3q") (f (quote (("stm32wle5" "stm32wl/stm32wle5" "device-selected") ("rt" "stm32wl/rt") ("example") ("doc") ("device-selected") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "defmt-default" "stm32wle5"))))))

(define-public crate-stm32wlxx-hal-0.2.0 (c (n "stm32wlxx-hal") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "1yv0ahsdn8lgyrp7lf0n2gh8iqc193mx64dqmz37zgq92vsvwnz4") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.56")))

(define-public crate-stm32wlxx-hal-0.2.1 (c (n "stm32wlxx-hal") (v "0.2.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "0w5z5z1a74mmi4viqh0999p60mrjyryyqwhn7yw4r6bbgjlg7wnn") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.56")))

(define-public crate-stm32wlxx-hal-0.3.0 (c (n "stm32wlxx-hal") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "0i3k9p1nw76hwv496pqdq3j7l07795f0f2gjdp45wy6l0q2bpqqp") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.57")))

(define-public crate-stm32wlxx-hal-0.4.0 (c (n "stm32wlxx-hal") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "05kav6w22zd58qlvmzjhgp892p4m2hwm8ncifyzm376yiph4zv7w") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.57")))

(define-public crate-stm32wlxx-hal-0.4.1 (c (n "stm32wlxx-hal") (v "0.4.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "12jd0zzs869pz89av8ssm2xd8ac0jrcxplagg808smj6asxknmfp") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.57")))

(define-public crate-stm32wlxx-hal-0.5.0 (c (n "stm32wlxx-hal") (v "0.5.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "0sy0y5lnmmj9dhp01l1drig7pwwcbmc7v1vvgy627a9as39a9zkv") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.60")))

(define-public crate-stm32wlxx-hal-0.5.1 (c (n "stm32wlxx-hal") (v "0.5.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.14") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "030w6dawpkrqvb0qv4cx9d5d2inzagdl8hhz7f3nag7dh8mlw9z9") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.60")))

(define-public crate-stm32wlxx-hal-0.6.0 (c (n "stm32wlxx-hal") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.15.1") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "05nyz1g0rgsfv1pimw93pnnza2lj5rmhaskpspv0n2j76ax6p7hc") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.60")))

(define-public crate-stm32wlxx-hal-0.6.1 (c (n "stm32wlxx-hal") (v "0.6.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "stm32wl") (r "^0.15.1") (k 0)) (d (n "void") (r "^1") (k 0)))) (h "1y5lfv0pjcnw8a16p20w4z1919lnihl8dsvn0jh05xm4cgg68gh9") (f (quote (("stm32wle5" "stm32wl/stm32wle5") ("stm32wl5x_cm4" "stm32wl/stm32wl5x_cm4") ("stm32wl5x_cm0p" "stm32wl/stm32wl5x_cm0p") ("rt" "stm32wl/rt" "cortex-m-rt")))) (r "1.60")))

