(define-module (crates-io st ag staging-xcm) #:use-module (crates-io))

(define-public crate-staging-xcm-0.0.0 (c (n "staging-xcm") (v "0.0.0") (h "0lysjq1ddqs9y8hsjiph0dffcjx7ql43z7bwdarcslfay5pynxkk")))

(define-public crate-staging-xcm-0.1.0-dev.1 (c (n "staging-xcm") (v "0.1.0-dev.1") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.2") (d #t) (k 2)) (d (n "sp-weights") (r "^20.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^0.1.0-dev.1") (d #t) (k 0)))) (h "0d01dwqrziqlnizigswx3x115znfkjs80q888vzxgfh9zaf5f7zw") (f (quote (("wasm-api") ("std" "bounded-collections/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-0.1.0-dev.2 (c (n "staging-xcm") (v "0.1.0-dev.2") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (d #t) (k 2)) (d (n "sp-weights") (r "^20.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^0.1.0-dev.2") (d #t) (k 0)))) (h "134z5xijmyk76ydxyqiyzdxpbgjnravwqr54p5g6ch1dq0rgfxzv") (f (quote (("wasm-api") ("std" "bounded-collections/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-0.1.0-dev.3 (c (n "staging-xcm") (v "0.1.0-dev.3") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (d #t) (k 2)) (d (n "sp-weights") (r "^20.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^0.1.0-dev.3") (d #t) (k 0)))) (h "0zghf702nzf0kvsl7djyd33k23xvwrbapsr1xl9fr6gm6kilzn91") (f (quote (("wasm-api") ("std" "bounded-collections/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-0.1.0-dev.6 (c (n "staging-xcm") (v "0.1.0-dev.6") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (d #t) (k 2)) (d (n "sp-weights") (r "=20.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "=0.1.0-dev.6") (d #t) (k 0)))) (h "0dbvlx3i1ydjy0rsxk2rpv9aj24if74xjxnjy80drl8g49wgkn99") (f (quote (("wasm-api") ("std" "bounded-collections/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-1.0.0 (c (n "staging-xcm") (v "1.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-io") (r "^24.0.0") (d #t) (k 2)) (d (n "sp-weights") (r "^21.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^1.0.0") (d #t) (k 0)))) (h "047dbsrm82fckrg9mk15j7zz22xbp74h2hcfcir3w5ywckwqfqi7") (f (quote (("wasm-api") ("std" "bounded-collections/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-2.0.0 (c (n "staging-xcm") (v "2.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^2.0.0") (d #t) (k 0)))) (h "09kx0qjr3s1wp26vjy82jmqjw649apa0c498ghprrw7rcnmx64hp") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-3.0.0-dev.1 (c (n "staging-xcm") (v "3.0.0-dev.1") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "=23.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "=3.0.0-dev.1") (d #t) (k 0)))) (h "0my0c9lllnchkszp7fdc2np4qjkhyzaipvplzcq6vf46a5jfscy4") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-3.0.0 (c (n "staging-xcm") (v "3.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^3.0.0") (d #t) (k 0)))) (h "0mky1w7nakpj5jpmllch8qiv508hpmxvkvr999v60mw1i0ldx7lm") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-3.0.1 (c (n "staging-xcm") (v "3.0.1") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^3.0.0") (d #t) (k 0)))) (h "1230bgcx832xr8yaff9741cjz03dhab3i2y7xp4hwqxxj7krn6av") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-2.0.1 (c (n "staging-xcm") (v "2.0.1") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^2.0.0") (d #t) (k 0)))) (h "1dy92x2qn8xq6vpxcd2mmzav23lkq59b8hk0kkzdzi6bbzymdi7f") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-4.0.0 (c (n "staging-xcm") (v "4.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^4.0.0") (d #t) (k 0)))) (h "0945gl5fd32dq15h8255m8qrcp66ddkjf70kg51jc7hs80p0rgbs") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-5.0.0 (c (n "staging-xcm") (v "5.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^5.0.0") (d #t) (k 0)))) (h "0nvnqmwygpaklqvjkrr27m5bvnp7myab5mv89mkjxf0dpy41ygnl") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-6.0.0 (c (n "staging-xcm") (v "6.0.0") (d (list (d (n "bounded-collections") (r "^0.1.8") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^6.0.0") (d #t) (k 0)))) (h "1ddgprdzi9g5smsjjy2sssbycxfk9vcj3nbhjbgn46ydp7jccz20") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std"))))))

(define-public crate-staging-xcm-7.0.0 (c (n "staging-xcm") (v "7.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.1.9") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-weights") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^7.0.0") (d #t) (k 0)))) (h "1jp9kq7hvni6ixxrkzphnb35rij28zql7d3bj4k2klk60zq8mw8d") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-8.0.0 (c (n "staging-xcm") (v "8.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^8.0.0") (d #t) (k 0)))) (h "0h87az9qrs1j8w04464pb628j68v91jwyvz9c0vlba7cwpmcmkjw") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-9.0.0 (c (n "staging-xcm") (v "9.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^8.0.0") (d #t) (k 0)))) (h "0h43665l3ia0405nbfkbakf3xz7ibhgmfrk2wrz7d4w4xsjf6a1h") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-8.0.1 (c (n "staging-xcm") (v "8.0.1") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^8.0.0") (d #t) (k 0)))) (h "1rn67z0prd7y3mg130avfnvlgij29hj0g6nc72y6cd6yhy5k5yj8") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-10.0.0 (c (n "staging-xcm") (v "10.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^8.0.0") (d #t) (k 0)))) (h "1ayymn0h4ni815c25z8wgdxmy8fklzphda6mv4asxpy9gxgpgvp6") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-11.0.0 (c (n "staging-xcm") (v "11.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^8.0.0") (d #t) (k 0)))) (h "0i5dsb5c3drsx3lh1mw6az8lgvfrybm3vv921hjp7m2a4y905vdd") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-12.0.0 (c (n "staging-xcm") (v "12.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^9.0.0") (d #t) (k 0)))) (h "06qmsdmk3jvza46cf7nixrccr6fkpah0qvnci3zjiswa3a0f142h") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-13.0.0 (c (n "staging-xcm") (v "13.0.0") (d (list (d (n "array-bytes") (r "^6.2.2") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^9.0.0") (d #t) (k 0)))) (h "0wvz10czd3k7f6dnsca1dd2bny13k1gnh7nk3aj8va4midhaz2iq") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (y #t) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

(define-public crate-staging-xcm-13.0.1 (c (n "staging-xcm") (v "13.0.1") (d (list (d (n "array-bytes") (r "^6.2.2") (d #t) (k 0)) (d (n "bounded-collections") (r "^0.2.0") (f (quote ("serde"))) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "schemars") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "sp-weights") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "xcm-procedural") (r "^9.0.0") (d #t) (k 0)))) (h "0gh1j459vsqifkix5sigxgsgv1b8m8fjvlyh2ymdy696d990bjfv") (f (quote (("wasm-api") ("std" "bounded-collections/std" "environmental/std" "log/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-weights/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "bounded-collections/json-schema" "dep:schemars" "sp-weights/json-schema"))))))

