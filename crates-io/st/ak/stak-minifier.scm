(define-module (crates-io st ak stak-minifier) #:use-module (crates-io))

(define-public crate-stak-minifier-0.1.0 (c (n "stak-minifier") (v "0.1.0") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.18") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.22") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.23") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.23") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.23") (d #t) (k 0)))) (h "0s8f09fp0ww175ipcihzg2r315m6kgalhczc1a60qjx8hcqysa3f")))

(define-public crate-stak-minifier-0.1.1 (c (n "stak-minifier") (v "0.1.1") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.19") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.23") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.24") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.24") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.24") (d #t) (k 0)))) (h "03jvq4mqwqgx9isgag7vwamh1pd9ck25sfpazb5l3xmhfbf3vrib")))

(define-public crate-stak-minifier-0.1.2 (c (n "stak-minifier") (v "0.1.2") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.20") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.24") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.25") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.25") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.25") (d #t) (k 0)))) (h "18n1smim01ddx3wl7bb5bb8apqg96n035g766czbjn2bd10rnq1j")))

(define-public crate-stak-minifier-0.1.3 (c (n "stak-minifier") (v "0.1.3") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.21") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.25") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.26") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.26") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.26") (d #t) (k 0)))) (h "0an5wvrchpj098rfijnv80g8j2asxm9k9fql7raglrpa1qya00bk")))

(define-public crate-stak-minifier-0.1.4 (c (n "stak-minifier") (v "0.1.4") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.22") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.26") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.27") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.27") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.27") (d #t) (k 0)))) (h "0hc0h2m6183ira5zzl67ycn8kn1k18d0a8z5n2wvacb0j2q681yp")))

(define-public crate-stak-minifier-0.1.5 (c (n "stak-minifier") (v "0.1.5") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.23") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.27") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.28") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.28") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.28") (d #t) (k 0)))) (h "05cj3avx575g850aw80gkcc6bggnvnw0ijbni32lmps0xwwk3pa1")))

(define-public crate-stak-minifier-0.1.6 (c (n "stak-minifier") (v "0.1.6") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.24") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.28") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.29") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.29") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.29") (d #t) (k 0)))) (h "0gwkfvqvijmvzsfcnn8h4mhmicybkala4p0d60hbp6r1zisflgdn")))

(define-public crate-stak-minifier-0.1.7 (c (n "stak-minifier") (v "0.1.7") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.25") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.29") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.30") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.30") (d #t) (k 0)) (d (n "stak-vm") (r "^0.3.30") (d #t) (k 0)))) (h "15rcbjjlw82fc269ba4rg1c60b8vsmzmrkqx00j58i8vm8k5s9w7")))

(define-public crate-stak-minifier-0.1.8 (c (n "stak-minifier") (v "0.1.8") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.26") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.31") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.31") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.0") (d #t) (k 0)))) (h "0f59ifgq81jsaq1cfw766q0v6fy9fnnz5lv6hh9v01p2lvcln167")))

(define-public crate-stak-minifier-0.1.9 (c (n "stak-minifier") (v "0.1.9") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.27") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.31") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.32") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.32") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.1") (d #t) (k 0)))) (h "05864sjjlzqx4mkd0bpr7vx3zbd5mf3r1lymrgmwrfcl2r8jazq5")))

(define-public crate-stak-minifier-0.1.10 (c (n "stak-minifier") (v "0.1.10") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.28") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.32") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.33") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.33") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.2") (d #t) (k 0)))) (h "0pa8bsw38nhg6a0x8vqrp9mnlvygs98i4j343wfpqcl8ns4iys5n")))

(define-public crate-stak-minifier-0.1.11 (c (n "stak-minifier") (v "0.1.11") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.29") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.33") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.34") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.34") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.3") (d #t) (k 0)))) (h "1999nxf68d54v3cgy0mw4g16ylz12d3ggv8bpgqvd7xbqv3fv6d3")))

(define-public crate-stak-minifier-0.1.12 (c (n "stak-minifier") (v "0.1.12") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.30") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.34") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.35") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.35") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.4") (d #t) (k 0)))) (h "19mnjlbqycwd4mgj7iyf9kldscqqdsspxzb0aw2v9r258gqgx01v")))

(define-public crate-stak-minifier-0.1.13 (c (n "stak-minifier") (v "0.1.13") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.31") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.35") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.36") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.36") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.5") (d #t) (k 0)))) (h "076r9drmbwixrn6ib896z2axsx1lyz0xnlqjdz6nnrd8zbm7b6v2")))

(define-public crate-stak-minifier-0.1.14 (c (n "stak-minifier") (v "0.1.14") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.32") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.37") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.37") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.6") (d #t) (k 0)))) (h "0m3rszch6cf0pbf7nm7cqyp6wvvcj57yhb2h5dbkc6h0q54dj5dd")))

(define-public crate-stak-minifier-0.1.15 (c (n "stak-minifier") (v "0.1.15") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.33") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.37") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.38") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.38") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.7") (d #t) (k 0)))) (h "1z8s6i551d4nhdd7a4y756g9zagryrkz6a71cshwqc0phw8v73bw")))

(define-public crate-stak-minifier-0.1.16 (c (n "stak-minifier") (v "0.1.16") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.34") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.38") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.39") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.39") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.8") (d #t) (k 0)))) (h "0jqj8m60wy7pdj48ahmfdgkx8c2dmjwzbwascjgxh9m8v4vbh6lk")))

(define-public crate-stak-minifier-0.1.17 (c (n "stak-minifier") (v "0.1.17") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.35") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.39") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.40") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.40") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.9") (d #t) (k 0)))) (h "0mbax49x515rwsh0ipxvs6p45djif7h2jzqrjqdp26l9pilzg6nm")))

(define-public crate-stak-minifier-0.1.18 (c (n "stak-minifier") (v "0.1.18") (d (list (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "stak-configuration") (r "^0.1.36") (d #t) (k 0)) (d (n "stak-device") (r "^0.2.40") (f (quote ("std"))) (d #t) (k 0)) (d (n "stak-macro") (r "^0.1.41") (d #t) (k 0)) (d (n "stak-primitive") (r "^0.2.41") (d #t) (k 0)) (d (n "stak-vm") (r "^0.4.10") (d #t) (k 0)))) (h "1m2ywr5yjamf7l1dnv70vdxkka76c3pm0clr3zmmsb1ypr6b88s2")))

