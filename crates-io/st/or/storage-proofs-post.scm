(define-module (crates-io st or storage-proofs-post) #:use-module (crates-io))

(define-public crate-storage-proofs-post-1.0.0 (c (n "storage-proofs-post") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.19.0") (d #t) (k 0)) (d (n "neptune") (r "^0.7.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^1.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1a257f7c40ki4l88j04cz79mqpwq8khvzpz8a51h5sbw2j64g07c")))

(define-public crate-storage-proofs-post-2.0.0 (c (n "storage-proofs-post") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^0.7.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^2.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0qbxwl3rq6q48nxrhi4q0a3r16paacd5i7775fkhvhdd8bz0jc9d")))

(define-public crate-storage-proofs-post-3.0.0 (c (n "storage-proofs-post") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^3.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "10c1g6639xw8ghh1hayskgizjbvxsms27l7l1z7bc9rnybcwcdp8")))

(define-public crate-storage-proofs-post-4.0.0 (c (n "storage-proofs-post") (v "4.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0bdanfiw6arn56yachr8y32fcabcf0afxdihnq1jjrkbpzbb28aa")))

(define-public crate-storage-proofs-post-4.0.1 (c (n "storage-proofs-post") (v "4.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "=0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "=1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0nm49i8ci3izr9iz9n9ih8zky2vz39r1jlb2ml7zbn6mdixj8nq4")))

(define-public crate-storage-proofs-post-4.0.2 (c (n "storage-proofs-post") (v "4.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "14ggykd2bhq63r7fnnk75kis14xyxkj9grkiy0v65hnai2ayg151")))

(define-public crate-storage-proofs-post-4.0.3 (c (n "storage-proofs-post") (v "4.0.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1y81bqchlcwxa1a7lyc7xqv25jn40jmgpg6y3lrxyiisfkvynbym")))

(define-public crate-storage-proofs-post-4.0.4 (c (n "storage-proofs-post") (v "4.0.4") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1w6kxcncm5z80lmrrd1vb366xaixs1nnzjkqdkhs3386mnfnbq21")))

(define-public crate-storage-proofs-post-4.0.5 (c (n "storage-proofs-post") (v "4.0.5") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0h1nj90hppp0qhw94qjf3dvrm7yf604bsr7laz3zmkrfzqdpv49c")))

(define-public crate-storage-proofs-post-5.0.0 (c (n "storage-proofs-post") (v "5.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1v0nv1hc2fbwc749573vhhhw0iw7kgfm11kxjk3wvnknba8xbv04")))

(define-public crate-storage-proofs-post-5.1.0 (c (n "storage-proofs-post") (v "5.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1pb5g0hr1f8ky1mncm7brbfjmaf6mnjkfxkzmsc5pa55r4bq5grl")))

(define-public crate-storage-proofs-post-5.1.1 (c (n "storage-proofs-post") (v "5.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0mg4mivnmb3fv1lv3x3nafv42hm5mhwh9433djrbjka2jwdl1p3y")))

(define-public crate-storage-proofs-post-5.1.2 (c (n "storage-proofs-post") (v "5.1.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1pyssvsixhvb3pbsriqg692iwi3vscapph5k02cwcmy5whlcnc63")))

(define-public crate-storage-proofs-post-5.1.3 (c (n "storage-proofs-post") (v "5.1.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0yqqf6vi1xj9qx9gd6yix6yxqshd02a1pr8rd794z2v194cyvkgr")))

(define-public crate-storage-proofs-post-5.1.4 (c (n "storage-proofs-post") (v "5.1.4") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1c2l51mvs42nr6czln4yz39p909ws3fm9mfgrw48hrzvngb8bh5m")))

(define-public crate-storage-proofs-post-5.2.0 (c (n "storage-proofs-post") (v "5.2.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0w03nxppm026383r8q7mygr5amzzwv5yh8dyd6l18yw4mx04xnwv")))

(define-public crate-storage-proofs-post-5.2.1 (c (n "storage-proofs-post") (v "5.2.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.0") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "03rhzp0azfgcvqmrwlmhvb2w2gxxq3kyw5qbsf6aywm3pqdbnfmg")))

(define-public crate-storage-proofs-post-5.2.2 (c (n "storage-proofs-post") (v "5.2.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.0") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0pvfkk8ga32f2vvxisqnj9jcs6l9x5fa3k4z5h8pci7pp8rmz38d")))

(define-public crate-storage-proofs-post-5.2.3 (c (n "storage-proofs-post") (v "5.2.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1y87s1y310i709y3xjjp48djynvy8xb2s5ipnqdhn8djhbkw8k1d")))

(define-public crate-storage-proofs-post-5.3.0 (c (n "storage-proofs-post") (v "5.3.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.11") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.1.0") (f (quote ("gpu"))) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1jhxpcrx73hvsv189pfzdx142mzhagvygshgg96rr1cv80d4splh") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing") ("gpu" "storage-proofs-core/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst"))))))

(define-public crate-storage-proofs-post-5.4.0 (c (n "storage-proofs-post") (v "5.4.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.12") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (f (quote ("gpu"))) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "09jw3snmzkx1n7f8dhd0dsjfr0kp07qsfwll6p2p2pbl8qpgdls8") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing") ("gpu" "storage-proofs-core/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst"))))))

(define-public crate-storage-proofs-post-6.0.0 (c (n "storage-proofs-post") (v "6.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.12.3") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (f (quote ("gpu"))) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^6.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "17229mwy91j41f15j34iws7k22fk8ri6gr1s0llbrpgk78xk9f5d") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst"))))))

(define-public crate-storage-proofs-post-6.1.0 (c (n "storage-proofs-post") (v "6.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^6.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1yj2dkravndl43qsmx6h239vaj2lbhfnapynzrxqdcz15z0f7dyy") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu2" "storage-proofs-core/gpu2" "filecoin-hashers/gpu2" "fr32/gpu") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-7.0.0 (c (n "storage-proofs-post") (v "7.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^7.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1r36zy29gzqx893d678vw5i7ih3x8xkqcm4i11l2dmg2fnpzrrwf") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-7.0.1 (c (n "storage-proofs-post") (v "7.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^7.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1r8n6hfiwybr95vw4ldbb4amjzbg5vg92j7lv9y84cj5vycicxj9") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-8.0.0 (c (n "storage-proofs-post") (v "8.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "00gsc2lxzwv0rd9nlv23m5mg6qdr1cb4gafhrs1cg9djyywny90w") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-8.0.1 (c (n "storage-proofs-post") (v "8.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1q6985cyq4yffvba55dakxqgack679ip4f24915ibfjsy6jf7wp8") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-8.0.2 (c (n "storage-proofs-post") (v "8.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0d89wjyanahl3viq62pnvbfqxbjq05yyyar73gprnrm7h94rayc3") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-8.0.3 (c (n "storage-proofs-post") (v "8.0.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0n4z6jwr4vbb30y0shsb6xiwx5h6skvnnx11g5ncf78bfd0c9hyy") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-9.0.0 (c (n "storage-proofs-post") (v "9.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1sir4lac9vz68v2qxcb0clbs9gpf2fgcdmbg363v9i9gfv0fx97v") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "blst" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-9.0.1 (c (n "storage-proofs-post") (v "9.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "107448rcd2afc9vpv44h9698icgjbpkfx3kdidh57s0pxvm4m8gi") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "blst" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-9.0.2 (c (n "storage-proofs-post") (v "9.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "00lcjlix7fy25l2l7rwkmfh5kv6qchz7qyaf43gc919pvkizx8yl") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "fr32/gpu" "neptune/opencl") ("default" "blst" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-post-10.0.0 (c (n "storage-proofs-post") (v "10.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.17.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^3.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.0.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^10.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1l303406v69shspdzvk95pkf4x0lily2fzm8jkg31h5pvq30zxwq") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-10.1.0 (c (n "storage-proofs-post") (v "10.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^3.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^10.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0f0fxl3381pf8y54522k5zl7y26a0lvxj0z3xlixz2pg5qxxbar3") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-11.0.0 (c (n "storage-proofs-post") (v "11.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1kv244nsxn488gvvk285ys89m1nimpbg82hsz2jr3rw7jqdvjbjv") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-11.0.1 (c (n "storage-proofs-post") (v "11.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1l3hqlx1qx8r4gy3xdx1zhiiqavg1izdjl2zzcd2q2ll2ykxck5g") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-11.0.2 (c (n "storage-proofs-post") (v "11.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "11kgadzvf5xp1ifz5h79yk4isfsy9yaf2jrsa5dv1j6af1a91jah") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-11.1.0 (c (n "storage-proofs-post") (v "11.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1bd80nd6qgswbaabfji17nvk4csgk2v9w66qkm2cqzg5r8dpy7vl") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-11.1.1 (c (n "storage-proofs-post") (v "11.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~4.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "~5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~11.1.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "08la4av6255xjya7jhk2waf7jlk7h4742f2aj8l8k5mnyf762s78") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-storage-proofs-post-12.0.0 (c (n "storage-proofs-post") (v "12.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.22.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.5.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~7.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~7.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~5.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~12.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "102bf60m0zp86mz6m5qvz49wgy6z75wc457226m06y2zmji7ssx0") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-13.0.0 (c (n "storage-proofs-post") (v "13.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~8.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~8.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~6.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~13.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0161fch9i7bdn91as236icd0irr3qqwpnqdsbxna9497vzdxjzr0") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-14.0.0 (c (n "storage-proofs-post") (v "14.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~9.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~9.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~7.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~14.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1i3hn3jkxgjh4ly3ki270ik7qffd2yvsplac1h93fl9wbyjk9q2i") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-15.0.0 (c (n "storage-proofs-post") (v "15.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.25.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~10.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~10.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~8.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~15.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1jacfbi6h16q3xc7csns7iqc8cbcc67jivcn83cr7dka2lf1qg1c") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-16.0.0 (c (n "storage-proofs-post") (v "16.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~11.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~11.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~9.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1g5gzhs9yvkk36nckzvj29r20yjfkhl0wabhmiw0sik6sk6hqy5i") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-16.1.0 (c (n "storage-proofs-post") (v "16.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~11.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~11.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~9.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.1.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "095ci3li0j7ii6093n8jlf811f50syisynd49blffs8ajha710f4") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-17.0.0 (c (n "storage-proofs-post") (v "17.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~17.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1kijr0x2zbymxinabmwhdr129ln1gi7k6k9hvdwwsi9kpih4msnx") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

(define-public crate-storage-proofs-post-18.0.0 (c (n "storage-proofs-post") (v "18.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~18.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1pa4jgfcg4vwy8h8rmj2v2zwb8p2qbxn9vzzx7ssirplx1zvnc7p") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda"))))))

