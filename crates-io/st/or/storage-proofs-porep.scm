(define-module (crates-io st or storage-proofs-porep) #:use-module (crates-io))

(define-public crate-storage-proofs-porep-1.0.0 (c (n "storage-proofs-porep") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.19.0") (d #t) (k 0)) (d (n "neptune") (r "^0.7.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^1.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0hzw5193n3vjs1fx5wr8kh5ayfiw3jsyjzhz3x2nwzmbk3jxlvdc") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-2.0.0 (c (n "storage-proofs-porep") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^0.7.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^2.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "07av3b90ckinm52wnnkiaaghyppjc91bdwfkm9yp18gwk2afshql") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-3.0.0 (c (n "storage-proofs-porep") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^3.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0k8k0jlgnmmrwcj9yg9yv9mv8b80r4q2hpbi5j2pb4wazql26g64") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.0 (c (n "storage-proofs-porep") (v "4.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "04pvp23f3aafhiyv5vjgxczbffdmk5y6bvyvfqif3inli08h0zx0") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.1 (c (n "storage-proofs-porep") (v "4.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "=0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "=1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "00z8zidfhmi1a73bk231har721kdfyyaalmjkp2vic4d1dnqp178") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.2 (c (n "storage-proofs-porep") (v "4.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0zcpg3ms5388iid905q3n76dgrxgs8qmwqb1cdszlbvlhs39iz3v") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.3 (c (n "storage-proofs-porep") (v "4.0.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1r23qi0ncndsnz0k44q8lnbs11adzwb4l43ck9www5y67ggmp4vx") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.4 (c (n "storage-proofs-porep") (v "4.0.4") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.1") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.20.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.3") (d #t) (k 0) (p "sha2ni")) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1znjjaij7nqbqrwnyhrmdgw5jmryqw2hgmkn5gjapb8vy8f0p7dl") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-4.0.5 (c (n "storage-proofs-porep") (v "4.0.5") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1ph0g9y530j2alvqcyfbh7x0iwwg9lgjy7rmyakz46qw2mj8pv8j") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.0.0 (c (n "storage-proofs-porep") (v "5.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1n8m6sh4j86wvhwjsyaw43167yiy0bs320nc7jxy18grzzmsdvq7") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.1.0 (c (n "storage-proofs-porep") (v "5.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "149ix38z1161a00gh5rjir8dk8dfl5kls20pc01mximnnhhykhbj") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.1.1 (c (n "storage-proofs-porep") (v "5.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0lqf9pzkd72zjzz121ak8bvh6f6rms43pc9pr7jvp8cl5l197z99") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.1.2 (c (n "storage-proofs-porep") (v "5.1.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "130362p58kiz9rqg5giqx04w0n668wacafa0030qiz1ilgn6x5fh") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.1.3 (c (n "storage-proofs-porep") (v "5.1.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1nhq8x6bxhrakn8iv1b0nk644af6bgq634zsvr5s5i4smxnlalz6") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.1.4 (c (n "storage-proofs-porep") (v "5.1.4") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1p6v2bsj8sknykzvzjygl9c1611adzmj974ds7m85jqv6mrlj4vq") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.2.0 (c (n "storage-proofs-porep") (v "5.2.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^1.0.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1xmf69141yc5wxx0x1bpp9ymjrqwn8rr2apbqm6lw22ysr6gxc63") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.2.1 (c (n "storage-proofs-porep") (v "5.2.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.0") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "18xa1fx3nicggk2s02lka3qzgq6flk9d24bcqb31skd7cymydlpy") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.2.2 (c (n "storage-proofs-porep") (v "5.2.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.0") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "137j1v5srhrrgfp9c00hx6qckp27w4nbni4ib36z8nhpyf19a8kz") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.2.3 (c (n "storage-proofs-porep") (v "5.2.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3.5") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "fil-sapling-crypto") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "=1.2.1") (f (quote ("gpu"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "paired") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "01gabis89wm8wdaapxjsadqrba8sc95x5f15ykg88cphh6ydv14h") (f (quote (("default"))))))

(define-public crate-storage-proofs-porep-5.3.0 (c (n "storage-proofs-porep") (v "5.3.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.11") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.1.0") (f (quote ("gpu"))) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0n31j6xl6hj8fg1hgib2whaxz7ja4iwkqwrdzxpyn428nb8f8y69") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing") ("gpu" "storage-proofs-core/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst"))))))

(define-public crate-storage-proofs-porep-5.4.0 (c (n "storage-proofs-porep") (v "5.4.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.12") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (f (quote ("gpu"))) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1q5bmh01ckqadvcqnl6m2lawnqans5n2x4n38y3p134npgjhj1mj") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing") ("gpu" "storage-proofs-core/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst"))))))

(define-public crate-storage-proofs-porep-6.0.0 (c (n "storage-proofs-porep") (v "6.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.12.3") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (f (quote ("gpu"))) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^6.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0ic9y532133qpm3gaj9iw2v811c2wk2biyrjvi5vrj603azx1alp") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst"))))))

(define-public crate-storage-proofs-porep-6.1.0 (c (n "storage-proofs-porep") (v "6.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^1.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^6.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0jck9wjdpjcav0cmhjws8m0mgqaahqbq0macj8bvzas8ymrlf98r") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu2" "storage-proofs-core/gpu2" "filecoin-hashers/gpu2" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/gpu" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-7.0.0 (c (n "storage-proofs-porep") (v "7.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^7.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0rvnqi6mb8kdlb2h1sbnzk1b2mqag93x0ym5vfhg81j8a8p9fbhj") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-7.0.1 (c (n "storage-proofs-porep") (v "7.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.13") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.2.3") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^2.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^0.2.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^2.2.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^7.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "02p7v34lgmikb2y4zsbmznibxy5b2m5gzlfklm9x4i866z6rrhnf") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-8.0.0 (c (n "storage-proofs-porep") (v "8.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1s4ri2a9zlxdpjyflydvp18iq0lnza7jcr2lzhsc2xv0fxk1nbz3") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-8.0.1 (c (n "storage-proofs-porep") (v "8.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0xfr7pzarccsh5r2s5asdjhply4lwcbp2g2ldk0zqvrliia6mrjl") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-8.0.2 (c (n "storage-proofs-porep") (v "8.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0xwhcich58j50c61bjhf8d81mnsj5k9xpmi96qk9jcbllb3xf7qr") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-8.0.3 (c (n "storage-proofs-porep") (v "8.0.3") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.14") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^3.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^1.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^3.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^8.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1bpm090gavx3fcpgk61hjpgx28282rsd6ypd5648wh64ivx6r1vw") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "pairing" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-9.0.0 (c (n "storage-proofs-porep") (v "9.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "14kim9dv7yb6sjm606br0aqz0fwv0y38qrx4pfl2h0gsf2bqbv8z") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "blst" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-9.0.1 (c (n "storage-proofs-porep") (v "9.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "16azhyzi5lgykjvc06ijjvcp8bhyph9is42afzjfhr6pwc7dc6xv") (f (quote (("single-threaded") ("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "blst" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-9.0.2 (c (n "storage-proofs-porep") (v "9.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.16") (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.3.1") (d #t) (k 0) (p "fff")) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^4.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^2.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^4.0") (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^9.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0mmpz32zbvh06z5b0qhwci0rydxjc36alj61nh1vrmrnkhkxvrgd") (f (quote (("pairing" "storage-proofs-core/pairing" "bellperson/pairing" "neptune/pairing" "filecoin-hashers/pairing" "fr32/pairing") ("multicore-sdr" "hwloc") ("isolated-testing") ("gpu" "storage-proofs-core/gpu" "filecoin-hashers/gpu" "neptune/opencl" "bellperson/gpu" "fr32/gpu") ("default" "blst" "gpu" "multicore-sdr") ("blst" "storage-proofs-core/blst" "bellperson/blst" "neptune/blst" "filecoin-hashers/blst" "fr32/blst"))))))

(define-public crate-storage-proofs-porep-10.0.0 (c (n "storage-proofs-porep") (v "10.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.17.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^3.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.0.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^10.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0sh1fsnzlgzhbfl2d2ykacxz9qlvk720zvad44vksp8k1bvlavwk") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-10.1.0 (c (n "storage-proofs-porep") (v "10.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^5.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^3.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^10.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "08vadn8lic8ryrfrjrrwcwm4qc15mr2is8hmksp7cpk3dgxp4k49") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-11.0.0 (c (n "storage-proofs-porep") (v "11.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1fvm8wimw4ij7xxdr7q14girwq5rsym7pannyifx6r6jbwmbh27f") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-11.0.1 (c (n "storage-proofs-porep") (v "11.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "118wdx88149b6r7y205yq929p3f4fqgxb3pffhhn1kyazkm4h4bl") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-11.0.2 (c (n "storage-proofs-porep") (v "11.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0qr2c4jfm1291l181xr1l1fnf4h7mkwz5csf0njsa92ba63k0zc9") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-11.1.0 (c (n "storage-proofs-porep") (v "11.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1ly1adfbkiyibsha3diljh3365cw7vp386pr8h5f4xk3pfp7yfrl") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-11.1.1 (c (n "storage-proofs-porep") (v "11.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~4.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "~5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~11.1.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1cy7pygs3hfz0i8nqh1ig962gnkbivnf059k97pjs01dh2kxfp9r") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-porep-12.0.0 (c (n "storage-proofs-porep") (v "12.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.22.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.5.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~7.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~7.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~5.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~7.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~7.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~12.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1mhlji5l8fv671gnmp7m0m3cqr5z839ad2k749x9692jb2gag2ys") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-13.0.0 (c (n "storage-proofs-porep") (v "13.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~8.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~8.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~6.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~8.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~8.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~13.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1myjhkiam0jq9nn2vjs4x20f6q8ydzg5pwcgb1v1p1r80rxlrb0m") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-14.0.0 (c (n "storage-proofs-porep") (v "14.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~9.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~9.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~7.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~8.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~9.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~14.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0p0w9ga67lmqzsfsj9dkfv6mfmh2n5x04yk99m52lq09n0pacl14") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-15.0.0 (c (n "storage-proofs-porep") (v "15.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.25.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~10.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~10.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~8.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^9.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~10.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~15.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "00y42vrydaykx3sqpp9mx1ilibjx4h4dj3wdj2h7gb0daarl2czg") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-16.0.0 (c (n "storage-proofs-porep") (v "16.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~11.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~11.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~9.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~11.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1y4g2h82m4d4xwnlsq9mr4lzvpj3cdxrd3w8gr6aq0r2lff57jgl") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-16.1.0 (c (n "storage-proofs-porep") (v "16.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~11.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~11.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~9.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~11.1.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.1.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0m2ba4lfhd09vca21gisjv3y6qlwszbywk557r50zph33zfx1lz4") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-17.0.0 (c (n "storage-proofs-porep") (v "17.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~10.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~12.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~17.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0q4hvxa8nfwdxvb8dzv9mmaxzlv5k7cy1p5lmwyhxfa5x4spq5cj") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-porep-18.0.0 (c (n "storage-proofs-porep") (v "18.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1.6") (d #t) (k 2)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~10.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "~13.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~18.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "17wxs8rvslx9mmzhv7wg4p2ja22j5i40c2f8mbns1prdbvh1zbkg") (f (quote (("opencl" "storage-proofs-core/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

