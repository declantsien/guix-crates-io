(define-module (crates-io st or storage-proofs) #:use-module (crates-io))

(define-public crate-storage-proofs-0.2.0 (c (n "storage-proofs") (v "0.2.0") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.11") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "logging-toolkit") (r "^0.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.6") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1wxhjqvlxmcvk5i6z19y9bkc8nxslyacl846gz103gs92lwdnpcw") (f (quote (("simd") ("disk-trees") ("default") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.3.0 (c (n "storage-proofs") (v "0.3.0") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.11") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "logging-toolkit") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.6") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1h29aravn9x5sm3a26vfwrqwdk3h7dlxhp4cak61qi1xdbasflh2") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.4.0 (c (n "storage-proofs") (v "0.4.0") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "logging-toolkit") (r "^0.4") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.7.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1987cs1dmsxsl66qk5grxlwy8zj2hrymlj9pgqb1z1grx8nvfszr") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.5.0 (c (n "storage-proofs") (v "0.5.0") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "logging-toolkit") (r "^0.5") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.7.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0y4f1p7sa80zwc7ryczw9n519bnrinbi6xpvvg7v3c0jab6dacgm") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.6.0 (c (n "storage-proofs") (v "0.6.0") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.7.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0d1zl6rmvh69l42044ya6xdwvh1qxc9525dx3abvch1wfslfvqfr") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.6.1 (c (n "storage-proofs") (v "0.6.1") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.7.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "00na1qv0js8l475p5lcys5rixwhp6zfd3ryzkrw63wsbqfdw0jsv") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-0.6.2 (c (n "storage-proofs") (v "0.6.2") (d (list (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.0") (d #t) (k 0)) (d (n "bellperson") (r "^0.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "config") (r "^0.9.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.4.0") (d #t) (k 0)) (d (n "fil-sapling-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.7.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paired") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "proptest") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "17pjb16mnwbnxnyi5mcn8kd37g718gx39kbg4vq1xzj2mfqvi6vl") (f (quote (("simd") ("disk-trees") ("default") ("big-sector-sizes-bench") ("asm" "sha2/sha2-asm"))))))

(define-public crate-storage-proofs-1.0.0 (c (n "storage-proofs") (v "1.0.0") (d (list (d (n "storage-proofs-core") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^1.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^1.0.0") (d #t) (k 0)))) (h "0bqb2w4m7mdiljzvz1qb5pck7hb5cr53v443fpg7c8phckiq5w15") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-2.0.0 (c (n "storage-proofs") (v "2.0.0") (d (list (d (n "storage-proofs-core") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^2.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^2.0.0") (d #t) (k 0)))) (h "0v3601ms2h3ln5ac1khvcdgib2088gq300qgs9j2f27a35jyx73x") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-3.0.0 (c (n "storage-proofs") (v "3.0.0") (d (list (d (n "storage-proofs-core") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^3.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^3.0.0") (d #t) (k 0)))) (h "19kx7cp83h810y99hiq4ww7vdlhz1zi3l0x0l72ky13522kiw251") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.0 (c (n "storage-proofs") (v "4.0.0") (d (list (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.0") (d #t) (k 0)))) (h "01b67vx6808f5h3j3h47prl9zkww01p7h571jf9m2f7pdajhvgd2") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.1 (c (n "storage-proofs") (v "4.0.1") (d (list (d (n "storage-proofs-core") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.0") (d #t) (k 0)))) (h "01gaslhwkxng31aaxjkgxnyqi79vm7l3w9rm697mn1zzxvjsqh0n") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.2 (c (n "storage-proofs") (v "4.0.2") (d (list (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.1") (d #t) (k 0)))) (h "0y01j50rm5dd6mwjnjps8zhxj5zvg6jxrsrjf033gcxhmhc2qz5f") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.3 (c (n "storage-proofs") (v "4.0.3") (d (list (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.1") (d #t) (k 0)))) (h "03jrlw0by8hxcyj9rp34k7kl6j509nmhh1z3x8bpyjklfcys9n1w") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.4 (c (n "storage-proofs") (v "4.0.4") (d (list (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.1") (d #t) (k 0)))) (h "0sw8yrf601byq1jh741hlis9df7laqaag6apj9iyq9fysx6l7cz6") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-4.0.5 (c (n "storage-proofs") (v "4.0.5") (d (list (d (n "storage-proofs-core") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^4.0.1") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^4.0.1") (d #t) (k 0)))) (h "18y2vn4n0x6v8zskkrqdxrrvqmg167w3347saynk02mpjakkiw6b") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.0.0 (c (n "storage-proofs") (v "5.0.0") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "0bw3aaly35bwdb3d69bw08nx2d5wa00pb2vnyvmnmiqd5psfcvfi") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.1.0 (c (n "storage-proofs") (v "5.1.0") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "13hllc1s4mv3mbkb8glv50hhax1py6x3b78b4kzdm7ba07kvmg5r") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.1.1 (c (n "storage-proofs") (v "5.1.1") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "08r5cnxsc4jp4mngbci2cfkj0vl780c3x00nkl022kz6c23z5kys") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.1.2 (c (n "storage-proofs") (v "5.1.2") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "03c736acb7r8rydlmfz4mdhxi213sbgrg597n7ni31v96b8bslpi") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.1.3 (c (n "storage-proofs") (v "5.1.3") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "031yakhdkl9fbkli5fd351fpqfny64hswp2705cvpcr3l1fjxjrj") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.1.4 (c (n "storage-proofs") (v "5.1.4") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "1mysjz262mlp11wwhpfd78gl7w28hid9naa89bjvf5xgklzrf18y") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.2.0 (c (n "storage-proofs") (v "5.2.0") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "18z1rgyxywbh8kjlkjqr8gfpndqzwrfznirp3irx4k2lhdad3syp") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.2.1 (c (n "storage-proofs") (v "5.2.1") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "1shvxhg24wl35grzrrbk019j296jmi0x821mp4m7jvvyayzjfa5v") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.2.2 (c (n "storage-proofs") (v "5.2.2") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "0cjilgnd1ig8xpnncadz1fi3ifsp03k614k0b7ymhgc0ds8pd14m") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.2.3 (c (n "storage-proofs") (v "5.2.3") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (d #t) (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (d #t) (k 0)))) (h "0wmdbcn8z23qyhwljsnhmn421a4jddx2l6mrpnkbi3knb2zim592") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu") ("default" "gpu") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.3.0 (c (n "storage-proofs") (v "5.3.0") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (k 0)))) (h "09r9bx9ikvpzrxskj23pw867h7mgfp7618b8a7lqfihymyr9q2rz") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("pairing" "storage-proofs-core/pairing" "storage-proofs-post/pairing" "storage-proofs-porep/pairing") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu" "storage-proofs-porep/gpu" "storage-proofs-post/gpu") ("default" "gpu" "pairing") ("blst" "storage-proofs-core/blst" "storage-proofs-post/blst" "storage-proofs-porep/blst") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-5.4.0 (c (n "storage-proofs") (v "5.4.0") (d (list (d (n "storage-proofs-core") (r "^5.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^5.0.0") (k 0)) (d (n "storage-proofs-post") (r "^5.0.0") (k 0)))) (h "115hmxdkf9jqakd9y9jf2jr9svkahapw8gqwc4pm6z46w8903r0j") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("pairing" "storage-proofs-core/pairing" "storage-proofs-post/pairing" "storage-proofs-porep/pairing") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu" "storage-proofs-porep/gpu" "storage-proofs-post/gpu") ("default" "gpu" "pairing") ("blst" "storage-proofs-core/blst" "storage-proofs-post/blst" "storage-proofs-porep/blst") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-storage-proofs-6.0.0 (c (n "storage-proofs") (v "6.0.0") (d (list (d (n "storage-proofs-core") (r "^6.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^6.0.0") (k 0)) (d (n "storage-proofs-post") (r "^6.0.0") (k 0)))) (h "16yzfr1n4mnpzfnidfcl6limhwnih1wj8jr1vrg73wc7nihzhizw") (f (quote (("simd" "storage-proofs-core/simd") ("profile" "measurements") ("pairing" "storage-proofs-core/pairing" "storage-proofs-post/pairing" "storage-proofs-porep/pairing") ("measurements" "storage-proofs-core/measurements") ("gpu" "storage-proofs-core/gpu" "storage-proofs-porep/gpu" "storage-proofs-post/gpu") ("default" "gpu" "pairing") ("blst" "storage-proofs-core/blst" "storage-proofs-post/blst" "storage-proofs-porep/blst") ("asm" "storage-proofs-core/asm"))))))

