(define-module (crates-io st or storage-proofs-update) #:use-module (crates-io))

(define-public crate-storage-proofs-update-11.0.0 (c (n "storage-proofs-update") (v "11.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1m3jq2xkk79jkm78h8c8wjh0gqk2ygkdrsrn7mg7xk2pbjw3xpxi") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-update-11.0.1 (c (n "storage-proofs-update") (v "11.0.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0vfhkbwaz7pbv2i9k5cfjghqgwnanmn13ag8g5bdsgzvakyaj1i8") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-update-11.0.2 (c (n "storage-proofs-update") (v "11.0.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1f1bbl8fs1rdgsi9arc70l1bkx519irb56qpmjwlas34in76q4fa") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-update-11.1.0 (c (n "storage-proofs-update") (v "11.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "^6.0.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "^4.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 0)) (d (n "storage-proofs-porep") (r "^11.0.0") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "06x969bc23jl2mgx656rzxfz2532bkaxkyjg0jx760ljq17awkvk") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-update-11.1.1 (c (n "storage-proofs-update") (v "11.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.21.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "filecoin-hashers") (r "~6.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "fr32") (r "~4.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "~5.2.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^6.0.0") (d #t) (k 0)) (d (n "storage-proofs-core") (r "~11.1.0") (k 0)) (d (n "storage-proofs-porep") (r "~11.1.0") (k 0)) (d (n "storage-proofs-porep") (r "~11.1.0") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1l9i9lw6f54nx7hb0y5midq4kxarb4frh4dj7mdgm0x0n4g8fs8f") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-storage-proofs-update-12.0.0 (c (n "storage-proofs-update") (v "12.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.22.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.5.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~7.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~5.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~7.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~12.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~12.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0n0l5x5gnblf519lfj8skxg10gxm6biqr678h5ddf1ali363x93y") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-13.0.0 (c (n "storage-proofs-update") (v "13.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~8.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~6.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~8.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~13.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~13.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "017xgjs6isyybl6a5238ldhwhz5qp7gl2hfy1si1w6gzn5xb6c9f") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-14.0.0 (c (n "storage-proofs-update") (v "14.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.24.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~9.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~7.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.22.0") (d #t) (k 0)) (d (n "neptune") (r "~8.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~14.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~14.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0ni84a4cjrnk0h47ggfigysr4wsq1g5ns5w7z95p9qjk461v4crl") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-15.0.0 (c (n "storage-proofs-update") (v "15.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.25.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~10.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~8.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^9.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~15.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~15.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0iqz0h59d0fv650klv9a2yl9jma52nm4w4q04xl5xkd88k9cpjb5") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-16.0.0 (c (n "storage-proofs-update") (v "16.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~11.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~9.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~16.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0wldyjjbm1a8imp68lz7683s82ihgiiw3rk1b50zvkw911vcbaf9") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-16.1.0 (c (n "storage-proofs-update") (v "16.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~11.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~9.1.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~16.1.0") (k 0)) (d (n "storage-proofs-porep") (r "~16.1.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1x91mkdvz0b46j4j45fngy9xsvbmnjl29q8819q26bnn6njacx2k") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard" "storage-proofs-porep/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-17.0.0 (c (n "storage-proofs-update") (v "17.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~10.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~17.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~17.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0slcx5djprz35vgs0w0mg4512n4c60jmlyrifs6g1bain0swqb6m") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard" "storage-proofs-porep/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

(define-public crate-storage-proofs-update-18.0.0 (c (n "storage-proofs-update") (v "18.0.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.26.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.7.0") (d #t) (k 0)) (d (n "ff") (r "^0.13.0") (d #t) (k 0)) (d (n "filecoin-hashers") (r "~12.0.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "fr32") (r "~10.0.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.6") (d #t) (k 0)) (d (n "merkletree") (r "^0.23.0") (d #t) (k 0)) (d (n "neptune") (r "^11.0.0") (f (quote ("bls" "arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "storage-proofs-core") (r "~18.0.0") (k 0)) (d (n "storage-proofs-porep") (r "~18.0.0") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "08ck8gmzr1s0gdv52alhss82762jvlgi4x7q1bha9mrk3cw348wr") (f (quote (("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "filecoin-hashers/opencl" "neptune/opencl" "bellperson/opencl") ("multicore-sdr" "storage-proofs-porep/multicore-sdr") ("isolated-testing") ("fixed-rows-to-discard" "storage-proofs-core/fixed-rows-to-discard" "storage-proofs-porep/fixed-rows-to-discard") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "filecoin-hashers/cuda" "neptune/cuda" "bellperson/cuda"))))))

