(define-module (crates-io st or stork_http) #:use-module (crates-io))

(define-public crate-stork_http-0.0.1 (c (n "stork_http") (v "0.0.1") (d (list (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "select") (r "^0.4.3") (d #t) (k 0)) (d (n "stork") (r "^0.0.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1hlp5wyvjlqrql1fs2733sx100gd1qjrmbfqm911a5l4jcp8z14w") (y #t)))

(define-public crate-stork_http-0.0.2 (c (n "stork_http") (v "0.0.2") (d (list (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "select") (r "^0.4.3") (d #t) (k 0)) (d (n "stork") (r "^0.0.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0xw0jvac9r2icckrj5bp9xgmy08r03gs0iq0l6rnbyinxz8ijkwz") (y #t)))

(define-public crate-stork_http-0.0.3 (c (n "stork_http") (v "0.0.3") (d (list (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "select") (r "^0.4.3") (d #t) (k 0)) (d (n "stork") (r "^0.0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0hg142jsql8qk4lnkr94pmhf7ak7dhjvkac8rrkjx8ylpf3insdk")))

