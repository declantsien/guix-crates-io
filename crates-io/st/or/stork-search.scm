(define-module (crates-io st or stork-search) #:use-module (crates-io))

(define-public crate-stork-search-0.7.0 (c (n "stork-search") (v "0.7.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "16vi2w8rw2h3ysfvpwjsjrssx42mpqypaa9hy298z3d63h3mpwf1")))

(define-public crate-stork-search-0.7.1 (c (n "stork-search") (v "0.7.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1zw7jzpg96cnsqq56n7rh9bh5q6cl40zvyamd0v1nxxxpiv5f3dj")))

(define-public crate-stork-search-0.7.2 (c (n "stork-search") (v "0.7.2") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "14fxq9bsx016vzfgc211k8iw4d00cddg6wc9bjkqb2wwna4jxnd1")))

(define-public crate-stork-search-0.7.3 (c (n "stork-search") (v "0.7.3") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "17ifxmibhlhz7jy74ya68pxgy3fn64x8fdn1m7f55wihq6jq4nbs")))

(define-public crate-stork-search-0.7.4 (c (n "stork-search") (v "0.7.4") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0xdr0d5ghxj1fqfm686ypgv767ay0s71if8lwhkfn2ah5r31ys7f")))

(define-public crate-stork-search-1.0.0 (c (n "stork-search") (v "1.0.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "09drlfyn0gs7hfxwfhkhafn702wx5mb345y0nc6ylwr8c0s2amfv") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.0.1 (c (n "stork-search") (v "1.0.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "15vj7799c08nvq6wkvkiy1hx96rwff0mfppwbrl0hlqccwslqlpg") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.0.2 (c (n "stork-search") (v "1.0.2") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "01d3w0ijdmfrsqrxzjrl8s7d7zrbmjlbz6h7j9shggiw5gl76v4s") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.0.3 (c (n "stork-search") (v "1.0.3") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0fmb1bqnql1c8z4cdg9h724pn8ssr3840pnwadv1r5mijxdvmnp8") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.0.4 (c (n "stork-search") (v "1.0.4") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0zdv1cviv708hfwrwgmvwvb3a98h5wn6ikm1d7n714wl7z9hkr6j") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.1.0 (c (n "stork-search") (v "1.1.0") (d (list (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "frontmatter") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0sx6pbnqsqgmvili1dn99q4nk3mka2c25yrhh5kmc6ya3z4h9xji") (f (quote (("test-server" "futures" "hyper" "tokio") ("default" "test-server"))))))

(define-public crate-stork-search-1.2.0 (c (n "stork-search") (v "1.2.0") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "frontmatter") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.70") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0wh8m7fg7gag78n28hjn85272ljzy6cclccxaxpzkjqimh9inwi0") (f (quote (("test-server" "build" "futures" "hyper" "tokio") ("default" "build" "test-server") ("build" "srtparse" "scraper" "frontmatter" "markdown" "atty" "mime" "reqwest" "indicatif" "colored"))))))

(define-public crate-stork-search-1.2.1 (c (n "stork-search") (v "1.2.1") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "frontmatter") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.70") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0lwh5lnih9w5ivbkc256nyq6jb85n85hbx7kk745rv7b7q29rrdq") (f (quote (("test-server" "build" "futures" "hyper" "tokio") ("default" "build" "test-server") ("build" "srtparse" "scraper" "frontmatter" "markdown" "atty" "mime" "reqwest" "indicatif" "colored" "unicode-segmentation"))))))

(define-public crate-stork-search-1.3.0 (c (n "stork-search") (v "1.3.0") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "frontmatter") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server" "tcp" "http1"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "kuchiki") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srtparse") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.70") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0pfmqfwzh70wkiga3jghkj596rn03v5b4inpsm9ca496llc9aqc5") (f (quote (("web-scraping" "mime" "reqwest") ("test-server" "build" "futures" "hyper" "tokio") ("default" "build" "test-server") ("build" "srtparse" "kuchiki" "frontmatter" "markdown" "atty" "indicatif" "colored" "unicode-segmentation"))))))

(define-public crate-stork-search-1.4.1 (c (n "stork-search") (v "1.4.1") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("color"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "stork-lib") (r "^1.4.1") (k 0)) (d (n "textwrap") (r "^0.14.2") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "12gjrz2fq6nrcqhwi7pakn4x5hnw7jjdawbi8ib1djfnldj459fz") (f (quote (("v1-compat") ("search-v3" "stork-lib/search-v3") ("search-v2" "stork-lib/search-v2") ("default" "v1-compat" "search-v2" "search-v3" "build-v3-web-scraping") ("build-v3-web-scraping" "build-v3" "stork-lib/build-v3-web-scraping") ("build-v3" "search-v3" "stork-lib/build-v3"))))))

(define-public crate-stork-search-1.4.2 (c (n "stork-search") (v "1.4.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("color"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server"))) (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "stork-lib") (r "^1.4.2") (k 0)) (d (n "textwrap") (r "^0.14.2") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("signal"))) (o #t) (d #t) (k 0)))) (h "1v3hg26x62qy26zgfl0ph7qxwbj9xsngcfd24m3q79077rjcn3vl") (f (quote (("v1-compat") ("test-server" "hyper" "tokio") ("search-v3" "stork-lib/search-v3") ("search-v2" "stork-lib/search-v2") ("default" "v1-compat" "search-v2" "search-v3" "build-v3-web-scraping") ("build-v3-web-scraping" "build-v3" "stork-lib/build-v3-web-scraping") ("build-v3" "search-v3" "stork-lib/build-v3"))))))

(define-public crate-stork-search-1.5.0 (c (n "stork-search") (v "1.5.0") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("color"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server"))) (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "stork-lib") (r "^1.5.0") (k 0)) (d (n "textwrap") (r "^0.14.2") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("signal"))) (o #t) (d #t) (k 0)))) (h "1njifp5hz0vyylzxx59xh25j3s17s53k5lfy19fml628hbdymwqq") (f (quote (("v1-compat") ("test-server" "hyper" "tokio") ("search-v3" "stork-lib/search-v3") ("search-v2" "stork-lib/search-v2") ("default" "v1-compat" "search-v2" "search-v3" "build-v3-web-scraping") ("build-v3-web-scraping" "build-v3" "stork-lib/build-v3-web-scraping") ("build-v3" "search-v3" "stork-lib/build-v3"))))))

(define-public crate-stork-search-1.6.0 (c (n "stork-search") (v "1.6.0") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("color"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server"))) (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "stork-lib") (r "^1.6.0") (k 0)) (d (n "textwrap") (r "^0.14.2") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.18.4") (f (quote ("signal"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)))) (h "163w7c2m4pwmlx2can4hnzncz6gpvxv6csakyzfr0rijhn4v784b") (f (quote (("v1-compat") ("test-server" "hyper" "tokio") ("search-v3" "stork-lib/search-v3") ("search-v2" "stork-lib/search-v2") ("default" "v1-compat" "search-v2" "search-v3" "build-v3-web-scraping") ("build-v3-web-scraping" "build-v3" "stork-lib/build-v3-web-scraping") ("build-v3" "search-v3" "stork-lib/build-v3"))))))

(define-public crate-stork-search-2.0.0-beta.2 (c (n "stork-search") (v "2.0.0-beta.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "http1" "tcp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "stork-lib") (r "^2.0.0-beta.2") (f (quote ("build"))) (d #t) (k 0)) (d (n "strunc") (r "^0.1.1") (d #t) (k 0)) (d (n "textwrap") (r "^0.14.2") (f (quote ("terminal_size"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "=1.17.0") (f (quote ("signal" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)))) (h "1pbf4mfmvmrw88r4jrpaif02s24bxn5gp5yfsz31mpg6xrp6kllp") (f (quote (("test-server" "hyper" "tokio") ("remote-fetch" "stork-lib/build-remote-fetch") ("default" "test-server"))))))

