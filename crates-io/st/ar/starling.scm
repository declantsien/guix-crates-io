(define-module (crates-io st ar starling) #:use-module (crates-io))

(define-public crate-starling-1.0.0 (c (n "starling") (v "1.0.0") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "protobuf") (r "^2.0.4") (d #t) (k 2)) (d (n "protobuf-codegen-no-elision") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc-rust-no-elision") (r "^2.0.4") (d #t) (k 1)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0zxzjf8qmxrpcq4cmkash87j23f7dicrxxz7qc0ipjrb60jq6kqa")))

(define-public crate-starling-1.0.1 (c (n "starling") (v "1.0.1") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "protobuf") (r "^2.0.4") (d #t) (k 2)) (d (n "protobuf-codegen-no-elision") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc-rust-no-elision") (r "^2.0.4") (d #t) (k 1)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0j1anvx1gvcrxmdgjvvmr5nm2dq7cs4ibg20kc12g470whrlhnyq")))

(define-public crate-starling-1.0.2 (c (n "starling") (v "1.0.2") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "protobuf") (r "^2.0.4") (d #t) (k 2)) (d (n "protobuf-codegen-no-elision") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc-rust-no-elision") (r "^2.0.4") (d #t) (k 1)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "173f99fp5pcqhlijh1l3npx9vfsww1m9yaav93807aihx016d3gh")))

(define-public crate-starling-1.0.3 (c (n "starling") (v "1.0.3") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "protobuf") (r "^2.0.4") (d #t) (k 2)) (d (n "protobuf-codegen-no-elision") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc") (r "^2.0.4") (d #t) (k 2)) (d (n "protoc-rust-no-elision") (r "^2.0.4") (d #t) (k 1)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0dc7chplynl3391c0rbr2dpq3q1m113570pz3wzksy2a8jcdvbav")))

(define-public crate-starling-1.0.4 (c (n "starling") (v "1.0.4") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "175cii2vvfgvy4p68g4z6hz63h5yg7an5zsmgkabda4dsyddyiyf")))

(define-public crate-starling-1.0.5 (c (n "starling") (v "1.0.5") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "0w38fwlkm3fcg1d6v0rsbav4pfxk3lw73xqkar46a51w35gb6p36")))

(define-public crate-starling-1.1.0 (c (n "starling") (v "1.1.0") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)))) (h "07i64kjw7cvacamlsbi1bscf20hvfglai2bb8vak76f07lph1isi")))

(define-public crate-starling-1.1.1 (c (n "starling") (v "1.1.1") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)))) (h "1714ch4q47l52jc4q2vvhnz4cvblkpj1y35sixv9mvqnahm3wfwq")))

(define-public crate-starling-1.2.1 (c (n "starling") (v "1.2.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 2)))) (h "0czy5pnv9ma8syk14z0jm58b4g03nhg2jaidspc7jlh628rihxnm") (f (quote (("default_tree" "bincode" "blake2-rfc" "serde") ("default"))))))

(define-public crate-starling-2.0.0 (c (n "starling") (v "2.0.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "17j2c5hxwa20ksjskidl00jbbvmb3d73vabq8i5vybm8mri7gf4m") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serde" "default_tree" "serde") ("use_ron" "default_tree" "serde" "ron") ("use_pickle" "default_tree" "serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.0.1 (c (n "starling") (v "2.0.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1lf4ri5lzm0la7bcsnvyxgxrgfvmh0lgmy93v6li6rd1f8nxpvi8") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serde" "default_tree" "serde") ("use_ron" "default_tree" "serde" "ron") ("use_pickle" "default_tree" "serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.0.2 (c (n "starling") (v "2.0.2") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "05l89v6as55wmqyqmvd8kwvd7i5qrqgfx7w3ddsvi8j5n8br8n0w") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serde" "default_tree" "serde") ("use_ron" "default_tree" "serde" "ron") ("use_pickle" "default_tree" "serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.0-beta.0 (c (n "starling") (v "2.1.0-beta.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1xkfh47pzydp247k555snd4mmpnwh2xi77ldg8gl5a7gwwlc52ca") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serde" "default_tree" "serde") ("use_ron" "default_tree" "serde" "ron") ("use_pickle" "default_tree" "serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.0-nightly.0 (c (n "starling") (v "2.1.0-nightly.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "02yj7abi46l72nmwqm87m5ypsgr4vdhnliw3dvb9yhfhf1pl7wrm") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serde" "default_tree" "serde") ("use_ron" "default_tree" "serde" "ron") ("use_pickle" "default_tree" "serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.0-nightly.1 (c (n "starling") (v "2.1.0-nightly.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 2)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1r9vxv4sspyq87c5j6ki47l2b6vd8vhd3d154vwjasjs9gr10iyl") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.0-beta.1 (c (n "starling") (v "2.1.0-beta.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1vkyspn9n03wxar1zvd40nmbwvgprv26y848772aqx26fp0av9gf") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.0 (c (n "starling") (v "2.1.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1c5jigljwkclr4czrbc8ny44bsl25sbia3mdw7yaxg9g6y4p0mp0") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.1-beta (c (n "starling") (v "2.1.1-beta") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1iwh7za8sjdv00lc6xcklhn30rhdlx5k79qjzbja2sdf92n6dq58") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.1-nightly (c (n "starling") (v "2.1.1-nightly") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0jy0g5v2kp779vipqn4xcsxaagdl0pplkcmqzpsail1av9zjs07z") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.1 (c (n "starling") (v "2.1.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0hf5hnhmq6pb9gfibb53fhcpxzjaik0vb83qd3ym87phmap5ld1i") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.2 (c (n "starling") (v "2.1.2") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0mcqpz9i9wcnqfa9pcm219yz1ra61vx9lgw8lla7kxbgp10zrkny") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.1.3 (c (n "starling") (v "2.1.3") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "05ml23hm4mz3dx46gjxsirwpcs4fxa5c0svh5iyx0vhi666rq0k0") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.2.0 (c (n "starling") (v "2.2.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1qa5h5x6hn9c2m5l6jgymaj2vyr1dbpjky30pd9y407qng9dyb67") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.3.0 (c (n "starling") (v "2.3.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0n07araqy1b3byzjg98s5lyn10hlx726dafmjk1zzc21ymazhw2n") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.3.1 (c (n "starling") (v "2.3.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "18a8lbj37bixrzflcymgxbg3ywm1sql65lx6xgaycgyfyq443lb5") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.4.0 (c (n "starling") (v "2.4.0") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "147hs3zy63yljvxnksykipfq3q363khh38y2ym8gj4h8jhsmqy7j") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.4.1 (c (n "starling") (v "2.4.1") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0p29nd2dv005i4s4pwlpp63qp14m2ifpfc7liafr411vlmi67hcl") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.4.2 (c (n "starling") (v "2.4.2") (d (list (d (n "bincode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "0g3xcbphdc61c86wn9508qjqz8f4y9ljg22n4d04nvrkxrkwzpfz") (f (quote (("use_yaml" "default_tree" "serde" "serde_yaml" "use_serialization") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "default_tree" "serde" "ron" "use_serialization") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "default_tree" "serde" "serde-pickle" "use_serialization") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "default_tree" "serde" "serde_json" "use_serialization") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "default_tree" "serde" "serde_cbor" "use_serialization") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "default_tree" "serde" "bincode" "use_serialization") ("default_tree") ("default"))))))

(define-public crate-starling-2.5.0 (c (n "starling") (v "2.5.0") (d (list (d (n "bincode") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1fcmmskqigh7c70pgi6a3hvq4brmsl10vixdc891jfqs44r4wkh5") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "use_serde" "ron") ("use_rocksdb" "default_tree" "rocksdb") ("use_pickle" "use_serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "use_serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.5.1 (c (n "starling") (v "2.5.1") (d (list (d (n "bincode") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rayon") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "13a77a4zyrgj60apx7q211cgbxcq8xmk87g60zkkrrxx5509s2fi") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_sha3" "default_tree" "tiny-keccak") ("use_sha2" "default_tree" "openssl") ("use_serialization") ("use_serde" "default_tree" "serde" "use_serialization") ("use_ron" "use_serde" "ron") ("use_rocksdb" "default_tree" "rocksdb") ("use_rayon" "rayon") ("use_pickle" "use_serde" "serde-pickle") ("use_keccak" "default_tree" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "default_tree" "hashbrown") ("use_groestl" "default_tree" "groestl") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b" "default_tree" "blake2-rfc") ("use_bincode" "use_serde" "bincode") ("default_tree") ("default"))))))

(define-public crate-starling-2.5.2 (c (n "starling") (v "2.5.2") (d (list (d (n "bincode") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "evmap") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.21") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rayon") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.90") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)))) (h "1614xyn3z27s1s3qp663q9ylqjpgigpdfxr0d8d0ch9sxs9m96ap") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_rayon" "rayon" "evmap" "parking_lot") ("use_pickle" "use_serde" "serde-pickle") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b" "blake2-rfc") ("use_bincode" "use_serde" "bincode") ("default"))))))

(define-public crate-starling-3.0.0 (c (n "starling") (v "3.0.0") (d (list (d (n "bincode") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "digest") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0cl8p6lc28sxzkzclb762ff0634c4pjdap2qa500hfng8xmjx75y") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.0 (c (n "starling") (v "3.1.0") (d (list (d (n "bincode") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (k 2)) (d (n "digest") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0xy6akjkv38pya56x38x6wk8gibar45m956y2p6hnf60gq6vj801") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.1 (c (n "starling") (v "3.1.1") (d (list (d (n "bincode") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.24") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "156rrwpa8599d743gcfl93pfxi7v6n2y58clv428szwx376c28w0") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.2 (c (n "starling") (v "3.1.2") (d (list (d (n "bincode") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.24") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.1") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0hrpjxa77ymy66gvgj24is1h7j7a8nckyyp6hxxlkiqv8issc1ag") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.3 (c (n "starling") (v "3.1.3") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.26") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^3.0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.1") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0ar4wimf5af17gxqfnl86pzdaagf4b34m167wnbm5rs6yz4v0d9q") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.4 (c (n "starling") (v "3.1.4") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.1") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1kiw1bv8jw23bhdldwfnhz60yyyn2cz49x57shvj73c82fq247z3") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.1.5 (c (n "starling") (v "3.1.5") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.28") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.1") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1s4k1gs5kqp2jlisdx2lxfa5y9cx5psvf55h7pm2lslqrw3kpybf") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.2.0 (c (n "starling") (v "3.2.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "07fb7iaqal8m0kdifm9lwri2sfvmxg9crx5189knlgyrn0cki88n") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.2.1 (c (n "starling") (v "3.2.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "digest") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0v7i3dmmvyvmhb1yl559pchrjas4xzq86ah3gsxsc5bcnn9jcjrw") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.2.2 (c (n "starling") (v "3.2.2") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0685wm7z7p2hg883b1y160him1wsmzxk2bv0khhxiw59b436acsl") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-3.2.3 (c (n "starling") (v "3.2.3") (d (list (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.30") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "ripemd320") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.13") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "15l1m923b50vx52dw5w28j6ydflcm6yy7zql8czmj180r8jp3m01") (f (quote (("use_yaml" "use_serde" "serde_yaml") ("use_whirlpool" "whirlpool" "use_digest") ("use_sha3" "tiny-keccak") ("use_sha2" "openssl") ("use_sha1" "sha-1" "use_digest") ("use_serialization") ("use_serde" "serde" "use_serialization") ("use_seahash" "seahash") ("use_rust_sha3" "sha3" "use_digest") ("use_rust_sha2" "sha2" "use_digest") ("use_rust_keccak" "sha3" "use_digest") ("use_ron" "use_serde" "ron") ("use_rocksdb" "rocksdb") ("use_ripemd320" "ripemd320" "use_digest") ("use_ripemd160" "ripemd160" "use_digest") ("use_rand" "rand") ("use_pickle" "use_serde" "serde-pickle") ("use_md5" "md-5" "use_digest") ("use_md4" "md4" "use_digest") ("use_md2" "md2" "use_digest") ("use_keccak" "tiny-keccak") ("use_json" "use_serde" "serde_json") ("use_hashbrown" "hashbrown") ("use_groestl" "groestl" "use_digest") ("use_fx" "fxhash") ("use_digest" "digest") ("use_cbor" "use_serde" "serde_cbor") ("use_blake2b_rfc" "blake2-rfc") ("use_blake2b" "blake2" "use_digest") ("use_bincode" "use_serde" "bincode"))))))

(define-public crate-starling-4.0.0 (c (n "starling") (v "4.0.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "digest") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "groestl") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "md2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "md4") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.40") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3" "keccak"))) (o #t) (d #t) (k 0)) (d (n "whirlpool") (r "^0.10.1") (o #t) (d #t) (k 0)))) (h "1y7piyc4vsdkd4xjqqbij7cmmljwpci3zr0b99z2yfk951vd4dh2") (f (quote (("yaml" "serde" "serde_yaml") ("sha3" "tiny-keccak") ("sha2" "openssl") ("sha1" "sha-1" "digest") ("pickle" "serde" "serde-pickle") ("md5" "md-5" "digest") ("keccak" "tiny-keccak") ("json" "serde" "serde_json") ("cbor" "serde" "ciborium") ("blake2b" "blake2" "digest")))) (s 2) (e (quote (("whirlpool" "dep:whirlpool" "digest") ("rust_sha3" "dep:sha3" "digest") ("rust_sha2" "dep:sha2" "digest") ("rust_keccak" "dep:sha3" "digest") ("ron" "serde" "dep:ron") ("ripemd320" "dep:ripemd" "digest") ("ripemd160" "dep:ripemd" "digest") ("md4" "dep:md4" "digest") ("md2" "dep:md2" "digest") ("groestl" "dep:groestl" "digest") ("bincode" "serde" "dep:bincode"))))))

