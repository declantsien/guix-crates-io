(define-module (crates-io st ar starknet-core) #:use-module (crates-io))

(define-public crate-starknet-core-0.1.0 (c (n "starknet-core") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)))) (h "0c5jjqakk7nrpf861mpmy71mc28xs5c9xlh7xvq3nsk33zbj39v1")))

(define-public crate-starknet-core-0.2.0 (c (n "starknet-core") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.12.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "starknet-ff") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04q7av3ky0q7yjywlllii5rmyczxy3nkqcnsj4ydzgrqy370lm4m")))

(define-public crate-starknet-core-0.3.0 (c (n "starknet-core") (v "0.3.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.7") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet-ff") (r "^0.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ic3sdq0s4azgb1d11a3nap9jw57sfh8kvq8lgkgqkp4r77350m6") (f (quote (("no_unknown_fields") ("default" "bigdecimal") ("bigdecimal" "starknet-ff/bigdecimal" "starknet-crypto/bigdecimal"))))))

(define-public crate-starknet-core-0.3.1 (c (n "starknet-core") (v "0.3.1") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.7") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet-ff") (r "^0.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0sw5b3vq6g82miv54y50xrkz0hv1ggd4alf3hz23yfivpbqkrfsc") (f (quote (("no_unknown_fields") ("default" "bigdecimal") ("bigdecimal" "starknet-ff/bigdecimal" "starknet-crypto/bigdecimal"))))))

(define-public crate-starknet-core-0.3.2 (c (n "starknet-core") (v "0.3.2") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.7") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "02q9jin6mk5xinl3mw5zccw7q0nkx5ip724igqb3d4ha0qkwcirk") (f (quote (("no_unknown_fields") ("default" "bigdecimal") ("bigdecimal" "starknet-ff/bigdecimal" "starknet-crypto/bigdecimal"))))))

(define-public crate-starknet-core-0.4.0 (c (n "starknet-core") (v "0.4.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0sgip3kbf7c2ssf9k5hr74gfq5r0khpd7rapjkpvf5b9jsr5irsp") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.5.0 (c (n "starknet-core") (v "0.5.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1nbkr0r702309qjnwd9jpqdphb44yrbgj79gdq585xs7790v135r") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.5.1 (c (n "starknet-core") (v "0.5.1") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0sfrskwjbh1mi8qwc4d3xjf6ad36dd6dfs4nmbl8sqa1nrwrry4i") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.6.0 (c (n "starknet-core") (v "0.6.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1rjxv3wccpnl7q4idbgpvcm2nfbsxrf0p46kjmgdixq0fhma75mp") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.6.1 (c (n "starknet-core") (v "0.6.1") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1r578psgm3cq69gf229cwvmm1zh8a7zr0861cgkg3hmx74f9n4ql") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.7.0 (c (n "starknet-core") (v "0.7.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.4") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ssf33m4gw32rsx1a8a3dazv9xy653knyr9a4qzfr3vqka2kf196") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.7.1 (c (n "starknet-core") (v "0.7.1") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.5") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1aww9mb7v8jh3pvvxwglb26rib3gf26l98zgkphdxik7f3b5qnnk") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.7.2 (c (n "starknet-core") (v "0.7.2") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.5") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11zdcdf0c4878hyk5zsd10386v856myxpppd20in9w33gk5865kz") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.8.0 (c (n "starknet-core") (v "0.8.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.5") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0lyb89ay788pzkx2rgpr5sxng79bwb5bgiymlf47kfgxsj0y4l7z") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.8.1 (c (n "starknet-core") (v "0.8.1") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.5") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0z7gmnyn1fp16d0jc3i0ihpp5x2fip9ch5f9jly2bhf271yjia0x") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.9.0 (c (n "starknet-core") (v "0.9.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.6") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "03m6w96xqpjs08cm6l9cg5b3y40sr4mcnj52pvv1axjm0x6065av") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

(define-public crate-starknet-core-0.10.0 (c (n "starknet-core") (v "0.10.0") (d (list (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "flate2") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "serde_with") (r "^2.3.2") (f (quote ("alloc" "macros"))) (k 0)) (d (n "sha3") (r "^0.10.7") (k 0)) (d (n "starknet-crypto") (r "^0.6.2") (f (quote ("alloc"))) (k 0)) (d (n "starknet-ff") (r "^0.3.7") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "07yh5gfpqjfxgzni3lzz3j6z73zc418n3yfj3jpbhkz36zb8dljy") (f (quote (("no_unknown_fields") ("default" "std")))) (s 2) (e (quote (("std" "dep:flate2" "starknet-ff/std" "starknet-crypto/std"))))))

