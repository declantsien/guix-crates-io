(define-module (crates-io st ar starknet_in_rust) #:use-module (crates-io))

(define-public crate-starknet_in_rust-0.1.0 (c (n "starknet_in_rust") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "awc") (r "^3.1.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.0") (f (quote ("cairo-1-hints" "cairo-1-hints"))) (d #t) (k 0)) (d (n "cargo-llvm-cov") (r "^0.5.14") (d #t) (k 0)) (d (n "coverage-helper") (r "^0.1.0") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lambda_starknet_api") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "raw_value"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-contract-class") (r "^0.1.0") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "16nxgvh0wfwy9p7jg7vkdrh6yjnhwp7f3a8wc70n07489yrp4irq") (f (quote (("with_mimalloc" "mimalloc") ("default" "with_mimalloc"))))))

(define-public crate-starknet_in_rust-0.2.0 (c (n "starknet_in_rust") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "awc") (r "^3.1.1") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.1") (f (quote ("cairo-1-hints" "cairo-1-hints"))) (d #t) (k 0)) (d (n "cargo-llvm-cov") (r "^0.5.14") (d #t) (k 0)) (d (n "coverage-helper") (r "^0.1.0") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "raw_value"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-contract-class") (r "^0.2.0") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0qvybmm0nkq4mpmiwfwjwj30hp31l3anr2fhdg68wricpwzdzv2m") (f (quote (("with_mimalloc" "mimalloc") ("default" "with_mimalloc") ("cairo_1_tests"))))))

(define-public crate-starknet_in_rust-0.3.0 (c (n "starknet_in_rust") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "cairo-lang-casm") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.1") (f (quote ("cairo-1-hints" "cairo-1-hints"))) (d #t) (k 0)) (d (n "coverage-helper") (r "^0.1.0") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "raw_value"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0q7a37wfx7gm1h572ban6jhxh65xnwj72zmj9lmn9al9j4sm16sx") (f (quote (("with_mimalloc" "mimalloc") ("default" "with_mimalloc") ("cairo_1_tests"))))))

(define-public crate-starknet_in_rust-0.3.1 (c (n "starknet_in_rust") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-sierra") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.5") (f (quote ("cairo-1-hints" "cairo-1-hints"))) (d #t) (k 0)) (d (n "coverage-helper") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "raw_value"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet") (r "^0.5.0") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0qilmvqcygvcirjbb08spag21z9a93qil01s62nkibkf8mhxw088") (f (quote (("default" "with_mimalloc") ("cairo_1_tests")))) (s 2) (e (quote (("with_mimalloc" "dep:mimalloc"))))))

(define-public crate-starknet_in_rust-0.4.0 (c (n "starknet_in_rust") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-runner") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-sierra") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.8.5") (f (quote ("cairo-1-hints" "cairo-1-hints"))) (d #t) (k 0)) (d (n "coverage-helper") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pretty_assertions_sorted") (r "^1.2.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "raw_value"))) (d #t) (k 0)) (d (n "serde_json_pythonic") (r "^0.1.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet") (r "^0.5.0") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "starknet_api") (r "^0.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1bj1qmf4rmc3cg6nzvf2pkqdqpwpjlvjicaz0d9krgyi1plwjb9m") (f (quote (("metrics") ("default" "with_mimalloc") ("cairo_1_tests")))) (s 2) (e (quote (("with_mimalloc" "dep:mimalloc"))))))

