(define-module (crates-io st ar stark_evm_adapter) #:use-module (crates-io))

(define-public crate-stark_evm_adapter-0.1.0 (c (n "stark_evm_adapter") (v "0.1.0") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.5") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1pwr1r6927jvy9x0xnwrp21h0n11725dgciidvpnfy4b1ikw51yp")))

(define-public crate-stark_evm_adapter-0.1.1 (c (n "stark_evm_adapter") (v "0.1.1") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.5") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1hdl64d44dcl2nqbw61l0n8f8bnqcn6ghp5n5i4r1mshvkn21k9w")))

(define-public crate-stark_evm_adapter-0.1.2 (c (n "stark_evm_adapter") (v "0.1.2") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.5") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1h4b0s5fzrpx8nxk1z487bd0cl2ygmd1v5w89253sl4mwzw2h9af")))

(define-public crate-stark_evm_adapter-0.1.3 (c (n "stark_evm_adapter") (v "0.1.3") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.5") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0pvdj4bqqma7dml72a81za1nml95id1szf5s1v887g1adg0l8a48")))

(define-public crate-stark_evm_adapter-0.1.5 (c (n "stark_evm_adapter") (v "0.1.5") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.5") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (f (quote ("abigen" "ethers-solc"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("hex"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0lg6vjg324nv8cnhac07lfbpqi8rwc77mv9a4a8adc57i3nrgycl")))

