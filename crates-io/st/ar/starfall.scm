(define-module (crates-io st ar starfall) #:use-module (crates-io))

(define-public crate-starfall-0.1.0 (c (n "starfall") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.6.1") (d #t) (k 2)) (d (n "bevy_egui") (r "^0.12") (d #t) (k 2)) (d (n "bevy_fly_camera") (r "^0.8.0") (d #t) (k 2)) (d (n "bevy_pancam") (r "^0.2") (d #t) (k 2)) (d (n "bevy_prototype_lyon") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "honeyholt") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("max_level_trace" "release_max_level_warn"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "volmark") (r "^0.1.0") (d #t) (k 0)))) (h "0amars4k3zzf0zf4zg9xjbaka57sm5y1759cypwclljd43drzpr8")))

