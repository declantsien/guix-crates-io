(define-module (crates-io st dt stdtx) #:use-module (crates-io))

(define-public crate-stdtx-0.0.0 (c (n "stdtx") (v "0.0.0") (d (list (d (n "anomaly") (r "^0.1") (d #t) (k 0)) (d (n "ecdsa") (r "^0.4") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "131x7kk1ybdrs96qhypbv5hxfmyw5aj593wq198c89qpkpzrq6q8") (y #t)))

(define-public crate-stdtx-0.1.0 (c (n "stdtx") (v "0.1.0") (d (list (d (n "anomaly") (r "^0.1") (d #t) (k 0)) (d (n "ecdsa") (r "^0.4") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.18") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0q7fa3d0n6fkgvj15dvmjq4vqqcm39w33hbvck0v3icnxf9f82xa")))

(define-public crate-stdtx-0.2.0 (c (n "stdtx") (v "0.2.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.6") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1h5j46dg4v4dpwm6npvx7mkkr6dixxjgm8zl0yz0jpch52l0x9sm")))

(define-public crate-stdtx-0.2.1 (c (n "stdtx") (v "0.2.1") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.6") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "085hiik6jysqllqlzl9pyxrqpkpz8bwqyi5bvdfss3sfr3qhk5rv")))

(define-public crate-stdtx-0.2.2 (c (n "stdtx") (v "0.2.2") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "ecdsa") (r "^0.6") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0m92p5df9pyn7j8fdg9p9y0xg9nhps7qvgx4znvqad1a5p4951sl")))

(define-public crate-stdtx-0.2.3 (c (n "stdtx") (v "0.2.3") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "ecdsa") (r "^0.6") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0jyww89zr3rv7llmqasnpck3jp7mdaf28jv4c4halxg1ydy0k2iw")))

(define-public crate-stdtx-0.2.4 (c (n "stdtx") (v "0.2.4") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.6") (f (quote ("k256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 2)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1l1090ifab9j6wkc46b5zpbf7qvrg3lhj55m0x0hv6vc79n8af5c")))

(define-public crate-stdtx-0.3.0 (c (n "stdtx") (v "0.3.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0nxl5im5y731x210akqrwkxbfshfc4d6800c0varxzap95l5c1s7")))

(define-public crate-stdtx-0.4.0-pre (c (n "stdtx") (v "0.4.0-pre") (d (list (d (n "ecdsa") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0bws4ws7mpa3cwdm93xs9dgckl60vdyyrlyb21nj3m9184aqvckz") (f (quote (("amino" "prost-amino" "prost-amino-derive"))))))

(define-public crate-stdtx-0.4.0 (c (n "stdtx") (v "0.4.0") (d (list (d (n "ecdsa") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0kg2f458id4nw8615pkwfwmlj5qy9bybh1fmd4ak124m4ahkjinv")))

(define-public crate-stdtx-0.5.0 (c (n "stdtx") (v "0.5.0") (d (list (d (n "ecdsa") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.13") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "098gsjqy9fa82arjmggm2k1gzanww7xr0g17gqg5j2yrqpqq6cqj")))

(define-public crate-stdtx-0.6.0 (c (n "stdtx") (v "0.6.0") (d (list (d (n "ecdsa") (r "^0.13") (f (quote ("std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.19") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "09481wa7qqbwj851q02xp80kibqaj7j2b18fvmgmhw5p9znnkv1j") (r "1.56")))

(define-public crate-stdtx-0.7.0 (c (n "stdtx") (v "0.7.0") (d (list (d (n "ecdsa") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1.19") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1s4v22c3zpxniqy2s7c20axlb8ird2xk68rjy0i4qq2sf8yjapph") (r "1.57")))

