(define-module (crates-io st ub stubr) #:use-module (crates-io))

(define-public crate-stubr-0.1.0 (c (n "stubr") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.2") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "directories") (r "^3.0.1") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "1g0ng1bibdg1mr2v0ikaw5arlbaa332l40jll8jfjc93bvb8k9kw") (f (quote (("iso"))))))

(define-public crate-stubr-0.1.1 (c (n "stubr") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "directories") (r "^3.0.1") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "08dlj49gqfq1im1jh2aad9f66k4ggxkrxrmn73hp2aggvp22nblw") (f (quote (("iso"))))))

(define-public crate-stubr-0.1.2 (c (n "stubr") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "clap_generate") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "directories") (r "^3.0.1") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "0i6yzbcpknrq5h5cwi81dg0skpfgbq21sjq5wk2lyrj3iclx0nh4") (f (quote (("iso"))))))

(define-public crate-stubr-0.2.0-alpha1 (c (n "stubr") (v "0.2.0-alpha1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "04hk2nqil8wpgazfywg93579ly1vqrr3bd0b60kwa8a7s5yb9m8m") (f (quote (("iso")))) (y #t)))

(define-public crate-stubr-0.2.0-alpha2 (c (n "stubr") (v "0.2.0-alpha2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "0gv7ga070mm5y3w35iw8s9zmwn3lln02drnbjzmqmv4j0brw1gm5") (f (quote (("iso")))) (y #t)))

(define-public crate-stubr-0.2.0 (c (n "stubr") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "0nn7yng74lpp1ym3vm2bs36w1smpiafb0f6agb9sgf937rs3ak73") (f (quote (("iso"))))))

(define-public crate-stubr-0.2.1 (c (n "stubr") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "095ihx3q893mpnnxfgva23kq46rkq3xg43ah0sx5r7vpz6sx6ycb") (f (quote (("iso"))))))

(define-public crate-stubr-0.2.2 (c (n "stubr") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.4.9") (d #t) (k 0)))) (h "00n55sh7ihkndf9575dl8yhzdnbw957mb4l991wvqclskyaijalv") (f (quote (("iso"))))))

(define-public crate-stubr-0.3.0 (c (n "stubr") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.43") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.1") (d #t) (k 0)))) (h "1bqfds0v33vmnxkjp7bxdp13gcnr2isbd1p7f52vgl89p83nqg5a") (f (quote (("iso"))))))

(define-public crate-stubr-0.3.1 (c (n "stubr") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.1") (d #t) (k 0)))) (h "0k6j0jg3mkhw1c9mqqwlr2wifx5a7mhs4dc91j2i7hjq4xbcivfv") (f (quote (("iso"))))))

(define-public crate-stubr-0.3.2 (c (n "stubr") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.1") (d #t) (k 0)))) (h "06v48b5q4448g5ni7hkpdx7h1vx30ya86x5r64ak7h43l7f24vag") (f (quote (("iso"))))))

(define-public crate-stubr-0.3.3 (c (n "stubr") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.1") (d #t) (k 0)))) (h "1apwbp8fsjyvrz0jjl6r11d3hdfjfax57pv9pwpp0wycl41f2r43") (f (quote (("iso"))))))

(define-public crate-stubr-0.3.4 (c (n "stubr") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.39") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.13") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "0arblm3risp61y12qvvqjs33rv8kw9p138ha50b65m0bwvr011rr") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.0-alpha.1 (c (n "stubr") (v "0.4.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "02qlmg1hd6yz8kxs174aq0hmgpdn34vwkp4r338i7k6qmn0hyaz8") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.0 (c (n "stubr") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "1ld2aycpv68s0qppqvv4ja3qqq2xn2ipy9q93c1j5f86b1bpj97y") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.1 (c (n "stubr") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.1") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "1c7s5l1hviz4b1vak2npb322snr2rlf4y2zgykilpqb5jysykk6c") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.2 (c (n "stubr") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.1") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "1j9paalyz7a322jqra81kb3dzs3f1598q86mz8a3d3qrahikz5w5") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.3 (c (n "stubr") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.1") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "09x18jqdmvpbjm3yaha68cj0w3dss6s6ss7f4lk2x6bsqffvrxsh") (f (quote (("iso") ("default") ("cloud"))))))

(define-public crate-stubr-0.4.4 (c (n "stubr") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.11.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.1") (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.1") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.2") (d #t) (k 0)))) (h "04w045ix6qh94is2nvzqpvvbm7adnvpfq9wx7fjz2lg74rh35c0w") (f (quote (("test-isahc" "isahc") ("default" "test-isahc") ("cloud"))))))

(define-public crate-stubr-0.4.5 (c (n "stubr") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "asserhttp") (r "^0.0.5") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.11.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.2") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.7.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.3") (d #t) (k 0)))) (h "0q675pgzw7y5ilwdlr45pa8sla2j3ilc400fgbh951v9zmyxzfg2") (f (quote (("test-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.6 (c (n "stubr") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.0") (f (quote ("surf" "isahc"))) (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.11.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.2") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.4") (d #t) (k 0)))) (h "04q63vchad5afsfy75dc3m2zp6y08czbb8ckhg0d5xnffssxbcxy") (f (quote (("test-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.7 (c (n "stubr") (v "0.4.7") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.0") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.11.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.2") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.4") (d #t) (k 0)))) (h "0sclpxgmh7a3403vx6iia92zh43h89jw9ji9p7lvhbf06nk5n66j") (f (quote (("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.8 (c (n "stubr") (v "0.4.8") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.0") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.11.1") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.2") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.4") (d #t) (k 0)))) (h "17srqhzi0wnq4rmxb8s5k34ysblrar95gs47k9f34v5qdxb6d729") (f (quote (("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.9 (c (n "stubr") (v "0.4.9") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.1") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (d #t) (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.4.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.2") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.6") (d #t) (k 0)))) (h "0nyn40yyp1dk17x9dggsslbgw0y14f35kxcf8vrpg48jmzxha80b") (f (quote (("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.10 (c (n "stubr") (v "0.4.10") (d (list (d (n "actix-http") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.3.0") (d #t) (k 2)) (d (n "actix-service") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^3.3.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.1") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "handlebars") (r "=3.5.3") (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.5.1") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.1") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.7") (d #t) (k 0)))) (h "1jzic1cz8cyv53dr5k6g54zfc5lbla881ghp0mya35q1f4yqsg3x") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "rand" "rand_xorshift" "regex-syntax" "rand_regex" "json_value_merge") ("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.11 (c (n "stubr") (v "0.4.11") (d (list (d (n "actix-http") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.4.0") (d #t) (k 2)) (d (n "actix-service") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^3.3.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.47") (d #t) (k 0)) (d (n "asserhttp") (r "^0.2.3") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "handlebars") (r "=4.1.5") (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^1.6.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.71") (d #t) (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "wiremock") (r "^0.5.8") (d #t) (k 0)))) (h "0rdbj40rl2xaa3h92m6xh8329czmg24im03fl1kzakhdqvby3py5") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "rand" "rand_xorshift" "regex-syntax" "rand_regex" "json_value_merge") ("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.12 (c (n "stubr") (v "0.4.12") (d (list (d (n "actix-http") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.5.0") (d #t) (k 2)) (d (n "actix-service") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^3.3.2") (o #t) (k 0)) (d (n "anyhow") (r "^1.0.51") (k 0)) (d (n "asserhttp") (r "^0.2.4") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (d #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "chrono-tz") (r "^0.6.1") (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (k 0)) (d (n "handlebars") (r "^4.1.6") (f (quote ("no_logging"))) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.6.0") (o #t) (k 0)) (d (n "isahc") (r "^1.6.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (o #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (k 0)) (d (n "regex-syntax") (r "^0.6.25") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.7") (o #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.73") (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.12") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.15.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.4.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5.8") (d #t) (k 0)))) (h "086ks1bgyivfpjzdq0b9j50l0a9zsycry76pbfwx8k4zbcjsa85x") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "rand" "rand_xorshift" "regex-syntax" "rand_regex" "json_value_merge") ("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.13 (c (n "stubr") (v "0.4.13") (d (list (d (n "actix-http") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.5.0") (d #t) (k 2)) (d (n "actix-service") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^3.3.2") (o #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (k 0)) (d (n "asserhttp") (r "^0.2.4") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (d #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "chrono-tz") (r "^0.6.1") (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (k 0)) (d (n "handlebars") (r "^4.2.0") (f (quote ("no_logging"))) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.6.0") (o #t) (k 0)) (d (n "isahc") (r "^1.6.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (o #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (k 0)) (d (n "regex-syntax") (r "^0.6.25") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (o #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.73") (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.13") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tokio") (r "^1.15.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.4.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5.10") (d #t) (k 0)))) (h "1si78n8hifl5sn812c2bipqy3skh3iigjvqsf4wkp2mp22lm8xql") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "rand" "rand_xorshift" "regex-syntax" "rand_regex" "json_value_merge") ("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.4.14 (c (n "stubr") (v "0.4.14") (d (list (d (n "actix-http") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.6.0") (d #t) (k 2)) (d (n "actix-service") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^3.3.2") (o #t) (k 0)) (d (n "anyhow") (r "^1.0.54") (k 0)) (d (n "asserhttp") (r "^0.3.0") (f (quote ("surf" "isahc" "reqwest"))) (d #t) (k 2)) (d (n "async-std") (r "^1.10.0") (d #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "chrono-tz") (r "^0.6.1") (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (k 0)) (d (n "handlebars") (r "^4.2.1") (f (quote ("no_logging"))) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.6.0") (o #t) (k 0)) (d (n "isahc") (r "^1.6.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.0.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (o #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (k 0)) (d (n "regex-syntax") (r "^0.6.25") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (o #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.4.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5.10") (d #t) (k 0)))) (h "0hzrvd3cs0xy7alg8kwrscd28zz7kjnrjid1sgf37hj12zahg04p") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "rand" "rand_xorshift" "regex-syntax" "rand_regex" "json_value_merge") ("record-reqwest" "reqwest") ("record-isahc" "isahc") ("record" "warp" "warp-reverse-proxy" "tokio") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.5.0-rc.1 (c (n "stubr") (v "0.5.0-rc.1") (d (list (d (n "actix-http") (r "^3.0.4") (o #t) (k 0)) (d (n "actix-service") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.0.1") (o #t) (k 0)) (d (n "actix-web") (r "^4.0.1") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0.56") (k 0)) (d (n "asserhttp") (r "^0.4.2") (f (quote ("surf" "isahc" "reqwest" "actix"))) (d #t) (k 2)) (d (n "async-std") (r "^1.11.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "chrono-tz") (r "^0.6.1") (k 0)) (d (n "const_format") (r "^0.2.22") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (k 0)) (d (n "futures-util") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.2.2") (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.7.0") (o #t) (k 0)) (d (n "isahc") (r "^1.7.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1.9") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (k 0)) (d (n "reqwest") (r "^0.11.10") (o #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.5.0-rc.1") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.5.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5.12") (d #t) (k 0)))) (h "0lpj4dnibj1mg1sbd2cwrg8d5fx6h35r7caxl8sak3kcha8si718") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy" "tokio") ("record-reqwest" "reqwest" "reqwest/blocking" "record-standalone") ("record-isahc" "isahc" "record-standalone") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.5.0-rc.2 (c (n "stubr") (v "0.5.0-rc.2") (d (list (d (n "actix-http") (r "^3.2.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2.1") (o #t) (k 0)) (d (n "actix-web") (r "^4.2.1") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0.65") (k 0)) (d (n "asserhttp") (r "^0.5.1") (f (quote ("surf" "isahc" "reqwest" "actix"))) (d #t) (k 2)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "chrono") (r "^0.4.22") (k 0)) (d (n "chrono-tz") (r "^0.6.3") (k 0)) (d (n "const_format") (r "^0.2.26") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (k 0)) (d (n "futures-util") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "isahc") (r "^1.7.2") (o #t) (k 0)) (d (n "isahc") (r "^1.7.2") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1.9") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (k 0)) (d (n "reqwest") (r "^0.11.11") (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.85") (k 0)) (d (n "simpledateformat") (r "^0.1.3") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.5.0-rc.2") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tokio") (r "^1.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.1.2") (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.5.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5.14") (d #t) (k 0)))) (h "0y3p4p7dyvlypd8yp2kkma8dn916n6ikzd36h59gzm8g8gwfq6b2") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy" "tokio") ("record-reqwest" "reqwest" "reqwest/blocking" "record-standalone") ("record-isahc" "isahc" "record-standalone") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.5.0 (c (n "stubr") (v "0.5.0") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "asserhttp") (r "^0.5") (f (quote ("surf" "isahc" "reqwest" "actix"))) (d #t) (k 2)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "tokio") (r "^1.16") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^0.5") (o #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 0)))) (h "0019m1ixgn95v5hc0ng3ck8yz4lx53ihlxq2y2my6sdn7lid5k25") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy" "tokio") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.5.1 (c (n "stubr") (v "0.5.1") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "asserhttp") (r "^0.5") (f (quote ("surf" "isahc" "reqwest" "actix"))) (d #t) (k 2)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.6") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "tokio") (r "^1.16") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^1.0") (o #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 0)))) (h "1w6ryha1b4pwzifpwpzc0bbrblhwz9hw0kfx6956hxsyc46a414g") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy" "tokio") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes"))))))

(define-public crate-stubr-0.6.0-rc.1 (c (n "stubr") (v "0.6.0-rc.1") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (k 0)) (d (n "asserhttp") (r "^0.6") (f (quote ("surf" "isahc" "reqwest" "actix" "tonic"))) (d #t) (k 2)) (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "email-address-parser") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.6") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (f (quote ("hyperium_http"))) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "protobuf-parse") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.6.0-rc.1") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "io-util" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^1.0") (o #t) (k 0)))) (h "0xp8mvlx9p3x9w5v282wbaa9rx75xrsyl5gj77bm4jk72c0y3y5r") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes")))) (s 2) (e (quote (("grpc" "dep:tonic" "dep:protobuf" "dep:protobuf-json-mapping" "dep:protobuf-parse"))))))

(define-public crate-stubr-0.6.0 (c (n "stubr") (v "0.6.0") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "asserhttp") (r "^0.6") (f (quote ("surf" "isahc" "reqwest" "actix" "tonic"))) (d #t) (k 2)) (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.6") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (f (quote ("hyperium_http"))) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jandom") (r "^0.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "protobuf-parse") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "io-util" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^1.0") (o #t) (k 0)))) (h "1xcdc92007bzmz32q7nchck9z0fr4wvi7cmpr37r64rxfmwn732g") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes")))) (s 2) (e (quote (("grpc" "dep:tonic" "dep:protobuf" "dep:protobuf-json-mapping" "dep:protobuf-parse"))))))

(define-public crate-stubr-0.6.1 (c (n "stubr") (v "0.6.1") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "asserhttp") (r "^0.6") (f (quote ("surf" "isahc" "reqwest" "actix" "tonic"))) (d #t) (k 2)) (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.6") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (f (quote ("hyperium_http"))) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "protobuf-parse") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "io-util" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^1.0") (o #t) (k 0)))) (h "0fck4qcwhg7g688p2z9v6bli72w9716i17n9wk7i140g9hpnwg27") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes")))) (s 2) (e (quote (("grpc" "dep:tonic" "dep:protobuf" "dep:protobuf-json-mapping" "dep:protobuf-parse"))))))

(define-public crate-stubr-0.6.2 (c (n "stubr") (v "0.6.2") (d (list (d (n "actix-http") (r "^3.2") (o #t) (k 0)) (d (n "actix-service") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (o #t) (k 0)) (d (n "actix-web") (r "^4.2") (f (quote ("macros"))) (k 2)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "asserhttp") (r "^0.6") (f (quote ("surf" "isahc" "reqwest" "actix" "tonic"))) (d #t) (k 2)) (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "chrono-tz") (r "^0.8") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_std" "html_reports"))) (d #t) (k 2)) (d (n "email-address-parser") (r "^2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "handlebars") (r "=4.3.6") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (f (quote ("hyperium_http"))) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "isahc") (r "^1.7") (o #t) (k 0)) (d (n "isahc") (r "^1.7") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "jsonpath-plus") (r "^0.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "protobuf") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "protobuf-parse") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "simpledateformat") (r "^0.1") (d #t) (k 0)) (d (n "stubr-attributes") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "io-util" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "uuid") (r "^1.1") (d #t) (k 2)) (d (n "warp") (r "^0.3") (o #t) (k 0)) (d (n "warp-reverse-proxy") (r "^1.0") (o #t) (k 0)))) (h "1z9lymzppxixq7j05vyhqakji6rx1ld6dq8nzcwz9k3ygb5j3vwr") (f (quote (("verify-actix" "verify" "actix-web" "actix-http" "actix-service") ("verify" "json_value_merge") ("record-standalone" "warp" "warp-reverse-proxy") ("record-reqwest" "reqwest" "reqwest/blocking") ("record-isahc" "isahc") ("record-actix" "actix-web" "actix-http" "actix-service" "futures-util") ("default" "attributes") ("cloud") ("attributes" "stubr-attributes")))) (s 2) (e (quote (("grpc" "dep:tonic" "dep:protobuf" "dep:protobuf-json-mapping" "dep:protobuf-parse"))))))

