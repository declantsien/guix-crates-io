(define-module (crates-io st ra strawboat) #:use-module (crates-io))

(define-public crate-strawboat-0.1.0 (c (n "strawboat") (v "0.1.0") (d (list (d (n "arrow") (r "^0.15.0") (f (quote ("io_parquet" "compute" "io_parquet_compression" "io_ipc"))) (k 0) (p "arrow2")) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "12hihsg0jp4ffg7qkp5w5w6v4nqaf1ic7jvr6nji7r7hi9c39bfb")))

(define-public crate-strawboat-0.2.1 (c (n "strawboat") (v "0.2.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "0lhi1s64hgxsvxsydfq1mb2yfs9v9aq5n31510y6rmzmhnggddp6")))

(define-public crate-strawboat-0.2.2 (c (n "strawboat") (v "0.2.2") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "0fpybi0y733k3ny8j911l3mry4gwd81wl1drrj4sghasdbqikdzl")))

(define-public crate-strawboat-0.2.3 (c (n "strawboat") (v "0.2.3") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "18kylbvqanyyy648kzzh1swhvw6jflmbqi1xr3vvz9kgmym4y6pw")))

(define-public crate-strawboat-0.2.4 (c (n "strawboat") (v "0.2.4") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bitpacking") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "1crq9p9gc4m7bdr1rgc5cgcka8nhsg5jw4l24amy2gj966mgzkjv")))

(define-public crate-strawboat-0.2.5 (c (n "strawboat") (v "0.2.5") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bitpacking") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "0qrznhg11bl8wxi0f2kjxfqcph1s6lp63nab80bq8ba5c9qjfwp1")))

(define-public crate-strawboat-0.2.6 (c (n "strawboat") (v "0.2.6") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("benchmarks" "io_parquet" "compute" "io_parquet_compression" "io_ipc" "lz4"))) (k 0) (p "arrow2")) (d (n "async-std") (r "^1.12") (d #t) (k 2)) (d (n "bitpacking") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.11") (d #t) (k 0)))) (h "0d2n6yjnf1viij787s4irxsa2kv66f17vh68061hmyfkiqxbbs82")))

