(define-module (crates-io st dw stdweb) #:use-module (crates-io))

(define-public crate-stdweb-0.0.0 (c (n "stdweb") (v "0.0.0") (h "1i58z3cdp6bsbvyzj97ka43jjid477irnyg7yncdidnmky0csj3d")))

(define-public crate-stdweb-0.1.0 (c (n "stdweb") (v "0.1.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1b0l7glninmykks5xnlyjih1gs202hmjbza46lzs4dzdqaq1qxqs") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.1.1 (c (n "stdweb") (v "0.1.1") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1hppbprmqk53f0rk60r9bphlwgdgngmcplqprhnc5xc67xgsd3fr") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.1.2 (c (n "stdweb") (v "0.1.2") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "005ds6wxaa8bsp8n848d321rjdv1zqp46hhjhnj7435wg4b6wz8r") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.1.3 (c (n "stdweb") (v "0.1.3") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0gjk7ch31a3kgdc39kj4zqinf10yqaf717wanh9kwwbbwg430m7g") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.2.0 (c (n "stdweb") (v "0.2.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1wglm1k2m86km2ps91aq91zyv9wxzaazhmv6zkmpxyvfh0p47d33") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.2.1 (c (n "stdweb") (v "0.2.1") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0mzx36pkbvrc3ym7xv42dw629kfal3dqk45j5qyppmrawjbmzw39") (f (quote (("serde-support" "serde" "serde_json") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.2.2 (c (n "stdweb") (v "0.2.2") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1xj888l6br4q1v0lrn5h2wnc73bqvrv43nzsksypxiyp3s2f1ad1") (f (quote (("serde-support" "serde" "serde_json") ("nightly") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.3.0 (c (n "stdweb") (v "0.3.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0c76mnrb79sr54m0v5sp5sa00d0s6aiifv38f0f92g328x6m173v") (f (quote (("serde-support" "serde" "serde_json") ("nightly") ("dev" "serde" "serde_json" "clippy") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.0 (c (n "stdweb") (v "0.4.0") (d (list (d (n "futures") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "1dax4ngyb1kdzqd0fz00k2qcxlw1fzqcisza202djha4l95lzqh6") (f (quote (("web_test") ("nightly") ("experimental_features_which_may_break_on_minor_version_bumps") ("default" "serde" "serde_json" "futures"))))))

(define-public crate-stdweb-0.4.1 (c (n "stdweb") (v "0.4.1") (d (list (d (n "futures") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0zyrp5ijpa1cazznzz9mab5y7jm46sxmr3h7qspgjmcn97fwy6px") (f (quote (("web_test") ("nightly") ("experimental_features_which_may_break_on_minor_version_bumps") ("default" "serde" "serde_json" "futures"))))))

(define-public crate-stdweb-0.4.2 (c (n "stdweb") (v "0.4.2") (d (list (d (n "futures") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "044pghkbvx11qa1d9f90w7p5cjyw11ms1sifzjqmgqmz422m6ffl") (f (quote (("web_test") ("nightly") ("experimental_features_which_may_break_on_minor_version_bumps") ("default" "serde" "serde_json" "futures"))))))

(define-public crate-stdweb-0.4.3 (c (n "stdweb") (v "0.4.3") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0jqvj2qns4nc35knnrb8ars5hqplamg8j7aqcfba0sxmlcfzwaij") (f (quote (("web_test") ("nightly") ("experimental_features_which_may_break_on_minor_version_bumps") ("default" "serde" "serde_json" "futures"))))))

(define-public crate-stdweb-0.4.4 (c (n "stdweb") (v "0.4.4") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "06b3c0kqabhb376jfy1766xndin00is34x2d5qfyhx85wm9qd9bc") (f (quote (("web_test") ("nightly") ("experimental_features_which_may_break_on_minor_version_bumps") ("docs-rs") ("default" "serde" "serde_json" "futures"))))))

(define-public crate-stdweb-0.4.5 (c (n "stdweb") (v "0.4.5") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0hsq7j195yvcbd7h5fbgljby9gnr3n9fkzsv81xbycwlfw184avl") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core" "futures-channel" "futures-util") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.6 (c (n "stdweb") (v "0.4.6") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0m1m48pyf4wfrgdlvpsw01ip0w9fh9g15bk9ii591v8xmli41wvx") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core" "futures-channel" "futures-util") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.7 (c (n "stdweb") (v "0.4.7") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "16hlk7czh6w8l7fx1ihrm48zw3hsbwmj60biy4dshfqy60wkl92w") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core" "futures-channel" "futures-util") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.8 (c (n "stdweb") (v "0.4.8") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "^0.4") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0p1agkg2szsg9fzhwhkabpi4lpj63hdpzfb7pjyfj00iz3bqrx6r") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core" "futures-channel" "futures-util") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.9 (c (n "stdweb") (v "0.4.9") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.0") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "0l7md6dqk6v2rxyir89lrsjkl8bk0b5jzp0smdigh4bp7sscx6pf") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core" "futures-channel" "futures-util") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.10 (c (n "stdweb") (v "0.4.10") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.2") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "0xaydxxfvdynf5jn5dl30w27v1zm0nq7y95x7g4cbhcdl4kka812") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.11 (c (n "stdweb") (v "0.4.11") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.3") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "0k0y60zb8pay231kf32c61qrj0h34z8w0b5dawcm8vwskkxhaf2z") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.12 (c (n "stdweb") (v "0.4.12") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.4") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "03gxj5z67pds5pri5mlk09glkzf066r96lwny6mydlppks19qkxq") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.13 (c (n "stdweb") (v "0.4.13") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.5") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "1jj324imqhpdcz8jfk8cppx3cqfyhqpvn8pay4riq2v76cp7y7j6") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.14 (c (n "stdweb") (v "0.4.14") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.6") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "1n29vig6gi155h7b9ni0yanqgnim16x678ly2zx6qh5wa1ax9bsy") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.15 (c (n "stdweb") (v "0.4.15") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.6") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)))) (h "1svlvfargyds1l9j2gbnsn9nwgadzpaxxaz2avb88cb01r0svvd3") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.16 (c (n "stdweb") (v "0.4.16") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.7") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)) (d (n "stdweb-internal-test-macro") (r "^0.1") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)))) (h "17dn024wlxi6lzhhpcb2d2smgfryiqdsaq5ylrvji2w25yndbhdj") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.17 (c (n "stdweb") (v "0.4.17") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.7") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)) (d (n "stdweb-internal-test-macro") (r "^0.1") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)))) (h "094giad1v81rxxs4izf88ijc9c6w3c7cr5a7cwwr86mc22xn4hy3") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.18 (c (n "stdweb") (v "0.4.18") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.1") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.7") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)) (d (n "stdweb-internal-test-macro") (r "^0.1") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)))) (h "1srsjarj36f57ibr63n70bgy250yb72a73g14b80wh7piki0r356") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.19 (c (n "stdweb") (v "0.4.19") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.2") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.8") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)) (d (n "stdweb-internal-test-macro") (r "^0.1") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)))) (h "00pgs78pyp9qlv14axjd8cnbbs5y7dkaxfwmiwl6pxdhkrcm3w3y") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

(define-public crate-stdweb-0.4.20 (c (n "stdweb") (v "0.4.20") (d (list (d (n "discard") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-channel-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-core-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "stdweb-derive") (r "= 0.5.3") (d #t) (k 0)) (d (n "stdweb-internal-macros") (r "= 0.2.9") (d #t) (k 0)) (d (n "stdweb-internal-runtime") (r "^0.1") (d #t) (k 0)) (d (n "stdweb-internal-test-macro") (r "^0.1") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", not(cargo_web)))") (k 2)))) (h "1md14n9rzxzdskz3hpgln8vxfwqsw2cswc0f5nslh4r82rmlj8nh") (f (quote (("web_test") ("nightly") ("futures-support" "futures-core-preview" "futures-channel-preview" "futures-util-preview" "futures-executor-preview") ("experimental_features_which_may_break_on_minor_version_bumps" "futures-support") ("docs-rs") ("default" "serde" "serde_json"))))))

