(define-module (crates-io st at staticinit) #:use-module (crates-io))

(define-public crate-staticinit-1.0.0 (c (n "staticinit") (v "1.0.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (d #t) (k 2)) (d (n "double-checked-cell") (r "^2.1") (f (quote ("parking_lot_mutex"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"android\")))") (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "parking_lot_core") (r "^0.8") (d #t) (t "cfg(not(any(target_os = \"linux\", target_os = \"android\")))") (k 0)) (d (n "parking_lot_core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "static_init_macro") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwindef" "winnt" "winbase" "synchapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1k149c8la4zk4ixcaqqvapaiwblxz8j72s7ls25nwxvzicvxmk15") (f (quote (("thread_local") ("test_no_global_lazy_hint") ("spin_loop") ("default") ("debug_order" "static_init_macro/debug_order" "parking_lot") ("bench_nightly" "criterion/real_blackbox"))))))

