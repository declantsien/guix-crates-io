(define-module (crates-io st at stats-ci) #:use-module (crates-io))

(define-public crate-stats-ci-0.0.1 (c (n "stats-ci") (v "0.0.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1b618k02cb2bwaj7jf9cmbrn2sv167kvqwm8phvgiwh92z21nwc0") (f (quote (("default" "serde")))) (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.2 (c (n "stats-ci") (v "0.0.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0ri648yfivr5rgdywrqsnvpma3iywm4fdbi1yh5rgxc1wx7fllbh") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.3 (c (n "stats-ci") (v "0.0.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0b5h6kp2kqv608ql61iwp8a2vpkyiaalghbs96b5i3zzi7lxwcgj") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.4 (c (n "stats-ci") (v "0.0.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0vdv0qj3xviyh8v8x52rjhp0sc5hv2wbbzzrjzvbwxkz84giszd5") (f (quote (("default")))) (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.5 (c (n "stats-ci") (v "0.0.5") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "1b8pkv2h46r46p1j1j2zncv9d76vr93qqblgdmpm69lbrk9n4ssc") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.6 (c (n "stats-ci") (v "0.0.6") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "0s8izsf240lmydf10i1agnzv015fqn098961rlkr0mks71z8y4ag") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.7 (c (n "stats-ci") (v "0.0.7") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "12nn7b9nf00lrgy109s128qgm89rm5jn06lppygpb3acmbci581z") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-stats-ci-0.0.8 (c (n "stats-ci") (v "0.0.8") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "0hagqax8swni2nivwvs1r3qhz7gx3a6rk5gr64n344acrkgsmj4g") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.0.9 (c (n "stats-ci") (v "0.0.9") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "0crz8i73p685y0r2k0nrjpp47s4zqxl845c2agigfsqi9b3y5zzs") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.0.10 (c (n "stats-ci") (v "0.0.10") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "1kzp9asqk5dfgi45azrc3iy847zmv1rjpx50dqm0vf32jkgyxgzy") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.0.11 (c (n "stats-ci") (v "0.0.11") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "0v0pjja4dfa34gz6133wnb5a5p6zyjnqfwrp47gbvqaxr1jfdz9y") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.0.12 (c (n "stats-ci") (v "0.0.12") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "0n7lf6ifp5fmzwp7f5pjxbrzx68v2szadhfpa776pf6mc9n9rxdj") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.0.13 (c (n "stats-ci") (v "0.0.13") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)))) (h "1kq86lnjw54cn3cqz27nlvhawfipzspkn20vr759x6z52fd53p3y") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.1.0 (c (n "stats-ci") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.5.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.48.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 2)))) (h "1l6si4kmc1qq5i9awpa8dhq5jkvvkqsyliksw1cczp0y5xw4npqd") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

(define-public crate-stats-ci-0.1.1 (c (n "stats-ci") (v "0.1.1") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.50") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_seeder") (r "^0.2.3") (d #t) (k 2)) (d (n "rayon") (r "^1.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 2)))) (h "0czf1hsh2x171y03aisc103n92zfaq4b5v1d2lcvsfsw6jgc561a") (f (quote (("default" "approx")))) (s 2) (e (quote (("serde" "dep:serde") ("approx" "dep:approx"))))))

