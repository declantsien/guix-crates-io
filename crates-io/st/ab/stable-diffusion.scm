(define-module (crates-io st ab stable-diffusion) #:use-module (crates-io))

(define-public crate-stable-diffusion-0.1.5 (c (n "stable-diffusion") (v "0.1.5") (h "0kad6sbgkkx67f1wmiyp9zk5a2yp4jq1lxc6yf4rx5rb28919ara")))

(define-public crate-stable-diffusion-0.1.6 (c (n "stable-diffusion") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "bindgen_cuda") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "candle") (r "^0.4.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-flash-attn") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-nn") (r "^0.4.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-transformers") (r "^0.4.1") (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cudarc") (r "^0.10.0") (f (quote ("f16"))) (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (o #t) (d #t) (k 0)) (d (n "hf-hub") (r "^0.3.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("jpeg" "png"))) (k 0)) (d (n "imageproc") (r "^0.23.0") (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "safetensors") (r "^0.4.1") (d #t) (k 0)) (d (n "tokenizers") (r "^0.15.0") (f (quote ("onig"))) (k 0)))) (h "0w32l9m6dbia9jlvh25dwvb22hzssgan4zd0y16bgncyyiz06dk4") (f (quote (("onnx" "candle-onnx") ("metal" "candle/metal" "candle-nn/metal") ("default" "cuda") ("cudnn" "candle/cudnn")))) (s 2) (e (quote (("nccl" "cuda" "cudarc/nccl" "dep:half") ("mkl" "dep:intel-mkl-src" "candle/mkl" "candle-nn/mkl" "candle-transformers/mkl") ("flash-attn" "cuda" "candle-transformers/flash-attn" "dep:candle-flash-attn") ("cuda" "candle/cuda" "candle-nn/cuda" "candle-transformers/cuda" "dep:bindgen_cuda"))))))

(define-public crate-stable-diffusion-0.1.7 (c (n "stable-diffusion") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "bindgen_cuda") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "candle") (r "^0.4.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-flash-attn") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-nn") (r "^0.4.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-transformers") (r "^0.4.1") (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cudarc") (r "^0.10.0") (f (quote ("f16"))) (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (o #t) (d #t) (k 0)) (d (n "hf-hub") (r "^0.3.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("jpeg" "png"))) (k 0)) (d (n "imageproc") (r "^0.23.0") (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "safetensors") (r "^0.4.1") (d #t) (k 0)) (d (n "tokenizers") (r "^0.15.0") (f (quote ("onig"))) (k 0)))) (h "01sliz5zbjb6pcgkzg05gr684i89qypmnhl0mb0q13m954k2vld0") (f (quote (("onnx" "candle-onnx") ("metal" "candle/metal" "candle-nn/metal") ("default" "cuda") ("cudnn" "candle/cudnn")))) (s 2) (e (quote (("nccl" "cuda" "cudarc/nccl" "dep:half") ("mkl" "dep:intel-mkl-src" "candle/mkl" "candle-nn/mkl" "candle-transformers/mkl") ("flash-attn" "cuda" "candle-transformers/flash-attn" "dep:candle-flash-attn") ("cuda" "candle/cuda" "candle-nn/cuda" "candle-transformers/cuda" "dep:bindgen_cuda"))))))

(define-public crate-stable-diffusion-0.1.8 (c (n "stable-diffusion") (v "0.1.8") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "bindgen_cuda") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "candle") (r "^0.4.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-flash-attn") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-nn") (r "^0.4.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-transformers") (r "^0.4.1") (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cudarc") (r "^0.10.0") (f (quote ("f16"))) (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (o #t) (d #t) (k 0)) (d (n "hf-hub") (r "^0.3.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("jpeg" "png"))) (k 0)) (d (n "imageproc") (r "^0.23.0") (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "safetensors") (r "^0.4.1") (d #t) (k 0)) (d (n "tokenizers") (r "^0.15.0") (f (quote ("onig"))) (k 0)))) (h "1ag11g589b6h44wwh2p7nfx5q4yf9zsr0zz2k5svxir3bmc79ns6") (f (quote (("onnx" "candle-onnx") ("metal" "candle/metal" "candle-nn/metal") ("default" "cuda") ("cudnn" "candle/cudnn")))) (s 2) (e (quote (("nccl" "cuda" "cudarc/nccl" "dep:half") ("mkl" "dep:intel-mkl-src" "candle/mkl" "candle-nn/mkl" "candle-transformers/mkl") ("flash-attn" "cuda" "candle-transformers/flash-attn" "dep:candle-flash-attn") ("cuda" "candle/cuda" "candle-nn/cuda" "candle-transformers/cuda" "dep:bindgen_cuda"))))))

(define-public crate-stable-diffusion-0.1.9 (c (n "stable-diffusion") (v "0.1.9") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "bindgen_cuda") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "candle") (r "^0.4.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-flash-attn") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-nn") (r "^0.4.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "candle-transformers") (r "^0.4.1") (d #t) (k 0)) (d (n "cudarc") (r "^0.10.0") (f (quote ("f16"))) (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (o #t) (d #t) (k 0)) (d (n "hf-hub") (r "^0.3.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("jpeg" "png"))) (k 0)) (d (n "imageproc") (r "^0.23.0") (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "safetensors") (r "^0.4.1") (d #t) (k 0)) (d (n "tokenizers") (r "^0.15.0") (f (quote ("onig"))) (k 0)))) (h "0xyxkd4xwky280f0cmnrqina90gd8ynw5ja3khzgdfg7bc1qwjvp") (f (quote (("onnx" "candle-onnx") ("metal" "candle/metal" "candle-nn/metal") ("default" "cuda") ("cudnn" "candle/cudnn")))) (s 2) (e (quote (("nccl" "cuda" "cudarc/nccl" "dep:half") ("mkl" "dep:intel-mkl-src" "candle/mkl" "candle-nn/mkl" "candle-transformers/mkl") ("flash-attn" "cuda" "candle-transformers/flash-attn" "dep:candle-flash-attn") ("cuda" "candle/cuda" "candle-nn/cuda" "candle-transformers/cuda" "dep:bindgen_cuda"))))))

