(define-module (crates-io st ic sticker2-utils) #:use-module (crates-io))

(define-public crate-sticker2-utils-0.3.0 (c (n "sticker2-utils") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.7") (k 0)) (d (n "sticker2") (r "^0.3.0") (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "06phjk327s63j76r3y0cyrd0axqa2850245ki2lgqfr67sphlfbs") (f (quote (("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-utils-0.3.1 (c (n "sticker2-utils") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.7") (k 0)) (d (n "sticker2") (r "^0.3.1") (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "1nx6s6zfwy6v3rmq6jbz5vcj81flmdncs63x2y9n6pf0v736620p") (f (quote (("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-utils-0.4.0 (c (n "sticker2-utils") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.4") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "1cdfxr74nl5l666dxqfnc0bjyhq57vx43cb0nw3wx6ligzr13qkl") (f (quote (("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5")))) (y #t)))

(define-public crate-sticker2-utils-0.4.1 (c (n "sticker2-utils") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.4.1") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "0059vx55ym3v9bhh44zmilcwp7npis6g09mf4hy64xh9mq7vl9ap") (f (quote (("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-utils-0.4.2 (c (n "sticker2-utils") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.4.2") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "tfrecord") (r "^0.3") (f (quote ("summary"))) (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "1qm70djz9xzs8wssbg649qxgqj967zn3rajkb6i77p0z4cdj2kwz") (f (quote (("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-utils-0.5.0 (c (n "sticker2-utils") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.5") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "tfrecord") (r "^0.3") (f (quote ("summary"))) (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "0v8v0m7aapg19wn8rg0d26d67ia686ik4m1c4g3hmn5j2snl5j9r") (f (quote (("tensorboard" "tfrecord") ("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5" "tensorboard"))))))

(define-public crate-sticker2-utils-0.5.1 (c (n "sticker2-utils") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.5") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "tfrecord") (r "^0.4") (f (quote ("summary"))) (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "0qdj1lsi2ml1fmgwxh8x94wp3a4587nixbd0ymqnfz7b6ffy2s20") (f (quote (("tensorboard" "tfrecord") ("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5" "tensorboard"))))))

(define-public crate-sticker2-utils-0.5.2 (c (n "sticker2-utils") (v "0.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.5") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "tfrecord") (r "^0.4") (f (quote ("summary"))) (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "11k746gnkigp02ry2z1rbaiclg34aazizyjha8v75cxnx96s1rkh") (f (quote (("tensorboard" "tfrecord") ("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5" "tensorboard"))))))

(define-public crate-sticker2-utils-0.5.3 (c (n "sticker2-utils") (v "0.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "indicatif") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "stdinout") (r "^0.4") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "sticker2") (r "^0.5") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "tfrecord") (r "^0.4") (f (quote ("summary"))) (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "13hqs9fbdzcq9x2ipvqq6pn7787j813nzc0nwba0s1jzrjff3bgw") (f (quote (("tensorboard" "tfrecord") ("load-hdf5" "sticker-transformers/load-hdf5" "sticker2/load-hdf5") ("default" "load-hdf5" "tensorboard"))))))

