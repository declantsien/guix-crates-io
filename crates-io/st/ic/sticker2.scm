(define-module (crates-io st ic sticker2) #:use-module (crates-io))

(define-public crate-sticker2-0.3.0 (c (n "sticker2") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.7") (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "1wwq28jv5g7hz3s5ynxvmzx2cdqqjkfdalv5a7lsswxdi10fj6kx") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-0.3.1 (c (n "sticker2") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.7") (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "1yn6jf6qyxlrms378jix5jacnl6p52bfr7g5ryn5548jcjajjg1l") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-0.4.0 (c (n "sticker2") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "1mgvk4xjdicgpgrm6jggnnbwnh9anbp0l8xcj25lcsrzwdb8ki7j") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5")))) (y #t)))

(define-public crate-sticker2-0.4.1 (c (n "sticker2") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "0cnnjdjznzigfndnwx7mdvm7qp5i0dr6ysphqqsh4k7qyqczs7zl") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-0.4.2 (c (n "sticker2") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8") (k 0)) (d (n "tch") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "1dww9piax12jjy11c577lk030blm5dyr0jkpss5nshfs3h1g5c8v") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-0.5.0 (c (n "sticker2") (v "0.5.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8.1") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "1bhdd8ldw0b98kpx7sl9gkk7a86jgi16ss9f4j4bp9snmxg1iqvl") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

(define-public crate-sticker2-0.5.1 (c (n "sticker2") (v "0.5.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "conllu") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "edit_tree") (r "^0.1.1") (d #t) (k 0)) (d (n "hdf5") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "numberer") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "sentencepiece") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sticker-encoders") (r "^0.5.1") (d #t) (k 0)) (d (n "sticker-transformers") (r "^0.8.1") (k 0)) (d (n "tch") (r "^0.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wordpieces") (r "^0.4") (d #t) (k 0)))) (h "0zi076yq1ykqa0z3462zamx6b7qd2vwdc8nsb8r1zng86kas4vjs") (f (quote (("model-tests") ("load-hdf5" "sticker-transformers/load-hdf5" "hdf5") ("default" "load-hdf5"))))))

