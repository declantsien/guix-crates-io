(define-module (crates-io st ay stayawake) #:use-module (crates-io))

(define-public crate-stayawake-0.1.2 (c (n "stayawake") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wy0cw68zpyg2hyrn1xgwm5x3lvda1x6gyxbwzpg2y3nvxf5iaha")))

(define-public crate-stayawake-0.2.0 (c (n "stayawake") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01qm527kb02vs4ffxc3din21p3h5zn0iziw3qip7wfh3983k851w")))

(define-public crate-stayawake-0.2.1 (c (n "stayawake") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mbpxarlwzjk24jfa4bgxm9d1s12njzj6vl0q0rgcfzz0p9xkk23")))

(define-public crate-stayawake-0.2.2 (c (n "stayawake") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1v8k1hcljxn58wfj9mzm4b00khfilnpzxcmmiwh75isc6ckwyis5")))

(define-public crate-stayawake-0.2.3 (c (n "stayawake") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1afkphcy7h5wf9xi31lhd8amlnsfnkxcwhm0vyic6qqgi4qhiy8r")))

(define-public crate-stayawake-0.2.4 (c (n "stayawake") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "envy") (r "^0.4") (d #t) (k 0)) (d (n "mouse-rs") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasmer_enumset") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "impl-default" "handleapi" "minwinbase" "minwindef" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "1jw25ix3x6dj3jml8nfn1gwacq8c6kbsw0i8v0w9p8h1mnhq599m")))

