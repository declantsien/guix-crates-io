(define-module (crates-io st ro strois) #:use-module (crates-io))

(define-public crate-strois-0.0.1 (c (n "strois") (v "0.0.1") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize" "serde-types" "serde"))) (d #t) (k 0)) (d (n "rusty-s3") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1ny7r3xjbgqivs5hi4lsvwxs34mnl9i0sx1isqiim9kj3g4r59bq") (f (quote (("json" "ureq/json") ("default" "json"))))))

(define-public crate-strois-0.0.2 (c (n "strois") (v "0.0.2") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize" "serde-types" "serde"))) (d #t) (k 0)) (d (n "rusty-s3") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0xd52ibfksmlhzqykzmka8gcbd517gsrl6r6ssf50v5bsd03aacj") (f (quote (("json" "ureq/json") ("default" "json"))))))

(define-public crate-strois-0.0.3 (c (n "strois") (v "0.0.3") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize" "serde-types" "serde"))) (d #t) (k 0)) (d (n "rusty-s3") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0wk29cdavki6cg0gaqd54r0i1vfzjs6zdkprddyhy9g3k1b48yzv") (f (quote (("json" "ureq/json") ("default" "json"))))))

(define-public crate-strois-0.0.4 (c (n "strois") (v "0.0.4") (d (list (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30.0") (f (quote ("serialize" "serde-types" "serde"))) (d #t) (k 0)) (d (n "rusty-s3") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1xi6vgwl2iliyf9i01mwcacals3g8vsfaqp7w3qqnqzhrnmqgpjx") (f (quote (("json" "ureq/json") ("default" "json"))))))

