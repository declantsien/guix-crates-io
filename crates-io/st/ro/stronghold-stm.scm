(define-module (crates-io st ro stronghold-stm) #:use-module (crates-io))

(define-public crate-stronghold-stm-0.4.3 (c (n "stronghold-stm") (v "0.4.3") (d (list (d (n "atom") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "ctor") (r "^0.1.21") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "no_deadlocks") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "threadpool") (r "^1.8.1") (d #t) (k 2)) (d (n "tokio") (r "^1.15.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.4.3") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "06s82g6ipnnywb0slxkcrd17yhbs3sdwkccxk8m33izf8z26x248") (f (quote (("verbose") ("threaded") ("default" "threaded" "no_deadlocks") ("async" "futures"))))))

