(define-module (crates-io st re stretch2) #:use-module (crates-io))

(define-public crate-stretch2-0.4.0 (c (n "stretch2") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)))) (h "0f202p8snnxjx3ha77ycw08lynqam901wzjjnqzm1w01y0n1izna") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

(define-public crate-stretch2-0.4.1 (c (n "stretch2") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)))) (h "1bsw23k3bcnjm0c15scqin3i4mfs3wnlmix5qyd5nb52lr57d3ms") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

(define-public crate-stretch2-0.4.2 (c (n "stretch2") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)))) (h "1ydn2lzckzsz0h3grhva50fianz0rpss25pqszavzsz6zdxpwfy0") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

(define-public crate-stretch2-0.4.3 (c (n "stretch2") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)))) (h "00cpn8q7a164j4i0jgkljmsk910ywccgvsxmdda1dli8kq6693hw") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

