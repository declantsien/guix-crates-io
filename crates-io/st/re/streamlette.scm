(define-module (crates-io st re streamlette) #:use-module (crates-io))

(define-public crate-streamlette-0.1.0 (c (n "streamlette") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)))) (h "17c5nyrw7zf72z90fxmpyw4pd2w89yy0fqx7nqz7r8brim9jm6vf")))

(define-public crate-streamlette-0.1.1 (c (n "streamlette") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "0n7n3mj5b9gl0m6sn5x0vm10riyz29h7lywjyg46v4ax8847kvla")))

(define-public crate-streamlette-0.2.0 (c (n "streamlette") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "1mnhp9qh5m4hlgvpz7wncjzxzym4g6kvmzc4f575m0fvjif2g1j7")))

(define-public crate-streamlette-0.2.1 (c (n "streamlette") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "1kxhj7aaifdib8v8c4ilp7ry84dcxyr7srcj8fgc63p5xp623rn2")))

(define-public crate-streamlette-0.2.2 (c (n "streamlette") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "0s3ny1n5a6k66zy4686qdwgbfr0i4x6c8z9da2wma2x16ciw9idw")))

(define-public crate-streamlette-0.2.3 (c (n "streamlette") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "0fcssznhxiq3bnf07q5lyykv2nbf8c50pz202pwnpfpgba3wd353")))

(define-public crate-streamlette-0.2.4 (c (n "streamlette") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "16kvixjqz8kbc8xva7fclm5p3iv03k913gjjq7d9shw1m0rdxrxx")))

(define-public crate-streamlette-0.2.5 (c (n "streamlette") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "14mzhif6clxy6c7mwd66qw1yr9vdzwxl4zv7yrl4by1s1fdmskx9")))

(define-public crate-streamlette-0.2.6 (c (n "streamlette") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "066v5qajf94sb3w8qma2n28rzzb2psk93ap36kdzlicm0nxfmh0j")))

(define-public crate-streamlette-0.2.7 (c (n "streamlette") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-io") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing)") (k 0)))) (h "0qsgxp37zar6928x9pjj8hz5lx6747kmaa2r25s9h7293w4hly0x")))

