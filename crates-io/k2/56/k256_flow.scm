(define-module (crates-io k2 #{56}# k256_flow) #:use-module (crates-io))

(define-public crate-k256_flow-1.0.0 (c (n "k256_flow") (v "1.0.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^1.0.0") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa-flow")) (d (n "ecdsa-core") (r "^1.0.0") (f (quote ("dev"))) (k 2) (p "ecdsa-flow")) (d (n "elliptic-curve-flow") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0h0drlbbyl4qkjzmg7jh4y92jyp3psgzlg1m44f5jjnhx9sqzgrp") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve-flow/std") ("sha256" "digest" "sha3") ("pkcs8" "elliptic-curve-flow/pkcs8") ("pem" "elliptic-curve-flow/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve-flow/jwk") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve-flow/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve-flow/bits") ("arithmetic" "elliptic-curve-flow/arithmetic"))))))

