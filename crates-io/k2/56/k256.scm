(define-module (crates-io k2 #{56}# k256) #:use-module (crates-io))

(define-public crate-k256-0.0.0 (c (n "k256") (v "0.0.0") (h "1y85cyfxvc39q6f6dhf8wybh85nvdir1jsa0laqkcpykvj23l2j6") (y #t)))

(define-public crate-k256-0.1.0 (c (n "k256") (v "0.1.0") (d (list (d (n "elliptic-curve") (r "^0.3") (f (quote ("weierstrass"))) (k 0)))) (h "0wis77r1mlllxh7ydia3bfqm49v2zs33p0carnybdbvndxhvq1s4") (f (quote (("std" "elliptic-curve/std"))))))

(define-public crate-k256-0.1.1 (c (n "k256") (v "0.1.1") (d (list (d (n "elliptic-curve") (r "^0.3") (f (quote ("weierstrass"))) (k 0)))) (h "193xyj6gbqzkb0377bzai7ridfp3siqzkysn4ws7mprqhbm7kyha") (f (quote (("std" "elliptic-curve/std"))))))

(define-public crate-k256-0.2.0 (c (n "k256") (v "0.2.0") (d (list (d (n "elliptic-curve") (r "^0.3") (f (quote ("weierstrass"))) (k 0)) (d (n "fiat-crypto") (r "^0.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (o #t) (k 0)))) (h "0sw7m0ps06436rng88i253hsp0s615lw43w45b0ham429li1187q") (f (quote (("test-vectors") ("std" "elliptic-curve/std") ("default" "arithmetic" "std") ("arithmetic" "subtle"))))))

(define-public crate-k256-0.3.0 (c (n "k256") (v "0.3.0") (d (list (d (n "elliptic-curve") (r "^0.4") (f (quote ("weierstrass"))) (k 0)) (d (n "fiat-crypto") (r "^0.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (o #t) (k 0)))) (h "13453pk2aln2x4aw2cfzijc7zqyjfmp7gh4z2nfaj9cngyv5qky3") (f (quote (("test-vectors") ("std" "elliptic-curve/std") ("default" "arithmetic" "std") ("arithmetic" "subtle"))))))

(define-public crate-k256-0.4.0 (c (n "k256") (v "0.4.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.7") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.7") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.5") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "05df3bxhkj84pixj91jf0wkqmisz5i6l6852cpn1b6j0xvwsa1fj") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("rand" "elliptic-curve/rand") ("oid" "elliptic-curve/oid") ("force-32-bit") ("field-montgomery") ("endomorphism-mul") ("ecdsa" "arithmetic" "ecdsa-core/signer" "ecdsa-core/verifier" "rand" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "rand" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic"))))))

(define-public crate-k256-0.4.1 (c (n "k256") (v "0.4.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.7") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.7") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.5") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1rz64mrk05kvpwf96hf03h9p42jjr9sxprrr7x5a1c427rp590am") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("rand" "elliptic-curve/rand") ("oid" "elliptic-curve/oid") ("force-32-bit") ("field-montgomery") ("endomorphism-mul") ("ecdsa" "arithmetic" "ecdsa-core/signer" "ecdsa-core/verifier" "rand" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "rand" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic"))))))

(define-public crate-k256-0.4.2 (c (n "k256") (v "0.4.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.7") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.7") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.5") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1avs1cyd1n2lk08vx5p66iqqii5izvzqxvpz6q56xgks8n5ffqyb") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("rand" "elliptic-curve/rand") ("oid" "elliptic-curve/oid") ("force-32-bit") ("field-montgomery") ("endomorphism-mul") ("ecdsa" "arithmetic" "ecdsa-core/signer" "ecdsa-core/verifier" "rand" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "rand" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic"))))))

(define-public crate-k256-0.5.0-pre (c (n "k256") (v "0.5.0-pre") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1a5kryc2mvj20bxcg6aldifwyl03r1s7jqq52i4yh76vhv64madh") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-k256-0.5.0-rc (c (n "k256") (v "0.5.0-rc") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1xbvdb1cblq3vcyzysd72varwb50a0sbawnz2587k8kcqfyljddb") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.0 (c (n "k256") (v "0.5.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0w4r5n5rv4lsvlawjh44nva4pxsk5mapc449afclad86lflavss8") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.1 (c (n "k256") (v "0.5.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0vxn5vfmymlj8n7vvr6ymck0vkp2zhh9nqpd0xrklb3xh3yxasfy") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.2 (c (n "k256") (v "0.5.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1hinim5zq5d7ykxd79cyyn97b379v4lsnskkalj08fnpqgskl5kf") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.3 (c (n "k256") (v "0.5.3") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "11nz6ly2iwg8gid2p7af4icaca9ahylavzagz548yn5sib77lwzv") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.4 (c (n "k256") (v "0.5.4") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1x2cvs92klhkn9dnbip84nvshg9jkqifrgjqjs7d8nh0jccq54fy") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.5 (c (n "k256") (v "0.5.5") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1p0cajazg12szl6klsba5adafhw34nnk9hb0byk3a6gsaszda3nl") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.6 (c (n "k256") (v "0.5.6") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "08laq5czy7gv4r3ig5jdc1l13x27hq4sb0bhqcpid60dy1fb265y") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "endomorphism-mul" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.7 (c (n "k256") (v "0.5.7") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6.4") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0qqw626av7ck302a9hin2hr670mk02y3ss00vcgxagv301c52id6") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.8 (c (n "k256") (v "0.5.8") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6.4") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0dqcjy5d241yrpcb7qc62520328c0z9qdynav936r3vnwxk8b1xw") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.9 (c (n "k256") (v "0.5.9") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6.4") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "11mlnd8rqb71js4s5cp2walf3aha3dar625c05fpzr8rmxy7p5n2") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.5.10 (c (n "k256") (v "0.5.10") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.8.1") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "04zkha7kxqc4x7zdbi0xfw1x91b99f2l3l49b2pn1ipv3q5n8d1r") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("oid" "elliptic-curve/oid") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("endomorphism-mul") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "oid" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.6.0 (c (n "k256") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.9") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.9") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.7") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0f6rylr0mmwwjwsnww4hzl0b3k5r090hhy7q2ka5yb0z5i7w3ssa") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.7.0 (c (n "k256") (v "0.7.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0940nl8dv0wmzp4w1rbgyjadvw0jf1kjshlp4ld6sbw5vp8qf6d6") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.7.1 (c (n "k256") (v "0.7.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1pg7m31y5nxfzb1c6diakgj82slq6cvnr7cyn19kgkabyrigjhz4") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.7.2 (c (n "k256") (v "0.7.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1qaqb00iy48hmcgrcd5nnpx1qkd23cr8zb413kdyidz1cv4yq0ng") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.8.0-pre (c (n "k256") (v "0.8.0-pre") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.11.0-pre.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.11.0-pre.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0rrb3z34mvjxp2wybmxvpd5lmiks0j03jxg8z8ryljq8s54whpp8") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-k256-0.8.0-pre.1 (c (n "k256") (v "0.8.0-pre.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.11.0-pre.2") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.11.0-pre.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "15z7qi1qg7fdpyikxjkrziryzsmcyjlbnjzmryvbqc7p2rc2kbz0") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.7.3 (c (n "k256") (v "0.7.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0ajppil14zmc1z6bllv557m3mrv0zh61msq2x0ffia8jha0a0xj4") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.8.0 (c (n "k256") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.11") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.11") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9.11") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1w2z11i7nr7f7xh8y9adcn59nysmdj9p7ihcwhx4jfa9zah3hx4b") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.8.1 (c (n "k256") (v "0.8.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.11") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.11") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9.11") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1kmrs0qi23zcmzbxjsxs7r42qrqk4gj7f71sb1hw2ayj3r4qwglc") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.9.0 (c (n "k256") (v "0.9.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1hdl5i2c5j5szn7irqkwh2km74dm7gzsdc43707ajv7z1r4m0fp5") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-k256-0.9.1 (c (n "k256") (v "0.9.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0khsfbhbwzhl5gcgxq9gkn7yxnnazrghbs11crxpgll0x5nv5qk5") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-k256-0.9.2 (c (n "k256") (v "0.9.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10.2") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0lw64hkgmx9pv5rhjp2cl5rdyd7xrdpg20p3f053fdg2hcf9c7cq") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-k256-0.9.3 (c (n "k256") (v "0.9.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10.2") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0y1dk01h5db6nmdcm0rrxff307yjkygfxbgycmsj3kl0yqbipqyj") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.9.4 (c (n "k256") (v "0.9.4") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10.2") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1hf7j4w4bl8q52j45gzjl5krcg4j7ia7nxl7qqav62lbir56m8pk") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.9.5 (c (n "k256") (v "0.9.5") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10.4") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0ijy29iqvcny6ads6q0q60l55hc12xilik8ijxy5ccl0ra0h52q0") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.9.6 (c (n "k256") (v "0.9.6") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10.5") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1sjip0dckf1kb2xybs72k85n1zwsgi5sm6qaisvbgzfd3d4f4flh") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("force-32-bit") ("field-montgomery") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-k256-0.10.0-pre.1 (c (n "k256") (v "0.10.0-pre.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1hn73l418cipwwa4wa7hc2yksrs0xbsyhggg52fjka0lghxvhbap") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.10.0 (c (n "k256") (v "0.10.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.5") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0nkf7vxwd13lg5m6rns4dclh735qjj4267mjcs93i40wifq8drsq") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.10.1 (c (n "k256") (v "0.10.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1fblr1w54kykfv9wavp85aq76wdifmb4w33nhm48lahqz8csl4bm") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.10.2 (c (n "k256") (v "0.10.2") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.7") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1fzmlwr41k6vz3k19k43a05x9cfqbg7d207lf60b7lxgcrrr7i8w") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.11.0-pre.0 (c (n "k256") (v "0.11.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14.0-pre.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14.0-pre.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.0-pre.1") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "0lhz2c0v2kz65mkl671zjj2b8cvnnsr6s0fclaqjys07b5lgjv6m") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.10.3 (c (n "k256") (v "0.10.3") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.7") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "1qq457i7ypw4zii0kmnfhzcqwmmdwcxbyzns7jsq5p5ndvj56zsq") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.10.4 (c (n "k256") (v "0.10.4") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.7") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (k 0)))) (h "0bdg5n085545bk6vh670f8fgc29fa692a96szrw04idql3habhqr") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-k256-0.11.0 (c (n "k256") (v "0.11.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "14yyajw3xpkg892ajsymxrw1m67yqwis8kp21i4vy79bxmy8qn12") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "digest" "ecdsa-core/sign" "ecdsa-core/verify") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "sha256" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.1 (c (n "k256") (v "0.11.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "0lxy9zzp40ascn7jnas28wm370vr8zh4flwdmc7fqnapgca0cq3s") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.2 (c (n "k256") (v "0.11.2") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "0jnwwnzyh1jjbibpsl5ab1n4fsvpv4zacbwbic9v8s26117mjlxr") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.3 (c (n "k256") (v "0.11.3") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.2") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "1va0b7cfh1xlmqmfva0qfi3c3kf9h7d6356rk529r11dv6b5m2ic") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.4 (c (n "k256") (v "0.11.4") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "0m3qdnpd02a3v8v0zy09kzr6rqwc3b7bbjgz39scrr6k7wymgckd") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.5 (c (n "k256") (v "0.11.5") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14.6") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "0jf9kdy3yh37z80m7w63xji92ca8gcms985k5qc68fvcsj0x4din") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.11.6 (c (n "k256") (v "0.11.6") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14.6") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)))) (h "12zwik967f54b4k5mndy1jyqd937c0whhdb2d5rskh3y3ssy1hbj") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("keccak256" "digest" "sha3") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-k256-0.12.0-pre.0 (c (n "k256") (v "0.12.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.15.0-pre.0") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.15.0-pre.0") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)))) (h "0pic39hjjm3l5p35sywwf81gj2pbykqql04kb0f2rzfrk6jyva61") (f (quote (("test-vectors" "hex-literal") ("std" "alloc" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "schnorr" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic") ("alloc" "elliptic-curve/alloc")))) (r "1.57")))

(define-public crate-k256-0.12.0 (c (n "k256") (v "0.12.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.15") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.15") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "15rk834ksg9jw96kh6hwiyv94i5qy6brw784rwmjcb5pyc7mx9cj") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.60")))

(define-public crate-k256-0.13.0 (c (n "k256") (v "0.13.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.17") (o #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "0xfss1nz5768ynlwbjn37p18qkdvm82imm1sz0gg7k4ma2290n4m") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-k256-0.13.1 (c (n "k256") (v "0.13.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.17") (o #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "1k0vrlbdy17ifdjix0xhn1m659ma2xdzhgbz24ipdsfq9q07dnya") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-k256-0.13.2 (c (n "k256") (v "0.13.2") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16.8") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13.7") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "0nqinqv05mhjs7ywl4kid0aqx8l3zpg9kq1pm9vadxrfv1vvc09z") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-k256-0.13.3 (c (n "k256") (v "0.13.3") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16.8") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13.8") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "0ysq18pjz040am5llgly90464x7qqq98yxfbcsladq96gsvgjvwm") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-k256-0.14.0-pre.0 (c (n "k256") (v "0.14.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.17.0-pre.5") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.17.0-pre.5") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "=0.14.0-pre.5") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.3") (o #t) (k 0)) (d (n "sha3") (r "=0.11.0-pre.3") (k 2)) (d (n "signature") (r "=2.3.0-pre.3") (o #t) (d #t) (k 0)))) (h "0m8f7ds6505hix0zv69vn278ywlwqv43kkl98m4mimdb41lwr3gd") (f (quote (("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("schnorr" "arithmetic" "sha256" "signature") ("precomputed-tables" "arithmetic" "once_cell") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "ecdsa-core/pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "schnorr" "std") ("critical-section" "once_cell/critical-section" "precomputed-tables") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std" "once_cell?/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.73")))

