(define-module (crates-io el li ellipsoid) #:use-module (crates-io))

(define-public crate-ellipsoid-0.1.0 (c (n "ellipsoid") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1vjmrjmpw27grxyaqr6zvgk998adb0q1rxmx3bd4q8xycnvckxzm") (y #t)))

(define-public crate-ellipsoid-0.1.1 (c (n "ellipsoid") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0vbagczs02jmzfhns636ay5l13jbvh58jpw65ls1r1bmzg15cp0v") (y #t)))

(define-public crate-ellipsoid-0.1.2 (c (n "ellipsoid") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0znq49qghjxqbk3viyqabxhxgd6lgk68vvfchbrslj0lclwy62yx") (y #t)))

(define-public crate-ellipsoid-0.1.3 (c (n "ellipsoid") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1a7254fxdpxf903zjpnkh44x64rhdb94ddv8vy3lsc2n2y0bnvb1") (y #t)))

(define-public crate-ellipsoid-0.1.4 (c (n "ellipsoid") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0zvylxia1j67fpkj6mwpf58y4n6fnppmyaifbq8g65jd0srmn53x") (y #t)))

(define-public crate-ellipsoid-0.1.5 (c (n "ellipsoid") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0b66x99y3p1nkx8qjal29mkrwz3wf1cklwq0mgm3xmblhx8l3bhm") (y #t)))

(define-public crate-ellipsoid-0.1.6 (c (n "ellipsoid") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1fwgrgksmz1lvblwkl00gj8h5sxb5gbqx3vdgf3z0gin47pqirdx") (y #t)))

(define-public crate-ellipsoid-0.1.7 (c (n "ellipsoid") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0swbjf63mpask6hqxk7lwdhqnng9i7wblp5yb68rk3rbsdq6wh7j") (y #t)))

(define-public crate-ellipsoid-0.1.8 (c (n "ellipsoid") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1qbi8vxajzw3232z3srlhnlmc7gbzwynvj90d18d1f16n2iyylvb") (y #t)))

(define-public crate-ellipsoid-0.1.9 (c (n "ellipsoid") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0vgrchrspy2x9jjqqrx3r42lb4c34xpaaf7g6gfg12dp5qync04m") (y #t)))

(define-public crate-ellipsoid-0.2.0 (c (n "ellipsoid") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "12p42r97mhrwykcv6k7sll7yp3g85ay8kmm9jvry37v127ns53qw") (y #t)))

(define-public crate-ellipsoid-0.2.1 (c (n "ellipsoid") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "027l809j83l62ifn7h75wrwy3y045m5gswxsphafl3qw9nxfyds7") (y #t)))

(define-public crate-ellipsoid-0.2.2 (c (n "ellipsoid") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "09jn0w1cpaxzf5ai1h8yc6zcfrmv0cls7a0q7jd8w1g3aan3md04") (y #t)))

(define-public crate-ellipsoid-0.2.3 (c (n "ellipsoid") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1fjmj268lmj9k90x8r9ydfnmpz7hlpjh0mfr6jymb1gmy219a7n5") (y #t)))

(define-public crate-ellipsoid-0.2.4 (c (n "ellipsoid") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "11ixihnx0wa29zx11bwy90zpjbbqr1j8ins9n79cmqwh1a66jg05") (y #t)))

(define-public crate-ellipsoid-0.2.5 (c (n "ellipsoid") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "12q2h3zxvi1zm7b4rfnw8iwkg2zwmjf4539kcx62hfrl9xc826f5") (y #t)))

(define-public crate-ellipsoid-0.2.6 (c (n "ellipsoid") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "03vrfrb7zg4zpsb8v3zmikxdih3m5fz4qi8vmlzfmc0cpv49v3ms") (y #t)))

(define-public crate-ellipsoid-0.2.7 (c (n "ellipsoid") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "1cy4194h9hvra4xrmxnihdr540qn0b7krczy03fxxbbik6rhbgpx") (y #t)))

(define-public crate-ellipsoid-0.2.8 (c (n "ellipsoid") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0wihk4im80vjd26wz32jf0kxahn6v0r4kwmibpiglmhx34p385ws") (y #t)))

(define-public crate-ellipsoid-0.2.9 (c (n "ellipsoid") (v "0.2.9") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "146jywg0jkwmfgc3gd1jyyfzk6nw7c11g288cjnhi5fqfzd1lsba") (y #t)))

(define-public crate-ellipsoid-0.3.0 (c (n "ellipsoid") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "19i1512vbn0flm084xf084gpjyr6rksyrp9d6lpdhn7jh5vyjpig")))

(define-public crate-ellipsoid-0.3.1 (c (n "ellipsoid") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (f (quote ("bytemuck_derive" "derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui") (r "^0.21.0") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.22.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.18.0") (f (quote ("webbrowser"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "glam") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "WebSocket" "BinaryType" "MessageEvent" "ErrorEvent" "Blob" "FileReader" "ProgressEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (k 0)))) (h "0npal8llg6ld2dzkbf2h9f1wkqhfw3ckqr4vifj7qi8kkc57wnhy")))

