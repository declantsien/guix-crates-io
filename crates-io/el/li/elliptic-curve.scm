(define-module (crates-io el li elliptic-curve) #:use-module (crates-io))

(define-public crate-elliptic-curve-0.0.0 (c (n "elliptic-curve") (v "0.0.0") (h "1bbnwafvhz7iqnyr31wlgk0w7l8kbqms1yyx41nqf0m41ddri5xg") (y #t)))

(define-public crate-elliptic-curve-0.1.0 (c (n "elliptic-curve") (v "0.1.0") (d (list (d (n "generic-array") (r "^0.12") (k 0)) (d (n "getrandom") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0ffs1gdq52cyvrf03d43v1bnnzpdv1ggflip01c2arbrl21aabil") (f (quote (("weierstrass") ("std") ("default" "getrandom" "weierstrass" "std" "zeroize")))) (y #t)))

(define-public crate-elliptic-curve-0.2.0 (c (n "elliptic-curve") (v "0.2.0") (d (list (d (n "generic-array") (r "^0.12") (k 0)) (d (n "getrandom") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1zx1krjiqf19z0sbd9nza7w7cca393mnh786v8p1yj8i1h4zi2pd") (f (quote (("weierstrass") ("test-vectors") ("std") ("default" "arithmetic" "getrandom" "weierstrass" "std" "zeroize") ("arithmetic" "weierstrass")))) (y #t)))

(define-public crate-elliptic-curve-0.3.0 (c (n "elliptic-curve") (v "0.3.0") (d (list (d (n "generic-array") (r "^0.12") (k 0)) (d (n "getrandom") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "15jh9s646dp54mai8n5xx427danyqwraz2hm9yhagdzys7krpxh1") (f (quote (("weierstrass") ("std") ("default" "getrandom" "std" "zeroize")))) (y #t)))

(define-public crate-elliptic-curve-0.4.0 (c (n "elliptic-curve") (v "0.4.0") (d (list (d (n "generic-array") (r "^0.14") (k 0)) (d (n "getrandom") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0sswdbzh7mhlsmplkjdss7gxzljqsb7lbrmhk70g8nfqaikzd612") (f (quote (("weierstrass") ("std") ("default" "getrandom" "std" "zeroize")))) (y #t)))

(define-public crate-elliptic-curve-0.5.0 (c (n "elliptic-curve") (v "0.5.0") (d (list (d (n "generic-array") (r "^0.14") (k 0)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0bbviih5zmjnw6yrgvjdd9xai82vi6qx4z31kln7lg1lxmw4bgls") (f (quote (("weierstrass") ("std") ("rand" "rand_core") ("ecdh" "rand" "weierstrass" "zeroize") ("default" "rand")))) (y #t)))

(define-public crate-elliptic-curve-0.6.0 (c (n "elliptic-curve") (v "0.6.0") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0k258mblq9wrz0809p243l991g216xd6dh4d9y5i34qvq719xk6r") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.6.1 (c (n "elliptic-curve") (v "0.6.1") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1bnc91zpbackd1098xd60f4yb68q7swdvlmbba0s9d99mgaz4xw6") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.6.2 (c (n "elliptic-curve") (v "0.6.2") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0nl2848wcv4rxq6i7g9a0zccf57bpaddbq7jjaf2cl52p9sf3rw2") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.6.3 (c (n "elliptic-curve") (v "0.6.3") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0rbvfffhfnhhvn271i055rqdmhcnvzyvmjsnv4aaxk9w0d6rxi42") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.6.4 (c (n "elliptic-curve") (v "0.6.4") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0bhn2cayi7ffs9klqdn0rskzxf4a0dkffd9757mfkhaqywd18bzi") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.6.5 (c (n "elliptic-curve") (v "0.6.5") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1vgh923j2wvs1jl4hg95j3n3lciq6amfdddby5yaprrldj7qnws5") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.6.6 (c (n "elliptic-curve") (v "0.6.6") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "oid") (r "^0.1") (o #t) (d #t) (k 0) (p "const-oid")) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0rhkl024945zq54jcyk0k9nfgcrjarl154fv9xfwlzry92fb0v9r") (f (quote (("std" "alloc") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.7.0 (c (n "elliptic-curve") (v "0.7.0") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1mm0x9wwcd7gkmi3v9mxw5ga11z7rgazb5qai921pr3a6i9xgf34") (f (quote (("std" "alloc") ("pem" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.7.1 (c (n "elliptic-curve") (v "0.7.1") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1d70ny36iap0f4idx85r44nfhayq3d669bm2j7i165z6siraq0id") (f (quote (("std" "alloc") ("pem" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.8.0-pre (c (n "elliptic-curve") (v "0.8.0-pre") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "09j2w6d3kpm8a3kw05748fhxplvvb57ldg9pvm5bqrxd08l66aha") (f (quote (("std" "alloc") ("pem" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.8.0 (c (n "elliptic-curve") (v "0.8.0") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0l2jvi80m67gjcp035fn2ax6x8nagd6isb9pfzxgap0y3riqdkxl") (f (quote (("std" "alloc") ("pem" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.8.1 (c (n "elliptic-curve") (v "0.8.1") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.3") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "05g20km3mjc6pbzzf0wmc40ksyhhmpkv8w24p6xidjc2ycl6bdq2") (f (quote (("std" "alloc") ("pem" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.8.2 (c (n "elliptic-curve") (v "0.8.2") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0y6zi6b84n9lhx4ms9fdjc620vjnamgpw4bqhg6xnw9pqwbyf0d4") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "digest" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.8.3 (c (n "elliptic-curve") (v "0.8.3") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0wnwccpha5bsvjhsnzxqrgnyi8d0b1sx9z8hbmlihr8y4bj67s8g") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "digest" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.8.4 (c (n "elliptic-curve") (v "0.8.4") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1fk25rf3zikrik90lcnf9l7af23if4y0b8vkdc2rqisrfn2iqasr") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "digest" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.0 (c (n "elliptic-curve") (v "0.9.0") (d (list (d (n "base64ct") (r "^0.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "15sjp0llml0rp0pxi0v73ihgs2wdnmwrxr7ix39yy4s0b87cfdy2") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.1 (c (n "elliptic-curve") (v "0.9.1") (d (list (d (n "base64ct") (r "^0.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0g9gsycdrr2y4alr2w79z5a1wrhvqw4sp6il7gc6aj8x0wxdsw7m") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.2 (c (n "elliptic-curve") (v "0.9.2") (d (list (d (n "base64ct") (r "^0.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0jd2d0981kw2yqk7193jq6lvn9sahphyfk4k7g13zkb6sjmspxgk") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.3 (c (n "elliptic-curve") (v "0.9.3") (d (list (d (n "base64ct") (r "^0.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "07yw9n39kkshwqimjxjnh5mw20s6938pd1csbjff5i65i7gfgw2d") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.8.5 (c (n "elliptic-curve") (v "0.8.5") (d (list (d (n "bitvec") (r "^0.18") (o #t) (k 0)) (d (n "digest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.8") (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "pkcs8") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0f9c14bcs6prl640l0hqal4i5qn05r3dmgc0as8k8fm4c5z25nzj") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "digest" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.4 (c (n "elliptic-curve") (v "0.9.4") (d (list (d (n "base64ct") (r "^0.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0qm8p0dy8zy8hgjxzn6q9pmk59im8y7wyk8hx491z4s4dnl2qg90") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.5 (c (n "elliptic-curve") (v "0.9.5") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0n0n4zz03vwz6szzxcghqbl0w2d1ry739ygkda3h156h7n37arp9") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.6 (c (n "elliptic-curve") (v "0.9.6") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "funty") (r "=1.1.0") (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0vcf13d2pda2vawmdhwz3dcazxga0ilnd8iafz14abiwsnjzbzvq") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.7 (c (n "elliptic-curve") (v "0.9.7") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0pj5ciqnsb9ds2n5phxa3w31v76znqmnx0s63my8vkshnr0x9zdr") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.8 (c (n "elliptic-curve") (v "0.9.8") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1yrx9ylhssw4v58nkrcarbiri2jfs0v860dkzn2nmgciq5p1gaf1") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.9 (c (n "elliptic-curve") (v "0.9.9") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "02sa4kqgdlpjm4sy0sb47858vp4gf2ifpr70xx9nmhiqmkkd77a0") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.10 (c (n "elliptic-curve") (v "0.9.10") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0h09x619ji77kg0c26j252p7bpz0fwplcg7w9731y4ix7xqh8ccz") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.9.11 (c (n "elliptic-curve") (v "0.9.11") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0gng7pmqcgyr33pf7nwk4jzbgyjbgdfm5iyc0b6xgap1bpr1ns7f") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.9.12 (c (n "elliptic-curve") (v "0.9.12") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "bitvec") (r "^0.20.2") (o #t) (k 0)) (d (n "ff") (r "^0.9") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.9") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "01g01xszk8zfa518amvzjlc8xn8589n790r7l71dqw217h69ngn1") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("arithmetic" "bitvec" "ff" "group") ("alloc"))))))

(define-public crate-elliptic-curve-0.10.0 (c (n "elliptic-curve") (v "0.10.0") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1gsfff5ygagjwr908fwn6xw049vkz47cyyyhyszwhix972n15sdd") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.10.1 (c (n "elliptic-curve") (v "0.10.1") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1vn6s3fnjncgzj5hyr530w4ihq7547zhqnrj5fq9wn6aad4fpdml") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.10.2 (c (n "elliptic-curve") (v "0.10.2") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "13iyf46zz4hbn9aqk4qsn34anhm1l4mv797d6yz5n8b0bz89s0jr") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc")))) (y #t)))

(define-public crate-elliptic-curve-0.10.3 (c (n "elliptic-curve") (v "0.10.3") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2.1") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "02sqhwg27gmwlryfgr8zgasdv20k6kzbn6kgpf8mxhnb36qmq0yx") (f (quote (("std" "alloc") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "crypto-bigint/zeroize" "ff" "group" "zeroize") ("alloc"))))))

(define-public crate-elliptic-curve-0.10.4 (c (n "elliptic-curve") (v "0.10.4") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2.2") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1a5rh9jvj5czm42zxqvz1nzdbrxqq71zv9phhc4kmacx8xvc3rc3") (f (quote (("std" "alloc" "rand_core/std") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "crypto-bigint/zeroize" "ff" "group" "zeroize") ("alloc"))))))

(define-public crate-elliptic-curve-0.10.5 (c (n "elliptic-curve") (v "0.10.5") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2.2") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "=2.4") (k 0)) (d (n "zeroize") (r "=1.4") (o #t) (k 0)))) (h "08rc6ghmci3zfqaj6ylx25j8lyl1d9aw1jr80r09x61r0zhrg4q6") (f (quote (("std" "alloc" "rand_core/std") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "crypto-bigint/zeroize" "ff" "group" "zeroize") ("alloc"))))))

(define-public crate-elliptic-curve-0.10.6 (c (n "elliptic-curve") (v "0.10.6") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.2.4") (f (quote ("generic-array"))) (d #t) (k 0)) (d (n "ff") (r "^0.10") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.10") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pkcs8") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "=2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "06vj8cizhjf5rrv2c012py9lvk778pzvm03n7q9l1dcfrdyigjmy") (f (quote (("std" "alloc" "rand_core/std") ("pem" "alloc" "pkcs8/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic" "zeroize") ("dev" "arithmetic" "hex-literal" "pem" "zeroize") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "crypto-bigint/zeroize" "ff" "group" "zeroize") ("alloc"))))))

(define-public crate-elliptic-curve-0.11.0 (c (n "elliptic-curve") (v "0.11.0") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0gsclhkk22045gnip08x79jwzyafmm5psi5nhb70aidhvi4gfpxy") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (y #t) (r "1.56")))

(define-public crate-elliptic-curve-0.11.1 (c (n "elliptic-curve") (v "0.11.1") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0d14qqq2smbx9wv6lm22k6372hp3xqsap972mlnc5hkr2wl22ggp") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (y #t) (r "1.56")))

(define-public crate-elliptic-curve-0.11.2 (c (n "elliptic-curve") (v "0.11.2") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1r35pidx83322vxqmcqxrn7hbb2r9lnqgk0vpxdfhricaqikpzmy") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.3 (c (n "elliptic-curve") (v "0.11.3") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1bvws5nkfijnschp9zzwskwi50c83x919diqr1jx2wvsanxk2k2c") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.4 (c (n "elliptic-curve") (v "0.11.4") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "09fyizsb28hxmgga05794a798pv2avfcm947fzcky5k6bq37pgnr") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.5 (c (n "elliptic-curve") (v "0.11.5") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "197hnyl7ggsnz9513lmisqrrcfcpvvi8nb07fi0c6qi3hqhgy08z") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.6 (c (n "elliptic-curve") (v "0.11.6") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1z3c3wqd3vblvbd37k2fssa2dhbi0spq5cbfz4imyjj5x8kkmjyy") (f (quote (("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.7 (c (n "elliptic-curve") (v "0.11.7") (d (list (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0w905yvlf0nnfb3jsp5k6f9a2k3qnax7088cpr4pn5fidzsgvjsz") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (y #t) (r "1.56")))

(define-public crate-elliptic-curve-0.11.8 (c (n "elliptic-curve") (v "0.11.8") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0fp1davlcdmbhhhzg6x8qis9klnirb15ab9qxiffg57q9v8w193r") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (y #t) (r "1.56")))

(define-public crate-elliptic-curve-0.11.9 (c (n "elliptic-curve") (v "0.11.9") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1x8mxm199jbc5lfmslnyj6mv8vifrz8qzpcyv6908sxn7mkl2iis") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (y #t) (r "1.56")))

(define-public crate-elliptic-curve-0.12.0-pre.0 (c (n "elliptic-curve") (v "0.12.0-pre.0") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.4.0-pre.0") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1g7g3h3f2275x0k0lvgg5gfa1b7gf3pkn8i743hgryidq570mn4i") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.0-pre.1 (c (n "elliptic-curve") (v "0.12.0-pre.1") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.4.0-pre.0") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1ngbh96pqq2f4yw7zqqqjg3iv75pfmb4nbsds95jbwv09sqqx38b") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.11.10 (c (n "elliptic-curve") (v "0.11.10") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0ycyyci3dix3qr1ryzx3w42263z0yiza5m739j6n6i586p80my13") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.11 (c (n "elliptic-curve") (v "0.11.11") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1k0ygq3rrkwf49n9x6yszphb0920xagnl0fmnlsh7g274js89khd") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.11.12 (c (n "elliptic-curve") (v "0.11.12") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.5") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.9") (o #t) (k 0)) (d (n "ff") (r "^0.11") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.11") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1mh64cngdn1z92ijpwfk198v4n709569cq3s7f5d7zib7ib7gd15") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.56")))

(define-public crate-elliptic-curve-0.12.0-pre.2 (c (n "elliptic-curve") (v "0.12.0-pre.2") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.4.0-pre.0") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "=0.6.0-pre.4") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "=0.3.0-pre.2") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1g8maydvyh0i32xjljkngn54izmpk75s57ac28znag6qdcn385py") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "serdect") ("pkcs8" "sec1/pkcs8") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.0-pre.3 (c (n "elliptic-curve") (v "0.12.0-pre.3") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.4.0-pre.1") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "=0.6.0-pre.4") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.9.0-pre.3") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "=0.3.0-pre.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0vifqhc6yjfcd6arb97ivb694g0qabqqc651abrfklbphriq0nzm") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.0-pre.4 (c (n "elliptic-curve") (v "0.12.0-pre.4") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.4.0-pre.1") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "=0.6.0-pre.4") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "pem-rfc7468") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.9.0-pre.3") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "=0.3.0-pre.4") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1mv9b6jkrlrylf47gbbs7wamqcisy5y8ad0snrw9q8jznp7wrjj5") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.0 (c (n "elliptic-curve") (v "0.12.0") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.4") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.6") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1shc20zlfn72s5advxws5shm7nvs3vbmqiglj2bnlkakrlyckn5x") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "der/pem" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.1 (c (n "elliptic-curve") (v "0.12.1") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.4.4") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.6") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "16jdiw6x63m0x8p3rykj1hzpik3cksljdnldv9ayv4kqlg368rjg") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "der/pem" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.2 (c (n "elliptic-curve") (v "0.12.2") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.4.8") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.6") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "13cahk4lz78m9qj3lkicabj8jdmqhmgp260imb3w0ahxg45bsyn4") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "der/pem" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.12.3 (c (n "elliptic-curve") (v "0.12.3") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.4.8") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "der") (r "^0.6") (f (quote ("oid"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.12") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1lwi108mh6drw5nzqzlz7ighdba5qxdg5vmwwnw1j2ihnn58ifz7") (f (quote (("voprf" "digest") ("std" "alloc" "rand_core/std") ("serde" "alloc" "pkcs8" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "der/pem" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "ff" "group") ("alloc" "base16ct/alloc" "der/alloc" "sec1/alloc" "zeroize/alloc")))) (r "1.57")))

(define-public crate-elliptic-curve-0.13.0-pre.0 (c (n "elliptic-curve") (v "0.13.0-pre.0") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.2") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0mpql5isyzsj7yz5c8ydqnsqygsv50fd4wviq5zjx59q3g5lnf53") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-pre.1 (c (n "elliptic-curve") (v "0.13.0-pre.1") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.2") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0lnvi801i28apnf0klkqci657macggfscj8aap3352mhwkyfzdxv") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-pre.2 (c (n "elliptic-curve") (v "0.13.0-pre.2") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0y3rwh3q9slzwxh5lwsnf4vwc86bsgwz3xm0666zcdhk6vill4zc") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-pre.3 (c (n "elliptic-curve") (v "0.13.0-pre.3") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0kxcnv7mawvf5p6ga6zr88b5l584wpw3nk5qr3whwkp0znxzp0x5") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-pre.4 (c (n "elliptic-curve") (v "0.13.0-pre.4") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0gc7pajhl48158b31gi5yxplmmyqlb6ach8pl6ac9dldm1sgl8p5") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-pre.5 (c (n "elliptic-curve") (v "0.13.0-pre.5") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.5.0-pre.3") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.3") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0fp2w5a7jmykh4n2yx3vncirsv7sf8n5650f2v18h8xwnpa7bvdi") (f (quote (("voprf" "digest") ("serde" "alloc" "sec1/serde" "serdect") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("dev" "arithmetic" "hex-literal" "pem" "pkcs8") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.61")))

(define-public crate-elliptic-curve-0.13.0-rc.0 (c (n "elliptic-curve") (v "0.13.0-rc.0") (d (list (d (n "base16ct") (r "^0.1.1") (d #t) (k 0)) (d (n "base64ct") (r "^1") (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "07vqyh5kc311kvzixpkrc430xywvw553x5jkcgcy8aqda7vrmigr") (f (quote (("voprf" "digest") ("pem" "alloc" "arithmetic" "pem-rfc7468/alloc" "pkcs8" "sec1/pem") ("jwk" "alloc" "base64ct/alloc" "serde" "serde_json" "zeroize/alloc") ("hazmat") ("hash2curve" "arithmetic" "digest") ("ecdh" "arithmetic" "digest" "hkdf") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("group" "dep:group" "ff") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.0 (c (n "elliptic-curve") (v "0.13.0") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0yyrhl7ww9x6pzkhs5kyqbwwshylsjx1vphbsnc6dryqnvvzywfq") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.1 (c (n "elliptic-curve") (v "0.13.1") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1mr0nsa0f1pxjikrcbg95mpgppvg0zzcp0y0gq3nn5phinyzr15r") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.2 (c (n "elliptic-curve") (v "0.13.2") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1783rhs5wxp394hwaq6f38javpfignxrhj15hnslnqg88qlsk9bf") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.3 (c (n "elliptic-curve") (v "0.13.3") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "10n2h0hpy97y13amhwx9qyibh8x8a879qrqbd2c9ngzdsvaark92") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.4 (c (n "elliptic-curve") (v "0.13.4") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1rqn7yq9rgfs7r0dcj4phxf9hqmw2alfxa0lciamsbkz6sm1xivm") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.5 (c (n "elliptic-curve") (v "0.13.5") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "02qwrw4xv1bp6y3iqsxb6ql4clhbric8hqx6y16vzcy9zp40b14n") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("bits" "arithmetic" "ff/bits") ("arithmetic" "group")))) (y #t) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.6 (c (n "elliptic-curve") (v "0.13.6") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.1") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "0579f01lmnsv0yci54lcbd7gfalg61fsdqx6g6vzkjcxmrra2z6r") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.7 (c (n "elliptic-curve") (v "0.13.7") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.1") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.5") (k 0)))) (h "01fjnhmapm64zzkl3xrbs6njcjw8ics0ygzj1imdhahmphi5nxz9") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.13.8 (c (n "elliptic-curve") (v "0.13.8") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core" "generic-array" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("zeroize"))) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.1") (o #t) (k 0)) (d (n "pem-rfc7468") (r "^0.7") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "^0.7.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "^0.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "0ixx4brgnzi61z29r3g1606nh2za88hzyz8c5r3p6ydzhqq09rmm") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.65")))

(define-public crate-elliptic-curve-0.14.0-pre.0 (c (n "elliptic-curve") (v "0.14.0-pre.0") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.8") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.3") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.0") (o #t) (k 0)) (d (n "hybrid-array") (r "=0.2.0-pre.8") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.0") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.0") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.0") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "0fj2703gvjf3pas5h8npxg2wr6xqbs7f0k2rqsy8i89nhz7bsgqj") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

(define-public crate-elliptic-curve-0.14.0-pre.1 (c (n "elliptic-curve") (v "0.14.0-pre.1") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.9") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.4") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.1") (o #t) (k 0)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.1") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.1") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "0lq530zj8bwsraij8vj9n5iwfsdwyljp6y50x9h191jhvs2iz1i7") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

(define-public crate-elliptic-curve-0.14.0-pre.2 (c (n "elliptic-curve") (v "0.14.0-pre.2") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.10") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.4") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.1") (o #t) (k 0)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.1") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.1") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "155f1zfgjb32sycqiw8qqwnwjjjxx1wyvdx1gb61mr9xmdngziak") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

(define-public crate-elliptic-curve-0.14.0-pre.3 (c (n "elliptic-curve") (v "0.14.0-pre.3") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.12") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.7") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.2") (o #t) (k 0)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.2") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.2") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "1gpfpwqbvhy11yq48gnk7f2wl4xs87xcz6k4mj343adlx0k8p8mm") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

(define-public crate-elliptic-curve-0.14.0-pre.4 (c (n "elliptic-curve") (v "0.14.0-pre.4") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.12") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.3") (o #t) (k 0)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.3") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.3") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "12i05jgldr215r7k5bppqp7cm7i5pdspjnhcknpa1jsy5wsh4fr7") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

(define-public crate-elliptic-curve-0.14.0-pre.5 (c (n "elliptic-curve") (v "0.14.0-pre.5") (d (list (d (n "base16ct") (r "^0.2") (d #t) (k 0)) (d (n "base64ct") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "crypto-bigint") (r "=0.6.0-pre.12") (f (quote ("rand_core" "hybrid-array" "zeroize"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (o #t) (k 0)) (d (n "group") (r "^0.13") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hkdf") (r "=0.13.0-pre.3") (o #t) (k 0)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (f (quote ("zeroize"))) (k 0)) (d (n "pem-rfc7468") (r "=1.0.0-pre.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "pkcs8") (r "=0.11.0-pre.0") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "sec1") (r "=0.8.0-pre.1") (f (quote ("subtle" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serdect") (r "=0.3.0-pre.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.3") (d #t) (k 2)) (d (n "sha3") (r "=0.11.0-pre.3") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.7") (k 0)))) (h "05mcjdzvy65vl2v39cw441vya0wyvsgklk452h6a95r92yppa5sa") (f (quote (("voprf" "digest") ("hazmat") ("hash2curve" "arithmetic" "digest") ("default" "arithmetic") ("arithmetic" "group")))) (s 2) (e (quote (("std" "alloc" "rand_core/std" "pkcs8?/std" "sec1?/std") ("serde" "dep:serdect" "alloc" "pkcs8" "sec1/serde") ("pkcs8" "dep:pkcs8" "sec1") ("pem" "dep:pem-rfc7468" "alloc" "arithmetic" "pkcs8" "sec1/pem") ("jwk" "dep:base64ct" "dep:serde_json" "alloc" "serde" "zeroize/alloc") ("group" "dep:group" "ff") ("ecdh" "arithmetic" "digest" "dep:hkdf") ("dev" "arithmetic" "dep:hex-literal" "pem" "pkcs8") ("bits" "arithmetic" "ff/bits" "dep:tap") ("alloc" "base16ct/alloc" "ff?/alloc" "group?/alloc" "pkcs8?/alloc" "sec1?/alloc" "zeroize/alloc")))) (r "1.73")))

