(define-module (crates-io el em elements-miniscript) #:use-module (crates-io))

(define-public crate-elements-miniscript-0.1.0 (c (n "elements-miniscript") (v "0.1.0") (d (list (d (n "bitcoin") (r "^0.27") (d #t) (k 0)) (d (n "elements") (r "^0.18.0") (d #t) (k 0)) (d (n "miniscript") (r "^6.0.0") (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<=1.0.44") (d #t) (k 2)))) (h "06nwvfrx3hplicnbf7nv7y8c9nd221b6hyf4piv4vmm44l8gxhfg") (f (quote (("use-serde" "bitcoin/use-serde" "serde") ("unstable") ("trace") ("rand" "bitcoin/rand") ("fuzztarget" "bitcoin/fuzztarget") ("default") ("compiler"))))))

(define-public crate-elements-miniscript-0.2.0 (c (n "elements-miniscript") (v "0.2.0") (d (list (d (n "actual-base64") (r "^0.13.0") (d #t) (k 2) (p "base64")) (d (n "actual-rand") (r "^0.8.4") (d #t) (k 2) (p "rand")) (d (n "actual-serde") (r "^1.0") (o #t) (d #t) (k 0) (p "serde")) (d (n "bitcoin") (r "^0.30.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.30.0") (f (quote ("base64"))) (d #t) (k 2)) (d (n "bitcoin-miniscript") (r "^10.0") (d #t) (k 0) (p "miniscript")) (d (n "elements") (r "^0.22.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)))) (h "12ff8abiqd6xx41caygv4cvjilsx3y4il5jdrc9f5c60r7jr7hnn") (f (quote (("trace") ("serde" "actual-serde" "bitcoin/serde" "elements/serde") ("rand" "bitcoin/rand") ("compiler") ("base64" "bitcoin/base64"))))))

(define-public crate-elements-miniscript-0.3.0 (c (n "elements-miniscript") (v "0.3.0") (d (list (d (n "actual-base64") (r "^0.13.0") (d #t) (k 2) (p "base64")) (d (n "actual-rand") (r "^0.8.4") (d #t) (k 2) (p "rand")) (d (n "actual-serde") (r "^1.0") (o #t) (d #t) (k 0) (p "serde")) (d (n "bitcoin") (r "^0.31.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.31.0") (f (quote ("base64"))) (d #t) (k 2)) (d (n "bitcoin-miniscript") (r "^11.0") (d #t) (k 0) (p "miniscript")) (d (n "elements") (r "^0.24.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)) (d (n "simplicity") (r "^0.2.0") (o #t) (d #t) (k 0) (p "simplicity-lang")))) (h "1pgn73wbbx858hcymmffxlf6y3h82hcnabv7hnln4vaws3p2m13k") (f (quote (("trace") ("serde" "actual-serde" "bitcoin/serde" "elements/serde") ("rand" "bitcoin/rand") ("compiler") ("base64" "bitcoin/base64")))) (y #t)))

(define-public crate-elements-miniscript-0.3.1 (c (n "elements-miniscript") (v "0.3.1") (d (list (d (n "actual-base64") (r "^0.13.0") (d #t) (k 2) (p "base64")) (d (n "actual-rand") (r "^0.8.4") (d #t) (k 2) (p "rand")) (d (n "actual-serde") (r "^1.0") (o #t) (d #t) (k 0) (p "serde")) (d (n "bitcoin") (r "^0.31.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.31.0") (f (quote ("base64"))) (d #t) (k 2)) (d (n "bitcoin-miniscript") (r "^11.0") (d #t) (k 0) (p "miniscript")) (d (n "elements") (r "^0.24.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)) (d (n "simplicity") (r "^0.2.0") (o #t) (d #t) (k 0) (p "simplicity-lang")))) (h "1fkyg87d9ai3kr6hfvd61lr1vw3fh6dqbwf53l330nnd18x9qb6d") (f (quote (("trace") ("serde" "actual-serde" "bitcoin/serde" "elements/serde") ("rand" "bitcoin/rand") ("compiler") ("base64" "bitcoin/base64" "elements/base64"))))))

