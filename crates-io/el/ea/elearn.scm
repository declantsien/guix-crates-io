(define-module (crates-io el ea elearn) #:use-module (crates-io))

(define-public crate-elearn-0.1.0 (c (n "elearn") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("default" "alloc"))) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "13rhhpg88fzsp6jj2sfr6w255q68g7wlsanpw4549krmrqj0y63c")))

(define-public crate-elearn-0.1.1 (c (n "elearn") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("default" "alloc"))) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "069b0i8wlqaxr6v8j2h302v6j2jnz7hs64gypcbylz80ymzz1hm4")))

(define-public crate-elearn-0.1.2 (c (n "elearn") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("default" "alloc"))) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "0yl226bin16b70igqada8k579xb6nbq4d8gi5s3x9s49kribwc16")))

(define-public crate-elearn-0.1.3 (c (n "elearn") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("default" "alloc"))) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "1yxbsxpq279b3p8l56din4l78w70jh1lckvxnz0k0hzjkhi1lx63")))

