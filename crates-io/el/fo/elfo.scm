(define-module (crates-io el fo elfo) #:use-module (crates-io))

(define-public crate-elfo-0.0.1 (c (n "elfo") (v "0.0.1") (h "0f8qfwgd07n97wz62blj3qlx1wzyi0jqi1fyksg52s88hjcj8vlf")))

(define-public crate-elfo-0.1.0 (c (n "elfo") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "13sgpkbhwywyzin34fykisl8f5schmzjjrmx57a2gm57lkal28f5") (f (quote (("test-util" "elfo-test" "elfo-core/test-util"))))))

(define-public crate-elfo-0.1.1 (c (n "elfo") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0ixc1ybz9f4wam6k5xkpsk6j5f9i0l9v8mv4cfz1ac8avdcb62jp") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.2 (c (n "elfo") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1b89w7xhs4b57fhmxkcmcskkq70cirxcl30hc31znwgq71sxwksn") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.3 (c (n "elfo") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0rzn7v61s0fbw3y3hjhvl865z80i9a9ns4d3iwdmxvllilf9lvk8") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.4 (c (n "elfo") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "10q2yrlwnnpp51q9nqvwrg6x8kv8agz1wc06s1h28rkxs7dig0z6") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.5 (c (n "elfo") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0gyja5w5cmllbm2jl1h6caw8jzdriyvkiyqzlcmiljvdzjmpn6dc") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.6 (c (n "elfo") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1h65vabhyh4bk9i0fgvspm54ys857k8xhlrazi7r1fazwj3zkm9n") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.7 (c (n "elfo") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "01d2z3y0ag9p11zmlzx2ixhqlgf09q7j6alwkzyw4anwcdh8g2mg") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.8 (c (n "elfo") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1w1c46yj5gg29823pmpwzk8anw0q3aach5mznzcx6k4aq13x7xcz") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.9 (c (n "elfo") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0qif3prbn5kj8mc48g9d4clfsp1dasd0sf8ras6mi3g330h60vrr") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.10 (c (n "elfo") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1jvpvg2wrfffswvnxs32g54fyy1ib7q7fv7cvmnm9di4z7wnbj9c") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer"))))))

(define-public crate-elfo-0.1.11 (c (n "elfo") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.5") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "06gi2xxdsfwbnhh5crb27npr429qgq43dr60vs94mzk9r1gznily") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.12 (c (n "elfo") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0vp7y7v94cf73k8hg05qmixij5zcykzdgfpv6p20v7x712l7pw3s") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.13 (c (n "elfo") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1fdadm5ya4pvgd60c8ffhyih438kkn1bskhv3xx7yyz5sksmhfag") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger")))) (y #t)))

(define-public crate-elfo-0.1.14 (c (n "elfo") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1nq5zp1y5mffa933gwqpx5ss4i0xc935bwlsn0rvi9wskwdll6sd") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.15 (c (n "elfo") (v "0.1.15") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.11") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1l6nda0zwkyy4s2xq2k3zfxbxm8dw0d0npfp7cwampia1khylm8d") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.16 (c (n "elfo") (v "0.1.16") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.12") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1qf5id68y4wcp5lmhwykq7pjary4ck724akkc3w36jl70d651sw7") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.17 (c (n "elfo") (v "0.1.17") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.13") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.7") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "03p7fx58gb7i0zl8zxzl0as6jy3fl44rqjgplsdf4y8ks05hi722") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.18 (c (n "elfo") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.14") (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.7") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.12") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "06qmsaxyf8p3bn6sixxjszl2pc9d46c18vim7226hwgf4kx4l5z4") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger"))))))

(define-public crate-elfo-0.1.19 (c (n "elfo") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.15") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.12") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0146vn7yp8dkx4gh87qpr2sy0kvw9sryyqh9nzwx063kq8i1kgkz") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper"))))))

(define-public crate-elfo-0.1.20 (c (n "elfo") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.16") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0jq13jm1lhrch32yvlcayxgjzipzs36miix3ifncjb7srmix8dxg") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.21 (c (n "elfo") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.16") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0bc5rf7m0pd5cl8qrfqmaz40z18z4i5hbd98skici58y4612mx3h") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.22 (c (n "elfo") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.17") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "03a119vwmfdckcsriymchpwlzfac37i9wwd3ada4myl7848cbpcr") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.23 (c (n "elfo") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.19") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1pda8y5hz6px920qlxxcw4xlpg9r4f9ng5dw0a3hxx92j1cz0sb2") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.24 (c (n "elfo") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.20") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1p8gkzfsdksywmc2yxi1jkk7vha2pnnfj35jd6x8yfpisjp514wc") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.25 (c (n "elfo") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.21") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "02gsas19sb736g8k275izfi0ij3v18yl2qk4kagq1ak1gsdvyf5r") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.26 (c (n "elfo") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.22") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1k93fvhv6jcka3v2l42z7d7y6dwcf47s2k6h37cfwph078r08kz6") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.27 (c (n "elfo") (v "0.1.27") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.22") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0lcjppwa13ac39j24kxcjd145988z63vmxg2lx5q997ikqgpl8ck") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.28 (c (n "elfo") (v "0.1.28") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.23") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0lw6jkfxndb7whsdrrp7hajyw35q7xn805kl9mj9hygwyipsxb9c") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.29 (c (n "elfo") (v "0.1.29") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.24") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.16") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0crmsjmyghai3hhhdah1zh11a5ncvl39lsg6f8wc0pjy8szx3mkb") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.30 (c (n "elfo") (v "0.1.30") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.25") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1n4hcyc0i03w9jsnywgq7chcvm3f1d42qrbmarxifzy553jj28xs") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter"))))))

(define-public crate-elfo-0.1.31 (c (n "elfo") (v "0.1.31") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.26") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1f2w6f0yya32c23hvjg1wp0y9jbx86ndpbwfrm1fg4awnkkbf3g4") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.32 (c (n "elfo") (v "0.1.32") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.27") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1r1pb2npl58v0m3ywham009hy7mcrin6fb6n5irizn4w0zsxvaip") (f (quote (("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.33 (c (n "elfo") (v "0.1.33") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.28") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1icmmdcqmmig2cwanmijg50n8jq7a2q8bzhhhz2lag9dcdlxq9vv") (f (quote (("unstable" "elfo-core/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.34 (c (n "elfo") (v "0.1.34") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.29") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1ics6z74wmw6zrrx8h7zzq3jajls39635qp70sbhl3j6p46na8zi") (f (quote (("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.35 (c (n "elfo") (v "0.1.35") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.30") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.12") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "17q7dgg25mlavi1r4pyz6fm7qrpigz5gsippv6qm4hqskxnp39db") (f (quote (("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.36 (c (n "elfo") (v "0.1.36") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.31") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.12") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0wcz3c9wc18kgdqw88klfq7q8z9pk0k0vprppacr3hcgkg5jxpdh") (f (quote (("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.37 (c (n "elfo") (v "0.1.37") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.32") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.13") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0rwdy6iqdc8nl8l8fvx7paphik2ncw3l6hbpza0gn28azd2az00h") (f (quote (("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.38 (c (n "elfo") (v "0.1.38") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.33") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.14") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1cmg59fwl9yq4lp9japm2mrnwcxhhnbs362dmjwwy4ap2vrkrpcs") (f (quote (("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.39 (c (n "elfo") (v "0.1.39") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.34") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.14") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "04qnbql8q0n7ajfq1xf1wxcgzv29xf7bvlphzrx4gvnasa1np8wd") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.1.40 (c (n "elfo") (v "0.1.40") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.35") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.15") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1m9g2zibfawl3qi9r5wqjdmqx2fs493kr11vav07x9gvlp7jzpzl") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.0 (c (n "elfo") (v "0.2.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0qnz72szm338w841i45znd5xc3iaqvk4dzrs3z018hi4wqrygj8z") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.1 (c (n "elfo") (v "0.2.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0y9kmhwp9h2nazx4baaaraczj5fxsyn1w8scp37ih6n4n0cndzc5") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.2 (c (n "elfo") (v "0.2.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0gss2ra3hbr9sqpxxafqqjxdfa48r80awwj4mgc85clsjbkxjdmr") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.3 (c (n "elfo") (v "0.2.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "120hl7rvpf8ajp7y6h2zbw1v3in79qglqbjglzcqv0lg8c7kqliw") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.4 (c (n "elfo") (v "0.2.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.4") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0rwcy8qfk1hxaxq3lq4dwmkvkgk9bsmwl4h9wqy564r6dhrd0sjn") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.6 (c (n "elfo") (v "0.2.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0yvdszv0cm022v48klwq35k90ac94xk2a13qd60pjh06mq15jvsm") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.7 (c (n "elfo") (v "0.2.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0axhwavbl8fw1xgwfbbjlz1v7dmid9k31p1f9dcyc6bw9nni4azr") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.8 (c (n "elfo") (v "0.2.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "15kgwlxjh0251a5kz59bc5v5fb8ws14097gz285bv3522wmyx321") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.10 (c (n "elfo") (v "0.2.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.10") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.10") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1ys0mir4j4abdxxwkvx2y6chmrk0jzy2xkfggcp134q5m8wdlr7w") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.11 (c (n "elfo") (v "0.2.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.11") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.11") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.11") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1dhq7lvkfmd40j74fb6w6zispyppsz7w08fsgfzpaq4q5qf8qmli") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.12 (c (n "elfo") (v "0.2.0-alpha.12") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.12") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.12") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.12") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.12") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1wcfmga3havh6mm7g2fypxm5q5wzk9zzg71gnckb4qbrn75p6150") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.13 (c (n "elfo") (v "0.2.0-alpha.13") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.13") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.13") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.13") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.13") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "06bsg5fgmsl2sccxfl56kj4lvnfclbj1z5qijky243afg06pk4zx") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.14 (c (n "elfo") (v "0.2.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.14") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.14") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.14") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.14") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0dx82visgxcq4s76j9sqs40g8mikpd9s2hpz5kwwwwzy9xincb5p") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable" "elfo-test/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

(define-public crate-elfo-0.2.0-alpha.15 (c (n "elfo") (v "0.2.0-alpha.15") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 2)) (d (n "elfo-configurer") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.15") (d #t) (k 0)) (d (n "elfo-dumper") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-logger") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.15") (d #t) (k 0)) (d (n "elfo-network") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-pinger") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-telemeter") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.15") (o #t) (d #t) (k 0)) (d (n "elfo-test") (r "^0.2.0-alpha.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 2)) (d (n "humantime-serde") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "metrics") (r "^0.17") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1zks0wabqdklqm90y2077bahx4g3f6j2c3jd86safw7idb083hlz") (f (quote (("unstable-stuck-detection" "elfo-core/unstable-stuck-detection") ("unstable" "elfo-core/unstable" "elfo-telemeter/unstable" "elfo-test/unstable") ("tracing-log" "elfo-logger/tracing-log") ("test-util" "elfo-test" "elfo-core/test-util") ("network" "elfo-network") ("full" "elfo-configurer" "elfo-logger" "elfo-dumper" "elfo-telemeter" "elfo-pinger"))))))

