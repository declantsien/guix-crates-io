(define-module (crates-io el fo elfo-network) #:use-module (crates-io))

(define-public crate-elfo-network-0.2.0-alpha.6 (c (n "elfo-network") (v "0.2.0-alpha.6") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.6") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "13xrvbkz3wl3f4gklbb6plfc2x6rwfb9nnd0qcfypym8l44hlq7s")))

(define-public crate-elfo-network-0.2.0-alpha.7 (c (n "elfo-network") (v "0.2.0-alpha.7") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.7") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0117h1brbjhpi95drnvkvdmm5qbwrmrx9dsbbhjjqkym91kqxnnp")))

(define-public crate-elfo-network-0.2.0-alpha.8 (c (n "elfo-network") (v "0.2.0-alpha.8") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.8") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1lnapzxn5hd20wcjdfqib2cpsz7kka6lxlx2pvnn3g58m29zabz9")))

(define-public crate-elfo-network-0.2.0-alpha.10 (c (n "elfo-network") (v "0.2.0-alpha.10") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.10") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1ahrx314vmjnk9ayiwzm1igy5k93jqjfb7mbkll9imwqnhxjy2n0")))

(define-public crate-elfo-network-0.2.0-alpha.11 (c (n "elfo-network") (v "0.2.0-alpha.11") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.11") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0hszwk7kp2d1p4mywj76yim44rpr19wla9vm4nf8r28invzb60f9")))

(define-public crate-elfo-network-0.2.0-alpha.12 (c (n "elfo-network") (v "0.2.0-alpha.12") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.12") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0g4xjh00ih6a34hdpa3lf8hk6jq5achnbc2hrxbdswq0lql5rwff")))

(define-public crate-elfo-network-0.2.0-alpha.13 (c (n "elfo-network") (v "0.2.0-alpha.13") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.13") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0v93g8x5bvbmb0rb82q67nvz9hbp8hjx7qdhpmqf21wgsgzf2w80")))

(define-public crate-elfo-network-0.2.0-alpha.14 (c (n "elfo-network") (v "0.2.0-alpha.14") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.14") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0x5rwbq227v1w4lf1ysh3f312kdqavmms0zh9bdsy5fq9plypapp")))

(define-public crate-elfo-network-0.2.0-alpha.15 (c (n "elfo-network") (v "0.2.0-alpha.15") (d (list (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.15") (f (quote ("unstable" "network"))) (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "kanal") (r "^0.1.0-pre8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("net" "io-util"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0afjm5i67gc158igc8di0vibss30wpq22lmva9pvw0lkbpcw33bg")))

