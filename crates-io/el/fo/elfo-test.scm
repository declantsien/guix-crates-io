(define-module (crates-io el fo elfo-test) #:use-module (crates-io))

(define-public crate-elfo-test-0.1.0 (c (n "elfo-test") (v "0.1.0") (d (list (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "14wzam9ayl64fsrc8gk5mplrhal1y7syfk3kd0rhiw586d7jv7m4")))

(define-public crate-elfo-test-0.1.1 (c (n "elfo-test") (v "0.1.1") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "0v0i0ikzl2kkicfildbmq15d1vwp0qd32pahnjckry756f26wfbv")))

(define-public crate-elfo-test-0.1.2 (c (n "elfo-test") (v "0.1.2") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "164aqbpvswsaxay1qrq8brfwh0ylcv6cwfznd4hwmx5kp5g3hxk7")))

(define-public crate-elfo-test-0.1.3 (c (n "elfo-test") (v "0.1.3") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "02rparlkkpx3l1pj3fdkimwww8sdvi9wfaaw2prazmp2gc0z4rcj")))

(define-public crate-elfo-test-0.1.4 (c (n "elfo-test") (v "0.1.4") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "1kj2hk0740l7gapira38a637bdvkh4zd9zm2q7w9d6ylvv4h0rrx")))

(define-public crate-elfo-test-0.1.5 (c (n "elfo-test") (v "0.1.5") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "1l3qxlkl2qa8kib8fxj1dm15hz9q5sfpcs10pnqw0fnwl0kgjrmg")))

(define-public crate-elfo-test-0.1.6 (c (n "elfo-test") (v "0.1.6") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "0h4i276awzjz9crpm7i0w5bjsbbgynr251y2lyxvqan7fm5g4i69")))

(define-public crate-elfo-test-0.1.7 (c (n "elfo-test") (v "0.1.7") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "16fwbas2j16670dza24b07xh2sgy2g583glxs8k9g885vnf5v341")))

(define-public crate-elfo-test-0.1.8 (c (n "elfo-test") (v "0.1.8") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "0lzhb3sxhrb94gznrj4bm5ar5bg460x8hxi3a92jr4v3gzgn3qy9")))

(define-public crate-elfo-test-0.1.9 (c (n "elfo-test") (v "0.1.9") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "0285dz404ml1pcvqhsgm06arpkk918vf0qry60axvgchvyc0b8dk") (y #t)))

(define-public crate-elfo-test-0.1.10 (c (n "elfo-test") (v "0.1.10") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "1vdaa0891kndhbv2f83cr089j1n96hsml0dzd3in83zjbag3708i")))

(define-public crate-elfo-test-0.1.11 (c (n "elfo-test") (v "0.1.11") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.9") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "0sn99z3xq1cfjrdmlb2v8wqyr712z7c3wv6i1v68fmm4pvph8z89")))

(define-public crate-elfo-test-0.1.12 (c (n "elfo-test") (v "0.1.12") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.14") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "1z76xj8ybpmizc4vfsp6vsgvzzz01jd68vjpc65syzghh04s4x7b")))

(define-public crate-elfo-test-0.1.13 (c (n "elfo-test") (v "0.1.13") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.16") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "145vrynrndxisjmh9qfxdb3zavqnpsv9vz8navkyah4pg7n4sgdz")))

(define-public crate-elfo-test-0.1.14 (c (n "elfo-test") (v "0.1.14") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.19") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "108dx4fn48n2as0i8mk25idjgsk8caxm5shd6vy7i9y4h58nzagh")))

(define-public crate-elfo-test-0.1.15 (c (n "elfo-test") (v "0.1.15") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.19") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "1l8rsc32xvj5fljj6x3ma496b9ckz5qmgyz9bflx39004fppkrn0")))

(define-public crate-elfo-test-0.1.16 (c (n "elfo-test") (v "0.1.16") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.19") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)))) (h "158m4jlb2pymp2k3da45h53d71wjbcn7maawhxywici7a783d6lq")))

(define-public crate-elfo-test-0.1.17 (c (n "elfo-test") (v "0.1.17") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.25") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1vhxqhdxcm3xhajmw44shyiazc3cmvk6wfl1xir8aas6n6d6sk15")))

(define-public crate-elfo-test-0.1.18 (c (n "elfo-test") (v "0.1.18") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.26") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1za64hk6anqvjlpkfbshr0r7qqbxa0yw4c1b84q3gi7h3y4ylqz7")))

(define-public crate-elfo-test-0.1.19 (c (n "elfo-test") (v "0.1.19") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.33") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "01a91djjjwn05xirwm041cs3zyijx2nn8x4qdbnzd5ps0s1r9ab3")))

(define-public crate-elfo-test-0.1.20 (c (n "elfo-test") (v "0.1.20") (d (list (d (n "elfo-configurer") (r "^0.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.1.35") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.15") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1jxa4hk70g3j12xrdbd6hi9j8vdjbkpra3vx926cbnmcv4dz7fhk")))

(define-public crate-elfo-test-0.2.0-alpha.0 (c (n "elfo-test") (v "0.2.0-alpha.0") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.0") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1d5b10jpslbhvfaqzgfpf8i7kwa8dwgslnayh56nj36nj4kh2vq0")))

(define-public crate-elfo-test-0.2.0-alpha.1 (c (n "elfo-test") (v "0.2.0-alpha.1") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.1") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0pwa1l76ydanbv9r4zw18s5cp7f5wrks86szxrdsyw3fhyacg2wz")))

(define-public crate-elfo-test-0.2.0-alpha.2 (c (n "elfo-test") (v "0.2.0-alpha.2") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.2") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0qnr122dwjc7j4v1rhk4zky50mhxij0b3y563nkmrrjwkh4qmw0j")))

(define-public crate-elfo-test-0.2.0-alpha.3 (c (n "elfo-test") (v "0.2.0-alpha.3") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.3") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1lcy01hcj3qsf4kgd1dljxcqc7523ij00llm5f3fv1wsahki27da")))

(define-public crate-elfo-test-0.2.0-alpha.4 (c (n "elfo-test") (v "0.2.0-alpha.4") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.4") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1zk65z2ak3bdixi5k6w67sg88gdn3lbcsxk4y9vd4vw8dvgzxn0x")))

(define-public crate-elfo-test-0.2.0-alpha.6 (c (n "elfo-test") (v "0.2.0-alpha.6") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.6") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1nrxi77c34drkcvrkkvk45014bhrmx8khib2487mr3yqds0z6nxc")))

(define-public crate-elfo-test-0.2.0-alpha.7 (c (n "elfo-test") (v "0.2.0-alpha.7") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.7") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1n9l39v2bahm5rz1gdj2a7w3nd70qkkh0469jfv4yqx91vrcndpc")))

(define-public crate-elfo-test-0.2.0-alpha.8 (c (n "elfo-test") (v "0.2.0-alpha.8") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.8") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "13hlxqqx508qysnismgwakpk7dj6wci1ixnv2w8z55n5969sai5g")))

(define-public crate-elfo-test-0.2.0-alpha.10 (c (n "elfo-test") (v "0.2.0-alpha.10") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.10") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.10") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "02dqrinz2gibvkfshg58gn3x80zb7pvyqwhibmb1s3nb12sss9xw")))

(define-public crate-elfo-test-0.2.0-alpha.11 (c (n "elfo-test") (v "0.2.0-alpha.11") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.11") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.11") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1si33w58x0n846i8h71l418v7i73nb6n3pykyxyrza638cagsd5g")))

(define-public crate-elfo-test-0.2.0-alpha.12 (c (n "elfo-test") (v "0.2.0-alpha.12") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.12") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.12") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0gx8w377swxk3zf0yhzxrr3q436fl4d34901494sb0wzpfmhr7rm")))

(define-public crate-elfo-test-0.2.0-alpha.13 (c (n "elfo-test") (v "0.2.0-alpha.13") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.13") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.13") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0myiz4vwhvmiip6s9hcxqspghxgkdc9qndql8ldanygmw15ms69x")))

(define-public crate-elfo-test-0.2.0-alpha.14 (c (n "elfo-test") (v "0.2.0-alpha.14") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.14") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.14") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0ibsqkizf5c0w3b4mx63b15qgvasvp7mziy9db8a7sk7z4k4rw8h") (f (quote (("unstable"))))))

(define-public crate-elfo-test-0.2.0-alpha.15 (c (n "elfo-test") (v "0.2.0-alpha.15") (d (list (d (n "elfo-configurer") (r "^0.2.0-alpha.15") (d #t) (k 0)) (d (n "elfo-core") (r "^0.2.0-alpha.15") (f (quote ("test-util"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0jh4r82qc62q3m3s7k1d03v8gjd43wm7f6pxi56l1w1w7rdm3bxh") (f (quote (("unstable"))))))

