(define-module (crates-io el fo elfo-core) #:use-module (crates-io))

(define-public crate-elfo-core-0.1.0 (c (n "elfo-core") (v "0.1.0") (d (list (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1in459csjhlcwmz8nv0jb351dlaj2p7m4gr795gj3g2pjaq0d57v") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.1 (c (n "elfo-core") (v "0.1.1") (d (list (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1rilypkpwpanp1h5lcr84lwbwfmq33r1p8ay7man5gzv03r7979d") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.2 (c (n "elfo-core") (v "0.1.2") (d (list (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0gc18lvrfhc6k5h8x5qgy60cryzslr3pv392856b11ipxmq88xyz") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.3 (c (n "elfo-core") (v "0.1.3") (d (list (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1v00h758aw4sip241mxrpzfl0c9jhrj8fzygvmq2bkmksc744c5j") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.4 (c (n "elfo-core") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1wsk4v8pi00q295nwvk81j4i1sn9a8xiy1zv4pj328p5rmdfi66d") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.5 (c (n "elfo-core") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0za2lb9mbvi7k94v4c4zc7g5mz6p727qnq9bc62dii4sgxfy1jrs") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.6 (c (n "elfo-core") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1s45xfdzagx9a3y65krs34dp6ybym7866y7yf1b6g2z1kcyyz9p6") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.7 (c (n "elfo-core") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "13m0xgqfl2yiw3yinv7lv0mp10rvvqbzv1kbm8657f4psnrrvd1i") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.8 (c (n "elfo-core") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "15gf8mv3yj3qql3y5wrv4am21w0f0zkdqbva7yrpp9qm944cyrpv") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.9 (c (n "elfo-core") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "15n1ln477v7n84g59zc4i41q87b8yxx1hgixr81daq7da88p48z1") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.10 (c (n "elfo-core") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "07wjkhlbsyk4qq5315l2jga767cgyx9cy4dfni8yypsizaylqv3g") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.11 (c (n "elfo-core") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1jh89svj4xss36lm2dj4mbfc36h01k5lfzdlrz3hc4c40wcxxi79") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.12 (c (n "elfo-core") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0n6sq58shik59b800qn2vvh5d76l7x5r7ysnd6jv33dddq1hhfsz") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.13 (c (n "elfo-core") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1afw2sacnbsrc0jhblqvmbc9hqpd9dmzmrbkc7f1dzajyca070hh") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.14 (c (n "elfo-core") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1d8h93mzr19xn4fd6h7liw10bajra9b4mz9va1nj4783jgy8rhrn") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.15 (c (n "elfo-core") (v "0.1.15") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1ikqlh7rd4gx4krwq3nl1kwg6rda9xl9cr9l13i4iwlfgkxxmq8j") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.16 (c (n "elfo-core") (v "0.1.16") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "03y7fsv46ml7w9iaf522lmgc5sg9d94i0zr5q7885x7kbc4kl0zi") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.17 (c (n "elfo-core") (v "0.1.17") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "0lfgrkmsp2fklwbj70gyf8712dd8vv5lvjilnpgziw1yyyw5dhz0") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.18 (c (n "elfo-core") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "108al92qm414qyhgid624g5ixls4wpb9y5nwsby1r0bs5icp6c2r") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.19 (c (n "elfo-core") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "17ixj4ww30xk1sxx69982z9kmj35f15xl1dcb0zdzmcm20fwkyn2") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.20 (c (n "elfo-core") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1bjf55kl1w6m398mwrimzdi822v7rzx32j5hvz26645978c77ba8") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.21 (c (n "elfo-core") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1qi1yj2c1r6p89y99kgrxl0ipq060fj68nml7k4kidpfv4p987pj") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.22 (c (n "elfo-core") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1fw7p9rn9a1v5bbpcc1rgxcfx49x45pxv9wxwad5w0c0zf2gpbmb") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.23 (c (n "elfo-core") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "1qw2l4r9y45hnr5iqmjlswap56jl38w3wj44wg5ds7p3pl2rwhak") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.24 (c (n "elfo-core") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 2)))) (h "094h1yx8vrjcs5q2cja2ynl0lmwwnlrs7lahvghzqp0lbc0n1cpr") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.25 (c (n "elfo-core") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "0h0jbazflc97f6kv2ym7imflgz7hgq5iz7wvmx5j2y607ghnm7jn") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.26 (c (n "elfo-core") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "09v8xgv1fy0jgql2bvb7zias092kx35a3bwnbj482fsl811f0ql8") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.27 (c (n "elfo-core") (v "0.1.27") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "0dvap208waif5aaarfd9jixydlakg4alk8a4klycbf02as70xjwy") (f (quote (("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.28 (c (n "elfo-core") (v "0.1.28") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "1893qa1cy29hwngkjfl0p8flmyc0fgczvxbc3h44zk8bdnjnj8xm") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.29 (c (n "elfo-core") (v "0.1.29") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "0pd4i72646a7v18bd6lk9zawkr0scaarq62d82qdz2clmirfl93v") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.30 (c (n "elfo-core") (v "0.1.30") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.12") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "05qd1s24r4ngy1sai2n88i0kxlm2hsxmbq34dlccq3i4rb6xylq0") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.31 (c (n "elfo-core") (v "0.1.31") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.12") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "1zxagp055sw0dddqlbx2rg6yk9bm2k8aad7yim0rxnm0f6y5kmnv") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.32 (c (n "elfo-core") (v "0.1.32") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.13") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "0jrxm0nwgnmmwighs9a2r4ag4v37929rjrzrx2c5chn5r9fmmsv4") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.33 (c (n "elfo-core") (v "0.1.33") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.14") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "1vcpsf24i1sv7xz5jmv6qfmsrvzvmdqlj5nhs45ikcdij2kjw2fc") (f (quote (("unstable") ("test-util" "tokio/test-util"))))))

(define-public crate-elfo-core-0.1.34 (c (n "elfo-core") (v "0.1.34") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.14") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.4.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.2.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.9.2") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "06aii06r336rfmjv19h4g9gjs2df7mid83bgb90zbhgbvaw3lh8p") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.1.35 (c (n "elfo-core") (v "0.1.35") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.1.15") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 2)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)))) (h "1jinsb49x7alq4pp8d707hbn8pv1isc4jymyx27mm080yzpbs81h") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.0 (c (n "elfo-core") (v "0.2.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "0521qj98lyw0vfv2327f0wfjvz17j8xspq96867f3yphcvbaxsac") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.1 (c (n "elfo-core") (v "0.2.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "0ikcxmvzzsmsbs8z7csha9bpv2i5z3n0k5yajc40xwn2nqx9xmx5") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.2 (c (n "elfo-core") (v "0.2.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1qvw2hjmhv66ni3l1c0i741jhpd7cl2lygirg2wsyg89saqr6l7f") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.3 (c (n "elfo-core") (v "0.2.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "05wg0m03z78vg2hgr6snl1b8gc7524azrb7vgdqpfwb0vicg4qcr") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.4 (c (n "elfo-core") (v "0.2.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1mcll2hwh7h6hxk1mbibvb50nbq1vv9b02yjl6vb8501h3x5gk00") (f (quote (("unstable") ("test-util" "tokio/test-util")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.5 (c (n "elfo-core") (v "0.2.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1wzc13z8icy305aqh4pqdsr74fqx2b29fy2p9xgzlvzwk96dwrjc") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.6 (c (n "elfo-core") (v "0.2.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.6") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "14zd6sdcsx4mjq0c6vg60vgmjfk2zs3zn0fqwwz4w1yivahxrjk7") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.7 (c (n "elfo-core") (v "0.2.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.7") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "08mnj1vipfqaiy85kdjvv1w5q2x4jxxlwl44ji8qyz9v1nvn1mk4") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.8 (c (n "elfo-core") (v "0.2.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.8") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.1") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "169wd6l59walb4zm6zr0vk0wc95qi8naijg7d1qk7siz1i86yzl2") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.10 (c (n "elfo-core") (v "0.2.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.10") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.7") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "0bcsq911bpkpakdpkz8r0w3bcyk8mp4jm71gpi28phpwjzbhakgj") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.11 (c (n "elfo-core") (v "0.2.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.11") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.16") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quanta") (r "^0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.7") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1vh2v7r04lkdg0if8c1il4hssfkasvcpbik3ij8s7n8y0kga3fg3") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.12 (c (n "elfo-core") (v "0.2.0-alpha.12") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.12") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.7") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "0x29mn5654inyd6i22b47smbgm34j71x2824zg7l099zn6lisqhd") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.13 (c (n "elfo-core") (v "0.2.0-alpha.13") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.13") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.7") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1ywfslqck6s4sgsy5mchmq2ki4hpwxgipfi1mj66yjdx4cgfx29p") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.14 (c (n "elfo-core") (v "0.2.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.14") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.7") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "0x5wwdpk19wnjf22pcivixnsn1d1zdq00vi76dcgs2q3paqpl41d") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

(define-public crate-elfo-core-0.2.0-alpha.15 (c (n "elfo-core") (v "0.2.0-alpha.15") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 2)) (d (n "arc-swap") (r "^1.2.0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "elfo-macros") (r "^0.2.0-alpha.15") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (d #t) (k 0)) (d (n "elfo-utils") (r "^0.2.5") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "humantime-serde") (r "^1") (d #t) (k 0)) (d (n "idr-ebr") (r "^0.1.1") (d #t) (k 0)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.2") (d #t) (k 0)) (d (n "smallbox") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "stability") (r "^0.1.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "sync" "time" "signal" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.2") (f (quote ("std" "smallvec"))) (k 0)) (d (n "unicycle") (r "^0.9.3") (d #t) (k 0)))) (h "1a8a8g6nd3ralgx9hzpsl4lbr5v6prz7h29z93627wq5dznsx01v") (f (quote (("unstable") ("test-util" "tokio/test-util") ("network" "rmp-serde" "elfo-macros/network")))) (s 2) (e (quote (("unstable-stuck-detection" "dep:thread_local"))))))

