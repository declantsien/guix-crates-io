(define-module (crates-io js on json-rules-engine-fork) #:use-module (crates-io))

(define-public crate-json-rules-engine-fork-0.9.4 (c (n "json-rules-engine-fork") (v "0.9.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mustache") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "rhai") (r "^0.20") (f (quote ("sync" "f32_float" "no_function" "no_optimize" "no_module" "no_closure" "serde" "unchecked"))) (o #t) (d #t) (k 0)) (d (n "sendgrid") (r "^0.17") (f (quote ("async" "rustls"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1bzxg3dsp14fb2lb25fiv5ciz6z0s4d55c0pmd5arbcrw44avr1w") (f (quote (("path" "jsonpath_lib") ("eval" "rhai") ("email" "sendgrid" "futures-util") ("default") ("callback" "reqwest")))) (y #t)))

(define-public crate-json-rules-engine-fork-0.9.5 (c (n "json-rules-engine-fork") (v "0.9.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mustache") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "rhai") (r "^0.20") (f (quote ("sync" "f32_float" "no_function" "no_optimize" "no_module" "no_closure" "serde" "unchecked"))) (o #t) (d #t) (k 0)) (d (n "sendgrid") (r "^0.17") (f (quote ("async" "rustls"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1d6w6wgk387hiikklsv0k4vsgdcxdnxqixph583idc5xicdsgabh") (f (quote (("path" "jsonpath_lib") ("eval" "rhai") ("email" "sendgrid" "futures-util") ("default") ("callback" "reqwest")))) (y #t)))

(define-public crate-json-rules-engine-fork-0.9.6 (c (n "json-rules-engine-fork") (v "0.9.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mustache") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "rhai") (r "^0.20") (f (quote ("sync" "f32_float" "no_function" "no_optimize" "no_module" "no_closure" "serde" "unchecked"))) (o #t) (d #t) (k 0)) (d (n "sendgrid") (r "^0.17") (f (quote ("async" "rustls"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1rb8dj364qpkm25m8qy14h6yx1m8mvig5q7f2gsvcbqyf5wpjq2x") (f (quote (("path" "jsonpath_lib") ("eval" "rhai") ("email" "sendgrid" "futures-util") ("default") ("callback" "reqwest")))) (y #t)))

(define-public crate-json-rules-engine-fork-0.9.7 (c (n "json-rules-engine-fork") (v "0.9.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mustache") (r "^0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "rhai") (r "^0.20") (f (quote ("sync" "f32_float" "no_function" "no_optimize" "no_module" "no_closure" "serde" "unchecked"))) (o #t) (d #t) (k 0)) (d (n "sendgrid") (r "^0.17") (f (quote ("async" "rustls"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1g6as39jn3pp7pln1hhwyw6jk4c1bbpvk9dbh5byrcdnz2ap8id1") (f (quote (("path" "jsonpath_lib") ("eval" "rhai") ("email" "sendgrid" "futures-util") ("default") ("callback" "reqwest"))))))

