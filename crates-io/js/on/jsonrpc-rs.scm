(define-module (crates-io js on jsonrpc-rs) #:use-module (crates-io))

(define-public crate-jsonrpc-rs-0.1.0 (c (n "jsonrpc-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "039dn09scgfkd6v11wn3w2xxxsyfmdghl8r9s32bdbra57cr8s5r")))

(define-public crate-jsonrpc-rs-0.1.1 (c (n "jsonrpc-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0ysdb257g9wr744jcdf7dz3f7lb9j92y4msjsxkppcwvybfjlxrf")))

(define-public crate-jsonrpc-rs-0.1.2 (c (n "jsonrpc-rs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1r8as1jcbwha4vbrq9gsm7qg4zpr2qswzrbpv7z1hgq5hmka4k56")))

(define-public crate-jsonrpc-rs-0.1.3 (c (n "jsonrpc-rs") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1szj4dyjab5r7jpjc4vmf710bdfj370xgmxsmmy7vshila74rhfb")))

(define-public crate-jsonrpc-rs-0.1.4 (c (n "jsonrpc-rs") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0bwaj591bcdr6r6jkv4mja8hjizf5qh1bwxb9vdq6vmjaxvd9y5a")))

(define-public crate-jsonrpc-rs-0.1.5 (c (n "jsonrpc-rs") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)))) (h "0lnf14jvmlc2yqpw4rk1ybfbann225gv23fj7sg3p8ich3848y21")))

(define-public crate-jsonrpc-rs-0.1.6 (c (n "jsonrpc-rs") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "async-timer-rs") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "completeq-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "async-std") (r "^1.11.0") (f (quote ("attributes" "default"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)))) (h "1hlwmvyi2nak0sypq3dqxpj6qc4wnm9zjw8qzcqyz1f3hbx7dnbs")))

