(define-module (crates-io js on json_schema_test_suite_proc_macro) #:use-module (crates-io))

(define-public crate-json_schema_test_suite_proc_macro-0.1.0 (c (n "json_schema_test_suite_proc_macro") (v "0.1.0") (d (list (d (n "json_schema_test_suite_test_case") (r "=0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1bswfzf66r8gbxvsli8rrfvprxxaf0r2yb05jq281kjc3zcqwgix") (y #t)))

(define-public crate-json_schema_test_suite_proc_macro-0.2.0 (c (n "json_schema_test_suite_proc_macro") (v "0.2.0") (d (list (d (n "json_schema_test_suite_test_case") (r "=0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1zbv9fj1qzxzg2x18f6xdhkfkp6xq5gkvamhz0af5x3jnpj3a3wn")))

(define-public crate-json_schema_test_suite_proc_macro-0.3.0 (c (n "json_schema_test_suite_proc_macro") (v "0.3.0") (d (list (d (n "json_schema_test_suite_test_case") (r "=0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "mockito") (r "^0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0dfj4882yny0kjcbrgy4swddr5vva84pzliafqzlrd0apy6sm5cp")))

