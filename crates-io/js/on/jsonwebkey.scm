(define-module (crates-io js on jsonwebkey) #:use-module (crates-io))

(define-public crate-jsonwebkey-0.0.1 (c (n "jsonwebkey") (v "0.0.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0g5sy7c0906rc703vrj6id78ashj47jcmw8l0wqfx7vss4sz56sx")))

(define-public crate-jsonwebkey-0.0.2 (c (n "jsonwebkey") (v "0.0.2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1gx8nczy1yl4kzjjwraaivffvcavqgr57qz2fdvxqb658q7ck4li") (f (quote (("conversion" "yasna"))))))

(define-public crate-jsonwebkey-0.0.3 (c (n "jsonwebkey") (v "0.0.3") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1nkdk33l0qnaxywk5a27y6ag7li0695dha7nl769xfkf7k27vxdq") (f (quote (("generate" "p256" "rand") ("convert" "num-bigint" "yasna"))))))

(define-public crate-jsonwebkey-0.1.0 (c (n "jsonwebkey") (v "0.1.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "05ravxv6scwa38d8a9766dbp1h123w116qn5dq5935i6x77zv457") (f (quote (("generate" "p256" "rand") ("convert" "num-bigint" "yasna"))))))

(define-public crate-jsonwebkey-0.2.0 (c (n "jsonwebkey") (v "0.2.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "04m6qgxwcjnzg5m3940r5j7j37y5ywlar6r355741fjgckmzpx8y") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

(define-public crate-jsonwebkey-0.3.0 (c (n "jsonwebkey") (v "0.3.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "01nskhw1c8zz7ylz27sdls3rz8dz6609msdcw1k69x4gh8yp4fzp") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

(define-public crate-jsonwebkey-0.3.1 (c (n "jsonwebkey") (v "0.3.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ngqqvz6lqdpqjxc9xlhnpxai1api28frgswya71n96pxaplxl79") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

(define-public crate-jsonwebkey-0.3.2 (c (n "jsonwebkey") (v "0.3.2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "08yds0j7lfhlv6s857n2zlbxdqfck4fn0sm8kkaizwa9q4zfx8z5") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

(define-public crate-jsonwebkey-0.3.4 (c (n "jsonwebkey") (v "0.3.4") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.9") (f (quote ("arithmetic"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.4") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "09aan34i3hqkcbnm09kq65phlj7skg6rdqbp801hcvhifb8civ63") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

(define-public crate-jsonwebkey-0.3.5 (c (n "jsonwebkey") (v "0.3.5") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.0") (o #t) (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.9") (f (quote ("arithmetic"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "yasna") (r "^0.4") (f (quote ("num-bigint"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1k72wqp2hc5i3l8b2cpn7r056i46k01y9z8likajnzhl2hmqaz65") (f (quote (("pkcs-convert" "num-bigint" "yasna") ("jwt-convert" "pkcs-convert" "jsonwebtoken") ("generate" "p256" "rand"))))))

