(define-module (crates-io js on jsona-schema) #:use-module (crates-io))

(define-public crate-jsona-schema-0.1.0 (c (n "jsona-schema") (v "0.1.0") (d (list (d (n "either") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "indexmap") (r "~1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsona") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1sym7fjx4v4r23arin235j8vn387hp6k4mbb9sqa9jzby79wwr0r")))

(define-public crate-jsona-schema-0.1.1 (c (n "jsona-schema") (v "0.1.1") (d (list (d (n "either") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsona") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1wv8z4a0x5nf7bzmxmkl1pnn3cw186w08hxi9j3d1hh82ddqx8mk")))

(define-public crate-jsona-schema-0.2.0 (c (n "jsona-schema") (v "0.2.0") (d (list (d (n "either") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsona") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1g10ji894434ih81xx7qalnzc8dbryfjklzjpsdhk8qkcfshnfbl")))

(define-public crate-jsona-schema-0.3.0 (c (n "jsona-schema") (v "0.3.0") (d (list (d (n "either") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsona") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0d106w8rrsncrxkl6vsb0vfv62awbywmmk6pnachf9d28pbmnzlc")))

