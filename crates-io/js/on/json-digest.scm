(define-module (crates-io js on json-digest) #:use-module (crates-io))

(define-public crate-json-digest-0.0.5 (c (n "json-digest") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.13") (d #t) (k 0)))) (h "154bcsg9nli1q6f0av93i20a095d8sv037inhl35lygklk104hm3")))

(define-public crate-json-digest-0.0.15 (c (n "json-digest") (v "0.0.15") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.121") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.13") (d #t) (k 0)))) (h "1d9jmwigp0isqxzw2d41fvlzkgyillfpb8jfd6i4ma83pk3ixfp4")))

(define-public crate-json-digest-0.0.16 (c (n "json-digest") (v "0.0.16") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.19") (d #t) (k 0)))) (h "1vwac59iji9sx54dvp7vm5zsxpazp3wpy6il07mi5764a4cp35ki")))

