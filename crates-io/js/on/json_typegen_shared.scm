(define-module (crates-io js on json_typegen_shared) #:use-module (crates-io))

(define-public crate-json_typegen_shared-0.1.0 (c (n "json_typegen_shared") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "02fib5fdij2q5fjkqvpa8kfww8nnhlkycyivkcg0vl0a8sl343s8")))

(define-public crate-json_typegen_shared-0.2.0 (c (n "json_typegen_shared") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.10") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "12m5fqir7bcfyajg6xgkpy747iigkvl64f47dxi1hcws76p6mzxw") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.3.0 (c (n "json_typegen_shared") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "18cfnziagbxaa9dg6w5r9gzpjg7n7lx9aj9yldvnk0am83q9wbka") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.3.1 (c (n "json_typegen_shared") (v "0.3.1") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "1gz8v6c3llzi3xknbq60vjdgiacp4jap5dh7y270vfxwk67idkw5") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.3.2 (c (n "json_typegen_shared") (v "0.3.2") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "0zzj7l4skx55v3986hhbnw02h5kws0rx6ms69pp2nmzh7japsjdc") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.3.3 (c (n "json_typegen_shared") (v "0.3.3") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "125348ny0wrzq8firfmhm42zp0ghpnqmbqx02zgsmjgdapsn36w5") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.4.0 (c (n "json_typegen_shared") (v "0.4.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "1m3i5g643i2li3v8ks70zd67n11rvy49b88r6j8x4akfx37wiqd9") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.4.1 (c (n "json_typegen_shared") (v "0.4.1") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "0f2v4nifcmqxab1hvlbljwnnb89zl2cfl0l7qag9mr0q1wr04aqn") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.5.0 (c (n "json_typegen_shared") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "1v1lyyvmsacf35kkq10c9sfm7vqxczqlfk5g9bk9ccqmy756m5cr") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.6.0 (c (n "json_typegen_shared") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "05mvj82pqa74q8cc9jcq8irw61ga9axgbblw6ris3pawibmsd665") (f (quote (("unstable") ("remote-samples" "reqwest") ("local-samples") ("default" "remote-samples" "local-samples"))))))

(define-public crate-json_typegen_shared-0.7.0 (c (n "json_typegen_shared") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syn") (r "^0.11") (f (quote ("full" "parsing"))) (o #t) (d #t) (k 0)) (d (n "synom") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "testsyn") (r "^0.15") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 2) (p "syn")) (d (n "unindent") (r "^0.1.2") (d #t) (k 0)))) (h "1fc5wkq0ldwv1gvjnbzs04vv8ps75kjia21vyl4pqvcwkzl2jx61") (f (quote (("unstable") ("remote-samples" "reqwest") ("option-parsing" "syn" "synom") ("local-samples") ("default" "remote-samples" "local-samples" "option-parsing"))))))

