(define-module (crates-io js on json-lines) #:use-module (crates-io))

(define-public crate-json-lines-0.1.0 (c (n "json-lines") (v "0.1.0") (d (list (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (o #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (d #t) (k 0)))) (h "1j2vqyzxdd95nbva17iza9w8nl47fjd2jj12r5rcaqx3jhq6gf6j") (f (quote (("use-std" "thiserror") ("use-defmt" "defmt") ("default" "use-std") ("codec" "use-std" "tokio-util" "bytes" "serde_json" "memchr"))))))

(define-public crate-json-lines-0.1.1 (c (n "json-lines") (v "0.1.1") (d (list (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-json-core") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (o #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (d #t) (k 0)))) (h "093a3n1asvfsjqf0917mm5021amf5q7gdbw9d7n8khr5a8vgiaq9") (f (quote (("use-std" "thiserror") ("use-defmt" "defmt") ("default" "use-std") ("codec" "use-std" "tokio-util" "bytes" "serde_json" "memchr"))))))

