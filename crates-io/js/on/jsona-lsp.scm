(define-module (crates-io js on jsona-lsp) #:use-module (crates-io))

(define-public crate-jsona-lsp-0.1.0 (c (n "jsona-lsp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "either") (r "^1.7") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "~1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsona") (r "^0.3") (d #t) (k 0)) (d (n "jsona-schema") (r "^0.1") (d #t) (k 0)) (d (n "jsona-util") (r "^0.1") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tap") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1pwbscwiv91ppf6jhrkwf6p8d8nwadz0841jmqv14rnx0rmbc4np")))

(define-public crate-jsona-lsp-0.2.0 (c (n "jsona-lsp") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "either") (r "^1.7") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsona") (r "^0.4") (d #t) (k 0)) (d (n "jsona-schema") (r "^0.1") (d #t) (k 0)) (d (n "jsona-util") (r "^0.2") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tap") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0gkckgrsbk75bmlckd1ciadnfvc282qfyipl5k3678jsqlz852an")))

(define-public crate-jsona-lsp-0.3.0 (c (n "jsona-lsp") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "either") (r "^1.7") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsona") (r "^0.5") (d #t) (k 0)) (d (n "jsona-schema") (r "^0.2") (d #t) (k 0)) (d (n "jsona-util") (r "^0.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0pnla37gfjp4wpxhbg3pwnz75hr7rvi5v792pa76z8gf5ndky3f1")))

(define-public crate-jsona-lsp-0.4.0 (c (n "jsona-lsp") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "either") (r "^1.7") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsona") (r "^0.6") (d #t) (k 0)) (d (n "jsona-schema") (r "^0.3") (d #t) (k 0)) (d (n "jsona-util") (r "^0.4") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0vfzwhf5agwrjrgyp8fiqqm7w32l4wya7q7wql3niw8sfyp3fgaw")))

