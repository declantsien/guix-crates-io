(define-module (crates-io js on json-mel) #:use-module (crates-io))

(define-public crate-json-mel-0.7.0 (c (n "json-mel") (v "0.7.0") (d (list (d (n "jaq-core") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "melodium-core") (r "=0.7.0") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "0rpcdw26s4y8rpza0byzag205xyyikkqs8di3kwk1skgkj54srf1") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-json-mel-0.7.1 (c (n "json-mel") (v "0.7.1") (d (list (d (n "jaq-core") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-interpret") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-parse") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "jaq-std") (r "^1.0.0-beta") (d #t) (k 0)) (d (n "melodium-core") (r "^0.7.1") (d #t) (k 0)) (d (n "melodium-macro") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "061rnlccvvk5hvbdwf7lsqc5m098l7731vdv17w7d7s3yspibwhn") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-json-mel-0.8.0-rc1 (c (n "json-mel") (v "0.8.0-rc1") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc1") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc1") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "01j1j567iqxfn5sqkxgp5ihjg5dksva7cralvzsj4sbcf08awhgz") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-json-mel-0.8.0-rc2 (c (n "json-mel") (v "0.8.0-rc2") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc2") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc2") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "0cp8vr3igd8my88n07n8bl44w5fw0axazqyn3qdsjjyq98l32lig") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-json-mel-0.8.0-rc3 (c (n "json-mel") (v "0.8.0-rc3") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc3") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc3") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "1f1bp8cr65j2r8lbir7q7q3rvj6h93c3zd1xzhf7yxvp19qg19im") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-json-mel-0.8.0 (c (n "json-mel") (v "0.8.0") (d (list (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "melodium-core") (r "^0.8.0") (d #t) (k 0)) (d (n "melodium-macro") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)))) (h "1y52glzfs5nl49ijnwps8xfk6xp3yhbvk66r3ynwhz4hmrmld58r") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

