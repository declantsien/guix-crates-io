(define-module (crates-io na nn nannou_wgpu) #:use-module (crates-io))

(define-public crate-nannou_wgpu-0.17.0 (c (n "nannou_wgpu") (v "0.17.0") (d (list (d (n "futures") (r "^0.3") (f (quote ("executor" "thread-pool"))) (d #t) (k 0)) (d (n "image") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "wgpu_upstream") (r "^0.9") (d #t) (k 0) (p "wgpu")))) (h "196l8vnavb3rbv3gg130kkms1n9s7iynxj3d19cp69myrmpn0rlz") (f (quote (("capturer" "image" "instant" "num_cpus"))))))

(define-public crate-nannou_wgpu-0.18.0 (c (n "nannou_wgpu") (v "0.18.0") (d (list (d (n "futures") (r "^0.3") (f (quote ("executor" "thread-pool"))) (d #t) (k 0)) (d (n "image") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "wgpu_upstream") (r "^0.11") (d #t) (k 0) (p "wgpu")))) (h "0ryi02frsmv5v5p6wh61911jz68g47zfhrhg8chxymp9q7p9k8hc") (f (quote (("webgl" "wgpu_upstream/webgl") ("trace" "wgpu_upstream/trace") ("spirv" "wgpu_upstream/spirv") ("serde" "wgpu_upstream/serde") ("replay" "wgpu_upstream/replay") ("capturer" "image" "instant" "num_cpus"))))))

(define-public crate-nannou_wgpu-0.19.0 (c (n "nannou_wgpu") (v "0.19.0") (d (list (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu_upstream") (r "^0.17.1") (d #t) (k 0) (p "wgpu")))) (h "0gjl0ybsgjldnp45icfdm409pryncjjlk4c6bsb5n1q3q6cl510a") (f (quote (("webgl" "wgpu_upstream/webgl") ("trace" "wgpu_upstream/trace") ("spirv" "wgpu_upstream/spirv") ("serde" "wgpu_upstream/serde") ("replay" "wgpu_upstream/replay") ("capturer" "image" "instant" "num_cpus"))))))

