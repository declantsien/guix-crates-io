(define-module (crates-io na ti native-dialog) #:use-module (crates-io))

(define-public crate-native-dialog-0.1.0 (c (n "native-dialog") (v "0.1.0") (d (list (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1jnsn1zj0vsps9sfzsjg5p3jk52h7kl4ma3qnz8d9ry4xz7lfz7w")))

(define-public crate-native-dialog-0.1.1 (c (n "native-dialog") (v "0.1.1") (d (list (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "14aghhrkwmkh2hw40415rrfzgil7snv9bjkzgyjpx0pafc2spy19")))

(define-public crate-native-dialog-0.2.0 (c (n "native-dialog") (v "0.2.0") (d (list (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zbixxsfbzny2h7i8g90y3qmfpds42sxy2g4i8qg6gvd53zwl9aw")))

(define-public crate-native-dialog-0.2.1 (c (n "native-dialog") (v "0.2.1") (d (list (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yz7shah9j28200c14lj60d9g9mcny12hf7vfmak7zrg0ajq4994")))

(define-public crate-native-dialog-0.2.2 (c (n "native-dialog") (v "0.2.2") (d (list (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0xihy17d9ff640ix6k30pzy8n0q4av4q05i56rvrhzimw46hady5") (f (quote (("windows_visual_styles" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.2.3 (c (n "native-dialog") (v "0.2.3") (d (list (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mwrasqps5dgrylmkvbihffpx3fw6kyakqsbvwwnzrs1w54rdn1p") (f (quote (("windows_visual_styles" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.2.4 (c (n "native-dialog") (v "0.2.4") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "196zcb3v9p12k1hwyx05wp497rmzdk0akmvk6bm9ra2kmpyp57jb") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.3.0 (c (n "native-dialog") (v "0.3.0") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17qpdmax7iwxxfjg4026l7xzg58gi8jcxq6dycdph5nxf2w676js") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.4.1 (c (n "native-dialog") (v "0.4.1") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0pkf1jm75wyd9ywipydw3bqdjwrz260p8mx3kcilml6l0w30wpax") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.4.2 (c (n "native-dialog") (v "0.4.2") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "031mvl7pfbzdispd2vmqags3afqg9ljwyf959xlis81vnr1269nk") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.4.3 (c (n "native-dialog") (v "0.4.3") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11pfwnvipzwlq4hb9dxxr9hzk5zza2ql2lw471rzvhywid6k71rm") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.4.4 (c (n "native-dialog") (v "0.4.4") (d (list (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "osascript") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wwjgjqdh9blzizbjpd2ip52fp8jqgw6shi18nvdvbd7v3r9pdp5") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.0-alpha.1 (c (n "native-dialog") (v "0.5.0-alpha.1") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "055lnpqd17clm08pjy7iakjhp94lrxq72wwmz3k4j89xbh58g2az") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.0 (c (n "native-dialog") (v "0.5.0") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05vy38dcr9dd9qw50p23sbf8dabbjfx7zc46jn5s5yi3cjblw5c9") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.1 (c (n "native-dialog") (v "0.5.1") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10sj6dlv5w1nrdhbrl33qkhflh2j2flvikddpjp96zyjglzsrfwk") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.2 (c (n "native-dialog") (v "0.5.2") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10b925af4hdbivs6j7d2smypmj2gk2mfrd7wjyw8frn236misjcz") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.3 (c (n "native-dialog") (v "0.5.3") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ckkp7xz3kdh2rg3fvd147kdwr7bjxsfgx2sxr6vzwyhnfsynzzz") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness")))) (y #t)))

(define-public crate-native-dialog-0.5.4 (c (n "native-dialog") (v "0.5.4") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kf1wp7pg2w51m9i6nkpidxjh293jl9w6wwf5253dsijwxgq15xp") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.5 (c (n "native-dialog") (v "0.5.5") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12mxgppbj1pcandjph7723w3pbd9rhrx564p1q73agnv2w8b12fn") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.6 (c (n "native-dialog") (v "0.5.6") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0va97xsflb8dgqcssv6wpj8h5hrfs1c0sn2l32pj67p2hffdvrmk") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.7 (c (n "native-dialog") (v "0.5.7") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01bsafawb8w8r0hwl8svlkn03l3b0hkb8h5zjpmld2fa9ywvzvhi") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.5.8 (c (n "native-dialog") (v "0.5.8") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mmpkh1gybi1fz93axqmaghd3q1kmmp87dz53hi5i0aq8ka92qki") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.6.0 (c (n "native-dialog") (v "0.6.0") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fss20h11fy18898gi1080lh92h37rjhqrhly1d4dcsdywipc98v") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.6.1 (c (n "native-dialog") (v "0.6.1") (d (list (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ipy51y6kqnmzwqqfjp00s5nigcl0q3g6yrh1pjqdyfykr7nhzrz") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.6.2 (c (n "native-dialog") (v "0.6.2") (d (list (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cy50yrd8q7sk6igww38ljnzpn67qs22h825k12fpcwq4q3f1cbh") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.6.3 (c (n "native-dialog") (v "0.6.3") (d (list (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1imb8cpl40x8qsmf0x4y9lr78pj5ljj3iga3bj2x06xk53rkgdha") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.6.4 (c (n "native-dialog") (v "0.6.4") (d (list (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yqrhipam66gbmij4i2b4wrax2mqjj8rilww795lwzklnbnmbgqv") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

(define-public crate-native-dialog-0.7.0 (c (n "native-dialog") (v "0.7.0") (d (list (d (n "ascii") (r "^1.1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.4.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "versions") (r "^5.0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "wfd") (r "^0.1.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "which") (r "^4.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17q3gk1bxwazn6ijsag3rm3pp5m5b7hsj3fndcispbnjhn407rw4") (f (quote (("windows_visual_styles" "once_cell" "winapi/sysinfoapi" "winapi/winbase" "winapi/handleapi" "winapi/libloaderapi") ("windows_dpi_awareness"))))))

