(define-module (crates-io na lg nalgebra-sparse) #:use-module (crates-io))

(define-public crate-nalgebra-sparse-0.1.0 (c (n "nalgebra-sparse") (v "0.1.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.2.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0mkggaszg6ig34vn2j5fx1qyn1p73wy9z33k88f75cshj2db72ah") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.2.0 (c (n "nalgebra-sparse") (v "0.2.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.2.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1zfhm9smg038i133lbdgl5ambrx5nrmml07n4dicvkz7i6s72l8c") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.3.0 (c (n "nalgebra-sparse") (v "0.3.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1xvsmr0n2wk770lbpxyblgyzpr9c5vx45zbwznw1ni1jallf5ly0") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.4.0 (c (n "nalgebra-sparse") (v "0.4.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1yp38kkr3qsn471zmvfcg9kpkfmg4dvv57zvlbd936mhnzx7qdw6") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.5.0 (c (n "nalgebra-sparse") (v "0.5.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1pgvi55phshdic3yhl0irhl612xm7pn8240mbzwh5jh2xryxqcgw") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.6.0 (c (n "nalgebra-sparse") (v "0.6.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1hsyyf4l51rfs3kz69vnzr16r479q9ls64lswl2xfckkqdkyj3zz") (f (quote (("slow-tests") ("proptest-support" "proptest" "nalgebra/proptest-support") ("io" "pest" "pest_derive") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.7.0 (c (n "nalgebra-sparse") (v "0.7.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "05yg3cb3s5izb4wa0yrd708vbvcx2qgm643k0mg11rsy55qxci6r") (f (quote (("slow-tests") ("serde-serialize" "serde/std") ("proptest-support" "proptest" "nalgebra/proptest-support") ("io" "pest" "pest_derive") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.7.1 (c (n "nalgebra-sparse") (v "0.7.1") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)))) (h "1pp4jqb3phx905hmmwkx6gnjrnmwx20b15aigd1d65dfrvxb0phq") (f (quote (("slow-tests") ("serde-serialize" "serde/std") ("proptest-support" "proptest" "nalgebra/proptest-support") ("io" "pest" "pest_derive") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.8.0 (c (n "nalgebra-sparse") (v "0.8.0") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("compare"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)))) (h "1rq4ps38c8p8rqzbcrd2f82vk6asw3rw03gz2vyihgiymrpdz17k") (f (quote (("slow-tests") ("serde-serialize" "serde/std") ("proptest-support" "proptest" "nalgebra/proptest-support") ("io" "pest" "pest_derive") ("compare" "matrixcompare-core"))))))

(define-public crate-nalgebra-sparse-0.9.0 (c (n "nalgebra-sparse") (v "0.9.0") (d (list (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "matrixcompare") (r "^0.3.0") (f (quote ("proptest-support"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (f (quote ("compare"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)))) (h "1jaw0lrg4jba9lyrjr1g3wyqxs6dg5snpdr0xz8b6dz104qkn4bv") (f (quote (("slow-tests") ("serde-serialize" "serde/std") ("proptest-support" "proptest" "nalgebra/proptest-support") ("io" "pest" "pest_derive") ("compare" "matrixcompare-core"))))))

