(define-module (crates-io na lg nalgebra-lapack) #:use-module (crates-io))

(define-public crate-nalgebra-lapack-0.1.0 (c (n "nalgebra-lapack") (v "0.1.0") (d (list (d (n "lapack") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.2.21") (d #t) (k 0)) (d (n "num") (r "^0.1.27") (d #t) (k 0)))) (h "1mfk6pvq6bin4b3cwn259cynr6f33sx524q5i84crk194q3j026j") (f (quote (("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.1.1 (c (n "nalgebra-lapack") (v "0.1.1") (d (list (d (n "lapack") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)))) (h "0d8naxdg2w2vp4yvgpf418rjs2qml012ny9h661ngpsyjp7408pp") (f (quote (("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.2.0 (c (n "nalgebra-lapack") (v "0.2.0") (d (list (d (n "lapack") (r "^0.11") (k 0)) (d (n "nalgebra") (r "^0.8") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)))) (h "0xx94frh27bwqd38dbhwbkwacy72lb9v1m11rvnmx03k39ki9swj") (f (quote (("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.3.0 (c (n "nalgebra-lapack") (v "0.3.0") (d (list (d (n "lapack") (r "^0.11") (k 0)) (d (n "nalgebra") (r "^0.10") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)))) (h "0n9m1rd2ry1kalg3pl9mmz185hijkvsd3zihsvcbp4xl44ilmih3") (f (quote (("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.4.0 (c (n "nalgebra-lapack") (v "0.4.0") (d (list (d (n "error-chain") (r "^0.5") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "nalgebra") (r "^0.10") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)))) (h "1sijzzkh78qz97dh2hg9d4ry1pz4yrdzxgjf6p2rfvl7v1k86v35") (f (quote (("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.5.0 (c (n "nalgebra-lapack") (v "0.5.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 2)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)))) (h "198hs1xkm8w53fc8nppwarylrbxjslqcavxj4pp8i2r99dk6jxsr") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.6.0 (c (n "nalgebra-lapack") (v "0.6.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 2)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "nalgebra") (r "^0.14") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (o #t) (d #t) (k 0)))) (h "09g30hgagwxrnv0g35a4yx1w9l16arl16gwql088ixfvpk3lh04j") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack/openblas") ("netlib" "lapack/netlib") ("default" "openblas") ("accelerate" "lapack/accelerate"))))))

(define-public crate-nalgebra-lapack-0.7.0 (c (n "nalgebra-lapack") (v "0.7.0") (d (list (d (n "alga") (r "^0.6") (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.1") (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1n4qdbja63i5cpzanc5gmzb072rjx3diglwxkv700y6vjsh0kpz9") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.8.0 (c (n "nalgebra-lapack") (v "0.8.0") (d (list (d (n "alga") (r "^0.7") (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.2") (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "15jbzphr4qhi5wlybkzkgjpgdj25377svhhrrnap9nxjzl9ivg3v") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.9.0 (c (n "nalgebra-lapack") (v "0.9.0") (d (list (d (n "alga") (r "^0.8") (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.2") (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0rb872xbpp9ds49xcgsl7mq1ljj7k450kxnvw1h209k8229n3ka9") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.10.0 (c (n "nalgebra-lapack") (v "0.10.0") (d (list (d (n "alga") (r "^0.9") (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.2") (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1w9lv52agg6wfigysfczzw7l12m0z86252s9s24h4xwn2am7706n") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.11.0 (c (n "nalgebra-lapack") (v "0.11.0") (d (list (d (n "alga") (r "^0.9") (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "08b2axvs8hnd64kzpvcxj86r4yssndgalqiyv5faq6f00jfzzja4") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.12.0 (c (n "nalgebra-lapack") (v "0.12.0") (d (list (d (n "alga") (r "^0.9") (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.20") (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "14hvwzzdrqzl8jcksm7i1ikflas41ivqpjyd3aisz2wb4ck5rlpd") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.13.0 (c (n "nalgebra-lapack") (v "0.13.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)))) (h "087q90nrz9pvb86c1y51928ji62nbrlcbswpgjxz11k556cfnsvb") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.14.0 (c (n "nalgebra-lapack") (v "0.14.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)))) (h "18y5w50cky8asl40q8rrih3yzr7jqbccnqjpkjyf4w1pnishacmk") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.15.0 (c (n "nalgebra-lapack") (v "0.15.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (k 0)) (d (n "lapack-src") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)))) (h "0nv9svfm15m1rgcfbwhnffmp1vjsyzqrvlbm2fm1zyiik2b613pj") (f (quote (("serde-serialize" "serde" "serde_derive") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "openblas") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.16.0 (c (n "nalgebra-lapack") (v "0.16.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "lapack") (r "^0.17") (k 0)) (d (n "lapack-src") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)))) (h "0dl5d00p7pc5l1ykv9c3vvxndlysrcjx1wfi9a7y80ngsd3lnbk3") (f (quote (("serde-serialize" "serde" "serde_derive") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.17.0 (c (n "nalgebra-lapack") (v "0.17.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "lapack") (r "^0.17") (k 0)) (d (n "lapack-src") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)))) (h "1jhxibr63sjsb3g8zkjg7micr28zg1s3k7gbq75p5zn9jzd53aj6") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.18.0 (c (n "nalgebra-lapack") (v "0.18.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)))) (h "1fzb8kq3w3k8grv5ar4wgsvd6379ls3ra9a65k3d8a4zmfgjcb40") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.19.0 (c (n "nalgebra-lapack") (v "0.19.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.28") (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)))) (h "1ayyhb7lnfyka4gpyakg95d18bvhs7y78r1z7dxinbmw0q1kxsnb") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.20.0 (c (n "nalgebra-lapack") (v "0.20.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)))) (h "00060l2ia9kym4jqm04ykc4rg42xnhj27z3i5jz1gg8ili7933g6") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.21.0 (c (n "nalgebra-lapack") (v "0.21.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (d #t) (k 0)))) (h "0iymni3ypb89ywpklxxbjdn5ld6magl57f3c410nviizsjid966a") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.22.0 (c (n "nalgebra-lapack") (v "0.22.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (d #t) (k 0)))) (h "1sl4dzfzcff4prwsjj4gg7sf3icrd585ib23x620s505c43k2xbl") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.23.0 (c (n "nalgebra-lapack") (v "0.23.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (d #t) (k 0)))) (h "0vjcsy7v6mzr2if22qr077gkfvvgrdl4jdc3n7z2s0y0bkan6j2v") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

(define-public crate-nalgebra-lapack-0.24.0 (c (n "nalgebra-lapack") (v "0.24.0") (d (list (d (n "lapack") (r "^0.19") (k 0)) (d (n "lapack-src") (r "^0.8") (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (f (quote ("arbitrary" "rand"))) (d #t) (k 2)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "1dqv7csx0jvsicbl8ylsvc7p65hkcb1dl4lk8l5grwvd5icj99nm") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("proptest-support" "nalgebra/proptest-support") ("openblas" "lapack-src/openblas") ("netlib" "lapack-src/netlib") ("intel-mkl" "lapack-src/intel-mkl") ("default" "netlib") ("arbitrary" "nalgebra/arbitrary") ("accelerate" "lapack-src/accelerate"))))))

