(define-module (crates-io na va navajo) #:use-module (crates-io))

(define-public crate-navajo-0.0.0 (c (n "navajo") (v "0.0.0") (d (list (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "01s67w0mj3zd0vwsrkybkdm2r61zx25pfhv055gm816wf461pqlp") (y #t)))

(define-public crate-navajo-0.0.1 (c (n "navajo") (v "0.0.1") (d (list (d (n "aes") (r "^0.8.2") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "aes-siv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "blake3") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "cmac") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "crypto-common") (r "^0.1.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("alloc" "rand_core" "pkcs8" "pem" "zeroize" "serde"))) (o #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde" "alloc"))) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (o #t) (k 0)) (d (n "inherent") (r "^1") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (f (quote ("alloc" "pem"))) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_async") (r "^0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rust_crypto_aead") (r "^0.5") (d #t) (k 0) (p "aead")) (d (n "rust_crypto_hkdf") (r "^0.12") (d #t) (k 0) (p "hkdf")) (d (n "sec1") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "strum_macros"))) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)) (d (n "typenum") (r "^1.16") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc" "zeroize_derive" "serde"))) (d #t) (k 0)))) (h "1ivic7xqgx5sjkzl11vq8z22fzjsgwdaj7kvqll7smw2p452l8d2") (f (quote (("mac" "sha2" "hmac") ("hkdf" "sha2" "hmac") ("ed25519" "ed25519-dalek") ("dsa" "signature" "ed25519" "p256" "p384") ("default" "std" "aead" "dsa" "mac" "daead") ("daead" "aes-siv") ("aead" "hkdf")))) (s 2) (e (quote (("std" "miniz_oxide/std" "ring?/std" "serde/std" "serde_json/std" "zeroize/std" "aes-gcm/std" "aes-siv?/std" "hmac?/std" "rand_core/std" "cmac?/std" "signature?/std" "chacha20poly1305/std" "pkcs8/std" "cmac?/std" "sha2/std" "sha3/std" "ed25519-dalek?/std" "base64/std" "derive_builder/std"))))))

(define-public crate-navajo-0.0.2 (c (n "navajo") (v "0.0.2") (d (list (d (n "aes") (r "^0.8.2") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "aes-siv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "blake3") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "cmac") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "crypto-common") (r "^0.1.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("alloc" "rand_core" "pkcs8" "pem" "zeroize" "serde"))) (o #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde" "alloc"))) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (o #t) (k 0)) (d (n "inherent") (r "^1") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (f (quote ("alloc" "pem"))) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_async") (r "^0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rust_crypto_aead") (r "^0.5") (d #t) (k 0) (p "aead")) (d (n "rust_crypto_hkdf") (r "^0.12") (d #t) (k 0) (p "hkdf")) (d (n "sec1") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "strum_macros"))) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)) (d (n "typenum") (r "^1.16") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc" "zeroize_derive" "serde"))) (d #t) (k 0)))) (h "0mgiarf0a9fx27wsyk0hiiwnk75h6k53csn2gls95qymmpz5z70h") (f (quote (("mac" "sha2" "hmac") ("hkdf" "sha2" "hmac") ("ed25519" "ed25519-dalek") ("dsa" "signature" "ed25519" "p256" "p384") ("default" "std" "aead" "dsa" "mac" "daead") ("daead" "aes-siv") ("aead" "hkdf")))) (s 2) (e (quote (("std" "miniz_oxide/std" "ring?/std" "serde/std" "serde_json/std" "zeroize/std" "aes-gcm/std" "aes-siv?/std" "hmac?/std" "rand_core/std" "cmac?/std" "signature?/std" "chacha20poly1305/std" "pkcs8/std" "cmac?/std" "sha2/std" "sha3/std" "ed25519-dalek?/std" "base64/std" "derive_builder/std"))))))

(define-public crate-navajo-0.0.3 (c (n "navajo") (v "0.0.3") (d (list (d (n "aes") (r "^0.8.2") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "aes-siv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "blake3") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "cmac") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "crypto-common") (r "^0.1.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("alloc" "rand_core" "pkcs8" "pem" "zeroize" "serde"))) (o #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde" "alloc"))) (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (o #t) (k 0)) (d (n "inherent") (r "^1") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (f (quote ("alloc" "pem"))) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_async") (r "^0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rust_crypto_aead") (r "^0.5") (d #t) (k 0) (p "aead")) (d (n "rust_crypto_hkdf") (r "^0.12") (d #t) (k 0) (p "hkdf")) (d (n "sec1") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "strum_macros"))) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)) (d (n "typenum") (r "^1.16") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc" "zeroize_derive" "serde"))) (d #t) (k 0)))) (h "039f08jj0wlkkhxmhm66dj6gd7fxzpmr85za099gb5ljz70jx4ay") (f (quote (("mac" "sha2" "hmac") ("hkdf" "sha2" "hmac") ("ed25519" "ed25519-dalek") ("dsa" "signature" "ed25519" "p256" "p384") ("default" "std" "aead" "dsa" "mac" "daead" "hkdf") ("daead" "aes-siv") ("aead" "hkdf")))) (s 2) (e (quote (("std" "miniz_oxide/std" "ring?/std" "serde/std" "serde_json/std" "zeroize/std" "aes-gcm/std" "aes-siv?/std" "hmac?/std" "rand_core/std" "cmac?/std" "signature?/std" "chacha20poly1305/std" "pkcs8/std" "cmac?/std" "sha2/std" "sha3/std" "ed25519-dalek?/std" "base64/std" "derive_builder/std" "hex/std"))))))

(define-public crate-navajo-0.0.4 (c (n "navajo") (v "0.0.4") (d (list (d (n "aes") (r "^0.8.2") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "aes-siv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "blake3") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "cmac") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "crypto-common") (r "^0.1.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("alloc" "rand_core" "pkcs8" "pem" "zeroize" "serde"))) (o #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde" "alloc"))) (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (o #t) (k 0)) (d (n "inherent") (r "^1") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.12") (f (quote ("ecdsa" "pkcs8" "pem" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10") (f (quote ("alloc" "pem"))) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_async") (r "^0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rust_crypto_aead") (r "^0.5") (d #t) (k 0) (p "aead")) (d (n "rust_crypto_hkdf") (r "^0.12") (d #t) (k 0) (p "hkdf")) (d (n "sec1") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "rc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "strum_macros"))) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)) (d (n "typenum") (r "^1.16") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("alloc" "zeroize_derive" "serde"))) (d #t) (k 0)))) (h "0m8y93dsa46k2fpgbp65ckdlmrz9v6gkw1sx304nklcvc04dx05c") (f (quote (("mac" "sha2" "hmac") ("hkdf" "sha2" "hmac") ("ed25519" "ed25519-dalek") ("dsa" "signature" "ed25519" "p256" "p384") ("default" "std" "aead" "dsa" "mac" "daead" "hkdf") ("daead" "aes-siv") ("aead" "hkdf")))) (s 2) (e (quote (("std" "miniz_oxide/std" "ring?/std" "serde/std" "serde_json/std" "zeroize/std" "aes-gcm/std" "aes-siv?/std" "hmac?/std" "rand_core/std" "cmac?/std" "signature?/std" "chacha20poly1305/std" "pkcs8/std" "cmac?/std" "sha2/std" "sha3/std" "ed25519-dalek?/std" "base64/std" "derive_builder/std" "hex/std"))))))

