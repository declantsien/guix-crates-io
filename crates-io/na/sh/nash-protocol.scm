(define-module (crates-io na sh nash-protocol) #:use-module (crates-io))

(define-public crate-nash-protocol-0.1.3 (c (n "nash-protocol") (v "0.1.3") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vk9f4800rdylbk5q6fnvqr14ddlln5py5qjqh0w47riylwz2d53") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.4 (c (n "nash-protocol") (v "0.1.4") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1h3sj941dp4k2ck3a4y14ascgk0yvc1nmgwxp5813672rnwzh288") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.5 (c (n "nash-protocol") (v "0.1.5") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0m3fbylywivmbfq4j7flg80zxybsyw0jzq5qaam4vqc403yvlrg3") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.6 (c (n "nash-protocol") (v "0.1.6") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14ych1lnxy0093jxaff7xh0sz7ahhsampi1kc79l7mlgirvp3zic") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.7 (c (n "nash-protocol") (v "0.1.7") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s88cicl0692lz8wahxh2xdgkmyjgi68zx1vwih61hd3xsrrczi3") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.8 (c (n "nash-protocol") (v "0.1.8") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1s9pp5m1b3yry58zgcv10shf0vdndd79fqgfdh8726x1nsf4a6zg") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.9 (c (n "nash-protocol") (v "0.1.9") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02zgkfi5v22x0p2360z8507g3lg5xa9bm4gvfbbg36xrzd7y7x8d") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.10 (c (n "nash-protocol") (v "0.1.10") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jx5xipk2iiy4mk16j4jv3s08bz93iw86fp0bwhbvqsjf6r3lc95") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.11 (c (n "nash-protocol") (v "0.1.11") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s1cv9j6k3w46mcka5k8vc273sw8n1ldva4kjix9jj0bpssbf6rd") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.12 (c (n "nash-protocol") (v "0.1.12") (d (list (d (n "Inflector") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.36, <0.2.0") (d #t) (k 0)) (d (n "base64") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.1.0, <0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r ">=0.3.0, <0.4.0") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.4, <0.4.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "graphql_client") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "nash-mpc") (r ">=1.1.0, <2.0.0") (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "ripemd160") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "1q839qj0gx4s89irdhgvsglkh9v7llg2yfmivhxhypwsd0vp004w") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.13 (c (n "nash-protocol") (v "0.1.13") (d (list (d (n "Inflector") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.36, <0.2.0") (d #t) (k 0)) (d (n "base64") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.1.0, <0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r ">=0.3.0, <0.4.0") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.4, <0.4.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "graphql_client") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "nash-mpc") (r ">=1.1.0, <2.0.0") (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "ripemd160") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "0qrxaslwvda1f57kbhgbmk12w6s5ivy6fvj1k1mq8lw1hcf6wdqc") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.14 (c (n "nash-protocol") (v "0.1.14") (d (list (d (n "Inflector") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.36, <0.2.0") (d #t) (k 0)) (d (n "base64") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.1.0, <0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r ">=0.3.0, <0.4.0") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.4, <0.4.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "graphql_client") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "nash-mpc") (r ">=1.1.0, <2.0.0") (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "ripemd160") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "1llxkx3slk9v70zmd2vi0vk39ry841amis7yc5979rlbb3ifxhw0") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.15 (c (n "nash-protocol") (v "0.1.15") (d (list (d (n "Inflector") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.36, <0.2.0") (d #t) (k 0)) (d (n "base64") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.1.0, <0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r ">=0.3.0, <0.4.0") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.4, <0.4.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "graphql_client") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "nash-mpc") (r ">=1.1.0, <2.0.0") (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "ripemd160") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "07i2b91shclww6302kh7xsq3wh7yk0j45pxgy0mpv514ap4lz5qc") (f (quote (("wasm" "nash-mpc/wasm") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("default" "rust_gmp"))))))

(define-public crate-nash-protocol-0.1.16 (c (n "nash-protocol") (v "0.1.16") (d (list (d (n "Inflector") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.36, <0.2.0") (d #t) (k 0)) (d (n "base64") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.1.0, <0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r ">=0.3.0, <0.4.0") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.4, <0.4.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "graphql_client") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "k256") (r ">=0.5.0, <0.6.0") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r ">=1.2.0, <2.0.0") (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "ripemd160") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "rust-bigint") (r ">=1.1.0, <2.0.0") (k 0)) (d (n "secp256k1") (r ">=0.19.0, <0.20.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "sha3") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "033swxg5lg646k7kgik12mmpkw4fm5hjlwfiki162369qbblqjsd") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.17 (c (n "nash-protocol") (v "0.1.17") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mx7lfj0915y05skrsppc6cbnv5w4spa2g6vjj4xd3ppqx9azh9s") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.18 (c (n "nash-protocol") (v "0.1.18") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1q6s1arxapxvy3j3j06kzbcpyn8gsqhclav831l6c1zc1c64dzzw") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.19 (c (n "nash-protocol") (v "0.1.19") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s9qvzg513wvxgbh1sap35yn29rj21y0x373pryd96sfz30xn88g") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.20 (c (n "nash-protocol") (v "0.1.20") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02mpfmwiza6n4fac6aspahzll8s7bngpmxcx9345was458rwfw6z") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.21 (c (n "nash-protocol") (v "0.1.21") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03dnnqi9dv0hdcz6dzkmimfrys8cxyj0xdy9mggh08mx2pmdwav2") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.22 (c (n "nash-protocol") (v "0.1.22") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1z4fihqmfabyr5829cd1b1z4ihpnkh43ii6cfzvz9rs5rcyz5946") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.24 (c (n "nash-protocol") (v "0.1.24") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1n37ci6ysbdn606360d67838rkl96jnnkkxmj4327kc7kya2gix9") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.25 (c (n "nash-protocol") (v "0.1.25") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0kk7zbl7jbfjr44s8sh75j6xa5p8nzj8c4s148c31r6sklgl89qz") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.26 (c (n "nash-protocol") (v "0.1.26") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "005rgkyppxh31dw6i1ffr9ql6gldp8bn88q5zqfpppn7rp6sd7kk") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.27 (c (n "nash-protocol") (v "0.1.27") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05acwyh8ids2x240yk3gk822z91fp8v19m96pq0plncv3icn3n7s") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.28 (c (n "nash-protocol") (v "0.1.28") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1hyb1xhc3697vhpw8is1r13bdrdz6cjxlzjw0icyjpwgbkxdpd4c") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.29 (c (n "nash-protocol") (v "0.1.29") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0vp0zsr4blb49jlzw8mjnxx3ii9b9jr9ahadmn6c2s8adqly2sz8") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.30 (c (n "nash-protocol") (v "0.1.30") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05arm5ks5gln4579iwybfp5wzndgmzv8q0w4jbl8803rx6lbfkzw") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.31 (c (n "nash-protocol") (v "0.1.31") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1y2k162lixgwarpd0njj624ya9s49yjalrqzr4qmwd4c3zm9i9vx") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.32 (c (n "nash-protocol") (v "0.1.32") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1sg29ggark3r6g1xc2zzjzy67sg84p7ssd98r97hvfcgnknj0mnz") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.33 (c (n "nash-protocol") (v "0.1.33") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openlimits-exchange") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.1") (k 0)) (d (n "rust_decimal") (r "^1.10.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0qs3yyvdch3b01qwxlfqz8nd3z96szq8wbpm1gcjb7pp6c4sk43r") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.1.34 (c (n "nash-protocol") (v "0.1.34") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openlimits-exchange") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.2") (k 0)) (d (n "rust_decimal") (r "^1.10.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0x18m7qxjydyl1ch1djjvqkqx7fcqv537fpwc7p7cn1q6c752gpn") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.2.0 (c (n "nash-protocol") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openlimits-exchange") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.2") (k 0)) (d (n "rust_decimal") (r "^1.10.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0pv15588ng1phsx82av27m4q0jcp98hxzpbxg1mk8xbgfh0v4qvs") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-nash-protocol-0.3.0 (c (n "nash-protocol") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0) (p "bigdecimal-rs")) (d (n "bs58") (r "^0.3") (f (quote ("check"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "nash-mpc") (r "^1.2.4") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openlimits-exchange") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rust-bigint") (r "^1.2") (k 0)) (d (n "rust_decimal") (r "^1.10.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1yj62173q8s60jlsg0x88sbqbfciwj4hh334g4sfiic4p56ip47m") (f (quote (("wasm" "nash-mpc/wasm") ("rustcrypto" "k256" "nash-mpc/k256") ("rust_gmp" "nash-mpc/rust_gmp") ("num_bigint" "nash-mpc/num_bigint") ("libsecp256k1" "nash-mpc/secp256k1" "secp256k1") ("default" "rust_gmp" "rustcrypto"))))))

