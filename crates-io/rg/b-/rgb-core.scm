(define-module (crates-io rg b- rgb-core) #:use-module (crates-io))

(define-public crate-rgb-core-0.3.0-beta.1 (c (n "rgb-core") (v "0.3.0-beta.1") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3.0-beta.1") (f (quote ("bulletproofs"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.0.0-rc.6") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0kz1sjchy733mz9qhp4qnfldkqlns0v95vlxpg1yk7ipwidkpbkp") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.3.0-beta.2 (c (n "rgb-core") (v "0.3.0-beta.2") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3") (f (quote ("bulletproofs"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "1w7rq2wbwmyciqbw2vyhxav7pb1lp5rl1hj56swhbb12bxc3f2fz") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.3.0-beta.3 (c (n "rgb-core") (v "0.3.0-beta.3") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3") (f (quote ("bulletproofs"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "131d854fkiixbjq0qnpvcq48nr3xgldmxsxx6mhwnmy1cmasm02s") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.3.0 (c (n "rgb-core") (v "0.3.0") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3") (f (quote ("bulletproofs"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0izggd32j0m6328jjjivkxdcr4zc3mzd69787acwycnrpaihifks") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.3.1 (c (n "rgb-core") (v "0.3.1") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.3.11") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3.2") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0yc9wz0lsyrzs0ci7wh1l30zgw8wq9p398r1paba56ji5sv5gg8b") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.4.0-alpha.1 (c (n "rgb-core") (v "0.4.0-alpha.1") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3.2") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0ddng4600irj2dbbgc5yj8abppdmir09mzhbd94yj4x4xns60xvc") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.4.0-alpha.1+1 (c (n "rgb-core") (v "0.4.0-alpha.1+1") (d (list (d (n "amplify") (r "^3") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.4.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "lnpbp") (r "^0.3.2") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~5.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1") (f (quote ("crypto"))) (d #t) (k 0)))) (h "1i89s5d2v63wlbaszknm4czy3xwpy8j6cqb269yd84b6scwm88b6") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("all" "serde"))))))

(define-public crate-rgb-core-0.4.0 (c (n "rgb-core") (v "0.4.0") (d (list (d (n "amplify") (r "^3.2") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-beta.1") (d #t) (k 0)) (d (n "lnpbp") (r "^0.4") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "^5") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.1.0") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0fblp70xbjcsalqxz9g71yp3r2q5k6ghknlk2rf821yy77gx56zx") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.4.1 (c (n "rgb-core") (v "0.4.1") (d (list (d (n "amplify") (r "^3.2") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-beta.1") (d #t) (k 0)) (d (n "lnpbp") (r "^0.4") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "^5") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.1.0") (f (quote ("crypto"))) (d #t) (k 0)))) (h "1gd3lqybm2pl307afbd6fpzz12rlnk3x1arahz5p2qbaym5l5a6z") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.4.2 (c (n "rgb-core") (v "0.4.2") (d (list (d (n "amplify") (r "^3.2") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-beta.1") (d #t) (k 0)) (d (n "lnpbp") (r "^0.4") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "^5") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.1.0") (f (quote ("crypto"))) (d #t) (k 0)))) (h "1lh3fmzaxafarlsiy1shc5r9alc9vdqjm6wf9xwrl9wrpnk31gsa") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.4.3 (c (n "rgb-core") (v "0.4.3") (d (list (d (n "amplify") (r "^3.2") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.10") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-beta.1") (d #t) (k 0)) (d (n "lnpbp") (r "^0.4") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "^5") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.1.0") (f (quote ("crypto"))) (d #t) (k 0)))) (h "0pfvnx48srs1pn191b0wa2zl4d9m3871g2i3q3n4czm2p1wfxz2i") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.4.4 (c (n "rgb-core") (v "0.4.4") (d (list (d (n "amplify") (r "^3.2") (f (quote ("stringly_conversions"))) (d #t) (k 0)) (d (n "amplify_derive") (r "~2.5.3") (d #t) (k 0)) (d (n "bech32") (r "~0.7.2") (d #t) (k 0)) (d (n "bitcoin") (r "~0.26.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.9.4") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "^0.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lightning_encoding") (r "^0.4.0-beta.1") (d #t) (k 0)) (d (n "lnpbp") (r "^0.4") (f (quote ("bulletproofs" "zip"))) (d #t) (k 0)) (d (n "miniscript") (r "^5") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "regex") (r "~1.4.3") (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.60") (d #t) (k 2)) (d (n "serde_with") (r "~1.5.1") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_with_macros") (r "~1.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.2.3") (f (quote ("crypto"))) (d #t) (k 0)) (d (n "strict_encoding_derive") (r "=1.0.0") (d #t) (k 0)))) (h "09zl303bzcsr7wwmk3rqwfkcar6sbyacjzmhqnjd1fclkqk957lf") (f (quote (("serde" "serde_crate" "serde_with" "serde_with_macros" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.5.0-alpha.1 (c (n "rgb-core") (v "0.5.0-alpha.1") (d (list (d (n "aluvm") (r "~0.4.0") (d #t) (k 0)) (d (n "amplify") (r "~3.9.0") (d #t) (k 0)) (d (n "bech32") (r "~0.8.1") (d #t) (k 0)) (d (n "bitcoin") (r "~0.27.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.5.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "client_side_validation") (r "~0.5.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.5.11") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.5.0-alpha.3") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.5.0-beta.3") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~6.0.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.7.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "0j5l8gbdg90q0pzvky9p3p8r55vgz6via8xzbnm8y30vfwmcf8py") (f (quote (("serde" "serde_crate" "serde_with" "client_side_validation/serde" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.5.0 (c (n "rgb-core") (v "0.5.0") (d (list (d (n "aluvm") (r "~0.4.0") (d #t) (k 0)) (d (n "amplify") (r "~3.9.1") (d #t) (k 0)) (d (n "bech32") (r "~0.8.1") (d #t) (k 0)) (d (n "bitcoin") (r "~0.27.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.5.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.5") (o #t) (d #t) (k 0)) (d (n "client_side_validation") (r "~0.5.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.5.11") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.5.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.5.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~6.0.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.7.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1wfd68rrc4jmkvbsqfnfvhb6lyyzq36dmc8i9ndfikllch03y8ys") (f (quote (("serde" "serde_crate" "serde_with" "client_side_validation/serde" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.5.1 (c (n "rgb-core") (v "0.5.1") (d (list (d (n "aluvm") (r "~0.4.0") (d #t) (k 0)) (d (n "amplify") (r "~3.10.0") (d #t) (k 0)) (d (n "bech32") (r "~0.8.1") (d #t) (k 0)) (d (n "bitcoin") (r "~0.27.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.5.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "client_side_validation") (r "~0.5.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.5.11") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.5.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.5.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~6.0.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.7.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1rcvn1fklj7hc923p6bby4fhzqmjqvfs8pxb1822dg0bl6jj22m1") (f (quote (("serde" "serde_crate" "serde_with" "client_side_validation/serde" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.5.2 (c (n "rgb-core") (v "0.5.2") (d (list (d (n "aluvm") (r "~0.4.0") (d #t) (k 0)) (d (n "amplify") (r "~3.9.1") (d #t) (k 0)) (d (n "bech32") (r "~0.8.1") (d #t) (k 0)) (d (n "bitcoin") (r "~0.27.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.5.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "client_side_validation") (r "~0.5.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.5.11") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.5.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.5.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~6.1.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.7.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "144dbbx3snyyjcbspqdimmwk7h47zm2hp55ik31iacc7314v3qc6") (f (quote (("serde" "serde_crate" "serde_with" "client_side_validation/serde" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.5.3 (c (n "rgb-core") (v "0.5.3") (d (list (d (n "aluvm") (r "~0.5.0") (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (d #t) (k 0)) (d (n "bech32") (r "~0.8.1") (d #t) (k 0)) (d (n "bitcoin") (r "~0.27.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.5.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "client_side_validation") (r "~0.5.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.5.11") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.5.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.5.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~6.1.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.7.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1bgf37qgfnr7fk696cllrwppq2w035dk2gjdf42phmhs0j9zb3qm") (f (quote (("serde" "serde_crate" "serde_with" "client_side_validation/serde" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum") ("all" "serde" "cli"))))))

(define-public crate-rgb-core-0.7.0-alpha.1 (c (n "rgb-core") (v "0.7.0-alpha.1") (d (list (d (n "aluvm") (r "~0.5.0") (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0-beta.3") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0-beta.1") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.1") (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "miniscript") (r "~7.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "num-derive") (r "~0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "~0.2.11") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "0alj200hr2i72kl4405m0y3j6na4q86xjhd4q2sqv4jmiy1i7ib4") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "commit_verify/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde" "miniscript/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0-alpha.2 (c (n "rgb-core") (v "0.7.0-alpha.2") (d (list (d (n "aluvm") (r "~0.5.0") (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0-rc.4") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.3") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1br26kp7wj9s6dnm4fymvwx2h6y1c3kwdxmac7n1ixrwqzjshh8p") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0-alpha.3 (c (n "rgb-core") (v "0.7.0-alpha.3") (d (list (d (n "aluvm") (r "~0.5.0") (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0-rc.4") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.3") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1nf38zhwdrh5lg8h2fayw2xkkbvr6990yjawmnwbnrrxli9fzl3d") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde" "bitcoin_hashes/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0-alpha.4 (c (n "rgb-core") (v "0.7.0-alpha.4") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0-rc.4") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stens") (r "^0.3.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0g5h1l9wvgpdgvc8gqk52gqn3k61hdmggpj89nzh1mdl5vzbl93z") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde" "bitcoin_hashes/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0-beta.1 (c (n "rgb-core") (v "0.7.0-beta.1") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "~0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stens") (r "^0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "12rlcc834baw806n88b7yfzfkl1n67kqph9z2pradjnsjnfn2n5v") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde" "bitcoin_hashes/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0-rc.1 (c (n "rgb-core") (v "0.7.0-rc.1") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stens") (r "^0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0npl26l1gdbiadv8j0vcnslsks6acpmycanm8fllas89ayypw7ik") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.7.0 (c (n "rgb-core") (v "0.7.0") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stens") (r "^0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "1m585kgv36rkkcrqf1wdhcq7jh6bwmq8xh38mynq8p90ahsia29r") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.8.0-alpha.1 (c (n "rgb-core") (v "0.8.0-alpha.1") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0hikhz8qa0382pzknww9vwsh06pnj2vqcssy9lvaiciadavj6g20") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-core-0.7.1 (c (n "rgb-core") (v "0.7.1") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.19") (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "deflate") (r "~0.8.6") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "inflate") (r "~0.4.5") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stens") (r "^0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0sxxgmh6hqadsy8vlgs67q2v65f0idx5qfz57jq6vfmyji44zc1x") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet"))))))

(define-public crate-rgb-core-0.8.0-beta.1 (c (n "rgb-core") (v "0.8.0-beta.1") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.3.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0anzjrmkn7prvmg8xzw1i3pxbgczscdfbhxb2izsgpjsd184q0il") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-beta.2 (c (n "rgb-core") (v "0.8.0-beta.2") (d (list (d (n "aluvm") (r "~0.6.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.7.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.7.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.7.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.4.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)))) (h "0yd8ywr8h0ybq8c16va85pjd9jp36fxscn453isng9rybjszgpjb") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.1 (c (n "rgb-core") (v "0.8.0-rc.1") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.1") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.5.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "1mv0byibnq7nxzbcw4rvh4miyklrk4v3id5h41s1xvn6wa16bhch") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.2 (c (n "rgb-core") (v "0.8.0-rc.2") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.1") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.5.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "0xzbqh27f8yl6ccj82fjix1cchgvbca5962f91fz2xsvahk4v98v") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.3 (c (n "rgb-core") (v "0.8.0-rc.3") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.1") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.5.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "1w4gdzmdd6a6i38nlzapqdw1ppwgvdp8g2m6sh05zqvvfkrvykqw") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.4 (c (n "rgb-core") (v "0.8.0-rc.4") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.1") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.5.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "1r8inl331cgw6sgqv4q3d8i8dzsn4ipdw3npc066j9iinqb2vpys") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.5 (c (n "rgb-core") (v "0.8.0-rc.5") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.12.1") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.7.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "0xzs9x8dqj5kc1ldnh2fvgm9lzj9wg17ah00kp7q63q9s75spzg9") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0-rc.6 (c (n "rgb-core") (v "0.8.0-rc.6") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.7.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "0vy9w7pxlhlss7mal6svcsfaj7zwqm8xms2gxqb88qydlgjip3q8") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.0 (c (n "rgb-core") (v "0.8.0") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.7.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "1gn0ryv0bxi3hw0ncz0rxchpiwq2yhmdjj4i2pvar1ac9amfz83i") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.1 (c (n "rgb-core") (v "0.8.1") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.7.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "0xfb5wb8vl59gwvwddig5fysj8h0xl5wz2w966nfic8qddh0p0i3") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.8.2 (c (n "rgb-core") (v "0.8.2") (d (list (d (n "aluvm") (r "~0.7.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.28.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.8.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.2") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.3") (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "=0.7.11") (d #t) (k 0)) (d (n "half") (r "~1.8.2") (d #t) (k 0)) (d (n "lnpbp") (r "~0.8.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.7.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.2") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.8.0") (d #t) (k 2)))) (h "00wbcd0pp4kyyr9pmhb03ssm583dz3b9709635b5dki4b6zfzn4c") (f (quote (("serde" "serde_crate" "serde_with" "half/serialize" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "bitcoin/use-serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.9.0-rc.1 (c (n "rgb-core") (v "0.9.0-rc.1") (d (list (d (n "aluvm") (r "~0.9.0-rc.1") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.29.2") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.9.0-rc.1") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "half") (r "~2.1.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.9.0-rc.1") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "secp256k1zkp") (r "^0.9.0-rc.1") (f (quote ("keygen"))) (d #t) (k 0) (p "lnpbp_secp256k1zkp")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.9.0-rc.1") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.9.0-rc.1") (d #t) (k 2)))) (h "1yzd0z7sfj1zqqkxfay7kjnz4qfx8z6h0wxs9yp1n3c40w86vqx0") (f (quote (("serde" "serde_crate" "serde_with" "half/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "secp256k1zkp/serde" "bitcoin/serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.9.0-rc.2 (c (n "rgb-core") (v "0.9.0-rc.2") (d (list (d (n "aluvm") (r "~0.9.0-rc.2") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.29.2") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.9.0-rc.1") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "half") (r "~2.1.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.9.0-rc.1") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "secp256k1zkp") (r "^0.9.0-rc.1") (f (quote ("keygen"))) (d #t) (k 0) (p "lnpbp_secp256k1zkp")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.9.0-rc.1") (d #t) (k 2)))) (h "1k4gl2nvsnhy153dmr0wixixkf08fkf892703wm7rn3xbllzds70") (f (quote (("serde" "serde_crate" "serde_with" "half/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "secp256k1zkp/serde" "bitcoin/serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.9.0 (c (n "rgb-core") (v "0.9.0") (d (list (d (n "aluvm") (r "~0.9.0") (f (quote ("std" "strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~3.13.0") (f (quote ("apfloat"))) (d #t) (k 0)) (d (n "bitcoin") (r "~0.29.2") (f (quote ("rand"))) (d #t) (k 0)) (d (n "bp-core") (r "~0.9.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.9.0") (f (quote ("rand" "bulletproofs"))) (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.9.0") (d #t) (k 0)) (d (n "half") (r "~2.1.0") (d #t) (k 0)) (d (n "lnpbp") (r "~0.9.0") (f (quote ("zip"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "secp256k1zkp") (r "^0.9.0") (f (quote ("keygen"))) (d #t) (k 0) (p "lnpbp_secp256k1zkp")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "stens") (r "~0.9.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~0.9.0") (f (quote ("crypto" "chrono" "bitcoin" "float"))) (d #t) (k 0)) (d (n "strict_encoding_test") (r "^0.9.0") (d #t) (k 2)))) (h "0lal09g6zwng5wbd9yg8c36648srb5qm5hfjc0a50pkajdflqsfa") (f (quote (("serde" "serde_crate" "serde_with" "half/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "lnpbp/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "stens/serde" "aluvm/serde" "secp256k1zkp/serde" "bitcoin/serde") ("default") ("all" "serde")))) (r "1.59.0")))

(define-public crate-rgb-core-0.10.0-beta.1 (c (n "rgb-core") (v "0.10.0-beta.1") (d (list (d (n "aluvm") (r "^0.10.0-alpha.1") (f (quote ("strict_encoding"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.15") (d #t) (k 0)) (d (n "baid58") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0-beta.2") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-rc.1") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.3") (d #t) (k 0)))) (h "0pdgacp2bkiaszhdr2qv84qg4ciyzxi71pbhcgjw2zflmyhfk87l") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.0-beta.2 (c (n "rgb-core") (v "0.10.0-beta.2") (d (list (d (n "aluvm") (r "^0.10.0-beta.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.19") (d #t) (k 0)) (d (n "baid58") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0-beta.3") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0-rc.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "^0.10.0-rc.1") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0797y0vb58djibnr664z1bp2i1ghm7q5hv4lrqkzpdxm8gblqzfc") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.0-beta.3 (c (n "rgb-core") (v "0.10.0-beta.3") (d (list (d (n "aluvm") (r "^0.10.0-beta.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.20") (d #t) (k 0)) (d (n "baid58") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0-rc.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0-rc.2") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "^0.10.0-rc.1") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0fsll43din3423im562bx5vbs7n98v8r7vr8v8c3z1cfdnga50gj") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.0-rc.1 (c (n "rgb-core") (v "0.10.0-rc.1") (d (list (d (n "aluvm") (r "~0.10.0-rc.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.20") (d #t) (k 0)) (d (n "baid58") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0-rc.2") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0-rc.3") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0-rc.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.0.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.0.0-rc.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0gcqvw08xmfwcb1pq6wfllmcd08fw2j7anxdwm465c8gwk8j4nwj") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.0-rc.2 (c (n "rgb-core") (v "0.10.0-rc.2") (d (list (d (n "aluvm") (r "~0.10.0-rc.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.20") (d #t) (k 0)) (d (n "baid58") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0-rc.2") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0-rc.3") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0-rc.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.0.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.0.0-rc.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1hcgshh8r1xx1p7xdffalz3k7kpwa94ra45qcqd96w4mrp73jbwj") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.0 (c (n "rgb-core") (v "0.10.0") (d (list (d (n "aluvm") (r "~0.10.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0-beta.22") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.0") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.0.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.0.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04qv0yf5wj9zcdd3z9q02ynjfv1xawndg2s8igb62is3wrd7y15f") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.1 (c (n "rgb-core") (v "0.10.1") (d (list (d (n "aluvm") (r "~0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "~0.7.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "093pv2xl2m2rbd6flzy2wdkrlvrxzwm27s68qjr2z8q673m4ba3g") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.2 (c (n "rgb-core") (v "0.10.2") (d (list (d (n "aluvm") (r "~0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.2") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.1") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.1.2") (d #t) (k 0)) (d (n "strict_types") (r "~1.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1n3qy0s4092fzdahqnvhr1xmwax47yv0c1xs5fcpzcqd95dc7cf8") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.3 (c (n "rgb-core") (v "0.10.3") (d (list (d (n "aluvm") (r "~0.10.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.3") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.2") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.2.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0iw6z7nvdq6xsh8n3m82wm40x8daw0s7pksjdyrwjapas8sm69ig") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "stl" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.4 (c (n "rgb-core") (v "0.10.4") (d (list (d (n "aluvm") (r "~0.10.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.4") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.3") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.3.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.3.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0bf173r7cicgfsmz8smqsg0ljmy4jw0qq634gra0vyxkak331yaz") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "stl" "serde")))) (r "1.66.0")))

(define-public crate-rgb-core-0.10.5 (c (n "rgb-core") (v "0.10.5") (d (list (d (n "aluvm") (r "~0.10.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.3.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.5") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.4") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0x7xps36jdqy77l27m0vp0rhvrxix5g5xk0dz30qlzj37pmz7rif") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.10.6 (c (n "rgb-core") (v "0.10.6") (d (list (d (n "aluvm") (r "~0.10.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.4.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.6") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.5") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11v0wcrv7cb0xaklbfv19fyhfvcgf27jnwkzb9mla13p2vj6yf4p") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.10.7 (c (n "rgb-core") (v "0.10.7") (d (list (d (n "aluvm") (r "~0.10.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.0.0") (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.7") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.5") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.16") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.8.0") (f (quote ("use-rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.0") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0hr9jajfscgp4sf59sch4hhb6w3zcbkm83aw36llymb5yq0aw222") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/use-serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.10.8 (c (n "rgb-core") (v "0.10.8") (d (list (d (n "aluvm") (r "~0.10.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.5.0") (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.10.11") (d #t) (k 0)) (d (n "commit_verify") (r "~0.10.6") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.9.2") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.10.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0in2i6wd390697fb7lbvic1clsas6v7hgvja4ajjn6jxxrjf3b3l") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.11.0-beta.1 (c (n "rgb-core") (v "0.11.0-beta.1") (d (list (d (n "aluvm") (r "~0.11.0-alpha.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.5.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.1") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.9.2") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0b3qkzhf9lb9q2qzjxlxpd0hmjsmhs72pz5prqhqib0dsp18nm0y") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.11.0-beta.2 (c (n "rgb-core") (v "0.11.0-beta.2") (d (list (d (n "aluvm") (r "~0.11.0-beta.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.5.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.1") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.1") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.9.2") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.1") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1syqh7xggi682qwzqmhsrqis7l1ymajv5jf3idcl3bci854g2wl5") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.11.0-beta.3 (c (n "rgb-core") (v "0.11.0-beta.3") (d (list (d (n "aluvm") (r "~0.11.0-beta.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.5.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.2") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.2") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.9.2") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.2") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0fzgjb0x5lmxzapi74m23wz4yx69mndml2m41rkpr68nsskbimmv") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.11.0-beta.4 (c (n "rgb-core") (v "0.11.0-beta.4") (d (list (d (n "aluvm") (r "~0.11.0-beta.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "amplify") (r "~4.5.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.3") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.3") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.9.2") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.3") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.6.2") (d #t) (k 0)) (d (n "strict_types") (r "~1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0dk0kvhaf8xqqkvkizm42gs5mm6z10ims8m91900kd9kpkwq21gb") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.67.0")))

(define-public crate-rgb-core-0.11.0-beta.5 (c (n "rgb-core") (v "0.11.0-beta.5") (d (list (d (n "aluvm") (r "~0.11.0-beta.5") (f (quote ("std" "ascii-armor"))) (d #t) (k 0)) (d (n "amplify") (r "~4.6.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "ascii-armor") (r "^0.2.0") (d #t) (k 0)) (d (n "baid58") (r "~0.4.4") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.5") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.10.1") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.5") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.7.0-beta.1") (d #t) (k 0)) (d (n "strict_types") (r "~2.7.0-beta.2") (f (quote ("armor"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1a66jlm2i538c6ic87z1gj12kgs3qz7q7ax13pszw8lv3p8cayrp") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.70.0")))

(define-public crate-rgb-core-0.11.0-beta.6 (c (n "rgb-core") (v "0.11.0-beta.6") (d (list (d (n "aluvm") (r "~0.11.0-beta.6") (f (quote ("std" "ascii-armor"))) (d #t) (k 0)) (d (n "amplify") (r "~4.6.0") (f (quote ("rand"))) (d #t) (k 0)) (d (n "baid64") (r "~0.2.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.11.0-beta.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "commit_verify") (r "~0.11.0-beta.6") (f (quote ("rand" "derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime") (r "~0.3.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1-zkp") (r "^0.10.1") (f (quote ("rand" "rand-std" "global-context"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "single_use_seals") (r "~0.11.0-beta.6") (d #t) (k 0)) (d (n "strict_encoding") (r "~2.7.0-beta.4") (d #t) (k 0)) (d (n "strict_types") (r "~2.7.0-beta.4") (f (quote ("armor"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1m21vfv2xdsmd8f83nxk4n24iqj2jhaaajhafgpi25xry9s2r1fx") (f (quote (("stl" "commit_verify/stl" "bp-core/stl" "aluvm/stl") ("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "aluvm/serde" "secp256k1-zkp/serde") ("default") ("all" "stl" "serde")))) (r "1.75.0")))

