(define-module (crates-io rg b- rgb-std) #:use-module (crates-io))

(define-public crate-rgb-std-0.8.0-alpha.1 (c (n "rgb-std") (v "0.8.0-alpha.1") (d (list (d (n "amplify") (r "^3.12.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "^0.7.0") (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "^0.7.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "^0.7.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0-alpha.1") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "19rkxphl27wjlanlghwnj4605ncqgkmijapxsd7gwlf0qslkznj0") (f (quote (("wallet" "rgb_core/wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.0-beta.1 (c (n "rgb-std") (v "0.8.0-beta.1") (d (list (d (n "amplify") (r "^3.12.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "^0.7.0") (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "^0.7.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "^0.7.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0-alpha.1") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "13mv9nk458mr2rsvs1lsl42mfdl0c87dm487vc1m0qhajjz4v1h4") (f (quote (("wallet" "rgb_core/wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "amplify/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.0-beta.2 (c (n "rgb-std") (v "0.8.0-beta.2") (d (list (d (n "amplify") (r "^3.12.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "^0.7.0") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "^0.7.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.7.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "^0.7.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0-beta.2") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~1.8.8") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1c2hnz4pglav5mf7rswzfnwpqj1fzadbxjlyqc3bbkplajf087k9") (f (quote (("wallet" "rgb_core/wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.0-rc.1 (c (n "rgb-std") (v "0.8.0-rc.1") (d (list (d (n "amplify") (r "^3.12.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-beta.1") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.8.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0-rc.1") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "0mxvwj91swslynpw2vvp9a38w1dhmcgadyp951l9jzi0ap9d0f4z") (f (quote (("wallet" "rgb_core/wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.0-rc.2 (c (n "rgb-std") (v "0.8.0-rc.2") (d (list (d (n "amplify") (r "^3.12.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0-rc.1") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.8.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0-rc.2") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "0is0sgaylwhdxfazw2y68z9585x5znb9fmd3xb89fc79dr5q6aak") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.0 (c (n "rgb-std") (v "0.8.0") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.8.0") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.8.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.0") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "05v2h2ga70563jiszcvm13r4aqp6yv00m3fvnrhbhb99kag4ggmd") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.1 (c (n "rgb-std") (v "0.8.1") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.8.1") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.8.0") (d #t) (k 0)) (d (n "rgb_core") (r "^0.8.1") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.8") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "15l9rj9qdjsjv0xjc94iymvqm355x3kyqx09i3rac5hc6y72ivy9") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb_core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.8.2 (c (n "rgb-std") (v "0.8.2") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bp-core") (r "~0.8.1") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.2.23") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.8.2") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.8.3") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.8.0") (d #t) (k 0)) (d (n "rgb-core") (r "^0.8.1") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.8.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "0sy9ih7mr4br32jf6240zr8ynqjzbgzw2hjbsf4ypi8y5c3s5pf6") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb-core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/use-serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.9.0-rc.1 (c (n "rgb-std") (v "0.9.0-rc.1") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "bp-core") (r "~0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.2.23") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.9.0-rc.1") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.9.0-rc.1") (d #t) (k 0)) (d (n "rgb-core") (r "^0.9.0-rc.2") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1nvgkzalg78cmvg39d7fhmi9njaaq3yyr2irraaagbdi3x9alqq9") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb-core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.9.0 (c (n "rgb-std") (v "0.9.0") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0") (d #t) (k 0)) (d (n "bp-core") (r "~0.9.0") (f (quote ("wallet"))) (d #t) (k 0)) (d (n "clap") (r "~3.2.23") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "commit_verify") (r "~0.9.0") (d #t) (k 0)) (d (n "descriptor-wallet") (r "~0.9.0") (f (quote ("descriptors"))) (d #t) (k 0)) (d (n "electrum-client") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "lnpbp_bech32") (r "~0.9.0") (d #t) (k 0)) (d (n "rgb-core") (r "^0.9.0") (d #t) (k 0) (p "rgb-core")) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^1.14") (f (quote ("hex"))) (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "~0.9.0") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (k 0)))) (h "1y1q5480f2gwz6zjs0b9g31aq03fhlzazf788ahb389ifvxcc1mh") (f (quote (("wallet" "bp-core/wallet") ("serde" "serde_crate" "serde_with" "lnpbp_bech32/serde" "amplify/serde" "commit_verify/serde" "strict_encoding/serde" "rgb-core/serde" "descriptor-wallet/serde" "bp-core/serde" "bitcoin/serde") ("default" "serde" "cli") ("cli" "clap" "serde_yaml" "serde_json" "descriptor-wallet/electrum" "electrum-client") ("all" "serde" "cli" "wallet")))) (r "1.59.0")))

(define-public crate-rgb-std-0.10.0-alpha.1 (c (n "rgb-std") (v "0.10.0-alpha.1") (d (list (d (n "amplify") (r "^4.0.0-beta.19") (d #t) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.0-beta.3") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.0-rc.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.0-beta.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0j84s9njpx2bdmp0mkqdxnygh0cglblpjiqc7d786p9a6x6y2410") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.0-beta.1 (c (n "rgb-std") (v "0.10.0-beta.1") (d (list (d (n "amplify") (r "^4.0.0-beta.20") (d #t) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.0-rc.1") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.0-rc.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.0-beta.3") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lh6hjg64z96cdhrff1h6bn4ych48qzm62gjbkqmakiw0gknmz9k") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.0-rc.1 (c (n "rgb-std") (v "0.10.0-rc.1") (d (list (d (n "amplify") (r "^4.0.0-beta.20") (d #t) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.0-rc.2") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.0-rc.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.0-rc.1") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "13a7rb7ph816dpywwmr61r9nmcrh0vmbvqq9mbl9wd4px1h51hfm") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.0-rc.2 (c (n "rgb-std") (v "0.10.0-rc.2") (d (list (d (n "amplify") (r "^4.0.0-beta.22") (d #t) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.0") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "14v6s0b2i2h0f70ricmp4cc3h5j0ivaw023awrddqyf4vgh76n6d") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.0 (c (n "rgb-std") (v "0.10.0") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.0") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.0.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0wj8ar8w1ij54jpc8xwsrgsfxnk8c43x05m0ngdi1vy542nfd7vq") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.1 (c (n "rgb-std") (v "0.10.1") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.2") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "strict_types") (r "^1.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "06dcz1war5kk8a2l2s77mzmda7py06y9sfh3yck4nk5v74rxdivq") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.2 (c (n "rgb-std") (v "0.10.2") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.3") (f (quote ("stl"))) (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.2") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.3") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.2.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1as8mdqddpmc5p69rwxd7v0isp82z9p6gdr6sbqhaz5c08460ay4") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.66")))

(define-public crate-rgb-std-0.10.3 (c (n "rgb-std") (v "0.10.3") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.4") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04r410y1dzjyp80cycz9vjj9b8cyb1qzj38r3wfck69xl0sqiivd") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.10.4 (c (n "rgb-std") (v "0.10.4") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.6") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.6") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1x2sj2z098mxip4r24aqrclvaq8g85zbncx0h8fbpczpqsqnkhq2") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.10.5 (c (n "rgb-std") (v "0.10.5") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "^1.1.1") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.8") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.7") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04brln616z4hvplz4jyba6w4kan3dmfsp2a03w7ccvq88jywc8yp") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.10.6 (c (n "rgb-std") (v "0.10.6") (d (list (d (n "amplify") (r "^4.0.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "^1.2.1") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.8") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.7") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1xx6p6wypbh62j8w771j9c5qq365vmvc0z5k7q712v85br6k62vb") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (y #t) (r "1.67")))

(define-public crate-rgb-std-0.10.7 (c (n "rgb-std") (v "0.10.7") (d (list (d (n "amplify") (r "^4.0.1") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.8") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.7") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "16jq2gnsagvas64nhav9l4rib0mriy3z9pm7jwlhwfw5l7sqpjcm") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.10.8 (c (n "rgb-std") (v "0.10.8") (d (list (d (n "amplify") (r "^4.0.1") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.8") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.7") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0dks7658c57phmqwshaa6ylcqv42ld8xvdv3zffi2lipn006d2pa") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.10.9 (c (n "rgb-std") (v "0.10.9") (d (list (d (n "amplify") (r "^4.5.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.10.11") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "commit_verify") (r "^0.10.6") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.10.8") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1xn03ybjqjjj03z5g2fli06cdaarcpaqaky4rk93jh3sxpg5p71k") (f (quote (("serde" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.11.0-beta.1 (c (n "rgb-std") (v "0.11.0-beta.1") (d (list (d (n "amplify") (r "^4.5.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.11.0-beta.1") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "^0.11.0-beta.1") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.11.0-beta.1") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1wc701vwbm8m6w2h7n6nzjh6balpxgw3izs7sxd48jkwi02mrkil") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.11.0-beta.2 (c (n "rgb-std") (v "0.11.0-beta.2") (d (list (d (n "amplify") (r "^4.5.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.11.0-beta.1") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "^0.11.0-beta.1") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.11.0-beta.2") (f (quote ("stl"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lhkcmfvb9kbr961p9irhfr5rl1vlfv2abpvgl09amlajiylc8p3") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.11.0-beta.3 (c (n "rgb-std") (v "0.11.0-beta.3") (d (list (d (n "amplify") (r "^4.5.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.11.0-beta.2") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "^0.11.0-beta.2") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rgb-core") (r "^0.11.0-beta.3") (f (quote ("stl"))) (d #t) (k 0)) (d (n "rgb-invoice") (r "^0.11.0-beta.3") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.6.1") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "07ypil4ca8hxkfy1lc9ya1azwhng3yczvvz2asvknnaqx9z9v2hk") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde" "rgb-invoice/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.11.0-beta.4 (c (n "rgb-std") (v "0.11.0-beta.4") (d (list (d (n "amplify") (r "^4.5.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.11.0-beta.3") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "^0.11.0-beta.3") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rgb-core") (r "^0.11.0-beta.4") (f (quote ("stl"))) (d #t) (k 0)) (d (n "rgb-invoice") (r "^0.11.0-beta.4") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.6.2") (d #t) (k 0)) (d (n "strict_types") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0m0ascb0i110miplqcxbjkgznr3q3lrqp9j61z1d2hp9y8j4zhiv") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde" "rgb-invoice/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.67")))

(define-public crate-rgb-std-0.11.0-beta.5 (c (n "rgb-std") (v "0.11.0-beta.5") (d (list (d (n "amplify") (r "^4.6.0") (d #t) (k 0)) (d (n "ascii-armor") (r "^0.2.0") (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "base85") (r "=2.0.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.11.0-beta.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "commit_verify") (r "^0.11.0-beta.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rgb-core") (r "^0.11.0-beta.5") (f (quote ("stl"))) (d #t) (k 0)) (d (n "rgb-invoice") (r "^0.11.0-beta.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.7.0-beta.1") (d #t) (k 0)) (d (n "strict_types") (r "^2.7.0-beta.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lilakm8lqgk7759dj66dq46b859scafgfw28xgmq81zy37n2bm5") (f (quote (("serde" "serde_crate" "amplify/serde" "strict_encoding/serde" "strict_types/serde" "commit_verify/serde" "bp-core/serde" "rgb-core/serde" "rgb-invoice/serde") ("fs") ("default") ("all" "fs" "serde")))) (r "1.69.0")))

