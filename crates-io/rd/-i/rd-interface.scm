(define-module (crates-io rd #{-i}# rd-interface) #:use-module (crates-io))

(define-public crate-rd-interface-0.1.0 (c (n "rd-interface") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.12") (f (quote ("channel"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0v3qa0x0df1jqlh395g6zdvbqb9ykfiha9rcxidyjvwnvfazsb5k")))

(define-public crate-rd-interface-0.2.0 (c (n "rd-interface") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.12") (f (quote ("channel"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0q1anp2lgiw01asqgyrhc0y2n9fs5c30j1xmhin8jm1wy63fqk1j")))

(define-public crate-rd-interface-0.3.0 (c (n "rd-interface") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.12") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.12") (f (quote ("channel" "io"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0m2jra42ig3155m94y6i224l2mnl99nza8lcw3ipa393bfhfamnc")))

(define-public crate-rd-interface-0.4.0 (c (n "rd-interface") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.14") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.12") (f (quote ("channel" "io"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("io-util"))) (d #t) (k 0)))) (h "1q31lnvv2ls351p1nh8xrzi19jkd61ri5yr8wmskv7ck5nllljsz")))

