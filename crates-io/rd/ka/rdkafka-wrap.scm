(define-module (crates-io rd ka rdkafka-wrap) #:use-module (crates-io))

(define-public crate-rdkafka-wrap-0.1.0 (c (n "rdkafka-wrap") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "1cad39p872xcl6h93d5ngpnzh373dw2k00l5fbga2w1skbvmnzcs")))

(define-public crate-rdkafka-wrap-0.1.1 (c (n "rdkafka-wrap") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "18v0szymdcry7snyaxbrf08z5rmygnqxiqxjz2y43fjysynh2rhc")))

(define-public crate-rdkafka-wrap-0.1.2 (c (n "rdkafka-wrap") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "10dwlzxzd8ri5h444nic3z7fjh3b032vm8zkg8vdmyqkj0b3m9f2")))

(define-public crate-rdkafka-wrap-0.1.3 (c (n "rdkafka-wrap") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "0y6f027v27ah7jq99zjvq4d41v5cp6vl1vglwxkfv9v3cg5zh59s")))

(define-public crate-rdkafka-wrap-0.1.4 (c (n "rdkafka-wrap") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "1bjnh36r9z6xgwpn7mwxfss3rziipkxg71si98wm2jf5n92g9mzw")))

(define-public crate-rdkafka-wrap-0.1.5 (c (n "rdkafka-wrap") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "0ibqr1fbczfgi075y6r8lssf6ab661h9lkxzis0pjcln83pm5cip")))

(define-public crate-rdkafka-wrap-0.1.6 (c (n "rdkafka-wrap") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "14ag3fc7vlj56p83wnk7gfk531mgj84akyzvvp046lil7p9qqm1a")))

(define-public crate-rdkafka-wrap-0.1.7 (c (n "rdkafka-wrap") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "14s1iqvaynscd0hb57bkrwxyfxcvgwsknyrq13sqy6wf3wi12cr8")))

(define-public crate-rdkafka-wrap-0.1.8 (c (n "rdkafka-wrap") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "0imx4v494jmf0p9n08q3qnbsga6c6sgh4q20905z384kaxs90z85")))

(define-public crate-rdkafka-wrap-0.1.9 (c (n "rdkafka-wrap") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "0rdfl71m796d3k8sccnbsfn96svfw8qqk3wvipg9lgld18c20kqq") (f (quote (("zstd-pkg-config" "rdkafka/zstd-pkg-config") ("zstd" "rdkafka/zstd") ("ssl-vendored" "rdkafka/ssl-vendored") ("ssl" "rdkafka/ssl") ("sasl" "rdkafka/sasl") ("naive-runtime" "rdkafka/naive-runtime") ("libz-static" "rdkafka/libz-static") ("libz" "rdkafka/libz") ("gssapi-vendored" "rdkafka/gssapi-vendored") ("gssapi" "rdkafka/gssapi") ("external_lz4" "rdkafka/external_lz4") ("external-lz4" "rdkafka/external-lz4") ("dynamic_linking" "rdkafka/dynamic_linking") ("dynamic-linking" "rdkafka/dynamic-linking") ("default" "rdkafka/default") ("curl-static" "rdkafka/curl-static") ("curl" "rdkafka/curl") ("cmake_build" "rdkafka/cmake_build") ("cmake-build" "rdkafka/cmake-build")))) (y #t)))

(define-public crate-rdkafka-wrap-0.1.10 (c (n "rdkafka-wrap") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1jm025rk5cjk5q16lj58i8ng2mx8niqxyscwl5ba2jz4n4qlla3b") (f (quote (("zstd-pkg-config" "rdkafka/zstd-pkg-config") ("zstd" "rdkafka/zstd") ("ssl-vendored" "rdkafka/ssl-vendored") ("ssl" "rdkafka/ssl") ("sasl" "rdkafka/sasl") ("naive-runtime" "rdkafka/naive-runtime") ("libz-static" "rdkafka/libz-static") ("libz" "rdkafka/libz") ("gssapi-vendored" "rdkafka/gssapi-vendored") ("gssapi" "rdkafka/gssapi") ("external_lz4" "rdkafka/external_lz4") ("external-lz4" "rdkafka/external-lz4") ("dynamic_linking" "rdkafka/dynamic_linking") ("dynamic-linking" "rdkafka/dynamic-linking") ("default" "rdkafka/default") ("curl-static" "rdkafka/curl-static") ("curl" "rdkafka/curl") ("cmake_build" "rdkafka/cmake_build") ("cmake-build" "rdkafka/cmake-build"))))))

(define-public crate-rdkafka-wrap-0.1.11 (c (n "rdkafka-wrap") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0qvx3iihkm36bjrqa6q18p33hb751i77kmwb6638harqz9xs3b6b") (f (quote (("zstd-pkg-config" "rdkafka/zstd-pkg-config") ("zstd" "rdkafka/zstd") ("ssl-vendored" "rdkafka/ssl-vendored") ("ssl" "rdkafka/ssl") ("sasl" "rdkafka/sasl") ("naive-runtime" "rdkafka/naive-runtime") ("libz-static" "rdkafka/libz-static") ("libz" "rdkafka/libz") ("gssapi-vendored" "rdkafka/gssapi-vendored") ("gssapi" "rdkafka/gssapi") ("external_lz4" "rdkafka/external_lz4") ("external-lz4" "rdkafka/external-lz4") ("dynamic_linking" "rdkafka/dynamic_linking") ("dynamic-linking" "rdkafka/dynamic-linking") ("default" "rdkafka/default") ("curl-static" "rdkafka/curl-static") ("curl" "rdkafka/curl") ("cmake_build" "rdkafka/cmake_build") ("cmake-build" "rdkafka/cmake-build"))))))

(define-public crate-rdkafka-wrap-0.1.12 (c (n "rdkafka-wrap") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rdkafka") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple-log") (r "^1.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0lblmlb90kv92a32r051hpaa084illdabpzrp02cym5ixx4wbbc3") (f (quote (("zstd-pkg-config" "rdkafka/zstd-pkg-config") ("zstd" "rdkafka/zstd") ("ssl-vendored" "rdkafka/ssl-vendored") ("ssl" "rdkafka/ssl") ("sasl" "rdkafka/sasl") ("naive-runtime" "rdkafka/naive-runtime") ("libz-static" "rdkafka/libz-static") ("libz" "rdkafka/libz") ("gssapi-vendored" "rdkafka/gssapi-vendored") ("gssapi" "rdkafka/gssapi") ("external_lz4" "rdkafka/external_lz4") ("external-lz4" "rdkafka/external-lz4") ("dynamic_linking" "rdkafka/dynamic_linking") ("dynamic-linking" "rdkafka/dynamic-linking") ("default" "rdkafka/default") ("curl-static" "rdkafka/curl-static") ("curl" "rdkafka/curl") ("cmake_build" "rdkafka/cmake_build") ("cmake-build" "rdkafka/cmake-build"))))))

