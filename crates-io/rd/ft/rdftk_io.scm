(define-module (crates-io rd ft rdftk_io) #:use-module (crates-io))

(define-public crate-rdftk_io-0.1.0 (c (n "rdftk_io") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "rdftk_core") (r "^0.1.0") (d #t) (k 0)) (d (n "rdftk_graph") (r "^0.1.0") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1.0") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.0") (d #t) (k 2)))) (h "0wspgqn54b02fi524p0d27scya2jx18r5ny259ss2r6l5haqxw4k")))

(define-public crate-rdftk_io-0.1.2 (c (n "rdftk_io") (v "0.1.2") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "rdftk_core") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1") (d #t) (k 2)))) (h "1margw38914fi6830gis2q2hh19myqqf3iyq97mbr33b602wc6fw")))

(define-public crate-rdftk_io-0.1.3 (c (n "rdftk_io") (v "0.1.3") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "rdftk_core") (r "^0.1.6") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.3") (d #t) (k 2)))) (h "04vm4xhc7n35wlrwy29xrmrav7cpm405dvrz4x8hgsn007q87nwr")))

(define-public crate-rdftk_io-0.1.4 (c (n "rdftk_io") (v "0.1.4") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "rdftk_core") (r "^0.1.6") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1.2") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.5") (d #t) (k 2)))) (h "0j36vjivksfx03m0f2mzh1rqa0mrq6z3sr9hnc8qqc2aaamf06qv")))

(define-public crate-rdftk_io-0.1.5 (c (n "rdftk_io") (v "0.1.5") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "rdftk_core") (r "^0.1.6") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1.2") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.5") (d #t) (k 2)))) (h "0k75m6jmflvcywc37mz1mc4v9kakrfn76p0iv6ya4171r1mdz1qv")))

(define-public crate-rdftk_io-0.1.6 (c (n "rdftk_io") (v "0.1.6") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.8") (d #t) (k 2)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.3") (o #t) (d #t) (k 0)))) (h "1yvgbfjknwvhbxzdqvwvbc4zy55glzlh559c057hdn8fcp9ppvfm") (f (quote (("xml" "xml-rs" "rdftk_names") ("turtle") ("trig") ("nt") ("nq") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

(define-public crate-rdftk_io-0.1.7 (c (n "rdftk_io") (v "0.1.7") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.2") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1.8") (d #t) (k 2)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.3") (o #t) (d #t) (k 0)))) (h "05mdl9w4wms03wj5h0398jjpy6dc2azyqhszygxmqz1s5s2gc9j7") (f (quote (("xml" "xml-rs" "rdftk_names") ("turtle") ("trig") ("nt") ("nq") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

(define-public crate-rdftk_io-0.1.8 (c (n "rdftk_io") (v "0.1.8") (d (list (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.2") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1") (d #t) (k 2)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0pi5y9x0k1f525vnfl538d52y9w58ypzrgqh5pnbs1h1msdg1x6m") (f (quote (("xml" "xml-rs" "rdftk_names" "rdftk_memgraph") ("turtle" "pest" "pest_derive" "rdftk_memgraph") ("trig") ("nt" "pest" "pest_derive" "rdftk_memgraph") ("nq" "pest" "pest_derive" "rdftk_memgraph") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

(define-public crate-rdftk_io-0.1.9 (c (n "rdftk_io") (v "0.1.9") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.2") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rdftk_memgraph") (r "^0.1") (d #t) (k 2)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1bq927kzvvlfh3sd3y4g1bl8pc0j8ym51dfppfv2bn9wmmd7zm38") (f (quote (("xml" "xml-rs" "rdftk_names" "rdftk_memgraph") ("turtle" "pest" "pest_derive" "rdftk_memgraph") ("trig") ("nt" "pest" "pest_derive" "rdftk_memgraph") ("nq" "pest" "pest_derive" "rdftk_memgraph") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

(define-public crate-rdftk_io-0.2.0 (c (n "rdftk_io") (v "0.2.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.3.0-pre") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0zsssjp102qwq74s5l6gmpapda5srl8vck3l3p8bc80p8nqymdy1") (f (quote (("xml" "xml-rs" "rdftk_names") ("turtle" "pest" "pest_derive") ("trig") ("nt" "pest" "pest_derive") ("nq" "pest" "pest_derive") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

(define-public crate-rdftk_io-0.2.1 (c (n "rdftk_io") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rdftk_core") (r "^0.3") (d #t) (k 0)) (d (n "rdftk_iri") (r "^0.1") (d #t) (k 0)) (d (n "rdftk_names") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0cx617k8vvlqilr27v16glixz0axn7vwa83mkbprq9blxyllm1z7") (f (quote (("xml" "xml-rs" "rdftk_names") ("turtle" "pest" "pest_derive") ("trig") ("nt" "pest" "pest_derive") ("nq" "pest" "pest_derive") ("n3") ("json-ld" "serde_json") ("json" "serde_json") ("dot") ("default" "json" "n3" "nq" "nt" "turtle" "xml"))))))

