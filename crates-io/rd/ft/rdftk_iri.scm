(define-module (crates-io rd ft rdftk_iri) #:use-module (crates-io))

(define-public crate-rdftk_iri-0.1.0 (c (n "rdftk_iri") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)))) (h "0h1s5ncmx5l8fis714axya7yrj33xg8gxszibzjapn0c9xbfvqr7")))

(define-public crate-rdftk_iri-0.1.1 (c (n "rdftk_iri") (v "0.1.1") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)))) (h "1wgw0vnyfaz60zhqlkjb8b8nbckw8fqq6sxmb374vs0yaizd2alm")))

(define-public crate-rdftk_iri-0.1.2 (c (n "rdftk_iri") (v "0.1.2") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0lin0pv77s0wlgpq1x53114xj630zj23g4by9w9z2drw3585g9ng") (f (quote (("uuid_iri" "uuid") ("pre_name") ("path_iri") ("new_parser" "nom") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.4 (c (n "rdftk_iri") (v "0.1.4") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1i9zrwn7g9cy77giqzifi6hmhigd90p9rkmj57ynp5yzrdvpwr09") (f (quote (("uuid_iri" "uuid") ("path_iri") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.5 (c (n "rdftk_iri") (v "0.1.5") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "19jwrkdpqkxqfsa793h5klqxrh36bh1yz8svyzda1x94j73hvp9s") (f (quote (("uuid_iri" "uuid") ("path_iri") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.6 (c (n "rdftk_iri") (v "0.1.6") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0m2h8yx1myrybn7hps1x442600ax0rzza4a9pml95lhj35vyy9k3") (f (quote (("uuid_iri" "uuid") ("path_iri") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.7 (c (n "rdftk_iri") (v "0.1.7") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0ddq4c053qxhvw8mrkr960wb90aaadzl52rydyfpgif326j34g1j") (f (quote (("uuid_iri" "uuid") ("path_iri") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.8 (c (n "rdftk_iri") (v "0.1.8") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "19wg72k1zdk2s3lbpylrriwaq2gqswpg9g8a3dlqslrln3d9w96z") (f (quote (("uuid_iri" "uuid") ("path_iri") ("default" "builder" "path_iri" "uuid_iri") ("builder"))))))

(define-public crate-rdftk_iri-0.1.9 (c (n "rdftk_iri") (v "0.1.9") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "run-cargo-fmt" "run-cargo-test"))) (k 2)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "unique_id") (r "^0.1.3") (d #t) (k 0)) (d (n "urlencoding") (r "^1.3") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "17n8gd60q825zkzv2gbisfw4gvcsldvjqf9hzi2xz88b63s9yp4j") (f (quote (("uuid_iri" "uuid") ("path_iri") ("genid" "uuid") ("default" "builder" "genid" "path_iri" "uuid_iri") ("builder"))))))

