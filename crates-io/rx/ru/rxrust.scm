(define-module (crates-io rx ru rxrust) #:use-module (crates-io))

(define-public crate-rxrust-0.1.0 (c (n "rxrust") (v "0.1.0") (h "1bs6xg141jg87pwfdyw9lhv4wpkpqjj6n75zvjr45bvbv8xwpz2f")))

(define-public crate-rxrust-0.2.0 (c (n "rxrust") (v "0.2.0") (d (list (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "0h8b46bwnrgdd41k34q0rpl9fd2hnh1wsm8v7wk3pmqs6mx4bz9i")))

(define-public crate-rxrust-0.3.0 (c (n "rxrust") (v "0.3.0") (d (list (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "0rjk0vd96i80g8rlhzgz54lnnyj651q0jrf2vfwy0nj0drhjrcqv")))

(define-public crate-rxrust-0.4.0 (c (n "rxrust") (v "0.4.0") (d (list (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "0fiicyh3sb8dxvm0wgvf9qqqvbb29zf2qcpijq72q8n7dmaqbq1f")))

(define-public crate-rxrust-0.5.0 (c (n "rxrust") (v "0.5.0") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "1990yf0h9xvci9jip9yqxa3b5ni7ba626m25zi19hivz6amlalkm")))

(define-public crate-rxrust-0.6.0 (c (n "rxrust") (v "0.6.0") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "1fpnxfh9lzjk53jj6vxc4ikyz1a9q501j0cvsy7xnp5j44k5ng4g")))

(define-public crate-rxrust-0.7.0 (c (n "rxrust") (v "0.7.0") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "0b3cb3f7gxhgps3cml0ifrma1sizi8ivlc4zjddjsq5nwbcrbq09") (y #t)))

(define-public crate-rxrust-0.7.1 (c (n "rxrust") (v "0.7.1") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "1skax0sdm63mdw88ljf6756mw3ai6bvqxy0iw5d544d1i7h9a3jd")))

(define-public crate-rxrust-0.7.2 (c (n "rxrust") (v "0.7.2") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)))) (h "1xl6fcm5v5yw0b9mahjdvq9r0604y8j3b9hbnnf4p1qy5ds6g6m0")))

(define-public crate-rxrust-0.8.0 (c (n "rxrust") (v "0.8.0") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)))) (h "1kxbkhq5maq7yy32nf6ichnplndx84xb7ag443w56wm45mqk2794")))

(define-public crate-rxrust-0.8.1 (c (n "rxrust") (v "0.8.1") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)))) (h "1jxbhlp2s8p3qhyiv4z49nd589sbjdhd2jpa8ab7lm4zw0gxk5xv")))

(define-public crate-rxrust-0.8.2 (c (n "rxrust") (v "0.8.2") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)))) (h "1cvspi3z1qnblrsqpnfhnp803m25bx97zw5p23p9ngkc4jbbpsvj")))

(define-public crate-rxrust-0.8.3 (c (n "rxrust") (v "0.8.3") (d (list (d (n "float-cmp") (r "^0.5.3") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)))) (h "0pdd0kc0sb3phibwl9l5fy5r49i9r9xb2ilal56p47bmyhyz3fi8")))

(define-public crate-rxrust-0.9.0 (c (n "rxrust") (v "0.9.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "1zi7d37bzzk3hc1yyl5s0zw2z9k8kpg0wdfkqi5bk0a6rxxylxy0") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.9.1 (c (n "rxrust") (v "0.9.1") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "0lq3905ssxc1bvdlifa6d12mypc47j8wm57k6hk876vhbkbh89fc") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.10.0 (c (n "rxrust") (v "0.10.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "06q3yh22n38sgybxvlrhdksqynsg8qqv131r91mqgr83sskjvcbm") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.11.0 (c (n "rxrust") (v "0.11.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "14n65404a4hask2hsw2m0l34y9xfkv81z9nd10i80dcjbxsdjm06") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.12.0 (c (n "rxrust") (v "0.12.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "0h8jz2d61im5hgqb2fm6mkygjsjpjvi20f5a5ilwv4560i4zbfhq") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.13.0 (c (n "rxrust") (v "0.13.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-threaded" "rt-core"))) (o #t) (d #t) (k 0)))) (h "11klzkih8ym6jx2s4bz0mrwxrqzgi82fkkfkil7s8w0h94vdc8wd") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.14.0 (c (n "rxrust") (v "0.14.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)))) (h "0zni6bmjaic0hhznrqkavsaaxrybjn7bd6268vaj604icrqnwi62") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-0.15.0 (c (n "rxrust") (v "0.15.0") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)))) (h "16p7d9mbx2mqmqwd224sk13bz1bx8rca1flfx86k52gks86dvkdf") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-alpha.1 (c (n "rxrust") (v "1.0.0-alpha.1") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)))) (h "13nbyphx6ka3d9a8ipgnrr7a78gmay9ffglaxpymmh1kq8pl4fpk") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-alpha.2 (c (n "rxrust") (v "1.0.0-alpha.2") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)))) (h "0ydpc4gxgfni2vry27pl039zp8dxjxnygghrfjn8b2d6f0mdz1dp") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-alpha.3 (c (n "rxrust") (v "1.0.0-alpha.3") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "0fhxf66sv3f77qklk3nyli97msd1w82jx377wg8j4bzj32zxj1jg") (f (quote (("wasm-scheduler" "wasm-bindgen-futures") ("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-alpha.4 (c (n "rxrust") (v "1.0.0-alpha.4") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "fluvio-wasm-timer") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "0hl224a9p1bh2yazhz72c91zd1zccxwg0ad3p4hrqhafx1bb01cr") (f (quote (("wasm-scheduler" "wasm-bindgen-futures" "gloo-timers") ("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-alpha.5 (c (n "rxrust") (v "1.0.0-alpha.5") (d (list (d (n "async-std") (r "^1.6.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "fluvio-wasm-timer") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "1561k9pgmp9if2nk0aydahkx7189rzdda59ib804qxdrkgjz1mhq") (f (quote (("wasm-scheduler" "wasm-bindgen-futures" "gloo-timers") ("tokio-scheduler" "tokio") ("futures-scheduler") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-beta.1 (c (n "rxrust") (v "1.0.0-beta.1") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "0a5baz4pkf1r3n51j03i9by6c9ndbcpj5xc04p21dk78l4nm971y") (f (quote (("tokio-scheduler" "tokio") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler"))))))

(define-public crate-rxrust-1.0.0-beta.2 (c (n "rxrust") (v "1.0.0-beta.2") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "1lm5vwl8xnx11szq6660x97qmc3ds8fymsbk5j40icyh9sjdzy5l") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.3 (c (n "rxrust") (v "1.0.0-beta.3") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "0i5y8xs2skav8nlfv1b0vighlbvl2zzz2mry6i9aqqsxx9an447v") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.4 (c (n "rxrust") (v "1.0.0-beta.4") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "1wsxydh5bk9iqs70fgpxbk09sxlz3nf1ijvhgc89sadbws7432yw") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.5 (c (n "rxrust") (v "1.0.0-beta.5") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "1z37br0vrip5yff9g9k8bv3drmgn234z38hina4g1y6901m6ikb3") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.6 (c (n "rxrust") (v "1.0.0-beta.6") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "18gvygxsq9i5zkrvfbmpc61syjdm15alrmv1igih3zj8iqf3kaqj") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.7 (c (n "rxrust") (v "1.0.0-beta.7") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)))) (h "0hc1dca51h77y4xsxgzsx94c1crp12d4ah0zpfbqhgm85l2jk9g9") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

(define-public crate-rxrust-1.0.0-beta.8 (c (n "rxrust") (v "1.0.0-beta.8") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-time") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-timers") (r "^0.2.5") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros" "time" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (k 2)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0mys4qmbavq179ianr2zn72y055784g51kxfjvhv9qc85zxh968b") (f (quote (("tokio-scheduler" "tokio") ("timer" "futures-time") ("futures-scheduler" "futures/thread-pool") ("default" "futures-scheduler" "timer"))))))

