(define-module (crates-io rx ql rxqlite-sqlx-common) #:use-module (crates-io))

(define-public crate-rxqlite-sqlx-common-0.1.0 (c (n "rxqlite-sqlx-common") (v "0.1.0") (d (list (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "1llgx8n40shdzaq3nghv3k5n5g4dxqdzhnnh2wkll35qhygckc49") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.1 (c (n "rxqlite-sqlx-common") (v "0.1.1") (d (list (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "1z58rv3wn3nvlj2jxswbn1g4p42qydxwzn29s41dvpgrx1lky3yd") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.2 (c (n "rxqlite-sqlx-common") (v "0.1.2") (d (list (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0sbhml7ryvj047m6cfln0jfc35aj5k062li9fhkba600avlva93z") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.3 (c (n "rxqlite-sqlx-common") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1.2") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0423dsnwkr9dscw3ij52w15nrgm3whzb66m5ydrf7pizpf1s0bga") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.4 (c (n "rxqlite-sqlx-common") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0dnfjgqz6wk6scmp98dyilgcqx6n6vqyazj9f74b2d7ybdkqzp7v") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.5 (c (n "rxqlite-sqlx-common") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)))) (h "0g5gx1cfn8xilbkjl0c2yr2nxz2x7lcypdn2pcipl6jjrqafa596") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.6 (c (n "rxqlite-sqlx-common") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1n05xbk29cr499d1x50cjdnymc5r7449c514aja3sfxifayrvhmh") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite")))) (y #t)))

(define-public crate-rxqlite-sqlx-common-0.1.7 (c (n "rxqlite-sqlx-common") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "rxqlite-common") (r "^0.1.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.44") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio-rustls" "chrono"))) (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7") (d #t) (k 0)) (d (n "sqlx-sqlite-cipher") (r "^0.7") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1l018f83vwnw97mh755zy4nvdxphpmrqhq4byp0vbs6lv0a6p75v") (f (quote (("sqlite" "sqlx/sqlite") ("default" "sqlite"))))))

