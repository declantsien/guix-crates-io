(define-module (crates-io gg rs ggrs) #:use-module (crates-io))

(define-public crate-ggrs-0.1.0 (c (n "ggrs") (v "0.1.0") (d (list (d (n "adler") (r "^1.0.2") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitfield-rle") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sdl2") (r "^0.34.5") (f (quote ("bundled" "static-link"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)))) (h "1d07vpjnp2hsb4gqc9jj6vs0kpvi7p5p5pgh582jyb6ix3y50yff")))

(define-public crate-ggrs-0.2.0 (c (n "ggrs") (v "0.2.0") (d (list (d (n "adler") (r "^1.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sdl2") (r "^0.34.5") (f (quote ("bundled" "static-link"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "029pn4v8d4l62pqxzi0c12a3nw3p3rzrc7106z0zlvgd13lrads6")))

(define-public crate-ggrs-0.2.1 (c (n "ggrs") (v "0.2.1") (d (list (d (n "adler") (r "^1.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sdl2") (r "^0.34.5") (f (quote ("bundled" "static-link"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "0x5dlaa4mw43ys8x9242m1qn0zbz1nxziixj7211f53lhmw39hhi")))

(define-public crate-ggrs-0.2.2 (c (n "ggrs") (v "0.2.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sdl2") (r "^0.34.5") (f (quote ("bundled" "static-link"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "1nilw6iq0yxlmqwfpnxl3k834qyapkird0zv96nbpzmwrg07d8y0")))

(define-public crate-ggrs-0.2.3 (c (n "ggrs") (v "0.2.3") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53.0") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40.0") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78.0") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "1jgh90ihsrmj0njddw2rgbm1gi5zvidgis3yjqzw3q76zsqqajpn")))

(define-public crate-ggrs-0.2.4 (c (n "ggrs") (v "0.2.4") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53.0") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40.0") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78.0") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "06wgk7600bysw46phann5j0rfpg00kv41m689vvny9nkqf92pb2a")))

(define-public crate-ggrs-0.2.5 (c (n "ggrs") (v "0.2.5") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53.0") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40.0") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78.0") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "0wxpa5w8c0vif2vzy9pm3386cx5lwqvip9rnhckf2202libwz845")))

(define-public crate-ggrs-0.3.0 (c (n "ggrs") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53.0") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40.0") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78.0") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "0aiyc2xa284ryfdcia46h6mfvfx44i4cap8zq3d8mr4v4n4775fh")))

(define-public crate-ggrs-0.4.0 (c (n "ggrs") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53.0") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40.0") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78.0") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)))) (h "1rqzac12scrww2ivc5zi5ma10gglrxkzwd4654cz8v2ib1x00gl6")))

(define-public crate-ggrs-0.4.1 (c (n "ggrs") (v "0.4.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0ys4vf03wn40ggzvjrb9d5mkff7a9d3g7w3ir1shhll3gx6i6abs")))

(define-public crate-ggrs-0.4.2 (c (n "ggrs") (v "0.4.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0b48fn0xz80an224y8q8dzaxr2gj23k6yqmlg1bbmh7fm5xxvyk9")))

(define-public crate-ggrs-0.4.3 (c (n "ggrs") (v "0.4.3") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "1l8nd01k16f2l3hwxdbwbdli6gb7vbvwazybcxc0zr9hdljs7k9b")))

(define-public crate-ggrs-0.4.4 (c (n "ggrs") (v "0.4.4") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0dv765kdhmafbsr4zmi59zamd1hymkvhsl5jcmyc5sz2b8xvwg7y")))

(define-public crate-ggrs-0.5.0 (c (n "ggrs") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "01srrixs3bmx02g7h4lhhax99392qq789j4nkdlgmfp42bhza57i")))

(define-public crate-ggrs-0.5.1 (c (n "ggrs") (v "0.5.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "find_folder") (r "^0.3") (d #t) (k 2)) (d (n "freetype-rs") (r "^0.27") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "piston") (r "^0.53") (d #t) (k 2)) (d (n "piston2d-graphics") (r "^0.40") (d #t) (k 2)) (d (n "piston2d-opengl_graphics") (r "^0.78") (d #t) (k 2)) (d (n "pistoncore-glutin_window") (r "^0.69") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rapier2d") (r "^0.10") (f (quote ("serde-serialize" "enhanced-determinism"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0lx3sd5w7syqvb0kzk58nws2qhxlh1zhcpx3ihd9p5vp33yhx8d6")))

(define-public crate-ggrs-0.6.0 (c (n "ggrs") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "03s53fbz6ckjp5fdvv91frmcaclsgna1l6zgyc1n5fvm5c1bvyss")))

(define-public crate-ggrs-0.7.0 (c (n "ggrs") (v "0.7.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "1ylfddkxs5g6nqm8q4r0y9rhsb0g52n3jvmqv9g66wrq76s18012")))

(define-public crate-ggrs-0.7.1 (c (n "ggrs") (v "0.7.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "1qdwmjmcxp3cmjg9dq7baq0xa8df3is1mf2pgy4r7dwnzjywy3s9")))

(define-public crate-ggrs-0.7.2 (c (n "ggrs") (v "0.7.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "032a8zhi5rrmz17k08swvfr62d6v275lc19wlm0rq8zr3apm0vbd")))

(define-public crate-ggrs-0.8.0 (c (n "ggrs") (v "0.8.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "13snfir96i08zhwl2p0y8alk2wg7s947jdqa28bq7jldmcl4fv1k") (f (quote (("sync_test") ("send_socket") ("default" "send_socket" "sync_test"))))))

(define-public crate-ggrs-0.9.0 (c (n "ggrs") (v "0.9.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "1av3jzwsl2x3sm70lqrd5mhpkv006xz7g6zkfmw25lda30a0dzzr") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("sync-send"))))))

(define-public crate-ggrs-0.9.1 (c (n "ggrs") (v "0.9.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0h2cxg5plgc216lvidxs34a60njrvbni002a3k132v34m906rgcb") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("sync-send"))))))

(define-public crate-ggrs-0.9.2 (c (n "ggrs") (v "0.9.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "11cc9fs5mg10kllbbg1wrkphgxnyinqypg7lm0yfqpndx6903bp8") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("sync-send"))))))

(define-public crate-ggrs-0.9.3 (c (n "ggrs") (v "0.9.3") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0r11ssjzbnl6k6gd3jsmrmw6d458v2zj9xymsarnb7fai9x3gr49") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("sync-send"))))))

(define-public crate-ggrs-0.9.4 (c (n "ggrs") (v "0.9.4") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0cb8d6asibp4dw6990fy5dxfh1x55kg8m6mrfnq8962piv1w668l") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("sync-send"))))))

(define-public crate-ggrs-0.10.0 (c (n "ggrs") (v "0.10.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "1rfbhfi1g7svs17rni8c6y82s9r87rf9s36g9ajydlgpl04sgvm5") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("sync-send"))))))

(define-public crate-ggrs-0.10.1 (c (n "ggrs") (v "0.10.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0djqn6d07zmcq2szv1kgckcg3f8lyqri40d7xdlz6ih0ikghpay5") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("sync-send"))))))

(define-public crate-ggrs-0.10.2 (c (n "ggrs") (v "0.10.2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitfield-rle") (r "^0.2.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "macroquad") (r "^0.3.10") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)))) (h "0gm58q35bm02bmm8zkpyj38qwnv9fci85bchd9zih4jsl4v9m58n") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("sync-send"))))))

