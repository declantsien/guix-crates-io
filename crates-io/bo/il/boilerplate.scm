(define-module (crates-io bo il boilerplate) #:use-module (crates-io))

(define-public crate-boilerplate-0.0.0 (c (n "boilerplate") (v "0.0.0") (d (list (d (n "brev") (r "^0.1.7") (d #t) (k 0)) (d (n "clap") (r "^2.0.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.9.0") (d #t) (k 0)))) (h "15s1nq9pzgi2a22d0z269hjjd70vbgrm6kr9r3r1yplyjddhrpql")))

(define-public crate-boilerplate-0.0.1 (c (n "boilerplate") (v "0.0.1") (d (list (d (n "axum") (r "^0.5.0") (d #t) (k 2)) (d (n "new_mime_guess") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "1jkbh7qyfv3fz5ba8h3pm9dyj6xhgj4vsyq9p25zcjzwapv73cms") (f (quote (("axum" "new_mime_guess"))))))

(define-public crate-boilerplate-0.0.2 (c (n "boilerplate") (v "0.0.2") (d (list (d (n "axum") (r "^0.5.0") (d #t) (k 2)) (d (n "new_mime_guess") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "1c5ahsz904qy91gf4hgpwh0xy0iq5l6a27263f2nc35nnc2j0dki") (f (quote (("axum" "new_mime_guess"))))))

(define-public crate-boilerplate-0.1.0 (c (n "boilerplate") (v "0.1.0") (d (list (d (n "axum") (r "^0.5.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "15lkrd1y90m88bkk5f28skqmbmq19j6qaa90r3axc36rgv44g7if") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.0 (c (n "boilerplate") (v "0.2.0") (d (list (d (n "axum") (r "^0.5.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "04fkjxx4fjjf9fqybqp4q9mfrljn9sqhmfnzfdy014mxl6rrmsjy") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.1 (c (n "boilerplate") (v "0.2.1") (d (list (d (n "axum") (r "^0.5.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "12sa5q2xxmka3wy6ivvym4y9dcg30vlv85a9b478j2ral81cxiwv") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.2 (c (n "boilerplate") (v "0.2.2") (d (list (d (n "axum") (r "^0.6.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "1bnd9hc2dyqk6w65fhsgy950lcl6m0pxnyclknxj7dw0lv8mibyv") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.3 (c (n "boilerplate") (v "0.2.3") (d (list (d (n "axum") (r "^0.6.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "0nzjzmmbyq6y835y8v5k9vmv0ryyc6hi8kq89bjy1xpkvgqpmj5m") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.4 (c (n "boilerplate") (v "0.2.4") (d (list (d (n "axum") (r "^0.6.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "09nwp8l3ikn1fs7k367csnvbgcvfy958ag84q94v4075fk2kv620") (f (quote (("axum"))))))

(define-public crate-boilerplate-0.2.5 (c (n "boilerplate") (v "0.2.5") (d (list (d (n "axum") (r "^0.6.0") (d #t) (k 2)) (d (n "darling") (r "^0.14.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.0") (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "0j1ha23q3l0zy7cwvpnxnm034lkqsg27pdv7i3pdxchpm17jkrx5") (f (quote (("axum"))))))

(define-public crate-boilerplate-1.0.0 (c (n "boilerplate") (v "1.0.0") (d (list (d (n "axum") (r "^0.6.0") (d #t) (k 2)) (d (n "darling") (r "^0.20.1") (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "new_mime_guess") (r "^4.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.63") (d #t) (k 0)) (d (n "quote") (r "^1.0.29") (d #t) (k 0)) (d (n "syn") (r "^2.0.23") (f (quote ("derive"))) (d #t) (k 0)) (d (n "unindent") (r "^0.1.10") (d #t) (k 2)))) (h "04riz77s6dyim47m76gh03x5qp722sjdxch2mig72nl03ydqh1hr") (f (quote (("axum"))))))

