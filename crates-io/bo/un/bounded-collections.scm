(define-module (crates-io bo un bounded-collections) #:use-module (crates-io))

(define-public crate-bounded-collections-0.1.0 (c (n "bounded-collections") (v "0.1.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "05y97sm6sj5lcmxb4ramx6ql1bnppwkijx01v834hpw054chsnh7") (f (quote (("std" "serde/std" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.1 (c (n "bounded-collections") (v "0.1.1") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "0cn619r2w81yf8bpm3s8vl1b3fcb7xgd792a7s30yg9d2cr4kjhn") (f (quote (("std" "serde/std" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.2 (c (n "bounded-collections") (v "0.1.2") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1cl52lijzgp63gwysk8f98qb8s4s9zcs14ym2d3610zdg5crjdfw") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.3 (c (n "bounded-collections") (v "0.1.3") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1y5iiy2k10z066gvhc5ggywb0w5bbk5rqhkafm7sy2sxa266f9jf") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.4 (c (n "bounded-collections") (v "0.1.4") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "0821q807czakmgy1m1b1y241sipj66q8038m6a0lf3z40x4gyany") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.5 (c (n "bounded-collections") (v "0.1.5") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "0w5kxy621hmmj8wsipdih8ih0ihb2w4b8rkim39s2vgglm4c6wd0") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.6 (c (n "bounded-collections") (v "0.1.6") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1877kad94fkfcz7inb4285lhk9yvi1cnjldz0sv7x1cpnhi8b273") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde" "serde/derive") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.7 (c (n "bounded-collections") (v "0.1.7") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "0r3bc0n4h646p6qkzxz5qrhm2fr1rvw7qfrw9l9yp8c22b8x3yq7") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde/std") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.8 (c (n "bounded-collections") (v "0.1.8") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1mjgsi8x2sxmlm0wcacq5h81phinrwy6fvwhfr3prh176h9hanzb") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde/std") ("default" "std")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.1.9 (c (n "bounded-collections") (v "0.1.9") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "schemars") (r ">=0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1p9085sdk8wl6l3x4rq3wcsi922n1h9zv0pbqmyhcwmqcdhqnm6a") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "dep:schemars")))) (r "1.60.0")))

(define-public crate-bounded-collections-0.2.0 (c (n "bounded-collections") (v "0.2.0") (d (list (d (n "codec") (r "^3.3.0") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.17") (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (k 0)) (d (n "schemars") (r ">=0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)))) (h "1hdbd3azcbyhzbmh7k0k776ipvssl7sdrs08z7dbsc8sp7n8a8yk") (f (quote (("std" "log/std" "codec/std" "scale-info/std" "serde/std") ("default" "std")))) (s 2) (e (quote (("json-schema" "dep:schemars")))) (r "1.60.0")))

