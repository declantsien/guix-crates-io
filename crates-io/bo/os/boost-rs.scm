(define-module (crates-io bo os boost-rs) #:use-module (crates-io))

(define-public crate-boost-rs-0.0.1 (c (n "boost-rs") (v "0.0.1") (d (list (d (n "rand") (r "^0.8.5") (d #t) (k 0)))) (h "0adc5d1r4dbdnwgqxra28270nk9s2d65wkiy0g248hyfvr04q6zg")))

(define-public crate-boost-rs-0.0.2 (c (n "boost-rs") (v "0.0.2") (d (list (d (n "boost-rs-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)))) (h "1zf67ra5hnkpzbkr89b3d52ab8zd2666wk9dp7sgxlc77pg2c9yk") (f (quote (("rand") ("logger") ("full" "logger" "rand") ("default"))))))

(define-public crate-boost-rs-0.0.3 (c (n "boost-rs") (v "0.0.3") (d (list (d (n "boost-rs-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)))) (h "1jjsfxv8lad1an338jikhhzw9wb733kqzw011x6dq88d3y7wxa9i") (f (quote (("rand") ("logger" "log") ("full" "logger" "rand" "collection") ("default") ("collection"))))))

(define-public crate-boost-rs-0.0.4 (c (n "boost-rs") (v "0.0.4") (d (list (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "1cg5khxh6b3c7y0lr06av24q909ydbxnf1f4fg7cij7601ifdggq") (f (quote (("sort") ("rand") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env") ("env") ("default") ("collection" "thiserror" "rand/small_rng"))))))

(define-public crate-boost-rs-0.0.5 (c (n "boost-rs") (v "0.0.5") (d (list (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "12ads49b8dr39d1v57zh9sn8i1vay07isgk9i3i1xys5hsnj40kq") (f (quote (("types") ("sort") ("rand") ("macros") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env" "types" "macros") ("env") ("default") ("collection" "thiserror" "rand/small_rng" "bitvec") ("bit" "types")))) (y #t)))

(define-public crate-boost-rs-0.0.6 (c (n "boost-rs") (v "0.0.6") (d (list (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "053gfssa53csbrfhasb2if0xjlpmjb3960ls2p3cq9kbc6siz541") (f (quote (("types") ("sort") ("rand") ("macros") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env" "types" "macros") ("env") ("default") ("collection" "thiserror" "rand/small_rng" "bitvec")))) (y #t)))

(define-public crate-boost-rs-0.0.7 (c (n "boost-rs") (v "0.0.7") (d (list (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "1zw03qr5bzjr2q3pi1n2mvik2lvc2kdxj938dmzxyjavaa6rd9vb") (f (quote (("types") ("sort") ("rand") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env" "types") ("env") ("default") ("collection" "thiserror" "rand/small_rng" "bitvec")))) (y #t)))

(define-public crate-boost-rs-0.0.8 (c (n "boost-rs") (v "0.0.8") (d (list (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "148jv6az6fm8glxmf3k65hjaw3091lzcg30hk3jk74lhw625h7sk") (f (quote (("types") ("sort") ("rand") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env" "types") ("env") ("default") ("collection" "thiserror" "rand/small_rng" "bitvec")))) (y #t)))

(define-public crate-boost-rs-0.0.9 (c (n "boost-rs") (v "0.0.9") (d (list (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "boost-rs-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "0rv40kmydd05flw7yskjl0rrhd8a450rvxzi9yp7bz83151hs355") (f (quote (("types") ("sort") ("rand") ("logger" "log") ("full" "logger" "rand" "collection" "sort" "env" "types") ("env") ("default") ("collection" "thiserror" "rand/small_rng" "bitvec"))))))

