(define-module (crates-io bo mb bomboni_request) #:use-module (crates-io))

(define-public crate-bomboni_request-0.1.4 (c (n "bomboni_request") (v "0.1.4") (d (list (d (n "bomboni_common") (r "^0.1.4") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0sxk2payfm0zxj1vpgzqsdgnvzcndnjnlmwsx6mg5jnmix0nf7jp") (f (quote (("testing"))))))

(define-public crate-bomboni_request-0.1.5 (c (n "bomboni_request") (v "0.1.5") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.5") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)))) (h "10ibp9wb9lm4f88jqb34i0kyvw97smkylvqlw5jfx17b9hi7j71x") (f (quote (("testing"))))))

(define-public crate-bomboni_request-0.1.6 (c (n "bomboni_request") (v "0.1.6") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.6") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.6") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0y9yns0z85vrs56n9gdsbxp81fq9hn8rf7pzydcfavz0mnbri9jf") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.7 (c (n "bomboni_request") (v "0.1.7") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.7") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0517h4i4lmxm9xmacxzn5mgwiwm765ds2gf3ndhk04flg10gslpi") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.8 (c (n "bomboni_request") (v "0.1.8") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.8") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.8") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1dxwfglzgd0b6s20h570afm1ksyc1ai83lc9myrdc0386c4w9rhj") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.9 (c (n "bomboni_request") (v "0.1.9") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.9") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.9") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.9") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0nmw2svssdqplrm1va90h8ap178sgif9dmj05ixmvpgvvw1icbbx") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.10 (c (n "bomboni_request") (v "0.1.10") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.10") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.10") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.10") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0wbs37d88m0cpix6m5d85nl9x1c795db2qsa9c52ka77472z7x78") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.11 (c (n "bomboni_request") (v "0.1.11") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.11") (d #t) (k 0)) (d (n "bomboni_derive") (r "^0.1.11") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.11") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0ackz1wr534g7w8xnc4wba59k0h7k1pw1p72qxahr3n1hgwa6gm0") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.12 (c (n "bomboni_request") (v "0.1.12") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.12") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.12") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0xsymcns8msdp6npzlq79v2zmigvlcf4zpbxj49800dapdmmhjv3") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.13 (c (n "bomboni_request") (v "0.1.13") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.13") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.13") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "04m5c800s8ys4645hzj4p9341gji23k6923s88809lb8g8d587ap") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.14 (c (n "bomboni_request") (v "0.1.14") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.14") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.14") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1kgd560clq2242d3xf24l3zj2y4zyxda2z60rr26i36j5cvi44jc") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.15 (c (n "bomboni_request") (v "0.1.15") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.15") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.15") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1qm5lfvcxqby3vcvlx8c1bbrk6gmknzd30jm5cwhyjnjyqcrj6bp") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.16 (c (n "bomboni_request") (v "0.1.16") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.16") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.16") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.16") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0n3y6dxv3mancskw3wvz2v6ll7cll80bn8mhcvmxrk1gzvp4n6n7") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.17 (c (n "bomboni_request") (v "0.1.17") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.17") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.17") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1n3x623yv4vbkyx1bcy6k45rq6lym212pmp9k1llqx32xp6psvs5") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.18 (c (n "bomboni_request") (v "0.1.18") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.18") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.18") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "156ps0qb2yikkyn9bsdw6llas8vvgf3wqfkqzrnsk6mz38dmwksb") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.19 (c (n "bomboni_request") (v "0.1.19") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.19") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.19") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1r83j43spjy6m0gzdxfsxh7ljsxl5clkd0iv4w4h9wmdns7hrin5") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.20 (c (n "bomboni_request") (v "0.1.20") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.20") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.20") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0ga6i16pjz6km9f46ycd0jks3f0b8ixsrq8bg9pb7fc8v1crwgl6") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.21 (c (n "bomboni_request") (v "0.1.21") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.21") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.21") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0gqilmfh8a7zmmjxf8p5wrkxg944f4v89npvkgpzx5ivcn1gbvsq") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.22 (c (n "bomboni_request") (v "0.1.22") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.22") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.22") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0a3xcdnisgsgn81kf98yibbz1lwarbh4kd0kj2b5j21a8w0y310p") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.23 (c (n "bomboni_request") (v "0.1.23") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.23") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.23") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.23") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "02h0b5f1ld85wj42va77r11sbif9p0i0v83nfls1f3r6qqvlz3cb") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.24 (c (n "bomboni_request") (v "0.1.24") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.24") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.24") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.24") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "04m8bbx4s6r242v8898p15sxp8crm8kp299fln68z6mr4agav9q3") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.25 (c (n "bomboni_request") (v "0.1.25") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.25") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.25") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0wcp88iq2s8kaa8wrq74dq3nvw36asdmycqa5vqv7nq04bjmiqi8") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.26 (c (n "bomboni_request") (v "0.1.26") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.26") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.26") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0axm2iq33mdjw5zy6kich92ydw5mnjn4h2zw6qf8x9ack20wg97k") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.27 (c (n "bomboni_request") (v "0.1.27") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.27") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.27") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0fawgadb5zzsfiv487v92qm53494sgvs56hlypycvf8f0k3cjz40") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.28 (c (n "bomboni_request") (v "0.1.28") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.28") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.28") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.28") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0gzfcmhsh76pgjc3ag45kw5yr79ai3rk6hqwazym6sf6ir5xhkb3") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.29 (c (n "bomboni_request") (v "0.1.29") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.29") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.29") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.29") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0r1a1zzz8r3hqa612852cc9r63l7mh81qkm86zwb4c8d9w83bw4m") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.30 (c (n "bomboni_request") (v "0.1.30") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.30") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.30") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.30") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1gm93b1w3hqlpsnpsgkranry01s94v5sc7irm0gwpy9jkn3n4bn6") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.31 (c (n "bomboni_request") (v "0.1.31") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.31") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.31") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.31") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0jvwylq3x1l6p7c4kf8j205kiqp2gk1l0dl6csfa8p07zwqvwkjy") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.32 (c (n "bomboni_request") (v "0.1.32") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.32") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.32") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "05wglp0wkylakffzzkpiivk7z8vz30rxa5hsg85n41v1655rl89w") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.33 (c (n "bomboni_request") (v "0.1.33") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.33") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.33") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.33") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0xgawqv4d3wvc9vk5rx5jrf24vmcy7f04783dyyjic8fpk3508j3") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.34 (c (n "bomboni_request") (v "0.1.34") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.34") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.34") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "10vnknp35adyqj7b3fgfrg6s3kz1axi7x15hayfg1wacfqb7kbjc") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.35 (c (n "bomboni_request") (v "0.1.35") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.35") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.35") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.35") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0kaxiw42wvs1hy1lb9yix6mq645plilx6j4p7ivpzralpxh97cj2") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.36 (c (n "bomboni_request") (v "0.1.36") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.36") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.36") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.36") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0f4mh4zlcjng38m116q9pvh9rvjklfhfk5dwc678i9zx9rhs0chp") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.37 (c (n "bomboni_request") (v "0.1.37") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.37") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.37") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "10jvfaapw3xmw33kbs1gwq4vm8jshj9yh4gn889a1zml7vjanx9j") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.38 (c (n "bomboni_request") (v "0.1.38") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.38") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.38") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.38") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "16mnay0w22s4b9633faqpmidvamwmw5xjbsww1py7mb4pqhmj6dz") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.39 (c (n "bomboni_request") (v "0.1.39") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.39") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.39") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "093d7iqjlkm33gsn01fx2b19pihs40f7fkqwjcrmfqc5n00857w4") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.40 (c (n "bomboni_request") (v "0.1.40") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.40") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.40") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0w1pfvmj0xvcc0fhvk3i8337xr7bwhl6djswnasklzqv5hy3vidn") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.41 (c (n "bomboni_request") (v "0.1.41") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.41") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.41") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.41") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "19daz3754xb75xbd148aj824jjnx6aci9hv015da8ihd4b489k71") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.42 (c (n "bomboni_request") (v "0.1.42") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.42") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.42") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.42") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0cpmnf21xgvj3gdvd1gnxi617jz38ygk6mc45wm3fd424vkyvqi0") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.43 (c (n "bomboni_request") (v "0.1.43") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.43") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.43") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1d3s3ndg2b6ywigng6q197rzxjn5w73jgl0636bqvync0hbc4r7m") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.44 (c (n "bomboni_request") (v "0.1.44") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.44") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.44") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0f3s3ddkpcfamwx586zq0flxi52fkarppfhxwlqq42xma72734bi") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.45 (c (n "bomboni_request") (v "0.1.45") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.45") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.45") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0hcbfa4nydw3fjcsfm9cd41qakzn0wm2l9maiwrv2a1izd955i60") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.46 (c (n "bomboni_request") (v "0.1.46") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.46") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.46") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "04xnnnns06xshgz9idk16pi1i26jrqan4q3xxi9ykz1gn5ckv7nh") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.47 (c (n "bomboni_request") (v "0.1.47") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.47") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.47") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.47") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "0xp9jni3m0992bya8d8v49iki3vdv85rl5995kw1hh5lapr0a8dd") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.48 (c (n "bomboni_request") (v "0.1.48") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.48") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.48") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1p32x4czhcggynlgw72rll7ahigj3ddjdjl8cj8x88gz0fzmk4w4") (f (quote (("testing")))) (s 2) (e (quote (("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.50 (c (n "bomboni_request") (v "0.1.50") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.50") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.50") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.50") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (o #t) (d #t) (k 0)))) (h "0ym97ylfa6s8m9sx1njh5ppm6xmrkgmcdfq3qdikdr4ig9m6jw4c") (f (quote (("testing")))) (s 2) (e (quote (("wasm" "bomboni_common/serde" "dep:wasm-bindgen" "time/serde" "dep:tsify" "dep:serde" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic") ("derive" "dep:bomboni_request_derive"))))))

(define-public crate-bomboni_request-0.1.51 (c (n "bomboni_request") (v "0.1.51") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.51") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.51") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.51") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (o #t) (d #t) (k 0)))) (h "11bqc6811v1g1cx6023al2xspxhibdpj7z1hfjr1i12m61whaqvy") (f (quote (("testing") ("derive")))) (s 2) (e (quote (("wasm" "bomboni_common/wasm" "dep:wasm-bindgen" "dep:tsify" "dep:serde" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.52 (c (n "bomboni_request") (v "0.1.52") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.52") (d #t) (k 0)) (d (n "bomboni_macros") (r "^0.1.52") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.52") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.52") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (o #t) (d #t) (k 0)))) (h "0rmvb6d3j7r77rijzhgwjv3fh27zk00ylkqzv87ni48w3hmvsd6a") (f (quote (("testing") ("derive")))) (s 2) (e (quote (("wasm" "bomboni_common/wasm" "dep:wasm-bindgen" "dep:tsify" "dep:serde" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.53 (c (n "bomboni_request") (v "0.1.53") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.53") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.53") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.53") (d #t) (k 0)) (d (n "bomboni_wasm_derive") (r "^0.1.53") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (o #t) (d #t) (k 0)))) (h "09jw1cnjwja7hmzm7k68qvdsvhva0w1z6hl2qwm868s8gpjanrda") (f (quote (("testing") ("derive")))) (s 2) (e (quote (("wasm" "bomboni_common/wasm" "dep:wasm-bindgen" "dep:tsify" "dep:serde" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.54 (c (n "bomboni_request") (v "0.1.54") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.54") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.54") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.54") (d #t) (k 0)) (d (n "bomboni_wasm") (r "^0.1.54") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.7.6") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.6") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (k 0)))) (h "105nnc14knxifpf2l63vj96fz2n4b96vzjxy8qfx23x4zxy9n97s") (f (quote (("testing") ("derive")))) (s 2) (e (quote (("wasm" "dep:bomboni_wasm" "bomboni_common/wasm" "dep:wasm-bindgen" "dep:js-sys" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.55 (c (n "bomboni_request") (v "0.1.55") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.55") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.55") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.55") (d #t) (k 0)) (d (n "bomboni_wasm") (r "^0.1.55") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.67") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2.7.6") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.6") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (k 0)))) (h "0g0jkb7nqy3rg7q0zmfxxq6dm61x7xj67q45a9j55iv38him8r97") (f (quote (("testing") ("derive")))) (s 2) (e (quote (("wasm" "dep:bomboni_wasm" "bomboni_common/wasm" "dep:wasm-bindgen" "dep:js-sys" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic"))))))

(define-public crate-bomboni_request-0.1.56 (c (n "bomboni_request") (v "0.1.56") (d (list (d (n "aes-gcm") (r "^0.10.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64ct") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "bomboni_common") (r "^0.1.56") (d #t) (k 0)) (d (n "bomboni_proto") (r "^0.1.56") (d #t) (k 0)) (d (n "bomboni_request_derive") (r "^0.1.56") (d #t) (k 0)) (d (n "bomboni_wasm") (r "^0.1.56") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.15") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.69") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "pest") (r "^2.7.10") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.10") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (f (quote ("with-time-0_3"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.12.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "rsa") (r "^0.9.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "tonic") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)))) (h "1iqz90sl2fc0lzcd9h6xds4lgqn7wfm4007qznmmknchx19qdwdh") (f (quote (("testing") ("derive") ("default" "testing")))) (s 2) (e (quote (("wasm" "dep:bomboni_wasm" "bomboni_common/wasm" "bomboni_proto/wasm" "dep:wasm-bindgen" "dep:js-sys" "dep:getrandom") ("tonic" "bomboni_proto/tonic" "dep:tonic") ("postgres" "dep:postgres-types" "dep:bytes"))))))

