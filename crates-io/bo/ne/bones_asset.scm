(define-module (crates-io bo ne bones_asset) #:use-module (crates-io))

(define-public crate-bones_asset-0.0.0 (c (n "bones_asset") (v "0.0.0") (h "0c9g72hp7lrwabhj0ra3l5iarfij5icpalrfw2xg8vch2rzdql3v")))

(define-public crate-bones_asset-0.1.0 (c (n "bones_asset") (v "0.1.0") (d (list (d (n "bevy_asset") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "bones_bevy_utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "bones_ecs") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "type_ulid") (r "^0.1.0") (d #t) (k 0)) (d (n "ulid") (r "^1.0.0") (d #t) (k 0)))) (h "1dq6197dv1ms30qw67s2k1s65z869vdgg06sd7sb95ycfri1az60") (f (quote (("default")))) (s 2) (e (quote (("bevy" "dep:bones_bevy_utils" "dep:bevy_asset"))))))

(define-public crate-bones_asset-0.2.0 (c (n "bones_asset") (v "0.2.0") (d (list (d (n "bevy_asset") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bones_bevy_utils") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "bones_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "type_ulid") (r "^0.2.0") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (d #t) (k 0)))) (h "1m8mbv9nfjwycnkmwq21lhkgj4wh10kazfk4ks0q3f6lfwxn5x1i") (f (quote (("default")))) (s 2) (e (quote (("bevy" "dep:bones_bevy_utils" "dep:bevy_asset"))))))

(define-public crate-bones_asset-0.3.0 (c (n "bones_asset") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "append-only-vec") (r "^0.1.3") (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.11") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.11") (d #t) (k 2)) (d (n "bones_schema") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bones_schema") (r "^0.3") (f (quote ("glam"))) (d #t) (k 2)) (d (n "bones_utils") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "elsa") (r "^1.9") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "event-listener") (r "^3.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (d #t) (k 2)) (d (n "notify") (r "^6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.1") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gsykhcbqhpn0aghrll0rc04xkh8xdj4dmbkfv1lghkr6b1vsaw3") (f (quote (("default"))))))

