(define-module (crates-io bo ns bonsaidb-client) #:use-module (crates-io))

(define-public crate-bonsaidb-client-0.0.0-reserve.0 (c (n "bonsaidb-client") (v "0.0.0-reserve.0") (h "18vmv7ik0ydxwjdik0ap3x0pz5dkz3280c675dbax938hajs9qak")))

(define-public crate-bonsaidb-client-0.1.0 (c (n "bonsaidb-client") (v "0.1.0") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "^0.1.0") (f (quote ("networking"))) (k 0)) (d (n "bonsaidb-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02rs3mc4lilwq5hx8mpfil6xn668qsm5wjmsic879xj6h2ma9sm9") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full"))))))

(define-public crate-bonsaidb-client-0.1.1 (c (n "bonsaidb-client") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "^0.1.1") (f (quote ("networking" "included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "15l1awpdffqqf4k15s50mskqv4anb603qdpmcddcsfnaqv2k31fg") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full"))))))

(define-public crate-bonsaidb-client-0.1.2 (c (n "bonsaidb-client") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.1.2") (f (quote ("networking" "included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.1.2") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hnj0f7bajzjsgnx31lskrhybnn03xi9f2kiabiczq4nfdkg9axk") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full"))))))

(define-public crate-bonsaidb-client-0.2.0 (c (n "bonsaidb-client") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.2.0") (f (quote ("networking" "included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.2.0") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "=1.16.1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "=1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1g8bi29z4ir1dby8da5akfl13pjsddv45f3w3x4w3mvic5zqhx0a") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full")))) (r "1.58")))

(define-public crate-bonsaidb-client-0.3.0 (c (n "bonsaidb-client") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.3.0") (f (quote ("networking" "included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.3.0") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1p16mk4rm78351r74gps77z8sl2432493ljyf28qfwlk9r8ypigg") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full")))) (r "1.58")))

(define-public crate-bonsaidb-client-0.4.0 (c (n "bonsaidb-client") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.4.0") (f (quote ("included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.4.0") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11q4x7xd7889nayraf095i8yanvdibpzwzk0w39zx2mhwhpimmx7") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full")))) (r "1.58")))

(define-public crate-bonsaidb-client-0.4.1 (c (n "bonsaidb-client") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.4.1") (f (quote ("included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.4.1") (d #t) (k 0)) (d (n "derive-where") (r "=1.0.0-rc.2") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pot") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("macros" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0qckrdi5mkl6q19jnnzrc8awzkj852k7gmf4h30q3qhj7040x57p") (f (quote (("websockets" "bonsaidb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "password-hashing") ("default" "full")))) (r "1.58")))

(define-public crate-bonsaidb-client-0.5.0 (c (n "bonsaidb-client") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bonsaidb-core") (r "=0.5.0") (f (quote ("included-from-client"))) (k 0)) (d (n "bonsaidb-utils") (r "=0.5.0") (d #t) (k 0)) (d (n "derive-where") (r "~1.2.0") (d #t) (k 0)) (d (n "fabruic") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pot") (r "^3.0.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "ErrorEvent" "FileReader" "MessageEvent" "ProgressEvent" "WebSocket" "CloseEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0v76cqq0pp4h28hqp17vmgi53kmz5347a3mdki28g514fjyd9f4y") (f (quote (("trusted-dns" "fabruic/trust-dns") ("tracing" "pot/tracing") ("token-authentication" "bonsaidb-core/token-authentication") ("test-util") ("password-hashing" "bonsaidb-core/password-hashing") ("included-from-omnibus") ("full" "websockets" "trusted-dns" "token-authentication" "password-hashing") ("default" "full")))) (s 2) (e (quote (("websockets" "bonsaidb-core/websockets" "dep:tokio-tungstenite" "dep:bincode")))) (r "1.70")))

