(define-module (crates-io bo ns bonsai-rest-api-mock) #:use-module (crates-io))

(define-public crate-bonsai-rest-api-mock-0.5.1-rc.1 (c (n "bonsai-rest-api-mock") (v "0.5.1-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("macros" "headers"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.5.1-rc.1") (k 0)) (d (n "bonsai-sdk") (r "^0.5.1-rc.1") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.19.1-rc.1") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0xbj6v7s1d0gf76pv6nq403458kvy4zs6fy5szxw97vlj9ipgyg9")))

(define-public crate-bonsai-rest-api-mock-0.5.1 (c (n "bonsai-rest-api-mock") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("macros" "headers"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.5.1") (k 0)) (d (n "bonsai-sdk") (r "^0.5.1") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.19.1") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "14yqayin79b1x4mgac3xhg2scxmv5b375bg42igdq1cp0d4zp8bg")))

(define-public crate-bonsai-rest-api-mock-0.6.0-rc.1 (c (n "bonsai-rest-api-mock") (v "0.6.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.1") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.1") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.0-rc.1") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0d5za5w7xkf0fksiyr9ixflgzqmn5yci13r0jblfagi3pjd5s3ps") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

(define-public crate-bonsai-rest-api-mock-0.6.0-rc.2 (c (n "bonsai-rest-api-mock") (v "0.6.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.2") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.2") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.0-rc.2") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0x2rqhmnp9kch5rmyfv5jkz25zsibpzai067f2wnx7dfsb73ww3g") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

(define-public crate-bonsai-rest-api-mock-0.6.0-rc.3 (c (n "bonsai-rest-api-mock") (v "0.6.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.3") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.3") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.0-rc.3") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1nkvdamnpnb1q5lnfpbibg9vvd2ci4y435jc9860j50dsalfjvzl") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

(define-public crate-bonsai-rest-api-mock-0.6.0-rc.4 (c (n "bonsai-rest-api-mock") (v "0.6.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.4") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0-rc.4") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.0-rc.4") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "120dd2m972g62rrqkvzxb3214f05m7z6z66pb0vr01zyd27chmr9") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

(define-public crate-bonsai-rest-api-mock-0.6.0 (c (n "bonsai-rest-api-mock") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.0") (k 0)) (d (n "bonsai-sdk") (r "^0.6.0") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.0") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "15g7knmyqiq1sni6yz3xnfy9y9xlll25fxnsm6nzqyg7cwi9vq0m") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

(define-public crate-bonsai-rest-api-mock-0.6.1 (c (n "bonsai-rest-api-mock") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("macros"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bonsai-sdk") (r "^0.6.1") (k 0)) (d (n "bonsai-sdk") (r "^0.6.1") (f (quote ("async"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "risc0-zkvm") (r "^0.20.1") (f (quote ("client"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "08g80cjdxvzi3x1x853640mcsn9lc2whvi238lyb020vm6fn89p3") (f (quote (("prove" "risc0-zkvm/prove") ("metal" "risc0-zkvm/metal") ("default") ("cuda" "risc0-zkvm/cuda"))))))

