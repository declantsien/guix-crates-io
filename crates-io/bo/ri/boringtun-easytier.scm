(define-module (crates-io bo ri boringtun-easytier) #:use-module (crates-io))

(define-public crate-boringtun-easytier-0.6.0 (c (n "boringtun-easytier") (v "0.6.0") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "atomic-shim") (r "^0.2.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "etherparse") (r "^0.13") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mock_instant") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("time" "user"))) (t "cfg(unix)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.17") (d #t) (k 0)) (d (n "socket2") (r "^0.4.7") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0") (f (quote ("reusable_secrets" "static_secrets"))) (d #t) (k 0)))) (h "0r9hlz86fg04sbmqjz777rb08lrq3q63ms12xa53x852cswbyqla") (f (quote (("mock-instant" "mock_instant") ("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings" "tracing-subscriber") ("device" "socket2" "thiserror") ("default"))))))

