(define-module (crates-io bo ri boringtun) #:use-module (crates-io))

(define-public crate-boringtun-0.0.0 (c (n "boringtun") (v "0.0.0") (h "0hd97q5yccziyngnxmg4ij3n60qizkmrymiq16csplyhl9jik8xh")))

(define-public crate-boringtun-0.2.0 (c (n "boringtun") (v "0.2.0") (d (list (d (n "base64") (r "^0.9.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("suggestions"))) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "daemonize") (r "^0.4.1") (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "jni") (r "^0.10.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r "^0.14") (d #t) (t "cfg(not(target_arch = \"arm\"))") (k 0)) (d (n "spin") (r "^0.5") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0)))) (h "1pb30v7zvc4gzmn9dy3v8pl48ysyys5mfmyzvrmh04gjg4q5p7ns")))

(define-public crate-boringtun-0.3.0 (c (n "boringtun") (v "0.3.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions"))) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "daemonize") (r "^0.4.1") (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "jni") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"arm\"))") (k 0)) (d (n "spin") (r "^0.5") (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)))) (h "16acw0qmsgkqplzlpi36qm6phf74995fklzzhxl5f7w45zzxcann")))

(define-public crate-boringtun-0.4.0 (c (n "boringtun") (v "0.4.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions"))) (o #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "daemonize") (r "^0.4.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"windows\", target_os = \"ios\", target_os = \"android\")))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"arm\"))") (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)))) (h "161nbh1c03wdvq8q014v7w2391n6py86iv1lqag28dw271nkxbxw") (f (quote (("default" "build-binary") ("build-binary" "tracing-subscriber" "tracing-appender" "clap" "daemonize"))))))

(define-public crate-boringtun-0.5.0 (c (n "boringtun") (v "0.5.0") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (f (quote ("reusable_secrets"))) (d #t) (k 0)))) (h "00ymxwwn1v5sbl7hw2c34qxk74ffz2khhvp6pkzjinbq27pfmpin") (f (quote (("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings")))) (y #t)))

(define-public crate-boringtun-0.5.1 (c (n "boringtun") (v "0.5.1") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (f (quote ("reusable_secrets"))) (d #t) (k 0)))) (h "1y5wmjjlziki57jq9hr958zhdzz9p47w5gizf204xg7mbjvk82h2") (f (quote (("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings")))) (y #t)))

(define-public crate-boringtun-0.5.2 (c (n "boringtun") (v "0.5.2") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0-pre.1") (f (quote ("reusable_secrets"))) (d #t) (k 0)))) (h "0i8s1p8jm9qjc3lrs7p70pybazwk1wx9h2n3rj1qa9kvavs3mlji") (f (quote (("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings")))) (y #t)))

(define-public crate-boringtun-0.6.0 (c (n "boringtun") (v "0.6.0") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "etherparse") (r "^0.12") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("time" "user"))) (t "cfg(unix)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "socket2") (r "^0.4.7") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "=2.0.0-rc.3") (f (quote ("reusable_secrets" "static_secrets"))) (d #t) (k 0)))) (h "0abzf8xwiwlv366cs8dlmldw44b7bqlalkiz6nnbjx6636q8f5vm") (f (quote (("mock-instant" "mock_instant") ("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings" "tracing-subscriber") ("device" "socket2" "thiserror") ("default"))))))

(define-public crate-boringtun-0.5.3 (c (n "boringtun") (v "0.5.3") (d (list (d (n "aead") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10.0-pre.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.4.1") (d #t) (k 0)) (d (n "ip_network_table") (r "^0.2.0") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "untrusted") (r "^0.9.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "=2.0.0-rc.3") (f (quote ("reusable_secrets" "static_secrets"))) (d #t) (k 0)))) (h "0n8x4ima6q1qwvj4v8sl46xbxgp13h6wf5fkpjzpmgb87pjza877") (f (quote (("jni-bindings" "ffi-bindings" "jni") ("ffi-bindings"))))))

