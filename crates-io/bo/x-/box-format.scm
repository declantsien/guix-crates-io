(define-module (crates-io bo x- box-format) #:use-module (crates-io))

(define-public crate-box-format-0.3.0 (c (n "box-format") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cffi") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "comde") (r "^0.2.2") (k 0)) (d (n "fastvlq") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "pathtrie") (r "^0.1.1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd") (r "^0.9.0") (d #t) (k 0)))) (h "11ch6gssa5rv6b6425kq568hxp13nw85pan804qr7nlsc3s01p1f") (f (quote (("zstd" "comde/zstandard") ("xz" "comde/xz") ("writer" "reader") ("snappy" "comde/snappy") ("reader") ("ffi" "libc" "cffi") ("deflate" "comde/deflate") ("default" "brotli" "xz" "deflate" "zstd" "snappy" "writer" "reader") ("brotli" "comde/brotli"))))))

(define-public crate-box-format-0.3.1 (c (n "box-format") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cffi") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "comde") (r "^0.2.2") (k 0)) (d (n "fastvlq") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "pathtrie") (r "^0.1.1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd") (r "^0.9.0") (d #t) (k 0)))) (h "1inzisdlws6pizdiym3kb44yh80rv9h7qlrg9nn15p1mc96qandd") (f (quote (("zstd" "comde/zstandard") ("xz" "comde/xz") ("writer" "reader") ("snappy" "comde/snappy") ("reader") ("ffi" "libc" "cffi") ("deflate" "comde/deflate") ("default" "brotli" "xz" "deflate" "zstd" "snappy" "writer" "reader") ("brotli" "comde/brotli"))))))

(define-public crate-box-format-0.3.2 (c (n "box-format") (v "0.3.2") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cffi") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "comde") (r "^0.2.3") (k 0)) (d (n "fastvlq") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (d #t) (k 0)) (d (n "unic-normal") (r "^0.9.0") (d #t) (k 0)) (d (n "unic-ucd") (r "^0.9.0") (d #t) (k 0)))) (h "0jkibivyimvhzgh0z1a4zyz9hvapdaj78zmyp2nq3jv4566zjmcn") (f (quote (("zstd" "comde/zstandard") ("xz" "comde/xz") ("writer" "reader") ("snappy" "comde/snappy") ("reader") ("ffi" "libc" "cffi") ("deflate" "comde/deflate") ("default" "brotli" "xz" "deflate" "zstd" "snappy" "writer" "reader") ("brotli" "comde/brotli"))))))

