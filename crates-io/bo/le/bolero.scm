(define-module (crates-io bo le bolero) #:use-module (crates-io))

(define-public crate-bolero-0.1.0 (c (n "bolero") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bolero-afl") (r "^0.1") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.1") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)))) (h "0q74qnx94vz2p162asfx1hh39czwnmv2mpwx9rwwh648wl66kbf1")))

(define-public crate-bolero-0.1.1 (c (n "bolero") (v "0.1.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bolero-afl") (r "^0.1") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.1") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)))) (h "0fmrd9zc6ndzabpry8k014cp2ncx4c8nrnh5ji9170by0k0r4rdi")))

(define-public crate-bolero-0.2.0 (c (n "bolero") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bolero-afl") (r "^0.2") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.2") (k 0)) (d (n "bolero-honggfuzz") (r "^0.2") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)))) (h "11lijpc76f560fr6qczrn0i2iijs8k4w3jcvhz8qjmdmmazmw3yq") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.3.0 (c (n "bolero") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bolero-afl") (r "^0.3") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.3") (k 0)) (d (n "bolero-honggfuzz") (r "^0.3") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.3") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0yrpg6s249hqh8vj7h2v26pg7jlbqpfq82n5g424famrbi81cpx1") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.4.0 (c (n "bolero") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bolero-afl") (r "^0.4") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.4") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.4") (k 0)) (d (n "bolero-honggfuzz") (r "^0.4") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "003d8k1wjrc934h0jrgwwpsjl30fb53z4nj4m6fxbdznmfqsgxw1") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.4.1 (c (n "bolero") (v "0.4.1") (d (list (d (n "bolero-afl") (r "^0.4") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.4") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.4") (k 0)) (d (n "bolero-honggfuzz") (r "^0.4") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1b7a3mj360bwxb6b8xlzqfg5080ah5f4bhv6jpbpgnid2smd4p3g") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.4.2 (c (n "bolero") (v "0.4.2") (d (list (d (n "bolero-afl") (r "^0.4") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.4") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.4") (k 0)) (d (n "bolero-honggfuzz") (r "^0.4") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1rndys4hzl3xr89zd0vgybrm3pd1mkxzybs0kj8sj7nlifr5sv7w") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.5.0 (c (n "bolero") (v "0.5.0") (d (list (d (n "bolero-afl") (r "^0.5") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.5") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.5") (k 0)) (d (n "bolero-honggfuzz") (r "^0.5") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.5") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0pnxijrq9qdmkarmhl5dk46yq2zs9a3lrzl819k5b14f457j2xa9") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.5.1 (c (n "bolero") (v "0.5.1") (d (list (d (n "bolero-afl") (r "^0.5") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.5") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.5") (k 0)) (d (n "bolero-honggfuzz") (r "^0.5") (d #t) (k 0)) (d (n "bolero-libfuzzer") (r "^0.5") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "13mdhx175f3hbsr0nwk8ss6szyw58351w343jbjb9qlfrg50qp6v") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std" "rand") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.5.2 (c (n "bolero") (v "0.5.2") (d (list (d (n "bolero-afl") (r "^0.5") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.5") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.5") (k 0)) (d (n "bolero-honggfuzz") (r "^0.5") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.5") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0gpnlkid3z3i3ch4drr5vrr2b9zvp84ndrdyps8cvb28pfdihf87") (f (quote (("std" "alloc" "bolero-generator/std") ("rng" "rand" "bolero-engine/rng") ("default" "std" "rng") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.6.0 (c (n "bolero") (v "0.6.0") (d (list (d (n "bolero-afl") (r "^0.6") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.6") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.6") (k 0)) (d (n "bolero-honggfuzz") (r "^0.6") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.6") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.2.0") (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "15223qh44rkh1njsdk9dsai7az1p3v100zvxh3si9bj5fmkwkwaj") (f (quote (("std" "alloc" "bolero-generator/std") ("rng" "rand" "bolero-engine/rng") ("default" "std" "rng") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.6.2 (c (n "bolero") (v "0.6.2") (d (list (d (n "bolero-afl") (r "^0.6") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.6") (d #t) (k 0)) (d (n "bolero-generator") (r "^0.6") (k 0)) (d (n "bolero-honggfuzz") (r "^0.6") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.6") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (t "cfg(not(fuzzing))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "09wlcmkp5gdki7h45j172j9ah76ma2hc6x43r7yq55138x87jsi5") (f (quote (("std" "alloc" "bolero-generator/std") ("rng" "rand" "bolero-engine/rng") ("default" "std" "rng") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.7.0 (c (n "bolero") (v "0.7.0") (d (list (d (n "bolero-afl") (r "^0.7") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.7") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.7") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "bolero-generator") (r "^0.7") (k 0)) (d (n "bolero-honggfuzz") (r "^0.7") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-kani") (r "^0.7") (d #t) (t "cfg(kani)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.7") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0727lzfvd0cqaskbaq3h0ywc74b793llklnllqa581rpcd44njz0") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.8.0 (c (n "bolero") (v "0.8.0") (d (list (d (n "bolero-afl") (r "^0.8") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.8") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.8") (f (quote ("rng"))) (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "bolero-generator") (r "^0.8") (k 0)) (d (n "bolero-honggfuzz") (r "^0.8") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-kani") (r "^0.8") (d #t) (t "cfg(kani)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.8") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "074hn9fq9d7iqm8l1ijxwk26hwain43bmihrpfyj5lkfyq4d71rk") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.9.0 (c (n "bolero") (v "0.9.0") (d (list (d (n "bolero-afl") (r "^0.9") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.9") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.9") (f (quote ("rng"))) (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "bolero-generator") (r "^0.9") (k 0)) (d (n "bolero-honggfuzz") (r "^0.9") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-kani") (r "^0.9") (d #t) (t "cfg(kani)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.9") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0fgfdy6w19q2mdb8rpcx4bhy4bqiwbvx2vh262dk6rpbkgwbjfzr") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("arbitrary" "bolero-generator/arbitrary") ("alloc" "bolero-generator/alloc"))))))

(define-public crate-bolero-0.10.0 (c (n "bolero") (v "0.10.0") (d (list (d (n "bolero-afl") (r "^0.10") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.10") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.10") (f (quote ("rng"))) (d #t) (t "cfg(fuzzing_random)") (k 0)) (d (n "bolero-engine") (r "^0.10") (f (quote ("rng"))) (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "bolero-generator") (r "^0.10") (k 0)) (d (n "bolero-honggfuzz") (r "^0.10") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-kani") (r "^0.10") (d #t) (t "cfg(kani)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.10") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(fuzzing_random)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0g5aagla2nz1lparh75qp18rg93xadn51k37j1bwvbyrmikyr7qg") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("arbitrary" "bolero-generator/arbitrary") ("alloc" "bolero-generator/alloc")))) (r "1.57.0")))

(define-public crate-bolero-0.10.1 (c (n "bolero") (v "0.10.1") (d (list (d (n "bolero-afl") (r "^0.10") (d #t) (t "cfg(fuzzing_afl)") (k 0)) (d (n "bolero-engine") (r "^0.10") (d #t) (k 0)) (d (n "bolero-engine") (r "^0.10") (f (quote ("rng"))) (d #t) (t "cfg(fuzzing_random)") (k 0)) (d (n "bolero-engine") (r "^0.10") (f (quote ("rng"))) (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "bolero-generator") (r "^0.10") (k 0)) (d (n "bolero-honggfuzz") (r "^0.10") (d #t) (t "cfg(fuzzing_honggfuzz)") (k 0)) (d (n "bolero-kani") (r "^0.10") (d #t) (t "cfg(kani)") (k 0)) (d (n "bolero-libfuzzer") (r "^0.10") (d #t) (t "cfg(fuzzing_libfuzzer)") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(fuzzing_random)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(any(fuzzing, kani)))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0crvljv3x4cwl6flmr75axzx535avlr6j7clmincq0a0dp58sbi1") (f (quote (("std" "alloc" "bolero-generator/std") ("default" "std") ("arbitrary" "bolero-generator/arbitrary") ("alloc" "bolero-generator/alloc")))) (r "1.57.0")))

