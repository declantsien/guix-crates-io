(define-module (crates-io bo tt bottom) #:use-module (crates-io))

(define-public crate-bottom-0.1.0-alpha.1 (c (n "bottom") (v "0.1.0-alpha.1") (d (list (d (n "assert_cmd") (r "^0.10") (d #t) (k 2)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "sysinfo") (r "^0.9.4") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "tui-temp-fork") (r "^0.6.2") (f (quote ("crossterm"))) (k 0)))) (h "1c81xbgwsmm41afwzcb3qjydvpmiim06pvnz4q15l5dxlfajyi20")))

(define-public crate-bottom-0.1.0-alpha.2 (c (n "bottom") (v "0.1.0-alpha.2") (d (list (d (n "assert_cmd") (r "^0.10") (d #t) (k 2)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.10.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "sysinfo") (r "^0.9.4") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "tui-temp-fork") (r "^0.6.2") (f (quote ("crossterm"))) (k 0)))) (h "01iinn5dk9qf8brjf8yrr21j871nf7bi5zqh3jbh8l9wh9ggh9rl")))

(define-public crate-bottom-0.1.0-alpha.3 (c (n "bottom") (v "0.1.0-alpha.3") (d (list (d (n "assert_cmd") (r "^0.10") (d #t) (k 2)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.11.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9.4") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "tui-temp-fork") (r "^0.6.4") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (k 0)))) (h "0gswq71i2s9v6i0nb8p8vs1q53z7q865kq3b1h6k5y3p6smvnxq5")))

(define-public crate-bottom-0.1.0-alpha.4 (c (n "bottom") (v "0.1.0-alpha.4") (d (list (d (n "assert_cmd") (r "^0.10") (d #t) (k 2)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.11.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9.4") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0-alpha.4") (d #t) (k 0)) (d (n "tui-temp-fork") (r "^0.6.4") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (k 0)))) (h "1219apsghb5kcqqgjjih38g2kn2p14rw6qiwki5v7ikp8mza0bvd")))

(define-public crate-bottom-0.1.0 (c (n "bottom") (v "0.1.0") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.2") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2.6") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0bi5h4ly1k8f40mzl2966zlk4cj9w11752cv7p4nkk9figf5y2bj")))

(define-public crate-bottom-0.1.1 (c (n "bottom") (v "0.1.1") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.2") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2.6") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0nag6s5gp6jrg5d6zv41bkl8cgd0a63s192qq2v2bqv8pw6ya4aq")))

(define-public crate-bottom-0.1.2 (c (n "bottom") (v "0.1.2") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fern") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.2") (d #t) (k 0)) (d (n "heim") (r "^0.0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0b7j8iqnjjwvx9sd2870ada2gfa9xh15lmvm8qz1r0cam5rc3573")))

(define-public crate-bottom-0.2.1 (c (n "bottom") (v "0.2.1") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.5.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.11") (d #t) (k 0)) (d (n "tokio") (r "^0.2.11") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (k 0)))) (h "0iqnkyz1cd7dxabck0kz5k429ksa01a1pi3l8bpjc2mhk740j161")))

(define-public crate-bottom-0.2.2 (c (n "bottom") (v "0.2.2") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.5.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.11") (d #t) (k 0)) (d (n "tokio") (r "^0.2.11") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (k 0)))) (h "0drr8r8inzxiqz3agkxyp1hncllywn82h1faib8pns1mjwc3559x")))

(define-public crate-bottom-0.3.0 (c (n "bottom") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.12") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.5.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "0v3z4l3bc46aql9qi6ly5my719qna0km67d564zdnkm4a8vaffh7")))

(define-public crate-bottom-0.4.0 (c (n "bottom") (v "0.4.0") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.5.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1pz6hij74zknnyrc3mkgp12dpp4br23k0sr1knxz8lh87i2wmm0s")))

(define-public crate-bottom-0.4.1 (c (n "bottom") (v "0.4.1") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.5.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1ipdwhw8mpxdrphwzdxd1pi5gb0bykj7zap4qdf9zm1a876x5zp5")))

(define-public crate-bottom-0.4.2 (c (n "bottom") (v "0.4.2") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.5.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "1fl4b3zlr9xcbp811vrn4yfsv7fpm4gvfhjd52grpgdskancmgpm")))

(define-public crate-bottom-0.4.3 (c (n "bottom") (v "0.4.3") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.5.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "0m2h2c9b8mjv4qmwqanxxjy6p7f96qznhb7jxcbf039j2gryky16")))

(define-public crate-bottom-0.4.4 (c (n "bottom") (v "0.4.4") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.6.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "15kb5ix2yq0iibk938hh4kzvi4j0918p9cgn3vqm81jjn0sg3ac8")))

(define-public crate-bottom-0.4.5 (c (n "bottom") (v "0.4.5") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.6.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(windows)") (k 0)))) (h "129vxmjmz1yf0lq4vwvcvx27vi5avvfyyv5ccplyvx95gpj0d227")))

(define-public crate-bottom-0.4.6 (c (n "bottom") (v "0.4.6") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-clippy"))) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.7.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1bs5kz1alz9xs2dghm0farc57hbcgqhn8r13qym3vvs8kn2wi9jw")))

(define-public crate-bottom-0.4.7 (c (n "bottom") (v "0.4.7") (d (list (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.5") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-clippy"))) (k 2)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "heim") (r "^0.0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tui") (r "^0.9.5") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.7.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1bjrihgigwk25rnvy01zjcmlmji54fkkj7nbqnqp307pm51m2zbm")))

(define-public crate-bottom-0.5.0 (c (n "bottom") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.7") (d #t) (k 0)) (d (n "heim") (r "^0.0.11") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "tui") (r "^0.13.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.7.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1g9q97nyi8m0cdmmpdsd6pb69q2mzgkvd24y4ym9v1022sdk3b4s") (y #t)))

(define-public crate-bottom-0.5.1 (c (n "bottom") (v "0.5.1") (d (list (d (n "anyhow") (r ">=1.0.34, <2.0.0") (d #t) (k 0)) (d (n "assert_cmd") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "backtrace") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "battery") (r ">=0.7.8, <0.8.0") (d #t) (k 0)) (d (n "cargo-husky") (r ">=1.0.0, <2.0.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r ">=0.4.19, <0.5.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 1)) (d (n "crossterm") (r ">=0.18.2, <0.19.0") (d #t) (k 0)) (d (n "ctrlc") (r ">=3.1.0, <4.0.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "fern") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.8, <0.4.0") (d #t) (k 0)) (d (n "heim") (r ">=0.0.11, <0.0.12") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "predicates") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "regex") (r ">=1.4.2, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r ">=0.15.3, <0.16.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.7, <0.6.0") (d #t) (k 0)) (d (n "tui") (r ">=0.13.0, <0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "winapi") (r ">=0.3.9, <0.4.0") (d #t) (t "cfg(windows)") (k 0)))) (h "0akd3lhkifypr5v74p2m6vzd9mibflygdbz2dgfc0s28mc1gfwh7") (y #t)))

(define-public crate-bottom-0.5.2 (c (n "bottom") (v "0.5.2") (d (list (d (n "anyhow") (r ">=1.0.34, <2.0.0") (d #t) (k 0)) (d (n "assert_cmd") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "backtrace") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "battery") (r ">=0.7.8, <0.8.0") (d #t) (k 0)) (d (n "cargo-husky") (r ">=1.0.0, <2.0.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r ">=0.4.19, <0.5.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 1)) (d (n "crossterm") (r ">=0.18.2, <0.19.0") (d #t) (k 0)) (d (n "ctrlc") (r ">=3.1.0, <4.0.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "fern") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.8, <0.4.0") (d #t) (k 0)) (d (n "heim") (r ">=0.0.11, <0.0.12") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "once_cell") (r ">=1.5.2, <2.0.0") (d #t) (k 0)) (d (n "predicates") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "regex") (r ">=1.4.2, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r ">=0.15.3, <0.16.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.7, <0.6.0") (d #t) (k 0)) (d (n "tui") (r ">=0.13.0, <0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "winapi") (r ">=0.3.9, <0.4.0") (d #t) (t "cfg(windows)") (k 0)))) (h "014cqxsng5yqm2y2669hylgag3kxb7cxv7l0wa7nnzk9kv767h45") (y #t)))

(define-public crate-bottom-0.5.3 (c (n "bottom") (v "0.5.3") (d (list (d (n "anyhow") (r ">=1.0.34, <2.0.0") (d #t) (k 0)) (d (n "assert_cmd") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "backtrace") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "battery") (r ">=0.7.8, <0.8.0") (d #t) (k 0)) (d (n "cargo-husky") (r ">=1.0.0, <2.0.0") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r ">=0.4.19, <0.5.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 1)) (d (n "crossterm") (r ">=0.18.2, <0.19.0") (d #t) (k 0)) (d (n "ctrlc") (r ">=3.1.0, <4.0.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "fern") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.8, <0.4.0") (d #t) (k 0)) (d (n "heim") (r ">=0.0.11, <0.0.12") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "once_cell") (r ">=1.5.2, <2.0.0") (d #t) (k 0)) (d (n "predicates") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "regex") (r ">=1.4.2, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r ">=0.15.3, <0.16.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.7, <0.6.0") (d #t) (k 0)) (d (n "tui") (r ">=0.13.0, <0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "winapi") (r ">=0.3.9, <0.4.0") (d #t) (t "cfg(windows)") (k 0)))) (h "141sr67aqdwingp5sj46paf9hj5zb4lab8jdn5mlhmnda2iyn5ni") (y #t)))

(define-public crate-bottom-0.5.4 (c (n "bottom") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "heim") (r "^0.0.11") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "tui") (r "^0.13.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.7.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "11fzykksq6fjphx7kypqvbs370rns9hvp6hbc66ffgj4cwphk47y")))

(define-public crate-bottom-0.5.5 (c (n "bottom") (v "0.5.5") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "heim") (r "^0.0.11") (d #t) (t "cfg(not(any(target_arch = \"arm\", target_arch = \"aarch64\")))") (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "tui") (r "^0.13.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.7.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "1fb3k79a8x6qmdnfig38jxybzzlyiqlp7h9f09kcyajdnhs44khw") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.5.6 (c (n "bottom") (v "0.5.6") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "assert_cmd") (r "~1.0") (d #t) (k 2)) (d (n "backtrace") (r "~0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("disk" "memory" "net" "sensors"))) (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "tui") (r "^0.13.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "0yf8q47fqv0dyd2x0zsfjifmwqkym31aj1qya1zc0l9wf35imqw6") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.5.7 (c (n "bottom") (v "0.5.7") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.2") (d #t) (k 2)) (d (n "backtrace") (r "~0.3") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("disk" "memory" "net" "sensors"))) (d #t) (k 0)) (d (n "indexmap") (r "~1.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.6") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "tui") (r "^0.13.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)))) (h "0q6z0pv1jdz6iz02avfldpbkasn15fx840f3q7vd82jrifbr9l4p") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.6.0 (c (n "bottom") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.17.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06zpazaf9clcsdmmcdj6djdq5ij639n5zghs9k8jbgxcr87pbfpz") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.6.1 (c (n "bottom") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.17.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nh4glsvi63dcyiy7gabzdzxrbvf0wy61h8hbrm4f57y8jqfv0fv") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.6.2 (c (n "bottom") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.18.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "187sg7kmgs3y3c1y3i0irz38xb71b6c70niphw4jim3nv9gxl3gp") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.6.3 (c (n "bottom") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.18.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0jfj9kg8pgvm7nzbflvhwbl35jg7m87pf68h866ma02a0bm4f7yd") (f (quote (("default" "fern" "log"))))))

(define-public crate-bottom-0.6.4 (c (n "bottom") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.10.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.18.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rcarv232svylkhj42hfw52rz29k1fnys72xkx0facdafpllfdw5") (f (quote (("default" "fern" "log" "battery"))))))

(define-public crate-bottom-0.6.5 (c (n "bottom") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.11.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.18.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("formatting" "local-offset" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mjcpygbnnk0bgvc39zvgg8apwd488d9jnx1qjs34k5mcbgrzzzn") (f (quote (("default" "fern" "log" "battery"))))))

(define-public crate-bottom-0.6.6 (c (n "bottom") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.11.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.18.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("formatting" "local-offset" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rfg4n9qldb3lifnjyvjknn6rh820ilyppkzbynb2svzdqv265jf") (f (quote (("default" "fern" "log" "battery"))))))

(define-public crate-bottom-0.6.7 (c (n "bottom") (v "0.6.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.11.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.23.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wgwd1lg8z2p4k7m5zb2c5h8ri11kkw5j2qhxzfw26yrimklhmvm") (f (quote (("default" "fern" "log" "battery"))))))

(define-public crate-bottom-0.6.8 (c (n "bottom") (v "0.6.8") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.59") (d #t) (k 0)) (d (n "battery") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 1)) (d (n "crossterm") (r "^0.18.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "procfs") (r "^0.11.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysinfo") (r "^0.23.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "179638hsylpsr4fysdsbxipagrsp87mgr60gsf3y7c1y7kwagxxy") (f (quote (("default" "fern" "log" "battery"))))))

(define-public crate-bottom-0.7.0 (c (n "bottom") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.65") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.1.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.1.6") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.14.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "starship-battery") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.2") (o #t) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "^0.26.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0padgdzkbx3zrpna7m2dsas29xvg3zjly3ycxjnn0chj1jyi39vy") (f (quote (("zfs" "sysctl") ("nvidia" "nvml-wrapper") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "fern" "log" "battery" "gpu" "zfs") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.7.1 (c (n "bottom") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.65") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.1.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.1.6") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.14.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "starship-battery") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.2") (o #t) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "^0.26.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bx5v0nlp729mfr51s5qccafdc15rm50ay40dq4ic8hvv916278g") (f (quote (("zfs" "sysctl") ("nvidia" "nvml-wrapper") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "fern" "log" "battery" "gpu" "zfs") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.8.0 (c (n "bottom") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.12") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^3.1.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.1.6") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.4") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net" "sensors"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory" "net"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heim") (r "^0.1.0-rc.1") (f (quote ("cpu" "disk" "memory"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.14.2") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "starship-battery") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.2") (o #t) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "^0.26.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_System_Threading" "Win32_Foundation"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "000f29azrsn3y934rai0gq53hivynxvmyp93y8i58jjdyw5aq869") (f (quote (("zfs" "sysctl") ("nvidia" "nvml-wrapper") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "fern" "log" "battery" "gpu" "zfs") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.0 (c (n "bottom") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.2.1") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.10") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.143") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "procfs") (r "^0.15.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.20.1") (d #t) (k 0) (p "ratatui")) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qa8yr0wa7kjk0kzm22zyvc8m23l1r7wgb2dkqdg99z32z023dlb") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.1 (c (n "bottom") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.2.3") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.10") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.5") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.143") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "procfs") (r "^0.15.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.20.1") (d #t) (k 0) (p "ratatui")) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cv6gp8aa5wclb1wkm1rhd2jbc7jj67q3yhmmnlfvw5n0jw3rmdi") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.2 (c (n "bottom") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.1") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.2") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.3.1") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.12") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.18") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rustix") (r "^0.37.19") (f (quote ("fs" "param" "process"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.22") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.21.0") (d #t) (k 0) (p "ratatui")) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1n95nydv87f228qbxb553awg67gipm6jypfrxdpraz1ajj9g55c2") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.3 (c (n "bottom") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.3.1") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.12") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.146") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.18") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rustix") (r "^0.37.20") (f (quote ("fs" "param" "process"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.22") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.21.0") (d #t) (k 0) (p "ratatui")) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0r06ad5wax0391nyn4f71h02ynrnlcfwc6lqfd46dfy3qmvgdy0i") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.4 (c (n "bottom") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.3.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.12") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rustix") (r "^0.38.4") (f (quote ("fs" "param" "process"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.175") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.22.0") (d #t) (k 0) (p "ratatui")) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15s0bsviprbchywrkisr7bwygd7gnj7wh79r19p3zmk2w8hx1asf") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.5 (c (n "bottom") (v "0.9.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.3.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.12") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "rustix") (r "^0.38.8") (f (quote ("fs" "param" "process"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "<=1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "time") (r "^0.3.26") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.22.0") (d #t) (k 0) (p "ratatui")) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16kw5x5p7h94s9d306phrixsxz4x6gj9mg8mf86x9cxamcacnv8m") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

(define-public crate-bottom-0.9.6 (c (n "bottom") (v "0.9.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.69") (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5.0") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("default" "cargo" "wrap_help"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.3.2") (d #t) (k 1)) (d (n "clap_mangen") (r "^0.2.12") (d #t) (k 1)) (d (n "concat-string") (r "^1.0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.0") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "filedescriptor") (r "^0.8.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kstring") (r "^2.0.0") (f (quote ("arc"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nvml-wrapper") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "rustix") (r "^0.38.9") (f (quote ("fs" "param" "process"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "=1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "starship-battery") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "sysctl") (r "^0.5.4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "sysinfo") (r "=0.29.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "time") (r "^0.3.26") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tui") (r "^0.22.0") (d #t) (k 0) (p "ratatui")) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_Ioctl" "Win32_System_ProcessStatus" "Win32_System_Threading"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rr74py6d4hm0mnzvr13q7grrjgxhnzkqyqjclgc2zfi8b65wbf8") (f (quote (("zfs") ("nvidia" "nvml-wrapper") ("logging" "fern" "log") ("gpu" "nvidia") ("deploy" "battery" "gpu" "zfs") ("default" "deploy") ("battery" "starship-battery"))))))

