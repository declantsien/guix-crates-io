(define-module (crates-io bo ok bookorg) #:use-module (crates-io))

(define-public crate-bookorg-0.1.0 (c (n "bookorg") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("std" "derive" "help"))) (k 0)) (d (n "cow-utils") (r "^0.1.3") (d #t) (k 0)) (d (n "funcfmt") (r "^0.3.0") (d #t) (k 0)) (d (n "id3") (r "^1.10.0") (k 0)) (d (n "jwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("std"))) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winerror"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0j55a4b488y42mb9281b04gkha7bq4fr28bzz48k476d77rif3fv") (r "1.65.0")))

(define-public crate-bookorg-1.0.0 (c (n "bookorg") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("std" "derive" "help"))) (k 0)) (d (n "cow-utils") (r "^0.1.3") (d #t) (k 0)) (d (n "epub") (r "^2.1.1") (d #t) (k 0)) (d (n "funcfmt") (r "^0.3.0") (d #t) (k 0)) (d (n "jwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (f (quote ("std"))) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winerror"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1pj88l88vx9i60zljb55g0x17j0l8nb2swpxih2z135174cjhwdr") (r "1.65.0")))

