(define-module (crates-io gu pp guppy) #:use-module (crates-io))

(define-public crate-guppy-0.0.0 (c (n "guppy") (v "0.0.0") (h "0my45y33l65nnjs6d3xr33gpvssy1sw7knzhb9y6dvv2ri126q9i")))

(define-public crate-guppy-0.1.1 (c (n "guppy") (v "0.1.1") (d (list (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.1.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "1zw1knga2fl2d3mb7vwwih3ai387aic948r2abnh3yw9vbqrlcpp")))

(define-public crate-guppy-0.1.2 (c (n "guppy") (v "0.1.2") (d (list (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.1.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0jmcs9cky3hvd6wzhn50c6w112jnbancia16w74fmila09whpfzi")))

(define-public crate-guppy-0.1.3 (c (n "guppy") (v "0.1.3") (d (list (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "proptest09") (r "^0.9") (o #t) (d #t) (k 0) (p "proptest")) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "1sz7rkm06ymkamchv4glni5j8bfagn52wxkkcf885cpinrc4gkh0")))

(define-public crate-guppy-0.1.4 (c (n "guppy") (v "0.1.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "proptest09") (r "^0.9") (o #t) (d #t) (k 0) (p "proptest")) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0cqi5pdribgqcbvsnx2xmpkyyc8bzgz55k60ypaqrv0m9im4y24k")))

(define-public crate-guppy-0.1.5 (c (n "guppy") (v "0.1.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0m2wjp29lck7pbmgn5qlw90dh37w8rbn8v3bbxyn3gxxdlsqwnd9") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.1.6 (c (n "guppy") (v "0.1.6") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "00k14gm83rw4sy7blwjlpa6anaa7s8dn8w11rm9jhhxxaa35byj7") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.1.7 (c (n "guppy") (v "0.1.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.0") (d #t) (k 0)))) (h "0inin373ir19lp650fs1gq107s8smj2bdsfmwkign2c0xkhv3raz") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.1.8 (c (n "guppy") (v "0.1.8") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.0") (d #t) (k 0)))) (h "16n8ygk74dd1crcmn9dn5j7ya3b7dp4fcas3np92a5w15r7acbnz") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.2.0 (c (n "guppy") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.0") (d #t) (k 0)))) (h "1kb8jdai60k04lpwx446byvdi7lcg63d79d1gsv02kp6qjf8n05c") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.2.1 (c (n "guppy") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.0") (d #t) (k 0)))) (h "0djl2k6s3rxg1ya7h5ib7aw9bkaq3g6ckdy11rrv2hmvg8xgqq6f") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.3.0 (c (n "guppy") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.0") (d #t) (k 0)))) (h "0sg2ic10nn484cwwyn2c41x5k786j0ar9pzq705i1ky7kwbg4d0r") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.3.1 (c (n "guppy") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.3") (d #t) (k 0)))) (h "194wzgw265rs1ygqlxfpnmr7fxpql80sh2dirlh2f3fxk5b7m8bj") (f (quote (("proptest09" "proptest" "proptest-derive"))))))

(define-public crate-guppy-0.4.0 (c (n "guppy") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.4") (d #t) (k 0)))) (h "1rvi7ympdhpxk5476gfxcd60y6l7a9jgzalwmam6l20qnr89ja24") (f (quote (("proptest09" "proptest" "proptest-derive" "target-spec/proptest09"))))))

(define-public crate-guppy-0.4.1 (c (n "guppy") (v "0.4.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.9") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "target-spec") (r "^0.2.4") (d #t) (k 0)))) (h "1xm5smfpy9z5kh2h7wfcsd56x1x9qhis43hc5yw9n2blxwssnc58") (f (quote (("proptest09" "proptest" "proptest-derive" "target-spec/proptest09"))))))

(define-public crate-guppy-0.5.0-rc.1 (c (n "guppy") (v "0.5.0-rc.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.10") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.3.0") (d #t) (k 0)))) (h "06iry5zvihnh536i2gch7n81px9sx1fmz611l3bjq1xbkalb767y") (f (quote (("summaries" "guppy-summaries") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.5.0 (c (n "guppy") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.10") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.4.0") (d #t) (k 0)))) (h "1972kbm7pqkwavsg0ssflakc83pcs2dq268kp7igf68jd3rz0n9b") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.6.1 (c (n "guppy") (v "0.6.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.12.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.5.0") (d #t) (k 0)))) (h "1i77w6xw8b9cvpljw32qbkrygg6j1v7kx37nyfas363lvcwqwrd0") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.6.2 (c (n "guppy") (v "0.6.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.12.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.5.0") (d #t) (k 0)))) (h "130763fy3658064j8lvr35kd6rk0q7i9pl48ssrw9yhk1w8xl8kv") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.6.3 (c (n "guppy") (v "0.6.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.12.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.5.0") (d #t) (k 0)))) (h "0mh6pi6y1176jkq6bns0x7hldg1xbdp39l249ww8ndibysj2yc57") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.7.0 (c (n "guppy") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.12.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.6.0") (d #t) (k 0)))) (h "1bx41l5nrdd1wm451qjld5am1ldm0ab02618bgkar9xfbs4n7k33") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.7.1 (c (n "guppy") (v "0.7.1") (d (list (d (n "cargo_metadata") (r "^0.12.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.6.1") (d #t) (k 0)))) (h "0sca6mf2nlpwyw12fdvxy77ra268bx41dflkm46vnf2d1sa8b5p7") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.7.2 (c (n "guppy") (v "0.7.2") (d (list (d (n "cargo_metadata") (r "^0.12.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.6.1") (d #t) (k 0)))) (h "1y5nxvdz9ywfbvkf3k38yd41lb3v2f5b7r4lahq8dcqqibinq75z") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest010" "proptest" "proptest-derive" "target-spec/proptest010"))))))

(define-public crate-guppy-0.8.0 (c (n "guppy") (v "0.8.0") (d (list (d (n "camino") (r "^1.0.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.12.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.6.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.7.0") (d #t) (k 0)))) (h "046igjbnnw9hb361ir8p7n0hx08w5b33vp3l96361mi7x3fbsk7c") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.9.0 (c (n "guppy") (v "0.9.0") (d (list (d (n "camino") (r "^1.0.3") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.2.0") (k 0)) (d (n "guppy-summaries") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.7.0") (d #t) (k 0)))) (h "0cl63dg2690ykaaaz7bs49ra7pb5virs2xayd5fm5zygc93i580g") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.10.0 (c (n "guppy") (v "0.10.0") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.8.0") (d #t) (k 0)))) (h "1f3bd4plg9d7ls48szbn42p46zwb500a1c4wiy1wlzqnkn18lapd") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (y #t)))

(define-public crate-guppy-0.10.1 (c (n "guppy") (v "0.10.1") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "supercow") (r "^0.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.8.0") (d #t) (k 0)))) (h "13l4h2v3inhms925slbkv1zpnkswmwif324gchzlrb4lnvs0r6bn") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.11.0 (c (n "guppy") (v "0.11.0") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (o #t) (d #t) (k 0)))) (h "1npxq0mw3sna4rkqv0ml2rgsir8mih3h2dnv8xq89zxlvcpwj0rj") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (y #t)))

(define-public crate-guppy-0.11.1 (c (n "guppy") (v "0.11.1") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (o #t) (d #t) (k 0)))) (h "12prgxrk36m3cxrcdy3d69bdv4haf4zg2ml1sx1lz8c0jr93n09a") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.11.2 (c (n "guppy") (v "0.11.2") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (o #t) (d #t) (k 0)))) (h "0mr6xka1l0xqr5zk5ic97g7iq8dnkhbbl275zvql0k4ylv5p8ijn") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.11.3 (c (n "guppy") (v "0.11.3") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (o #t) (d #t) (k 0)))) (h "0nch8h6h27kv7qc0h9qadxqwkm3c1ip3b49713qcylk8gxfnw60j") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.0 (c (n "guppy") (v "0.12.0") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (o #t) (d #t) (k 0)))) (h "11lnf7nrl45kzwq2gi75209l5dvc0idm625488hgfq7c1mn3snyg") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.1 (c (n "guppy") (v "0.12.1") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0m7xbpjb3568nj8r3wj5f8v2jbsn82fpfrdwdmlricybkgyh6dqm") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.2 (c (n "guppy") (v "0.12.2") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1zga5giqqxzlh2jjk8xjkdgiaw7p3yh8iz4ywksc4dx4and4l4wz") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.3 (c (n "guppy") (v "0.12.3") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "workspace-hack") (r "^0.1") (d #t) (k 0)))) (h "1m60p553i7ibxg432ryfx0ljx6s5bpbabg25ywcx66c51qxz8a66") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.4 (c (n "guppy") (v "0.12.4") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "00kxby9dfz2nvwvpkw200czla7x3f0pfhymiangs533ahwhlhf0q") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.5 (c (n "guppy") (v "0.12.5") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0k8rs42makrrxabybrxy95faapsxs0va5wlsgnfx765z28jnwjlf") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.12.6 (c (n "guppy") (v "0.12.6") (d (list (d (n "camino") (r "^1.0.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.0") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "target-spec") (r "^0.9.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0bnxm9miqq33216wq7xy24i1w8s8fqa6hidsyk33s6pxrvyqc81d") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.13.0 (c (n "guppy") (v "0.13.0") (d (list (d (n "camino") (r "^1.0.7") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.1") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.1") (k 0)) (d (n "guppy-summaries") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "13b7yw6nw7s5nmb96hx51zpzah787lx3abi1plww1q54isvvyw35") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1"))))))

(define-public crate-guppy-0.14.0 (c (n "guppy") (v "0.14.0") (d (list (d (n "camino") (r "^1.0.7") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.2") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.1") (k 0)) (d (n "guppy-summaries") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0hclb7cyf4dkc77hccyfc60gv7kqdyc5cpx2qkmvmizx5kbjji5g") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.56")))

(define-public crate-guppy-0.14.1 (c (n "guppy") (v "0.14.1") (d (list (d (n "camino") (r "^1.0.7") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.2") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.1") (k 0)) (d (n "guppy-summaries") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0iiiflpbijn02bay2zrc1f71xm594ix9hp0360vin12mcpvs9gfb") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.56")))

(define-public crate-guppy-0.14.2 (c (n "guppy") (v "0.14.2") (d (list (d (n "camino") (r "^1.0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.2") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.1") (k 0)) (d (n "guppy-summaries") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "121j92wyh7vcs5rgwdlckz6pm6blj5c5va436bvix6p0p0xmw8n7") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.56")))

(define-public crate-guppy-0.14.3 (c (n "guppy") (v "0.14.3") (d (list (d (n "camino") (r "^1.0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.2") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.1") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0c33f6zxvsjk10ci1yzk5l0h16ygrar6wy7by7digrlmhjrhyff4") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.58")))

(define-public crate-guppy-0.14.4 (c (n "guppy") (v "0.14.4") (d (list (d (n "camino") (r "^1.1.1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.2.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0y7d0w7ndjnm1spjf2gwzznsk68inrqahvfilpd83myglb2a48fw") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.58")))

(define-public crate-guppy-0.15.0 (c (n "guppy") (v "0.15.0") (d (list (d (n "camino") (r "^1.1.1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.2.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "10p07f21kk54jzqr9q9sl7j32y863wzwnb2cj8zascmmimcz6lc7") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.58")))

(define-public crate-guppy-0.15.1 (c (n "guppy") (v "0.15.1") (d (list (d (n "camino") (r "^1.1.1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.3") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.2.2") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "166qixc8i7yyi0pid2gjhjfg85nr1c24ah3jiw8621cqldddib29") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.58")))

(define-public crate-guppy-0.15.2 (c (n "guppy") (v "0.15.2") (d (list (d (n "camino") (r "^1.1.2") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^1.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1iwih92gp14qnakpvzfb59ygmr57yms68q4i2q3jwja1c1qs48pq") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.62")))

(define-public crate-guppy-0.16.0 (c (n "guppy") (v "0.16.0") (d (list (d (n "camino") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^2.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0i74aivblcnbw6g89hb06im04j6mm993d1n1jw6h2kzdgc9zc23r") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.66")))

(define-public crate-guppy-0.17.0 (c (n "guppy") (v "0.17.0") (d (list (d (n "camino") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1jvq8wxaflzrdyzsp7v8wdrmjpbhcvvr7l7zgjz1yf6rn2v9l892") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.66")))

(define-public crate-guppy-0.17.1 (c (n "guppy") (v "0.17.1") (d (list (d (n "camino") (r "^1.1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.178") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "18qzshin43qar3w1kprchphcy36ayw14z14kqkyqibxnydzssc88") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.66")))

(define-public crate-guppy-0.17.2 (c (n "guppy") (v "0.17.2") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1hd91yzl9dj786y3q5asmyk4j3adxw6kyfdjhfnq6qxkyqz80g09") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.70")))

(define-public crate-guppy-0.17.3 (c (n "guppy") (v "0.17.3") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "0wfqjzdl2hf6zyd1ayzpir4xnvkfi3v5zyf2fzbb95rfw82pvrzj") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.70")))

(define-public crate-guppy-0.17.4 (c (n "guppy") (v "0.17.4") (d (list (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "1p8f6566vmgnx04883b6aav7n9mbrlk6dsdrlxlc9x59k8510jhi") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.70")))

(define-public crate-guppy-0.17.5 (c (n "guppy") (v "0.17.5") (d (list (d (n "ahash") (r "^0.8.7") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "debug-ignore") (r "^1.0.5") (d #t) (k 0)) (d (n "fixedbitset") (r "^0.4.2") (k 0)) (d (n "guppy-summaries") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "guppy-workspace-hack") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "nested") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "target-spec") (r "^3.1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)))) (h "05zky21z8hdw2pnj0dgvnmp3q59wg24igwbf0x5876sp6ivrms9l") (f (quote (("summaries" "guppy-summaries" "target-spec/summaries" "toml") ("rayon1" "rayon") ("proptest1" "proptest" "proptest-derive" "target-spec/proptest1")))) (r "1.73")))

