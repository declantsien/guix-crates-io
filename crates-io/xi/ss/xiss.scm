(define-module (crates-io xi ss xiss) #:use-module (crates-io))

(define-public crate-xiss-0.0.1 (c (n "xiss") (v "0.0.1") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "notify-debouncer-mini") (r "^0.2.1") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.30") (d #t) (k 0)) (d (n "swc_css") (r "^0.152") (d #t) (k 0)) (d (n "swc_error_reporters") (r "^0.14") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xiss-map") (r "^0.0.1") (d #t) (k 0)))) (h "1vj6svhfd8n3lvgkyrqm9g5rnjab7234k35lp3255crgarnwkk4n")))

