(define-module (crates-io bn um bnum) #:use-module (crates-io))

(define-public crate-bnum-0.1.0 (c (n "bnum") (v "0.1.0") (d (list (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0y4zhgkxqfa4iks3c1qhy9i5a7fa41cj4wfnyvbli53q8jlq4kk0") (f (quote (("u8_digit") ("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.2.0 (c (n "bnum") (v "0.2.0") (d (list (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1wr3f9bbc4lvi058y02z2x0mx68c0dzryhhm2d86zs1qs18i1j6x") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.3.0 (c (n "bnum") (v "0.3.0") (d (list (d (n "num-integer") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1qiy146kifkjxfwbnbcfz1zpn6kdb9wy4wq20ykczrmph4809igg") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.4.0 (c (n "bnum") (v "0.4.0") (d (list (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (k 0)))) (h "1nc0jpxmzzy9px4jbf0w5xpyhbblfbz6m30nbp0kfz1vmxwn6iy1") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.5.0 (c (n "bnum") (v "0.5.0") (d (list (d (n "num-integer") (r "^0.1.44") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (k 0)))) (h "058gdzibkk7xhmcg2qmjlm7pvzpqr3zc5hjw2b8yixkfbz21xv99") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.6.0 (c (n "bnum") (v "0.6.0") (d (list (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)))) (h "1wx7hy4gjmrqi931cdvyqkl02w4lrk3hn8hy1b1xylfgm8ml2rka") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.7.0 (c (n "bnum") (v "0.7.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (o #t) (k 0)) (d (n "paste") (r "^1.0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)))) (h "0lz6dkdl4ldyzrafn1w9n97j0nx2k2iamnmp5037jgyyzaj42lc4") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.8.0 (c (n "bnum") (v "0.8.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (k 0)))) (h "0l4k621ibxa9hk65lgzrvw96wlr7j25p9nlybzqapmn0gx9492hj") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.9.0 (c (n "bnum") (v "0.9.0") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (k 0)) (d (n "valuable") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (k 0)))) (h "0sg37sa9yjmx3sb7r7lljdgxsm23rs9n0y0hp70cqis8sj7aybvk") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.9.1 (c (n "bnum") (v "0.9.1") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (k 0)) (d (n "valuable") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (k 0)))) (h "1sdc2cj2x7g31rhllkdxikmklqb6x1b8agfxm2wlbsrqs2wnl28a") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array")))) (r "1.65")))

(define-public crate-bnum-0.10.0 (c (n "bnum") (v "0.10.0") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (k 0)) (d (n "valuable") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (k 0)))) (h "0pvwx0539iy5lw7xqqgkc4gqr9sq1k5s9sysighs6dwmwd2k75an") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array")))) (r "1.65")))

(define-public crate-bnum-0.8.1 (c (n "bnum") (v "0.8.1") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (k 0)))) (h "07dk2ng4rsw38n03w82ij4yp8a7814f4izpjfx90pj4zpfv0i45b") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array"))))))

(define-public crate-bnum-0.11.0 (c (n "bnum") (v "0.11.0") (d (list (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("min_const_gen" "small_rng" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde-big-array") (r "^0.5") (o #t) (k 0)) (d (n "valuable") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (k 0)))) (h "1457svpk7q3wwnfldzqkzfnifqvnvpnpzkx8p342mrkf7wcflc9y") (f (quote (("numtraits" "num-integer" "num-traits") ("nightly") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array")))) (r "1.65")))

