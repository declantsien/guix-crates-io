(define-module (crates-io we bi webid) #:use-module (crates-io))

(define-public crate-webid-0.1.0 (c (n "webid") (v "0.1.0") (d (list (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "gdp_rs") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "headers") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "http_uri") (r "^1.0.1") (f (quote ("sophia"))) (k 0)) (d (n "iri-string") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "rdf_dynsyn") (r "^0.3.1") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream" "rustls-tls"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.167") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sophia_api") (r "^0.8.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("attributes"))) (d #t) (k 0)))) (h "0h1pgw3j1py0hggyw7w1pr2w2x9pwqqir0c1mlrrwdwm5kik5y1d") (s 2) (e (quote (("sophia" "dep:sophia_api") ("serde" "dep:serde" "http_uri/serde") ("profile-req-agent" "dep:reqwest" "invariants" "dep:rdf_dynsyn" "dep:headers" "dep:mime" "dep:futures") ("invariants" "http_uri/invariants" "dep:gdp_rs"))))))

