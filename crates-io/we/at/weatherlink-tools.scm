(define-module (crates-io we at weatherlink-tools) #:use-module (crates-io))

(define-public crate-weatherlink-tools-0.1.0 (c (n "weatherlink-tools") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.2") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.1") (f (quote ("server"))) (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("server-auto" "tokio"))) (d #t) (k 0)) (d (n "mdns-sd") (r "^0.10") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (k 0)) (d (n "rumqttc") (r "^0.23") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "19ym6nxxic7n2zc3ik3kp1nxf1cdr0mm5vfylfz7nn553rsd2cag")))

