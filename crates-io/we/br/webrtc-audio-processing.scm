(define-module (crates-io we br webrtc-audio-processing) #:use-module (crates-io))

(define-public crate-webrtc-audio-processing-0.1.0 (c (n "webrtc-audio-processing") (v "0.1.0") (d (list (d (n "webrtc-audio-processing-sys") (r "^0.1.1") (d #t) (k 0)))) (h "1n66zy7m9arbw351h86p1axf34gwnvgp8dlrrxxgavl5z8ffylxi") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.1.1 (c (n "webrtc-audio-processing") (v "0.1.1") (d (list (d (n "webrtc-audio-processing-sys") (r "^0.1.2") (d #t) (k 0)))) (h "034m5by5n03r1wcaqzvy81j8kxx57bmxfbzlmjzbqf40smmymy9g") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.1.2 (c (n "webrtc-audio-processing") (v "0.1.2") (d (list (d (n "webrtc-audio-processing-sys") (r "^0.1.3") (d #t) (k 0)))) (h "0bdv881p6nrp5x60alw8s6w5ykyswcm4hpl3s1a6ngxshmprkhbd") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.2.0 (c (n "webrtc-audio-processing") (v "0.2.0") (d (list (d (n "webrtc-audio-processing-sys") (r "^0.2.0") (d #t) (k 0)))) (h "04qzmcfjdhw8llhx017a66by14l1x37f9z4v86mai2mb3f1jy73j") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.3.0 (c (n "webrtc-audio-processing") (v "0.3.0") (d (list (d (n "ctrlc") (r "^3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "portaudio") (r "^0.7") (d #t) (k 2)) (d (n "webrtc-audio-processing-sys") (r "^0.3.0") (d #t) (k 0)))) (h "1plwd0jp8mzm72hsdnz248hxdv1igqkxlna472wk9yjz9zm8s1p9") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.3.1 (c (n "webrtc-audio-processing") (v "0.3.1") (d (list (d (n "ctrlc") (r "^3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "portaudio") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "webrtc-audio-processing-sys") (r "^0.3.0") (d #t) (k 0)))) (h "1vsz7qkj8pq52g8w7myv2i2xjaxmjgs30vlq5gvmvr59q2ncnrb1") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde" "serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.3.2 (c (n "webrtc-audio-processing") (v "0.3.2") (d (list (d (n "ctrlc") (r "^3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "portaudio") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "webrtc-audio-processing-sys") (r "^0.3.0") (d #t) (k 0)))) (h "16j91438hbqv3xq53qn01xw14sajz8c0zk4rf26kgh61dh4pk7id") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde" "serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.3.3 (c (n "webrtc-audio-processing") (v "0.3.3") (d (list (d (n "ctrlc") (r "^3") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "portaudio") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "webrtc-audio-processing-sys") (r "^0.3.2") (d #t) (k 0)))) (h "07m004amam97fwy5ma0dln9684b590rjcizb9bw65q1z7mfijzdh") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde" "serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

(define-public crate-webrtc-audio-processing-0.4.0 (c (n "webrtc-audio-processing") (v "0.4.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 2)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "json5") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "portaudio") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "webrtc-audio-processing-sys") (r "^0.4.0") (d #t) (k 0)))) (h "00clfm67c89d3hivinmwdn7iqg0awq6riqdz5hbywmhjj3dlb0l6") (f (quote (("derive_serde" "webrtc-audio-processing-sys/derive_serde" "serde") ("bundled" "webrtc-audio-processing-sys/bundled"))))))

