(define-module (crates-io we br webrender) #:use-module (crates-io))

(define-public crate-webrender-0.0.0 (c (n "webrender") (v "0.0.0") (h "0fi0707vq81iy65kzfk91si2bax9pvlm11arc44hak48ll01rvjy")))

(define-public crate-webrender-0.58.0 (c (n "webrender") (v "0.58.0") (d (list (d (n "app_units") (r "^0.7") (d #t) (k 0)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^13") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwrote") (r "^0.6.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "freetype") (r "^0.4") (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.6.8") (d #t) (k 0)) (d (n "image") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plane-split") (r "^0.13.3") (d #t) (k 0)) (d (n "png") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "ron") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "webrender_api") (r "^0.58.0") (d #t) (k 0)) (d (n "ws") (r "^0.7.3") (o #t) (d #t) (k 0)))) (h "1cfj870qlphxs2r7226iv4xhfrxbdr63457swq4syllkkw9mmd9j") (f (quote (("serialize_program" "serde") ("replay" "webrender_api/deserialize" "ron" "serde") ("profiler" "thread_profiler/thread_profiler" "debug_renderer") ("pathfinder") ("freetype-lib" "freetype/servo-freetype-sys") ("default" "freetype-lib") ("debugger" "ws" "serde_json" "serde" "image" "base64" "debug_renderer") ("debug_renderer") ("capture" "webrender_api/serialize" "ron" "serde" "debug_renderer"))))))

(define-public crate-webrender-0.60.0 (c (n "webrender") (v "0.60.0") (d (list (d (n "app_units") (r "^0.7") (d #t) (k 0)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^13") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cstr") (r "^0.1.2") (d #t) (k 0)) (d (n "dwrote") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "freetype") (r "^0.4") (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.6.8") (d #t) (k 0)) (d (n "image") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "malloc_size_of_derive") (r "^0.1") (d #t) (k 0)) (d (n "mozangle") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plane-split") (r "^0.13.3") (d #t) (k 0)) (d (n "png") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "ron") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "webrender_api") (r "^0.60.0") (d #t) (k 0)) (d (n "webrender_build") (r "^0.0.1") (d #t) (k 0)) (d (n "webrender_build") (r "^0.0.1") (d #t) (k 1)) (d (n "wr_malloc_size_of") (r "^0.0.1") (d #t) (k 0)) (d (n "ws") (r "^0.7.3") (o #t) (d #t) (k 0)))) (h "14f1k0wn1digjgz5y3b5wac9ahglhwj8vghdajcqi1ycgijfp3fs") (f (quote (("serialize_program" "serde" "webrender_build/serialize_program") ("replay" "webrender_api/deserialize" "ron" "serde") ("profiler" "thread_profiler/thread_profiler") ("pathfinder") ("no_static_freetype") ("freetype-lib" "freetype/servo-freetype-sys") ("default" "freetype-lib") ("debugger" "ws" "serde_json" "serde" "image" "base64") ("capture" "webrender_api/serialize" "ron" "serde" "smallvec/serde"))))))

(define-public crate-webrender-0.61.0 (c (n "webrender") (v "0.61.0") (d (list (d (n "api") (r "^0.61.0") (d #t) (k 0) (p "webrender_api")) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^13") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cstr") (r "^0.1.2") (d #t) (k 0)) (d (n "dwrote") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "euclid") (r "^0.20.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "freetype") (r "^0.4") (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "gleam") (r "^0.6.17") (d #t) (k 0)) (d (n "image_loader") (r "^0.22") (f (quote ("png_codec"))) (o #t) (k 0) (p "image")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"android\", all(unix, not(target_os = \"macos\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "malloc_size_of") (r "^0.1.0") (d #t) (k 0) (p "wr_malloc_size_of")) (d (n "malloc_size_of_derive") (r "^0.1") (d #t) (k 0)) (d (n "mozangle") (r "^0.3.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plane-split") (r "^0.15") (d #t) (k 0)) (d (n "png") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "ron") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "svg_fmt") (r "^0.4") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "webrender_build") (r "^0.1.0") (d #t) (k 0)) (d (n "webrender_build") (r "^0.1.0") (d #t) (k 1)) (d (n "ws") (r "^0.9") (o #t) (d #t) (k 0)))) (h "13l27z2mjwa770yikq1zi7py64kjj8znvi8py1mmfnlnp7dbiw0p") (f (quote (("serialize_program" "serde" "webrender_build/serialize_program") ("replay" "api/deserialize" "ron" "serde" "smallvec/serde") ("profiler" "thread_profiler/thread_profiler") ("no_static_freetype") ("leak_checks") ("freetype-lib" "freetype/servo-freetype-sys") ("display_list_stats" "api/display_list_stats") ("default" "freetype-lib") ("debugger" "ws" "serde_json" "serde" "image_loader" "base64") ("capture" "api/serialize" "ron" "serde" "smallvec/serde"))))))

