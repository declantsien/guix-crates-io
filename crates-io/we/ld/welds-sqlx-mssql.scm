(define-module (crates-io we ld welds-sqlx-mssql) #:use-module (crates-io))

(define-public crate-welds-sqlx-mssql-1.7.0 (c (n "welds-sqlx-mssql") (v "1.7.0") (d (list (d (n "atoi") (r "^2.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (f (quote ("std"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "byteorder") (r "^1.4.3") (f (quote ("std"))) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "digest") (r "^0.10.0") (f (quote ("std"))) (k 0)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.30") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.19") (f (quote ("sink" "alloc" "std"))) (k 0)) (d (n "futures-core") (r "^0.3.19") (k 0)) (d (n "futures-io") (r "^0.3.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.19") (f (quote ("alloc" "sink" "io"))) (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.0") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (k 0)) (d (n "memchr") (r "^2.4.1") (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("std" "std_rng"))) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rsa") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (k 0)) (d (n "sha2") (r "^0.10.0") (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "sqlx-core") (r "^0.7.0-alpha.3") (d #t) (k 0)) (d (n "stringprep") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "whoami") (r "^1.2.1") (k 0)))) (h "1rx9n26adsxzwp27dyc96aqs99qab45zk9m3riqwarn3fv4dnyni") (f (quote (("offline" "sqlx-core/offline" "serde/derive") ("migrate" "sqlx-core/migrate") ("json" "sqlx-core/json" "serde") ("default") ("any" "sqlx-core/any"))))))

