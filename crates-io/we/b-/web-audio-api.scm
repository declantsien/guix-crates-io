(define-module (crates-io we b- web-audio-api) #:use-module (crates-io))

(define-public crate-web-audio-api-0.1.0 (c (n "web-audio-api") (v "0.1.0") (h "0z06b7gnnm1wk1dpw5x13zdx2q0d4rxkb5j44i04cnsbn3n5dl0x")))

(define-public crate-web-audio-api-0.2.0 (c (n "web-audio-api") (v "0.2.0") (d (list (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)))) (h "0gp1r5syqp3sb7g1x4hjaij2mgahf4h7baggjd07j5hsqkb9r83k")))

(define-public crate-web-audio-api-0.3.0 (c (n "web-audio-api") (v "0.3.0") (d (list (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)))) (h "1ywhvxgkslbgzc16h19mpw6wdqp1z2ikgj5m8xz5v80xb4jk0q9l")))

(define-public crate-web-audio-api-0.4.0 (c (n "web-audio-api") (v "0.4.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "0v5rd2zzcadg22p5jh915khafj9qfd2f1yffws2d37mw7ccacqwj")))

(define-public crate-web-audio-api-0.5.0 (c (n "web-audio-api") (v "0.5.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "12941h8k91l9xlw3zyhx6cm5fngnddk3xjv9xqgvh40xwgwla5aq")))

(define-public crate-web-audio-api-0.6.0 (c (n "web-audio-api") (v "0.6.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^1.1.0") (d #t) (k 0)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "06ic74m6jb7ikvs25vmkijblra19697r9xwpyklrd8cx970wx63d")))

(define-public crate-web-audio-api-0.7.0 (c (n "web-audio-api") (v "0.7.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^1.1.0") (d #t) (k 0)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "1x3zhyinbb6slmhr5vjaxdcgd061pdi04gp4qrmq0z8d4j00qrfs")))

(define-public crate-web-audio-api-0.8.0 (c (n "web-audio-api") (v "0.8.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 2)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "11ilix9bfi9vkja0dxyvmvmm1rs78w9hwg1sccl1420hjlg657cz")))

(define-public crate-web-audio-api-0.9.0 (c (n "web-audio-api") (v "0.9.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "1md99jrnmhxachx0ysw573qk8zlynbz1i173jxldfrhw6snqdlwi")))

(define-public crate-web-audio-api-0.10.0 (c (n "web-audio-api") (v "0.10.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "179a073bmksshpj1kzxv800l08za0padwgpk7n0j7qv01s7lgppz")))

(define-public crate-web-audio-api-0.11.0 (c (n "web-audio-api") (v "0.11.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "021imnc5haqv60qm8blsmkh9ppv5v3dqzi2fqggjj5z33c4wall3")))

(define-public crate-web-audio-api-0.12.0 (c (n "web-audio-api") (v "0.12.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "0iw5pl5v9vixchakkibxvw02hhbk65frbqr83hgk3s7hrbcr1lxc")))

(define-public crate-web-audio-api-0.13.0 (c (n "web-audio-api") (v "0.13.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "0zrm9sqcpqds7g3p64dpk2x44hqfjmvn0r4kby5x22wgcrmw7pmp")))

(define-public crate-web-audio-api-0.14.0 (c (n "web-audio-api") (v "0.14.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.4.0") (k 0)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "18adkh3dbxvq3r01qfiprhqcalhcfcybr2jn4la75gmqr3ny52xq") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.15.0 (c (n "web-audio-api") (v "0.15.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.4.0") (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 2)) (d (n "textplots") (r "^0.8.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "0hzc37dh03xh8h3gk253wqyhdv860ji3dq0piy75d6nk2gw7da8r") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.16.0 (c (n "web-audio-api") (v "0.16.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 2)) (d (n "textplots") (r "^0.8.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "0dm23qvjbmpfsg96ns1nfwfyxjcqj7lx2chb1bg2hihinv38jjfv") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.17.0 (c (n "web-audio-api") (v "0.17.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "cpal") (r "^0.13.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "rand") (r "0.8.*") (d #t) (k 2)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 2)) (d (n "textplots") (r "^0.8.0") (d #t) (k 2)) (d (n "vecmath") (r "^1.0.0") (d #t) (k 0)))) (h "1i6wbizmdxcwiz43mbs1cavvkrdd58m5ag3pn61fin8ckrm4f45a") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.18.0 (c (n "web-audio-api") (v "0.18.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1vwx83lyw7j7c6y77ljlibdbfdkjqigky0av89q6b86sgxglraa4") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.19.0 (c (n "web-audio-api") (v "0.19.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1mvkagxlzycbia0hpjqgy8ky850a795ix6n3sfk3gw3ibwb71spz") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.20.0 (c (n "web-audio-api") (v "0.20.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0sx2iqc86bk4lmnlykw4m0ss2aydcl167hn7mpnm0bz2cx4fw0r9") (f (quote (("wav" "symphonia/wav" "symphonia/pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis") ("mp3" "symphonia/mp3") ("flac" "symphonia/flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.21.0 (c (n "web-audio-api") (v "0.21.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1ziq9aj9ilal5d11y65wzwsgba1yfmnj3hncjrb9swijspvw1nr0") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav"))))))

(define-public crate-web-audio-api-0.22.0 (c (n "web-audio-api") (v "0.22.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1mg7zvc12gbs3dxv230mwfpskyp565l4x2ykaiihn5vh6viblpqj") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.23.0 (c (n "web-audio-api") (v "0.23.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0xzpx4j0dxgppvd6ji3chgl3bawrszfvsgq9hzg2bps4x8aikqw5") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.24.0 (c (n "web-audio-api") (v "0.24.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^0.7") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.11") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0vnwr7bfa0q53pqlvn4chabxm588g9p2paqfj625xhg0fkr7yy69") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.25.0 (c (n "web-audio-api") (v "0.25.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^2.0") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1zjhl8aambsjkjvrwj8ggw7v74pcgkd9g7frj7xrx6qds3p72cih") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.26.0 (c (n "web-audio-api") (v "0.26.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^2.0") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "00jnd3c5kd63mysjrvy0zdz7flbyz70vlhdfqai1930cwkx4wcgx") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.27.0 (c (n "web-audio-api") (v "0.27.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^2.0") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1c3856zs2vsxkfqq0c6y8fpdpixj8hc0lknb4f09r3f1d0sjna2a") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.28.0 (c (n "web-audio-api") (v "0.28.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12") (d #t) (k 2)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "termion") (r "^2.0") (d #t) (k 2)) (d (n "textplots") (r "^0.8") (d #t) (k 2)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "15pl44kf49yddxm9g0xbimm1qr8lphdcwq90d16vbpx8sr6rih3i") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.29.0 (c (n "web-audio-api") (v "0.29.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0bzaijyp385vgw60rqlqji87b34wvfgysszpq58hv2c5gi48yrs2") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.30.0 (c (n "web-audio-api") (v "0.30.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "creek") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5.0") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.0") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.13") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "051a9avvvpalhg4j4fq4sqjv58h6brkkqig7iph0f5hlh96pgbam") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.31.0 (c (n "web-audio-api") (v "0.31.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1q43smx92kjsh0gcck9lnl70b0zdia33hqnr168605x05dpcbhix") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal"))))))

(define-public crate-web-audio-api-0.32.0 (c (n "web-audio-api") (v "0.32.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.0") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "029glfnbmliw40s053lmmknw467dqbcd6qdvjbp4m90m8v58r5rj") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.33.0 (c (n "web-audio-api") (v "0.33.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "06lcm4b6vc4f4zljpnwhlgagrggc5b2f7x9zhbwa1jn3hrgp405n") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.34.0 (c (n "web-audio-api") (v "0.34.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "03j2a76pm60fpf3dcy6l2va9b4pwac2y7zf84lh303dssli1a890") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.35.0 (c (n "web-audio-api") (v "0.35.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "14kggxgfbcw0kb92li8ww9zxzpzkpikb3vjcbfdl6523rhki5z17") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.36.0 (c (n "web-audio-api") (v "0.36.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0ini1xgll8r8wqavabbbsi9p530cpr1a1jn7v36yvjp84abwsr63") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.36.1 (c (n "web-audio-api") (v "0.36.1") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0fz32prrly2ar19sb994r558p8bxw7d35m6ys0qpm9mkvji799iy") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.37.0 (c (n "web-audio-api") (v "0.37.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0p9ck8wyjk998l2fgih683jgnzn28ilw456jjy9n2279rg6j9kcw") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.38.0 (c (n "web-audio-api") (v "0.38.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0mc097vsyxw8ssg9jccf0kkc0ri7pwpv50g5cgmm4yn68wyv7sbs") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.39.0 (c (n "web-audio-api") (v "0.39.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor"))) (d #t) (k 2)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1d9zb7pz7ih6cznk6pbmn0ckn686hdq5l4gi1nx0xczvjdmw8w9d") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.39.1 (c (n "web-audio-api") (v "0.39.1") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor"))) (d #t) (k 2)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0galgbjqr6n425ckh0rphjxwv3wsnwlgljw8c5ah6pn9xrzp5x2g") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.40.0 (c (n "web-audio-api") (v "0.40.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor"))) (d #t) (k 2)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1kfmx9jqcskjjwr6sq9jf4vzgv0ymfc6j7sg08bnr6siwy0ydlh5") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.41.0 (c (n "web-audio-api") (v "0.41.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor"))) (d #t) (k 2)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1pd4w5770kk0nb80ajl658va2hhc65zgm5yg9k9sqw8wx355jzac") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.41.1 (c (n "web-audio-api") (v "0.41.1") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("executor"))) (d #t) (k 2)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0ws09y9740f979dv4xzzpxv9fpb54bs83h4891gdbjafcm3342wb") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.42.0 (c (n "web-audio-api") (v "0.42.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1jcmm2khcr8i2pqv83bg5p4m5vlj3rgws819l94594w58a8lqghq") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.1 (c (n "web-audio-api") (v "1.0.0-rc.1") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1gdwjccsz6cbx63hvc6c4mmy57cskd3ms5bwhml3znf27awcrby5") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.2 (c (n "web-audio-api") (v "1.0.0-rc.2") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "1g6qp4xgin63akyhrln2xmxwjhr5w9bc10453d68xmp5ibj8x814") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.3 (c (n "web-audio-api") (v "1.0.0-rc.3") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.14") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "19d87dghr0pvbsj96i3ks336418zs7p6w84c5py8b5bsdrn120m3") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.4 (c (n "web-audio-api") (v "1.0.0-rc.4") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "16jcc0ag9163xpidv8mdyiwxwpjx4gwzabwpp2fxqwp7x0177wxp") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.43.0 (c (n "web-audio-api") (v "0.43.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0v39hq0gv6nw9df48bjgbp0wfpklzjr5zmpqgjyvhd0a6f01760m") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.5 (c (n "web-audio-api") (v "1.0.0-rc.5") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0mc1mm5m037m5lmgk6jcf8i0rbanl3xibkqwh52qsx1bx9950qda") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-1.0.0-rc.6 (c (n "web-audio-api") (v "1.0.0-rc.6") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "02cykl9j0vx81ldczf68g3gj5jl4pjraaia3mqgag25a7azn6i4q") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.44.0 (c (n "web-audio-api") (v "0.44.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "0db7qaci4aa0iny3rwyvv1qdcil7ysdvmssnlqiglgkfvg5157w0") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

(define-public crate-web-audio-api-0.45.0 (c (n "web-audio-api") (v "0.45.0") (d (list (d (n "alloc_counter") (r "^0.0.4") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "clap") (r "=4.4") (d #t) (k 2)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "creek") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "cubeb") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "float_eq") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.30") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("sink"))) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 0)) (d (n "hrtf") (r "^0.8.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "llq") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "no_denormals") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", target_arch = \"aarch64\"))") (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "realfft") (r "^3.3") (d #t) (k 0)) (d (n "rubato") (r "^0.15") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (k 0)) (d (n "vecmath") (r "^1.0") (d #t) (k 0)))) (h "160qaqqvdv8scb3i6qsxjw7j8mhx7mf43ncpa40xnl9ba08fr8aj") (f (quote (("wav" "symphonia/wav" "symphonia/pcm" "creek/decode-wav" "creek/decode-pcm") ("ogg" "symphonia/ogg" "symphonia/vorbis" "creek/decode-ogg" "creek/decode-vorbis") ("mp3" "symphonia/mp3" "creek/decode-mp3") ("m4a" "aac" "symphonia/isomp4" "creek/decode-isomp4") ("iai") ("flac" "symphonia/flac" "creek/decode-flac") ("default" "mp3" "ogg" "flac" "wav" "m4a" "alac" "cpal") ("cpal-jack" "cpal" "cpal/jack") ("cpal-asio" "cpal" "cpal/asio") ("alac" "symphonia/alac" "symphonia/isomp4" "creek/decode-alac" "creek/decode-isomp4") ("aac" "symphonia/aac" "creek/decode-aac")))) (s 2) (e (quote (("cubeb" "dep:cubeb") ("cpal" "dep:cpal")))) (r "1.70")))

