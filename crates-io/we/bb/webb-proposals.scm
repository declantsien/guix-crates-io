(define-module (crates-io we bb webb-proposals) #:use-module (crates-io))

(define-public crate-webb-proposals-0.1.0 (c (n "webb-proposals") (v "0.1.0") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "1xij98hqcv317sb4ni37xxqhfv7w17070hy84mcimnanryxn6ppr") (f (quote (("std" "scale-codec/std" "scale-info/std") ("scale" "scale-codec" "scale-info/derive") ("default"))))))

(define-public crate-webb-proposals-0.1.1 (c (n "webb-proposals") (v "0.1.1") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "0jzxpl4h7xh2qflk3sz96h4zjbrr900gvf2cbl6n9lm39dlbyhwd") (f (quote (("std" "scale-codec/std" "scale-info/std") ("scale" "scale-codec" "scale-info/derive") ("default"))))))

(define-public crate-webb-proposals-0.2.0 (c (n "webb-proposals") (v "0.2.0") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "1zlyvgaqh33435qxs0fcg5frc48vb1dzbkrj3ya70kzrgnsdhl8w") (f (quote (("std" "scale-codec/std" "scale-info/std") ("scale" "scale-codec" "scale-info/derive") ("default"))))))

(define-public crate-webb-proposals-0.2.1 (c (n "webb-proposals") (v "0.2.1") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "11r6k62hdqyf9g4vbai91wcjcfyj855a7irrj5471sxvlxhx6sww") (f (quote (("std" "scale-codec/std" "scale-info/std") ("scale" "scale-codec" "scale-info/derive") ("default"))))))

(define-public crate-webb-proposals-0.2.2 (c (n "webb-proposals") (v "0.2.2") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "0wyxmshvhw4xxzqnhzkb56ss0zj732s6i47hx5g7vq7ai7pi56rq") (f (quote (("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("default" "std" "scale"))))))

(define-public crate-webb-proposals-0.2.3 (c (n "webb-proposals") (v "0.2.3") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "1gjx01x7apy0asil0s9hwkg1ampyf7b187n5rzvcl097gd7ki016") (f (quote (("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("default" "std" "scale"))))))

(define-public crate-webb-proposals-0.2.4 (c (n "webb-proposals") (v "0.2.4") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "0nry7jyrds25dv658sxdshd29x8nv3rb4z9j94zs4cljf4xng6lq") (f (quote (("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("default" "std" "scale"))))))

(define-public crate-webb-proposals-0.2.5 (c (n "webb-proposals") (v "0.2.5") (d (list (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)))) (h "051ykfc7sggnfxz30r50kqybrr15dncgpim4z86738iivn39i0ay") (f (quote (("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("default" "std" "scale"))))))

(define-public crate-webb-proposals-0.3.0 (c (n "webb-proposals") (v "0.3.0") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "0ay5yn56jb1y04psadj32baccaixqzyxmm1hccbgyb9klg667n6k") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.1 (c (n "webb-proposals") (v "0.3.1") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^2.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1k202ardcvc0sshz3ng39s0jgy21926jcd9m24qfsggw64ap4y5a") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.2 (c (n "webb-proposals") (v "0.3.2") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "0xahnkagmkdab50z65ag5zjfbpsazvrj4i6z4ydn37k9df5x7w0w") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.3 (c (n "webb-proposals") (v "0.3.3") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "184gpj4ppkh8p80kkq4z7f82904yvld9pwdyl22nsm2d1gfqdw5x") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.4 (c (n "webb-proposals") (v "0.3.4") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1kqd0vg89n8zyzdd3fhkhm3ffzd6h1ig6xnh56d9r3pcag7rkc4f") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.5 (c (n "webb-proposals") (v "0.3.5") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1v50kzyv2jbc9zsz899qh6ddgxy6vnp2j0wxkis5cl5iy2zvb70s") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.6 (c (n "webb-proposals") (v "0.3.6") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "051a3scp23l41l8pim96fpqdbnmcr0vmr10idy8a7xbqh554s964") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.3.7 (c (n "webb-proposals") (v "0.3.7") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1qlihrzriz74syvl928sahlfrjnagcdrf4iyp3j336svq9sxfs6g") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale"))))))

(define-public crate-webb-proposals-0.4.0 (c (n "webb-proposals") (v "0.4.0") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1wnm8c181dd9m6m6kzm4w8wvszli0zwhy24bd5w5qrsglaimskn0") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm") ("cosmwasm"))))))

(define-public crate-webb-proposals-0.4.2 (c (n "webb-proposals") (v "0.4.2") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "1d68g4ram9y9gnaxr71sr642k71jxqqk8r95jahl9dxms1jky208") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("max-encoded-len") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm") ("cosmwasm"))))))

(define-public crate-webb-proposals-0.4.3 (c (n "webb-proposals") (v "0.4.3") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "0a9xp16ijahjz8lz40n5ijpbnsbbmfmfnf4180i73agsqp8lf0n6") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm") ("cosmwasm" "cosmwasm-std"))))))

(define-public crate-webb-proposals-0.4.4 (c (n "webb-proposals") (v "0.4.4") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "14454b0skmh0vk3al35in1f0pn5nwfwm86zx6z0kk9hk3mj6k63v") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm") ("cosmwasm" "cosmwasm-std"))))))

(define-public crate-webb-proposals-0.5.1 (c (n "webb-proposals") (v "0.5.1") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "02cpmw1fvzghyw55as35lvsqpbbjv48jp4iwkdxv8rbv5b5kr0q9") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std") ("scale" "scale-codec" "scale-info/derive") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm") ("cosmwasm" "cosmwasm-std"))))))

(define-public crate-webb-proposals-0.5.3 (c (n "webb-proposals") (v "0.5.3") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "0s51v1d5lfm3zm9sxh6852z6vgz769mgblspr2jdw0wqsl342y9j") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std" "serde") ("scale" "scale-codec" "scale-info/derive") ("ink") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm" "ink") ("cosmwasm" "cosmwasm-std"))))))

(define-public crate-webb-proposals-0.5.4 (c (n "webb-proposals") (v "0.5.4") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (k 0)))) (h "12l5pnsdsfy8aapdl3ggg6lr1jy36jvpxa508p3j0dxm89ybjapa") (f (quote (("substrate" "scale-codec" "typed-builder") ("std" "scale-codec/std" "scale-info/std" "num-traits/std" "serde") ("scale" "scale-codec" "scale-info/derive") ("ink") ("evm") ("default" "std" "evm" "substrate" "scale" "cosmwasm" "ink") ("cosmwasm" "cosmwasm-std"))))))

(define-public crate-webb-proposals-0.8.0 (c (n "webb-proposals") (v "0.8.0") (d (list (d (n "frame-support") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex") (r "^0.4") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proposal-derive") (r "^0.1.0") (k 0) (p "webb-proposal-derive")) (d (n "scale-codec") (r "^3.0.0") (f (quote ("derive" "max-encoded-len"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.1.1") (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "alloc" "derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "alloc"))) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 2)) (d (n "typed-builder") (r "^0.18") (o #t) (k 0)))) (h "1v378adbqwzw8n6cvswdrq2kckj7ba2g22738ipiff2inr6kzyls") (f (quote (("substrate" "scale" "typed-builder" "frame-support" "serde") ("std" "scale-codec/std" "scale-info/std" "num-traits/std" "serde/std" "hex/std" "frame-support/std" "proposal-derive/std") ("scale" "scale-codec" "scale-info/derive") ("ink" "scale" "typed-builder") ("evm" "serde") ("default" "std" "evm" "substrate" "scale" "ink"))))))

