(define-module (crates-io we e_ wee_alloc) #:use-module (crates-io))

(define-public crate-wee_alloc-0.1.0 (c (n "wee_alloc") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)))) (h "1qqxvjf4pl2hnh16vrgkli9zbh7dma8cfag9z1svb7c27k6hmsfp") (f (quote (("use_std_for_test_debugging") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.2.0 (c (n "wee_alloc") (v "0.2.0") (d (list (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "mmap-alloc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04qjfbi6y5y3jm2xsj0cqcf7axj9jm8imh2gbmcwd2s8mnnh66xd") (f (quote (("use_std_for_test_debugging") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.3.0 (c (n "wee_alloc") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nrs1naqf2l87x2kldgicbvm9vjj0a3b2ax7r8xiz1nmf0zygmjh") (f (quote (("use_std_for_test_debugging") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.0 (c (n "wee_alloc") (v "0.4.0") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.4") (f (quote ("const_fn"))) (o #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12r1xwsdycziqnv1vqrn6vvm0m74j33sr88dz17im9pzphphdkfv") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.1 (c (n "wee_alloc") (v "0.4.1") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.4") (f (quote ("const_fn"))) (o #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ahisq907l4xd05jszqq2m63c7dh8rh5nd4yy1n5nv19k94nkk02") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.2 (c (n "wee_alloc") (v "0.4.2") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.4") (f (quote ("const_fn"))) (o #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ihcx1mz9j0h4vd5cbxl2m3f6f16s6gx2kz9yccglf7qvbhmp1r7") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.3 (c (n "wee_alloc") (v "0.4.3") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.5") (o #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "02lxnd24klaff7xy8yhpqpzsgcc8v6qgzg2xmzr0riy6jbczwhg8") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("nightly") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.4 (c (n "wee_alloc") (v "0.4.4") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.5") (o #t) (k 0)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1k7z6l80wy7nb31z8q5faa0xngwcyhkvh7f9icwmbb115mbydm1i") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("nightly") ("extra_assertions") ("default" "size_classes"))))))

(define-public crate-wee_alloc-0.4.5 (c (n "wee_alloc") (v "0.4.5") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (t "cfg(all(unix, not(target_arch = \"wasm32\")))") (k 0)) (d (n "memory_units") (r "^0.4.0") (d #t) (k 0)) (d (n "spin") (r "^0.5") (o #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13hb19nfqwjwcqlfj46sjz4j49wd7sj6hbjasimcn5xvnakbbcyv") (f (quote (("use_std_for_test_debugging") ("static_array_backend" "spin") ("size_classes") ("nightly") ("extra_assertions") ("default" "size_classes"))))))

