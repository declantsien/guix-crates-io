(define-module (crates-io we bp webpsan) #:use-module (crates-io))

(define-public crate-webpsan-0.3.2 (c (n "webpsan") (v "0.3.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.7.0") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mediasan-common") (r "=0.3.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "pin-project") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1mc2vl30cdv7jjihqdsmcarawsnfkzlq807zwsvmrs01zvqmfl9z") (r "1.61.0")))

(define-public crate-webpsan-0.4.0 (c (n "webpsan") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.7.0") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mediasan-common") (r "=0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "pin-project") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0rl5gc8p6inrsczi2x8d3mlhsfaqd915xxxkaa44xzmnxjrkzsn7") (r "1.61.0")))

(define-public crate-webpsan-0.5.0 (c (n "webpsan") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.7.0") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mediasan-common") (r "=0.5.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "052bm8fjmww8n4gknpbvrb6a8k0yq5pq7zaghkppfvdws66rbhny") (f (quote (("error-detail") ("default" "error-detail")))) (r "1.61.0")))

(define-public crate-webpsan-0.5.1 (c (n "webpsan") (v "0.5.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.7.0") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mediasan-common") (r "=0.5.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.16") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1lwn560nzvrfikz5sw84ikkqirmyfns6anz9yf5a9kk3m4zmddb6") (f (quote (("error-detail") ("default" "error-detail")))) (r "1.61.0")))

