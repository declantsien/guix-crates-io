(define-module (crates-io lz zz lzzzz) #:use-module (crates-io))

(define-public crate-lzzzz-0.1.0 (c (n "lzzzz") (v "0.1.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "tokio") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0xy9mzbyfwv6076s2kclqx5z0zfwjdfzail937zz4rajfnn50ydw") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.1.1 (c (n "lzzzz") (v "0.1.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "tokio") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0cakq34fcb19jqd56qlakjrvgpn0h5r8f35fp1qv37x5ik314q1d") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.2.0 (c (n "lzzzz") (v "0.2.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0vdqj219a4w999348k7ac66v65p8syh629v3a13zpv7cx77bimsl") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.2.1 (c (n "lzzzz") (v "0.2.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "1ahawvg9bywp0dzbk1vm37rf6xg3mnn7s1cfcgza4r4xn2n7jbsh") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.2.2 (c (n "lzzzz") (v "0.2.2") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0q7vc02rawz8n6gy0wpvwkqs0bf6cdzddli1m68kwq1r6f2qgzah") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.2.3 (c (n "lzzzz") (v "0.2.3") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0achkxc3lx8l9xf1vq79k15bjkx78g6vdiywjvqr71zyyzcpg9vv") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.3.0 (c (n "lzzzz") (v "0.3.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "1v1a1c32g7xdbbih7nr7vwvn8515wnywkmm6agpv5q8nhbmgdjyv") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.3.1 (c (n "lzzzz") (v "0.3.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "0bhs16vij6jg6wb6iclr11qy4i4ccil8va2hr5pcvs8bnnj2rw9z") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.3.2 (c (n "lzzzz") (v "0.3.2") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "03jv3zbfp0kq4kxh6xvkihxpd6xzpi85sw1f6vzz6hg0kvxpc5xk") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.3.3 (c (n "lzzzz") (v "0.3.3") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("fs" "rt-core" "rt-threaded" "macros"))) (d #t) (k 2)))) (h "1mh2yjpsydbk7w19mk36653qga6vjaja0dw29vnq8zyxhx2lcsng") (f (quote (("tokio-io" "tokio/io-util" "pin-project"))))))

(define-public crate-lzzzz-0.4.0 (c (n "lzzzz") (v "0.4.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-lite") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0yyq3py9k91zbbddfrajgjsdxwck22phgf9ipaklspcicizq3w1w") (f (quote (("async-io" "async-std" "pin-project" "futures-lite"))))))

(define-public crate-lzzzz-0.4.1 (c (n "lzzzz") (v "0.4.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-lite") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "1mfahb8815x97hpb0hmvbf4az1w6v970z3a5c2sijn142x3pjzgv") (f (quote (("async-io" "async-std" "pin-project" "futures-lite"))))))

(define-public crate-lzzzz-0.4.2 (c (n "lzzzz") (v "0.4.2") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-lite") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "082y4fj3fpwxpnjrviqxqivxcdwx5n9c37ql4gggjqyj81qpzj2a") (f (quote (("async-io" "async-std" "pin-project" "futures-lite"))))))

(define-public crate-lzzzz-0.4.3 (c (n "lzzzz") (v "0.4.3") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-lite") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "165m1rr62c6y1ycn6mwrpn55497k6lhjaprpy54vj8444iffks7d") (f (quote (("async-io" "async-std" "pin-project" "futures-lite"))))))

(define-public crate-lzzzz-0.4.4 (c (n "lzzzz") (v "0.4.4") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-lite") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "03lmgzbp598jfxidz2snabs6rhz9wxcqi9dgjyib9qs0jxizkphj") (f (quote (("async-io" "async-std" "pin-project" "futures-lite"))))))

(define-public crate-lzzzz-0.5.0 (c (n "lzzzz") (v "0.5.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-test") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "smol") (r "^0.3.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0m8wpmbwwcf7njj8bazpm8y8blsgwslpr5hg46795a6c4i23mmsg")))

(define-public crate-lzzzz-0.5.1 (c (n "lzzzz") (v "0.5.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "11jzm2ln6mrqrfwx8x13hq0l03iv9xw7nnvfqh22wxngs85gyq3p")))

(define-public crate-lzzzz-0.6.0 (c (n "lzzzz") (v "0.6.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.58") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "1fgn5qmjqbdklm5laja1a289ak49xkb2v6aaa2g2xlb1x3ihgwzg")))

(define-public crate-lzzzz-0.6.1 (c (n "lzzzz") (v "0.6.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.59") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0wm0c86bcvhlmwfr1f6a8d9jk5bl0qr1r9dnrr32ba6xw98fn5bx")))

(define-public crate-lzzzz-0.7.1 (c (n "lzzzz") (v "0.7.1") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.59") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0vk3bdcsn4bl6fwy6w9na8mfkb6yci43sfrc6zpbgg37qwpnr0b4")))

(define-public crate-lzzzz-0.7.2 (c (n "lzzzz") (v "0.7.2") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 2)) (d (n "bytes") (r "^0.5.6") (d #t) (k 2)) (d (n "cc") (r "^1.0.59") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "1y47mslvhpm7bny2w978f8v1xsls9raxcfxmiziabva2pvyn6piq")))

(define-public crate-lzzzz-0.8.0 (c (n "lzzzz") (v "0.8.0") (d (list (d (n "assert_fs") (r "^1.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^0.6.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.65") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "121b0jg9hqa82s57y5abfp1dgk2vs6pzh3x60v15j5ivvp793n7n")))

(define-public crate-lzzzz-1.0.0 (c (n "lzzzz") (v "1.0.0") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0vdmnddb02x7ig2i5bj079l1hq9rwz8r50m3z1386wykbzpghpdz")))

(define-public crate-lzzzz-1.0.1 (c (n "lzzzz") (v "1.0.1") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "09zfizhm0da8k0fkbs2wxdzzzdch6h4rf26ziabxsizhxa2bkw58")))

(define-public crate-lzzzz-1.0.2 (c (n "lzzzz") (v "1.0.2") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0ybh9g3fb6gqzq6s7gszrmbq12xjx15qsnsl64mznmb94c0r7gp8")))

(define-public crate-lzzzz-1.0.3 (c (n "lzzzz") (v "1.0.3") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "1g3j9p7k95wf8ydipwy0jsbmr0065c73gd81skziryckfacn6qkk")))

(define-public crate-lzzzz-1.0.4 (c (n "lzzzz") (v "1.0.4") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "1g0kmzbbdsv9k4dbaxd0a1k1n3c3lwx5mhg4j5m6wxq440vd2540")))

(define-public crate-lzzzz-1.0.5 (c (n "lzzzz") (v "1.0.5") (d (list (d (n "assert_fs") (r "^1.0.6") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)))) (h "0vpbgyi6yvf4v7ryifbiwn2wmpi8582lca11k144xvr99v7xfmsz")))

