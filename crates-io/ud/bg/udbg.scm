(define-module (crates-io ud bg udbg) #:use-module (crates-io))

(define-public crate-udbg-0.1.0 (c (n "udbg") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpp_demangle") (r "^0.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "no_std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.7") (d #t) (k 0)) (d (n "procfs") (r "^0.12") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "processthreadsapi" "psapi" "errhandlingapi" "winuser" "winbase" "fileapi" "memoryapi" "dbghelp" "debugapi" "ioapiset" "winerror" "stringapiset" "winnls" "shellapi" "winsvc" "synchapi" "wincrypt" "softpub" "shellscalingapi" "sysinfoapi" "heapapi" "tlhelp32" "wow64apiset" "securitybaseapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.33") (f (quote ("alloc" "implement" "Data_Xml_Dom" "Win32_Foundation" "Win32_Security" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Management_Deployment" "Foundation" "Foundation_Collections" "ApplicationModel" "Win32_System_WinRT" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(windows)") (k 0)))) (h "03qcmcyqh3nmcdc7xk0cxh1aivh8a4j8ga7vvylkbyynf4z18jmi") (y #t)))

(define-public crate-udbg-0.2.0 (c (n "udbg") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpp_demangle") (r "^0.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "no_std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.7") (d #t) (k 0)) (d (n "procfs") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "processthreadsapi" "psapi" "errhandlingapi" "winuser" "winbase" "fileapi" "memoryapi" "dbghelp" "debugapi" "ioapiset" "winerror" "stringapiset" "winnls" "shellapi" "winsvc" "synchapi" "wincrypt" "softpub" "shellscalingapi" "sysinfoapi" "heapapi" "tlhelp32" "wow64apiset" "securitybaseapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.35") (f (quote ("alloc" "implement" "Data_Xml_Dom" "Win32_Foundation" "Win32_Security" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Management_Deployment" "Foundation" "Foundation_Collections" "ApplicationModel" "Win32_System_WinRT" "Win32_System_Diagnostics_Debug"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "05m1b7ywm6q9f6lzq98kfs4m5ngkwpnqhh223r1x1q09rgzcw5iv") (f (quote (("dbgeng" "windows")))) (y #t)))

(define-public crate-udbg-0.2.1 (c (n "udbg") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "cpp_demangle") (r "^0.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "^0.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "no_std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "llua") (r "^0.1.1") (d #t) (k 0)) (d (n "llua") (r "^0.1.1") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap2") (r "^0.5.3") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "minidump") (r "^0.10") (d #t) (k 0)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.24") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.7") (d #t) (k 0)) (d (n "procfs") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "processthreadsapi" "psapi" "errhandlingapi" "winuser" "winbase" "fileapi" "memoryapi" "dbghelp" "debugapi" "ioapiset" "winerror" "stringapiset" "winnls" "shellapi" "winsvc" "synchapi" "wincrypt" "softpub" "shellscalingapi" "sysinfoapi" "heapapi" "tlhelp32" "wow64apiset" "securitybaseapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.35") (f (quote ("alloc" "implement" "Data_Xml_Dom" "Win32_Foundation" "Win32_Security" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Management_Deployment" "Foundation" "Foundation_Collections" "ApplicationModel" "Win32_System_WinRT" "Win32_System_Diagnostics_Debug"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0mlkk0bn26qbn52dq0v1lwagvj9ny8qlh4x4zsn0yc7v8p51yms3") (f (quote (("dbgeng" "windows"))))))

(define-public crate-udbg-0.2.2 (c (n "udbg") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capstone") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "cpp_demangle") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored" "thread"))) (o #t) (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "failed-result") (r "^0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "~0.6") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap2") (r "~0.5") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "minidump") (r "^0.17") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8.0") (d #t) (k 2)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.8") (d #t) (k 0)) (d (n "procfs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^12") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "symbolic") (r "^12.1") (f (quote ("demangle"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "processthreadsapi" "psapi" "errhandlingapi" "winuser" "winbase" "fileapi" "memoryapi" "dbghelp" "debugapi" "ioapiset" "winerror" "stringapiset" "winnls" "shellapi" "winsvc" "synchapi" "wincrypt" "softpub" "shellscalingapi" "sysinfoapi" "heapapi" "tlhelp32" "wow64apiset" "securitybaseapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Management_Deployment" "Foundation" "Foundation_Collections" "Win32_System_WinRT"))) (d #t) (t "cfg(windows)") (k 0)))) (h "183cm1brqxs0admajpc0fbpnc05zy9m28h02l68i2f1l1rvyman4") (f (quote (("dbgeng" "windows/Win32_System_Diagnostics_Debug"))))))

(define-public crate-udbg-0.2.3 (c (n "udbg") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capstone") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "cpp_demangle") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored" "thread"))) (o #t) (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "failed-result") (r "^0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "~0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap2") (r "~0.5") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "minidump") (r "^0.17") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8.0") (d #t) (k 2)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.8") (d #t) (k 0)) (d (n "procfs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^12") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "symbolic") (r "^12.1") (f (quote ("demangle"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "processthreadsapi" "psapi" "errhandlingapi" "winuser" "winbase" "fileapi" "memoryapi" "dbghelp" "debugapi" "ioapiset" "winerror" "stringapiset" "winnls" "shellapi" "winsvc" "synchapi" "wincrypt" "softpub" "shellscalingapi" "sysinfoapi" "heapapi" "tlhelp32" "wow64apiset" "securitybaseapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Win32_Foundation" "Win32_Security" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Management_Deployment" "Foundation" "Foundation_Collections" "Win32_System_WinRT"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1jl9jb7dxi2mjhqm55nfxmwarwsgwrwlvx5i95kfi4an16jbf5cq") (f (quote (("dbgeng" "windows/Win32_System_Diagnostics_Debug"))))))

(define-public crate-udbg-0.3.0 (c (n "udbg") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capstone") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "cpp_demangle") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored" "thread"))) (o #t) (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "failed-result") (r "^0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.26") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "~0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.11") (f (quote ("decoder" "intel" "std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap2") (r "~0.5") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "minidump") (r "^0.17") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8") (d #t) (k 2)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.8") (d #t) (k 0)) (d (n "procfs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^12") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "symbolic") (r "^12.1") (d #t) (k 0)) (d (n "symbolic-demangle") (r "^12.1") (f (quote ("cpp" "msvc" "rust"))) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "errhandlingapi" "winuser" "winbase" "stringapiset"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Foundation" "Foundation_Collections" "Management_Deployment" "Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_Kernel" "Win32_System_WinRT" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Win32_System_LibraryLoader" "Win32_System_ProcessStatus" "Win32_System_SystemServices" "Win32_System_Diagnostics_Debug" "Win32_System_Diagnostics_ToolHelp" "Win32_System_SystemInformation" "Win32_System_WindowsProgramming"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0i0198iy23j1qwfk9y1wn41hycibsfh7vjnd53za1kryisf6ciff") (f (quote (("dbgeng"))))))

(define-public crate-udbg-0.3.1 (c (n "udbg") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capstone") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "cpp_demangle") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "cstrptr") (r "^0.1") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "extend") (r "^1.1") (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored" "thread"))) (o #t) (d #t) (k 0)) (d (n "ezlua") (r "^0.3") (f (quote ("vendored"))) (d #t) (k 2)) (d (n "failed-result") (r "^0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.27") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "goblin") (r "~0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "iced-x86") (r "^1.20") (f (quote ("decoder" "intel" "std"))) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach_o_sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memmap2") (r "~0.5") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (f (quote ("unstable_const"))) (d #t) (k 0)) (d (n "minidump") (r "~0.17") (d #t) (k 0)) (d (n "minidump-writer") (r "^0.8") (d #t) (k 2)) (d (n "msvc-demangler") (r "^0.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "ntapi") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pdb") (r "^0.8") (d #t) (k 0)) (d (n "procfs") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rustyline") (r "^12") (d #t) (k 2)) (d (n "scroll") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "symbolic") (r "^12.1") (d #t) (k 0)) (d (n "symbolic-demangle") (r "^12.1") (f (quote ("cpp" "msvc" "rust"))) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winnt" "errhandlingapi" "winuser" "winbase" "stringapiset"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("implement" "Foundation" "Foundation_Collections" "Management_Deployment" "Win32_Foundation" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_Kernel" "Win32_System_WinRT" "Win32_System_Threading" "Win32_System_Com" "Win32_System_Ole" "Win32_System_Memory" "Win32_System_LibraryLoader" "Win32_System_ProcessStatus" "Win32_System_SystemServices" "Win32_System_Diagnostics_Debug" "Win32_System_Diagnostics_ToolHelp" "Win32_System_SystemInformation" "Win32_System_WindowsProgramming"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02lwdiwsxxbxm7k4c6nqhazs9d6hq893wqn1w99gdky58lypgk8j") (f (quote (("dbgeng"))))))

