(define-module (crates-io rl in rlink-connector-kafka) #:use-module (crates-io))

(define-public crate-rlink-connector-kafka-0.3.0 (c (n "rlink-connector-kafka") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.3.0") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0qpvjnd6dpywfniksl079zqgbg926bks4dcabq36fm68kq9fq5mh")))

(define-public crate-rlink-connector-kafka-0.3.1 (c (n "rlink-connector-kafka") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.3.0") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0cjjdqn2bpx0a1hkm3b657l3gxp86fjwgscbi25mmd7a0w9y5rv5")))

(define-public crate-rlink-connector-kafka-0.4.0 (c (n "rlink-connector-kafka") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.4") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0a14r1irsx22ljj446rhcdk6xlyc9dig7d58mhxh864j0lda1vkb")))

(define-public crate-rlink-connector-kafka-0.5.0 (c (n "rlink-connector-kafka") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "1bbw6clnvqv4ynhvcmwp9l6mdfvzz73y5hx7hwa67zy0mxn0z9kj")))

(define-public crate-rlink-connector-kafka-0.5.1 (c (n "rlink-connector-kafka") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0n9k3vnvpybz430879s8nh7p05b0w3k9l030vjr9jsyj03mqa2w6")))

(define-public crate-rlink-connector-kafka-0.5.2 (c (n "rlink-connector-kafka") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0rjxjm9vgk00r26ia2ba6xaksq1dpirvjq97qmzx0wy185kahli8")))

(define-public crate-rlink-connector-kafka-0.5.3 (c (n "rlink-connector-kafka") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "1pf7h6anyap4qq6chnh6xi4flicb2qq8037cra01rx541cwx2mdw")))

(define-public crate-rlink-connector-kafka-0.5.4 (c (n "rlink-connector-kafka") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "159syrji148fzkf5a1s2drb7zna2ccl8xpwhvkx2kvrm6v3l2bhy")))

(define-public crate-rlink-connector-kafka-0.5.5 (c (n "rlink-connector-kafka") (v "0.5.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "1gq4snrajmi845xw9dnrc029q38zg0vlj37ckb1nykzkpmdw5r2x")))

(define-public crate-rlink-connector-kafka-0.5.6 (c (n "rlink-connector-kafka") (v "0.5.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.5") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "1gx4y48ggprv6ypfyjdznyhv1bss017vvj17ni2a7rcf4rj56wzp")))

(define-public crate-rlink-connector-kafka-0.6.0 (c (n "rlink-connector-kafka") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "19m9xsqnsanpimd5kxnb5982h9ngv18d2w1fkxnsjfcnkily3pc8")))

(define-public crate-rlink-connector-kafka-0.6.1 (c (n "rlink-connector-kafka") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.2") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "155aggmnim8wanzxhzwiab25iic2sdr618g3glwlq8jsldm4mwxm")))

(define-public crate-rlink-connector-kafka-0.6.2 (c (n "rlink-connector-kafka") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.3") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "02877zr5bsxw6jyfhzcyycdlp9q6wz4kd4l7jasvbxik4f78dd6d")))

(define-public crate-rlink-connector-kafka-0.6.3 (c (n "rlink-connector-kafka") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.3") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0f7997lrfazzqvcffy31s3lp2jj47d22sfw718mri9rjq5p5ql94")))

(define-public crate-rlink-connector-kafka-0.6.4 (c (n "rlink-connector-kafka") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.3") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "10lmk4699h6r3wbr65x6z9z01yqnyxf1dmf3pgs46905vh9gl018")))

(define-public crate-rlink-connector-kafka-0.6.5 (c (n "rlink-connector-kafka") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.3") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "17qfw1633q8v4pbld2z80ra9b0g5njcpmmlx5nanvm63lq2cg6rl")))

(define-public crate-rlink-connector-kafka-0.6.6 (c (n "rlink-connector-kafka") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rdkafka") (r "^0.25") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "rlink") (r "^0.6") (d #t) (k 0)) (d (n "rlink-derive") (r "^0.3") (d #t) (k 0)) (d (n "serbuffer") (r "^1.3") (d #t) (k 0)) (d (n "serbuffer-gen") (r "^1.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread"))) (d #t) (k 2)))) (h "0haczk5v3bih1p8ilzflv9152cjgcmqxyr6svxqnj3ravxc4l2cc")))

