(define-module (crates-io rl if rlifesrc) #:use-module (crates-io))

(define-public crate-rlifesrc-0.3.1 (c (n "rlifesrc") (v "0.3.1") (d (list (d (n "async-std") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.14.1") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.3.1") (d #t) (k 0)))) (h "0yxkli1zqajnzpxrdg6nqly99q743dz4wbp0mwslmw9c5dmj42gc") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.3.2 (c (n "rlifesrc") (v "0.3.2") (d (list (d (n "async-std") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.1") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.3.2") (d #t) (k 0)))) (h "00hxa2021qrgxzks8blv31jwc3w9lr5kyvxj0fmgryck54kgvq15") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.3.3 (c (n "rlifesrc") (v "0.3.3") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.17.5") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.3.3") (d #t) (k 0)))) (h "1i2ha1ha5fwmrc6l1pnrkqm714ig5116c4iqyh9y5x0yclimh6hw") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.3.4 (c (n "rlifesrc") (v "0.3.4") (d (list (d (n "async-std") (r "^1.6.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.18.0") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.3.4") (d #t) (k 0)))) (h "1db7dcp97syciwdwsjp7kk6wdw1cmhzzbikqll5chzxmhxhjbp3v") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.3.5 (c (n "rlifesrc") (v "0.3.5") (d (list (d (n "async-std") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.18.2") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.3.5") (d #t) (k 0)))) (h "127g67ggjr9rxx5asyws30xv7nsvjqymjhsri36afnf5yskmsngq") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.4.0 (c (n "rlifesrc") (v "0.4.0") (d (list (d (n "async-std") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.19.0") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "15hk46c7w622y2a19vfblmgjw3hwdlqb2a8hy99bb5g95f1qy2z1") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.4.1 (c (n "rlifesrc") (v "0.4.1") (d (list (d (n "async-std") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.19.0") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.4.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "19vwh0wn8kl6danxcn6a8yv71ln07s22wskghlg12jkpi4dlq1sa") (f (quote (("tui" "async-std" "crossterm" "futures") ("default" "tui"))))))

(define-public crate-rlifesrc-0.5.0 (c (n "rlifesrc") (v "0.5.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.20.0") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.5.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "0af0lf4n8c6sca43psmsz070j4npflirp7rp36pkdplsf2qx1ikh") (f (quote (("tui" "crossterm" "futures-executor" "futures-util") ("default" "tui"))))))

(define-public crate-rlifesrc-0.5.1 (c (n "rlifesrc") (v "0.5.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.20.0") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1vcpy8mm2v7pcb4x85g469kjc94ji9rija18dpwyrgy6v3p3yiq0") (f (quote (("tui" "crossterm" "futures-executor" "futures-util") ("default" "tui"))))))

(define-public crate-rlifesrc-0.5.2 (c (n "rlifesrc") (v "0.5.2") (d (list (d (n "clap") (r "^3.0.0") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.5.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1jh18lvivycim1rj7vh1rld1pw3122yskb298zir8kqc3rz1bgh2") (f (quote (("tui" "crossterm" "futures-executor" "futures-util") ("default" "tui"))))))

(define-public crate-rlifesrc-0.6.0 (c (n "rlifesrc") (v "0.6.0") (d (list (d (n "clap") (r "^3.1.14") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)))) (h "1522k7wka7hphps2scj5m7mxrhdiimxsbn331kl5gywhaapxlb4b") (f (quote (("tui" "crossterm" "futures-executor" "futures-util") ("default" "tui"))))))

(define-public crate-rlifesrc-0.6.1 (c (n "rlifesrc") (v "0.6.1") (d (list (d (n "clap") (r "^4.1.10") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("event-stream"))) (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.27") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.27") (o #t) (d #t) (k 0)) (d (n "rlifesrc-lib") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.19") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0xmfck35dzs78yb0gi5g6fn8axf68rn05b8zz3c1kjlp05h407va") (f (quote (("tui" "crossterm" "futures-executor" "futures-util") ("default" "tui"))))))

