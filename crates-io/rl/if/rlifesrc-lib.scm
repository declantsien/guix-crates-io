(define-module (crates-io rl if rlifesrc-lib) #:use-module (crates-io))

(define-public crate-rlifesrc-lib-0.1.0 (c (n "rlifesrc-lib") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0j16aiyhyblbyr1bdzfyn4xlmqxvyi1y27hs17hbfisg67rbgsw8") (f (quote (("stdweb" "serde" "rand/stdweb") ("default"))))))

(define-public crate-rlifesrc-lib-0.2.0 (c (n "rlifesrc-lib") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1w228slm3r3slysab19agw962xyggxnbq27r5axcx3ckaqwqliii") (f (quote (("stdweb" "serde" "rand/stdweb") ("default"))))))

(define-public crate-rlifesrc-lib-0.2.1 (c (n "rlifesrc-lib") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0k493jdg5yl1qz253222rrsz4l0rlqymhgd33hlj3xqw7zfz5nfs") (f (quote (("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.0 (c (n "rlifesrc-lib") (v "0.3.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0z0pd5630wccz28lpvk32yf3gahfl3ns3r7cmdygfg5cmqn9ld0h") (f (quote (("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.1 (c (n "rlifesrc-lib") (v "0.3.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "005sqmis04plirrm3gsnq7chpgblws1b41vfxw1hi0wfnkklglfm") (f (quote (("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.2 (c (n "rlifesrc-lib") (v "0.3.2") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08fndnraxzdmi2l12iwkaw4qqkxqfaridi3xh51rw9pjgn8p3a99") (f (quote (("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.3 (c (n "rlifesrc-lib") (v "0.3.3") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "03jz61pjy8fxx83p082srjgzynj0xqbiwdj4pxmmj9ps9bkrdfnp") (f (quote (("wasm-bindgen" "serialize" "rand/wasm-bindgen") ("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.4 (c (n "rlifesrc-lib") (v "0.3.4") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)))) (h "1zhhnjn6yrba3rhpxamycxlppmflzi8bxqyqg82jrh7cnzig52cb") (f (quote (("wasm-bindgen" "serialize" "rand/wasm-bindgen") ("stdweb" "serialize" "rand/stdweb") ("serialize" "serde") ("default"))))))

(define-public crate-rlifesrc-lib-0.3.5 (c (n "rlifesrc-lib") (v "0.3.5") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "1bzsx7lizk17l8f65yyd912kihcscnjyw5r5445h54rh0g3gy94m") (f (quote (("js" "serde" "getrandom/js") ("default"))))))

(define-public crate-rlifesrc-lib-0.4.0 (c (n "rlifesrc-lib") (v "0.4.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "142hvay18crvnddsgadd64zw1q086v2bdjmkhmkxwrc3awn3mfvj") (f (quote (("js" "serde" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.4.1 (c (n "rlifesrc-lib") (v "0.4.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0iivwbpjgc070hpl36wwcapq8gfpz8rkyg6j3by9n55lhaxll3qw") (f (quote (("js" "serde" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.5.0 (c (n "rlifesrc-lib") (v "0.5.0") (d (list (d (n "auto_enums") (r "^0.7.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-formats") (r "^0.3.3") (f (quote ("unknown"))) (o #t) (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.3") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.2") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "from_variants") (r "^0.6.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "typebool") (r "^0.1.0") (d #t) (k 0)))) (h "0vfkyv9isrjhyjhki30n174mrqnb170i4b7rvjmx9x6bmrwfmziq") (f (quote (("read-rle" "serde" "ca-formats") ("js" "serde" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.5.1 (c (n "rlifesrc-lib") (v "0.5.1") (d (list (d (n "auto_enums") (r "^0.7.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "ca-formats") (r "^0.3.3") (f (quote ("unknown"))) (o #t) (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.3") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.2") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "from_variants") (r "^0.6.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "typebool") (r "^0.1.0") (d #t) (k 0)))) (h "0b61wk6w57jrgsbmq00w7limsfsk09b0z55qxpzhknzmxq973y92") (f (quote (("read-rle" "serde" "ca-formats") ("js" "serde" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.5.2 (c (n "rlifesrc-lib") (v "0.5.2") (d (list (d (n "auto_enums") (r "^0.7.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "ca-formats") (r "^0.3.3") (f (quote ("unknown"))) (o #t) (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.3") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "from_variants") (r "^0.6.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0hw2x9g3y46xhq59i99578kq4s6fa94f47h70g1fhqrgf2wi204n") (f (quote (("save-extra" "serde") ("read-rle" "serde" "ca-formats") ("js" "serde" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.6.0 (c (n "rlifesrc-lib") (v "0.6.0") (d (list (d (n "auto_enums") (r "^0.7.12") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "ca-formats") (r "^0.3.3") (f (quote ("unknown"))) (o #t) (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.3") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (d #t) (k 0)) (d (n "from_variants") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1al8qzmij5sbzjxgx6nyj8aazj7sn2g1zvmnqggy0ar4qsxa0cw5") (f (quote (("read-rle" "serde" "ca-formats") ("js" "getrandom/js") ("default" "serde"))))))

(define-public crate-rlifesrc-lib-0.6.1 (c (n "rlifesrc-lib") (v "0.6.1") (d (list (d (n "auto_enums") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.1") (d #t) (k 0)) (d (n "ca-formats") (r "^0.3.5") (f (quote ("unknown"))) (o #t) (d #t) (k 0)) (d (n "ca-rules") (r "^0.3.5") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "educe") (r "^0.4.20") (d #t) (k 0)) (d (n "from_variants") (r "^1.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0fikiafphsbb9nmnyjhfyhgq0v274bj4jync5d74dd5sza0g6m3v") (f (quote (("read-rle" "serde" "ca-formats") ("js" "getrandom/js") ("default" "serde"))))))

