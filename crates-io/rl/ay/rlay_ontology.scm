(define-module (crates-io rl ay rlay_ontology) #:use-module (crates-io))

(define-public crate-rlay_ontology-0.2.3 (c (n "rlay_ontology") (v "0.2.3") (d (list (d (n "bytes") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "cid_fork_rlay") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4.0") (o #t) (k 0)) (d (n "integer-encoding") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "pwasm-std") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rlay_ontology_build") (r "^0.2.3") (d #t) (k 1)) (d (n "rustc-hex") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "08rrfc7qzmar3miz4ccz8fjdz8z2iaai1vsb7aav77aa3apna0j0") (f (quote (("web3_compat" "ethereum-types") ("wasm_bindgen" "wasm-bindgen" "web3_compat") ("std" "prost" "bytes" "rustc-hex" "serde/std" "serde_bytes/std" "serde_cbor/std" "ethereum-types/std" "serialize") ("serialize" "multihash" "cid_fork_rlay" "multibase" "serde_derive" "serde_cbor" "serde_bytes" "serde" "integer-encoding") ("pwasm" "pwasm-std") ("examples" "serde_json" "itertools") ("default" "std"))))))

(define-public crate-rlay_ontology-0.2.4 (c (n "rlay_ontology") (v "0.2.4") (d (list (d (n "ambassador") (r "^0.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "cid_fork_rlay") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4.0") (o #t) (k 0)) (d (n "integer-encoding") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "pwasm-std") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rlay_ontology_build") (r "^0.2.3") (d #t) (k 1)) (d (n "rustc-hex") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.16.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1xdxa2mdc0niw3xxaqnb6rs8q6z4kgmh4f28af70aw5sas0ff5w1") (f (quote (("web3_compat" "ethereum-types") ("wasm_bindgen" "wasm-bindgen" "web3_compat") ("std" "prost" "bytes" "rustc-hex" "serde/std" "serde_bytes/std" "serde_cbor/std" "ethereum-types/std" "serialize") ("serialize" "multihash" "cid_fork_rlay" "multibase" "serde_derive" "serde_cbor" "serde_bytes" "serde" "integer-encoding") ("pwasm" "pwasm-std") ("examples" "serde_json" "itertools") ("default" "std"))))))

(define-public crate-rlay_ontology-0.2.5 (c (n "rlay_ontology") (v "0.2.5") (d (list (d (n "ambassador") (r "^0.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "cid_fork_rlay") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4.0") (o #t) (k 0)) (d (n "integer-encoding") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "pwasm-std") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rlay_ontology_build") (r "^0.2.5") (d #t) (k 1)) (d (n "rustc-hex") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.16.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "04aaqwxnjrpywpdw8zml0rq8zps6dc45gakpqbb059d9v7v62061") (f (quote (("web3_compat" "ethereum-types") ("wasm_bindgen" "wasm-bindgen" "web3_compat") ("std" "prost" "bytes" "rustc-hex" "serde/std" "serde_bytes/std" "serde_cbor/std" "ethereum-types/std" "serialize") ("serialize" "multihash" "cid_fork_rlay" "multibase" "serde_derive" "serde_cbor" "serde_bytes" "serde" "integer-encoding") ("pwasm" "pwasm-std") ("examples" "serde_json" "itertools") ("default" "std"))))))

(define-public crate-rlay_ontology-0.2.6 (c (n "rlay_ontology") (v "0.2.6") (d (list (d (n "ambassador") (r "^0.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "cid_fork_rlay") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4.0") (o #t) (k 0)) (d (n "integer-encoding") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "pwasm-std") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rlay_ontology_build") (r "^0.2.5") (d #t) (k 1)) (d (n "rustc-hex") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.1") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum_macros") (r "^0.16.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0jxkgf91rglbpc6zdgwa9ygwpzvs3rq92xswkxvzzcnv30nscjd8") (f (quote (("web3_compat" "ethereum-types") ("wasm_bindgen" "wasm-bindgen" "web3_compat") ("std" "prost" "bytes" "rustc-hex" "serde/std" "serde_bytes/std" "serde_cbor/std" "ethereum-types/std" "serialize") ("serialize" "multihash" "cid_fork_rlay" "multibase" "serde_derive" "serde_cbor" "serde_bytes" "serde" "integer-encoding") ("pwasm" "pwasm-std") ("examples" "serde_json" "itertools") ("default" "std"))))))

