(define-module (crates-io zk p- zkp-merkle-tree) #:use-module (crates-io))

(define-public crate-zkp-merkle-tree-0.1.0 (c (n "zkp-merkle-tree") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (k 0)) (d (n "lazy_static") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "no-std-compat") (r "^0.1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "zkp-criterion-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "zkp-error-utils") (r "^0.1.0") (k 0)) (d (n "zkp-hash") (r "^0.1.0") (k 0)) (d (n "zkp-macros-decl") (r "^0.1.0") (o #t) (k 0)) (d (n "zkp-mmap-vec") (r "^0.1.0") (o #t) (k 0)) (d (n "zkp-u256") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0lcbwq4r5jfhl142lhnn78c7b5x4fja8hqmm31wm76r8jsbkiqy6") (f (quote (("test" "zkp-u256/test" "zkp-macros-decl" "std" "quickcheck" "quickcheck_macros") ("std" "zkp-error-utils/std" "zkp-mmap-vec/std" "zkp-hash/std" "no-std-compat/std" "itertools/use_std" "crunchy/std" "rayon" "hex") ("prover" "std" "zkp-mmap-vec") ("default" "std" "prover") ("bench" "test" "criterion" "zkp-criterion-utils" "lazy_static"))))))

(define-public crate-zkp-merkle-tree-0.2.0 (c (n "zkp-merkle-tree") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "no-std-compat") (r "^0.4.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.1.2") (d #t) (k 2)) (d (n "rayon") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "zkp-criterion-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "zkp-error-utils") (r "^0.2.0") (k 0)) (d (n "zkp-hash") (r "^0.2.0") (k 0)) (d (n "zkp-macros-decl") (r "^0.2.0") (d #t) (k 2)) (d (n "zkp-mmap-vec") (r "^0.2.0") (o #t) (k 0)) (d (n "zkp-u256") (r "^0.2.0") (f (quote ("proptest" "proptest-derive"))) (d #t) (k 2)))) (h "0n6sp9y6invsixzpkkvvrx0mz1adc31sin1df7b2ryc2z8r3yk63") (f (quote (("std" "crunchy/std" "hex" "itertools/use_std" "log/std" "no-std-compat/std" "rayon" "zkp-error-utils/std" "zkp-hash/std" "zkp-mmap-vec/std") ("prover" "std" "zkp-mmap-vec") ("default" "std" "prover"))))))

