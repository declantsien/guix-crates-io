(define-module (crates-io zk p- zkp-u256) #:use-module (crates-io))

(define-public crate-zkp-u256-0.1.0 (c (n "zkp-u256") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (k 0)) (d (n "no-std-compat") (r "^0.1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zkp-macros-decl") (r "^0.1.0") (k 0)))) (h "0cdwlp8yxir1kbj04v0rhpchjm77kc4f52r7pyphrz8adk4qp5q7") (f (quote (("test" "std" "quickcheck" "quickcheck_macros") ("std" "zkp-macros-decl/std" "no-std-compat/std" "itertools/use_std" "crunchy/std" "hex") ("default" "std") ("bench" "test" "criterion"))))))

(define-public crate-zkp-u256-0.1.1 (c (n "zkp-u256") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (k 0)) (d (n "no-std-compat") (r "^0.1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zkp-macros-decl") (r "^0.1.0") (k 0)))) (h "02zcs7sf1xpgj5wpmc3dlfdjkg87w00rg8ssz7if954vcvp4az7n") (f (quote (("test" "std" "quickcheck" "quickcheck_macros") ("std" "zkp-macros-decl/std" "no-std-compat/std" "itertools/use_std" "crunchy/std" "hex") ("default" "std") ("bench" "test" "criterion"))))))

(define-public crate-zkp-u256-0.2.0 (c (n "zkp-u256") (v "0.2.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (k 0)) (d (n "itertools") (r "^0.9.0") (k 0)) (d (n "no-std-compat") (r "^0.4.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "parity-scale-codec") (r "^1.3.0") (o #t) (k 0)) (d (n "proptest") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zkp-macros-decl") (r "^0.2.0") (d #t) (k 2)))) (h "02bxb45v2j90bksmiz8rsr44k8smj3nsrc9p9379q80xdmgv1gk6") (f (quote (("std" "crunchy/std" "hex/std" "itertools/use_std" "no-std-compat/std" "num-traits/std" "parity-scale-codec/std" "serde/std") ("stable") ("parity_codec" "parity-scale-codec/derive") ("inline") ("default" "inline" "rand" "std" "serde") ("asm"))))))

(define-public crate-zkp-u256-0.2.1 (c (n "zkp-u256") (v "0.2.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.0") (k 0)) (d (n "itertools") (r "^0.9.0") (k 0)) (d (n "no-std-compat") (r "^0.4.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "parity-scale-codec") (r "^1.3.0") (o #t) (k 0)) (d (n "proptest") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zkp-macros-decl") (r "^0.2.0") (d #t) (k 2)))) (h "1i3njxivkg5l7zkvrmkzsy11s3d6vig4p32k3nbwmzs0k90ip4zr") (f (quote (("std" "crunchy/std" "hex/std" "itertools/use_std" "no-std-compat/std" "num-traits/std" "parity-scale-codec/std" "serde/std") ("stable") ("parity_codec" "parity-scale-codec/derive") ("inline") ("default" "inline" "rand" "std" "serde") ("asm"))))))

