(define-module (crates-io zk p- zkp-elliptic-curve-crypto) #:use-module (crates-io))

(define-public crate-zkp-elliptic-curve-crypto-0.1.0 (c (n "zkp-elliptic-curve-crypto") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (k 0)) (d (n "lazy_static") (r "^1.3.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "no-std-compat") (r "^0.1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "zkp-elliptic-curve") (r "^0.1.0") (k 0)) (d (n "zkp-macros-decl") (r "^0.1.0") (k 0)) (d (n "zkp-primefield") (r "^0.1.0") (k 0)) (d (n "zkp-u256") (r "^0.1.0") (k 0)))) (h "1zlpqjdx9sjd7rj5mfyd5d9b529xifkc0vjcvfv7ll9gips0jj3m") (f (quote (("unsafe_ecdsa") ("test" "quickcheck" "quickcheck_macros" "zkp-u256/test" "zkp-primefield/test" "zkp-elliptic-curve/std") ("std" "zkp-macros-decl/std" "zkp-u256/std" "zkp-primefield/std" "zkp-elliptic-curve/std" "no-std-compat/std" "itertools/use_std") ("default" "std") ("bench" "criterion"))))))

(define-public crate-zkp-elliptic-curve-crypto-0.2.0 (c (n "zkp-elliptic-curve-crypto") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "itertools") (r "^0.9.0") (k 0)) (d (n "lazy_static") (r "^1.3.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "no-std-compat") (r "^0.4.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.0") (o #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.1") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "zkp-elliptic-curve") (r "^0.2.0") (k 0)) (d (n "zkp-macros-decl") (r "^0.2.0") (k 0)) (d (n "zkp-primefield") (r "^0.2.0") (k 0)) (d (n "zkp-primefield") (r "^0.2.0") (f (quote ("proptest"))) (d #t) (k 2)) (d (n "zkp-u256") (r "^0.2.0") (k 0)) (d (n "zkp-u256") (r "^0.2.0") (f (quote ("proptest" "proptest-derive"))) (d #t) (k 2)))) (h "0m7c23664pzlbijgcn44ggb495xb99al9h1i34862k8h9gjygpn1") (f (quote (("unsafe_ecdsa") ("std" "serde/std" "itertools/use_std" "no-std-compat/std" "parity-scale-codec/std" "zkp-elliptic-curve/std" "zkp-macros-decl/std" "zkp-primefield/std" "zkp-u256/std") ("parity_codec" "parity-scale-codec/derive" "zkp-elliptic-curve/parity_codec" "zkp-primefield/parity_codec" "zkp-u256/parity_codec") ("default" "std" "serde"))))))

