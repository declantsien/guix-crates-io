(define-module (crates-io zk -p zk-paillier-lsc) #:use-module (crates-io))

(define-public crate-zk-paillier-lsc-0.1.1 (c (n "zk-paillier-lsc") (v "0.1.1") (d (list (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curv-lsc") (r "^0.1.0") (f (quote ("num-bigint"))) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "paillier") (r "^0.1.1") (k 0) (p "paillier-lsc")) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ynldn2zl9rlmrkdlzjiry4gxfrwcf4fmsnm6bv06dlncixhvap3")))

(define-public crate-zk-paillier-lsc-0.1.2 (c (n "zk-paillier-lsc") (v "0.1.2") (d (list (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curv-lsc") (r "^0.1.2") (f (quote ("num-bigint"))) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "paillier") (r "^0.1.2") (k 0) (p "paillier-lsc")) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1xlrmmfz0v663vknaryy1vir01k7376cd31gz7ib4iysy1dg5d37")))

