(define-module (crates-io zk ut zkutil) #:use-module (crates-io))

(define-public crate-zkutil-0.1.1 (c (n "zkutil") (v "0.1.1") (d (list (d (n "bellman_ce") (r "^0.3.3") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0i7gn5wf4idz460vwq95irz0914lzidf8291a0968figl97bvlxh") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.1.2 (c (n "zkutil") (v "0.1.2") (d (list (d (n "bellman_ce") (r "^0.3.3") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0idbvdwxmi5796dsgvlq83npbx09p7larrasxbsj9c30q9facxa4") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.1.3 (c (n "zkutil") (v "0.1.3") (d (list (d (n "bellman_ce") (r "^0.3.3") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "09i0a099lbznnh4b8drpdvshdc2rvbh3nlll6784hsnybn8hmi05") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.1.4 (c (n "zkutil") (v "0.1.4") (d (list (d (n "bellman_ce") (r "^0.3.3") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0aw0614i3jw52ix4pi18qn8r2raajn0lhkcrkjy29cwsi6rqif84") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.2.0 (c (n "zkutil") (v "0.2.0") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "07wsli215bvjq24bf7j0nhj00c31hdswl0wvma0gziwbq5rsd5fh") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.2.1 (c (n "zkutil") (v "0.2.1") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "064npgpyx83zc9n81qi2b0fi35rdsn57z9gqm29y5k52ssx8jy28") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.3.0 (c (n "zkutil") (v "0.3.0") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1b89bjarf3zqvcm2kyk9bhz34bap8j4ji8bxdwwr2lxnjs0v7qhk") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.3.1 (c (n "zkutil") (v "0.3.1") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "168zwi2nnjwl12n463i06fpr81c827x515fgg8zikdqxvbp9ahv6") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.3.2 (c (n "zkutil") (v "0.3.2") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "19r0s2hvhhx49wj3wzcgn4q514g9ixx1a98fqrxg8ij2smvzp7vs") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.4.0 (c (n "zkutil") (v "0.4.0") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0qv9dyd74j8cizn75nn6d88kpklbx0p1hk1znxvq5dd4ypzy4lrw") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.4.1 (c (n "zkutil") (v "0.4.1") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "02apj6pdgggwrz75mf54g0wgbsrc4nds7znmw2v7sly5bhk53ysb") (f (quote (("default" "bellman_ce/multicore"))))))

(define-public crate-zkutil-0.5.0 (c (n "zkutil") (v "0.5.0") (d (list (d (n "bellman_ce") (r "^0.3.4") (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0) (p "clap-v3")) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0375rjgkvwkz2c4272zk5cq3k8kcxrj898lkkg959scrilxnw9ji") (f (quote (("default" "bellman_ce/multicore"))))))

