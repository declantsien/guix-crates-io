(define-module (crates-io zk pl zkplonk) #:use-module (crates-io))

(define-public crate-zkplonk-0.0.1 (c (n "zkplonk") (v "0.0.1") (d (list (d (n "bls-12-381") (r "^0.0.23") (k 0)) (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ec-pairing") (r "^0.0.14") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "jub-jub") (r "^0.0.20") (k 0)) (d (n "poly-commit") (r "^0.0.13") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "zksnarks") (r "^0.0.1") (k 0)) (d (n "zkstd") (r "^0.0.22") (k 0)))) (h "0fgpn0ixakjxw7amwx77iniwr1mprj98xbq040r5imvb1kfk8p00") (f (quote (("std" "poly-commit/std" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("alloc"))))))

