(define-module (crates-io de lp delphi) #:use-module (crates-io))

(define-public crate-delphi-0.0.0 (c (n "delphi") (v "0.0.0") (d (list (d (n "abscissa_core") (r "^0.5") (d #t) (k 0)) (d (n "abscissa_core") (r "^0.5") (f (quote ("testing"))) (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "gumdrop") (r "^0.7") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)))) (h "1f08yg67cmaah53i6zx9g9a8ly8d0352146mmbir75abs2sn9igr")))

(define-public crate-delphi-0.0.1 (c (n "delphi") (v "0.0.1") (d (list (d (n "abscissa_core") (r "^0.5") (d #t) (k 0)) (d (n "abscissa_core") (r "^0.5") (f (quote ("testing"))) (d #t) (k 2)) (d (n "abscissa_tokio") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gumdrop") (r "^0.7") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-proxy") (r "^0.8") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.21") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "stdtx") (r "^0.3") (d #t) (k 0)) (d (n "tendermint") (r "^0.17.0-rc3") (d #t) (k 0)) (d (n "tendermint-rpc") (r "^0.17.0-rc2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "warp") (r "^0.2") (d #t) (k 0)))) (h "125x2259700xmksq81v9j3c72spv156kij24c7idwzmgsdarc572")))

(define-public crate-delphi-0.0.2 (c (n "delphi") (v "0.0.2") (d (list (d (n "abscissa_core") (r "^0.5") (d #t) (k 0)) (d (n "abscissa_core") (r "^0.5") (f (quote ("testing"))) (d #t) (k 2)) (d (n "abscissa_tokio") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gumdrop") (r "^0.7") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-proxy") (r "^0.8") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.21") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "stdtx") (r "^0.3") (d #t) (k 0)) (d (n "tendermint") (r "^0.17.0-rc3") (d #t) (k 0)) (d (n "tendermint-rpc") (r "^0.17.0-rc2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "warp") (r "^0.2") (d #t) (k 0)))) (h "1rf7rr5x2ry5vra1gc2g5yyvqz0bf94g94ywi4312lirmiic3ink")))

(define-public crate-delphi-0.0.3 (c (n "delphi") (v "0.0.3") (d (list (d (n "abscissa_core") (r "^0.5") (d #t) (k 0)) (d (n "abscissa_core") (r "^0.5") (f (quote ("testing"))) (d #t) (k 2)) (d (n "abscissa_tokio") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gumdrop") (r "^0.7") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-proxy") (r "^0.8") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.21") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "stdtx") (r "^0.3") (d #t) (k 0)) (d (n "tendermint") (r "^0.17.0-rc3") (d #t) (k 0)) (d (n "tendermint-rpc") (r "^0.17.0-rc2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "warp") (r "^0.2") (d #t) (k 0)))) (h "11qbxafhngklsahwl1zwnqwwx1bmm5j9cg4z0vrhzfsyv49d5jih")))

(define-public crate-delphi-0.0.5 (c (n "delphi") (v "0.0.5") (d (list (d (n "abscissa_core") (r "=0.6.0-pre.1") (d #t) (k 0)) (d (n "abscissa_core") (r "=0.6.0-pre.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "abscissa_tokio") (r "=0.6.0-pre.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gumdrop") (r "^0.7") (d #t) (k 0)) (d (n "iqhttp") (r "^0.1") (f (quote ("json" "proxy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "stdtx") (r "^0.5") (d #t) (k 0)) (d (n "tendermint") (r "^0.20") (d #t) (k 0)) (d (n "tendermint-rpc") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "16q225q30daqr9d0j5ld68hh8szy68jxxhavf9nc2s8zbypq4pil")))

