(define-module (crates-io de xr dexr) #:use-module (crates-io))

(define-public crate-dexr-0.1.0 (c (n "dexr") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1.0-rc.1") (f (quote ("handlebars"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "vid2img") (r "^0.1.0") (d #t) (k 0)))) (h "0c8g7iyqv93a32w0sxsmf4drd54nnz17l1m5bd8ddf5b75h92ah7")))

(define-public crate-dexr-0.1.1 (c (n "dexr") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1.0-rc.1") (f (quote ("handlebars"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "vid2img") (r "^0.1.0") (d #t) (k 0)))) (h "1rplkmnvc8q81c3spnw3s82f0dyxsd4xvk3djkz1kjiv9laj1bif")))

(define-public crate-dexr-0.2.0 (c (n "dexr") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1.0-rc.1") (f (quote ("handlebars"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "vid2img") (r "^0.1.0") (d #t) (k 0)))) (h "129pf0rsv1h3z3xdz6csk4g2mqvsqs334zq6wrjk9y4i1qgii3kp")))

(define-public crate-dexr-0.2.1 (c (n "dexr") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "handlebars") (r "^4.2.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "vid2img") (r "^0.1.0") (d #t) (k 0)))) (h "0lch46wddpflsibw5rrnx4cd97c085irvzpx9y3wmk8fpxvi9xzh")))

(define-public crate-dexr-0.2.2 (c (n "dexr") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "handlebars") (r "^4.2.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "vid2img") (r "^0.1.0") (d #t) (k 0)))) (h "0kc785wl0jas3mirfvn4brl050910cmsq6qzhap71ldxwk9k4dz4")))

(define-public crate-dexr-0.3.0 (c (n "dexr") (v "0.3.0") (d (list (d (n "actix-files") (r "^0.6") (d #t) (k 0)) (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("with-actix-web"))) (d #t) (k 0)) (d (n "askama_actix") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde" "with-actix"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "simple_logger") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "vid2img") (r "^0.1.1") (d #t) (k 0)))) (h "0sha8dmx3fyj283yz7b49w1pnhq2khb541cd5cdbjz53zgxmpp9d")))

(define-public crate-dexr-0.3.1 (c (n "dexr") (v "0.3.1") (d (list (d (n "actix-files") (r "^0.6") (d #t) (k 0)) (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("with-actix-web"))) (d #t) (k 0)) (d (n "askama_actix") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde" "with-actix"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "simple_logger") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "vid2img") (r "^0.1.1") (d #t) (k 0)))) (h "1qv6kcsmrvqzj91klk8zkpaxs0izd005b3qpqzbp5c963hnkfabk")))

(define-public crate-dexr-0.3.2 (c (n "dexr") (v "0.3.2") (d (list (d (n "actix-files") (r "^0.6") (d #t) (k 0)) (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("with-actix-web"))) (d #t) (k 0)) (d (n "askama_actix") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde" "with-actix"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "simple_logger") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "vid2img") (r "^0.1.1") (d #t) (k 0)))) (h "04xmprrxnnba7rlkc2y2gdq2jgyz4ywy787r137bjy3ygx58wksk")))

(define-public crate-dexr-0.3.3 (c (n "dexr") (v "0.3.3") (d (list (d (n "actix-files") (r "^0.6") (d #t) (k 0)) (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("with-actix-web"))) (d #t) (k 0)) (d (n "askama_actix") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde" "with-actix"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mime-sniffer") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "simple_logger") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "vid2img") (r "^0.1.1") (d #t) (k 0)))) (h "059rh1k9qbnn1m40dh80yryc3qd13hvrc2vc9vv62w7rvs6lyv3n")))

(define-public crate-dexr-0.4.0 (c (n "dexr") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (k 0)) (d (n "az") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gstreamer") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-app") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-video") (r "^0.18") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "static-router") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-rayon") (r "^2") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 0)))) (h "08dzn9lrbki9brlf8jxyf0g69n79h5150m0wid3xa67yp20c07ci")))

(define-public crate-dexr-0.4.1 (c (n "dexr") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (k 0)) (d (n "az") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gstreamer") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-app") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-video") (r "^0.18") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "static-router") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-rayon") (r "^2") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 0)))) (h "0m0rv347za8zl2sfyx8wp8jq38z4rcmjgkyikmc8j8ijq02zqxjk")))

(define-public crate-dexr-0.4.2 (c (n "dexr") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (k 0)) (d (n "az") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gstreamer") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-app") (r "^0.18") (d #t) (k 0)) (d (n "gstreamer-video") (r "^0.18") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "static-router") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-rayon") (r "^2") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 0)))) (h "0nqjl7q8359q29llx971d60hg88nfpvf49rpjspaq356fqq7krmw")))

(define-public crate-dexr-0.4.3 (c (n "dexr") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (k 0)) (d (n "az") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bindable") (r "^0.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gstreamer") (r "^0.19") (d #t) (k 0)) (d (n "gstreamer-app") (r "^0.19") (d #t) (k 0)) (d (n "gstreamer-video") (r "^0.19") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "static-router") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt"))) (d #t) (k 0)) (d (n "tokio-rayon") (r "^2") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 0)))) (h "0z78cd1pcd8pamkkqd5iqn1zkabp82ifwjr8ck3rp4zvn0rsw6d9")))

