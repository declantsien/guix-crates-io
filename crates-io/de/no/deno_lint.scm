(define-module (crates-io de no deno_lint) #:use-module (crates-io))

(define-public crate-deno_lint-0.1.0 (c (n "deno_lint") (v "0.1.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.23.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)))) (h "0x93572j9p7lih7a1f4pp5vmzs7iaq267si84y2a7jrh87zl6pkz")))

(define-public crate-deno_lint-0.1.2 (c (n "deno_lint") (v "0.1.2") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.23.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)))) (h "19455palvygnxqz0y82zhjbpl28x8xfw16541dg8v73wx69kl9gf")))

(define-public crate-deno_lint-0.1.4 (c (n "deno_lint") (v "0.1.4") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)))) (h "0z7j5cbxwiqa4b79acr0b7609yyq14xhr08sp4513ml1a1s0baaq")))

(define-public crate-deno_lint-0.1.6 (c (n "deno_lint") (v "0.1.6") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)))) (h "02qz3sj8zrhj571sxk1ismf27wfv0imvwb3xx89v6l5jj4wl58cq")))

(define-public crate-deno_lint-0.1.7 (c (n "deno_lint") (v "0.1.7") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "02yqkfnw4wd7kvkqqjwanxanx0yka49klpq83l9al296r6bfr8vp")))

(define-public crate-deno_lint-0.1.8 (c (n "deno_lint") (v "0.1.8") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0k892n5ykcki6m87s3fxnd28p63s4rh86mwrmxbn9xpza2hhm80c")))

(define-public crate-deno_lint-0.1.9 (c (n "deno_lint") (v "0.1.9") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1421vr10qhyfbf706anb98w326zjnw0k1h64wvj2ddr63nxbnvc8")))

(define-public crate-deno_lint-0.1.10 (c (n "deno_lint") (v "0.1.10") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.5.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.24.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.5.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0np47yrf8lknspkqr0as7afcq09byxcqpar5d675kzb228rvn46w")))

(define-public crate-deno_lint-0.1.11 (c (n "deno_lint") (v "0.1.11") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.26.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.7.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0v7a2n4k979ngs1zynhss604cm76a9pih7rwajzsj9y6pk5w81nv")))

(define-public crate-deno_lint-0.1.12 (c (n "deno_lint") (v "0.1.12") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.26.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.7.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1fivq7nmg0nvinzpx63ma0dmv76b2840g2406pdi2d46ksw399vi")))

(define-public crate-deno_lint-0.1.13 (c (n "deno_lint") (v "0.1.13") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.6.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.26.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.7.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0hnnf9b58qnkz8w8wqvn6rph534hks2cjc4dvd2xy5gk9wgrjm40")))

(define-public crate-deno_lint-0.1.15 (c (n "deno_lint") (v "0.1.15") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.6.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "=0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "=0.26.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.7.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1gjdccp41sjia8m1cznba52d14ijz7xcnlxcmx4gfqsz88iqcr6g")))

(define-public crate-deno_lint-0.1.16 (c (n "deno_lint") (v "0.1.16") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "dprint-plugin-typescript") (r "=0.19.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "=0.8.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1daby3bmjds390y3m5lwniz5slzglg0cp9q4y4spabk12r1ml8f9")))

(define-public crate-deno_lint-0.1.17 (c (n "deno_lint") (v "0.1.17") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "dprint-plugin-typescript") (r "^0.21.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.9.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1allsj3naqvnglayic13d743klh3g6pa7v9gv0vrvv00dgwcf4vd")))

(define-public crate-deno_lint-0.1.18 (c (n "deno_lint") (v "0.1.18") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "dprint-plugin-typescript") (r "^0.23.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.10.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0d6mp7s65v7727lagb08hfw4c5850jr7z1l5x6rfc0vjw4vvccpl")))

(define-public crate-deno_lint-0.1.19 (c (n "deno_lint") (v "0.1.19") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "dprint-plugin-typescript") (r "^0.24.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.11.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0339zypa3kfljvhvbzrcihz5s4cyqp33msl01xahj30sjdn3ipzv")))

(define-public crate-deno_lint-0.1.20 (c (n "deno_lint") (v "0.1.20") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.8.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.1.0") (f (quote ("parser" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1f61d0h16j6fmzm12dx3gpv668hm78jmq4axyz5xhg16g83a3qlp")))

(define-public crate-deno_lint-0.1.21 (c (n "deno_lint") (v "0.1.21") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.8.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.1.0") (f (quote ("parser" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0hg5lm46gpwqim5kk7bkiwqdahb003j7flwz5gc1256fqawm1x3n") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.22 (c (n "deno_lint") (v "0.1.22") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.9.1") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.3.1") (f (quote ("parser" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "16fn84ankbpcrm1ccpjy109f1wkvcl44ayp63jsni5zdksfdish2") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.23 (c (n "deno_lint") (v "0.1.23") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.9.1") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.3.2") (f (quote ("parser" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1wgkai6f03rybha50cwjygfsb0k9bqvgn8y72sni5jb81wrh582b") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.24 (c (n "deno_lint") (v "0.1.24") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_common") (r "=0.9.1") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.5.0") (f (quote ("parser" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1mc7idwzrlagm3nbc309i7diw0z39p5a7r040b12xf2bv0829ms0") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.25 (c (n "deno_lint") (v "0.1.25") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.6.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0arx1i83waz1xlzs3iw9jfjmbypg822rnfnxfzj9npphgxk516bh") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.26 (c (n "deno_lint") (v "0.1.26") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.6.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "0mmbz656r0x0ha2ykmygm2gl659zwikgqv3y1xn3c0x2yawh8dkj") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.27 (c (n "deno_lint") (v "0.1.27") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.6.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1cv85v4c56h8c3vg70pmqm5hbjr11h9p5lsxdah957gh558g864q") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.28 (c (n "deno_lint") (v "0.1.28") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1al5d1wz8cp0vx8j4999z4ildgz65v7g1vba6yrwsv7xdrj3qa75") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.1.29 (c (n "deno_lint") (v "0.1.29") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1l0vaxm650alsbjha9ja938jb7a0gksy2l6z7rwqak1n0fnkn5ml") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.2.0 (c (n "deno_lint") (v "0.2.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.7") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "1d9hp7ylwpaiapx1gmgp7vd107iz5781xwkki6r692x2skm3hla5") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.2.1 (c (n "deno_lint") (v "0.2.1") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.3") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.8.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "19661d2fcjcldn9nyphghfifl48mk05cxzikjw610qqsml84wjw1") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.2.2 (c (n "deno_lint") (v "0.2.2") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.3") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.8.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "115dfrbnl271wgqik1rfjk4ig2il7bpcwyd2amlzm4w6f37g38b0") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.2.3 (c (n "deno_lint") (v "0.2.3") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.3") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.9.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 2)))) (h "04cnibgxi499h3fjkkxpvjrjmm283i7ap3sq9hn28bw9rxmq1p4a") (f (quote (("json" "serde" "serde_json"))))))

(define-public crate-deno_lint-0.2.4 (c (n "deno_lint") (v "0.2.4") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.10.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1pz2qxjv5m68xjd8dr2rsz6l69znrd80k61f6pbfbi61clbpr9i4")))

(define-public crate-deno_lint-0.2.5 (c (n "deno_lint") (v "0.2.5") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.11.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1h2xgyz9564vdybqb26myc9vwfkscgmmq5miz9a4f55qzhfs41jw")))

(define-public crate-deno_lint-0.2.6 (c (n "deno_lint") (v "0.2.6") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.11.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "17rqpspyv2q0q7nkw810c2zcvs7gf5n9h3ig3sx3aiqpnl8p8dpg")))

(define-public crate-deno_lint-0.2.7 (c (n "deno_lint") (v "0.2.7") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1ybzl8vlazsi7dhqnvypcca8ys7mmrwqv7qlnxhj6qfjzknr908y")))

(define-public crate-deno_lint-0.2.8 (c (n "deno_lint") (v "0.2.8") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.2") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1pb7xcbdifajk4q83xc6zyjy4clbijk3in12rf203dpz4bl4his9")))

(define-public crate-deno_lint-0.2.9 (c (n "deno_lint") (v "0.2.9") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "16l66xmphlgyzw37lnldh2pxlvxsykmqn9k5kdxzrgwbi3w6acyv")))

(define-public crate-deno_lint-0.2.10 (c (n "deno_lint") (v "0.2.10") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.34") (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 2)))) (h "1j8lwaylf8pqcq3191j3l9ncscqismk0p9rfajsk3gzcb5nk994a")))

(define-public crate-deno_lint-0.2.11 (c (n "deno_lint") (v "0.2.11") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.34") (d #t) (k 2)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.14.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 2)))) (h "1mdzzahdbay559yabh5mwrw1yqdrlimnh6hhg9s2av9dlj71samg")))

(define-public crate-deno_lint-0.2.12 (c (n "deno_lint") (v "0.2.12") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 2)) (d (n "deno_core") (r "^0.67.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.14.4") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0rrzfhqyd0619bg99c62zj6ywy9pzzk3b2pzfajjkjq088pgx2fw")))

(define-public crate-deno_lint-0.2.13 (c (n "deno_lint") (v "0.2.13") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.70.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.7") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.15.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1nxvhmyaiq8dmk1im48pl3n2nk6b668h1rb84d73fkrvg6ngsiar")))

(define-public crate-deno_lint-0.2.14 (c (n "deno_lint") (v "0.2.14") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.70.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.7") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.16.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0276ddi01ymvpqwzv8jjbxbkiwjihnlflinz5wbi91550y59myz5")))

(define-public crate-deno_lint-0.2.15 (c (n "deno_lint") (v "0.2.15") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.74.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.17.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0cgapkvnk9wjlzq62vwpmsdl9fr54slz79gh9zyakzlrw45w0790")))

(define-public crate-deno_lint-0.2.16 (c (n "deno_lint") (v "0.2.16") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.74.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.17.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1g2lslixkhbhbg35b0jkv48q5cn26pr9majam77b7glaq82mcnyp")))

(define-public crate-deno_lint-0.2.17 (c (n "deno_lint") (v "0.2.17") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.77.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.9") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.18.4") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "16l0k70wcqqb8bppb27y86m0ayr6l2lm2n0iwyh5a5kdxj6b37xc")))

(define-public crate-deno_lint-0.2.18 (c (n "deno_lint") (v "0.2.18") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.78.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.9") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.20.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0b7hgwidyiwrm6m3zz74cdp04vmkz4bx7qm4jqh1ym3f8hr3q25r")))

(define-public crate-deno_lint-0.2.19 (c (n "deno_lint") (v "0.2.19") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.78.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.12") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.24.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "05g8cgj3dam2n22scjpd8pg42c63wazbxwqpvcmgkk97c758yy1q")))

(define-public crate-deno_lint-0.2.20 (c (n "deno_lint") (v "0.2.20") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.78.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.12") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.24.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "18mhxb164azc1i7xy2jd8mhvlky5k8w8996vabz7bs64lllmnshc")))

(define-public crate-deno_lint-0.3.0 (c (n "deno_lint") (v "0.3.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.83.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.15") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.31.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0im4yr6b9vzkfjyljmrcgjj1gkprn1mz6kfsaqxkig48b1f2ik5s")))

(define-public crate-deno_lint-0.4.0 (c (n "deno_lint") (v "0.4.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.13") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.16.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.17") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.31.3") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0l5vbs7bnk1r3kfwgxbr0mc5yc7j7ib33b55kj0d6vzi31ym9gsp")))

(define-public crate-deno_lint-0.5.0 (c (n "deno_lint") (v "0.5.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.13") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.19.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.18") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.33.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1n9wkl1pgwxskz78sv4qc8grnnpn1q1vfx900zcq9ijipjwk32j9")))

(define-public crate-deno_lint-0.6.0 (c (n "deno_lint") (v "0.6.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.20") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.36.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0mklgcxj7kvgzszwikv2m0n25iwsxx2n861zjqw5l8j2m414h109")))

(define-public crate-deno_lint-0.6.1 (c (n "deno_lint") (v "0.6.1") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.20") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.36.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0ks34v0xvhmg92k2hzcscjn2dhwizzijrlsqw06dvipx9gklk9q8")))

(define-public crate-deno_lint-0.7.0 (c (n "deno_lint") (v "0.7.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.21.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.20") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.39.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "19srpvm0rg01ikp92zkzq1y02vm5j0bidzn4gvw9pzzln45big16")))

(define-public crate-deno_lint-0.8.0 (c (n "deno_lint") (v "0.8.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.22.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.21") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.44.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "14295vr1496pm7xrzjpy9avdbcq26413cgrxpsy8qm5sghhf0h92")))

(define-public crate-deno_lint-0.9.0 (c (n "deno_lint") (v "0.9.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.23.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.21") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.45.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1wy7jfmpspzv464n3qbv8ds8pg8kf1kcz4yjiq841qlw609ml8zp")))

(define-public crate-deno_lint-0.10.0 (c (n "deno_lint") (v "0.10.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.23.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.21") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.45.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0l4na380swlqrazi6qw04i3iwdbhbg1ak83zzcf637rr2344430z")))

(define-public crate-deno_lint-0.11.0 (c (n "deno_lint") (v "0.11.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.24.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.46.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "1i0cdkj7z94xwk7aabq8nwr1z7kp9r1d12slgjyhrqj4j0j6bg6v")))

(define-public crate-deno_lint-0.12.0 (c (n "deno_lint") (v "0.12.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.84.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "dprint-swc-ecma-ast-view") (r "^0.25.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.52.1") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0zbql5lcmlr02i5n9yqw1lrnqjsahavxahrwgzvcshzz6hdp97xd")))

(define-public crate-deno_lint-0.13.0 (c (n "deno_lint") (v "0.13.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "ast_view") (r "^0.30.0") (d #t) (k 0) (p "dprint-swc-ecma-ast-view")) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "markdown") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.57.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "18907bw588iigbw3m9l7vlwdwni77dblj99rpjvnpjxamawi21b0") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.14.0 (c (n "deno_lint") (v "0.14.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "ast_view") (r "^0.33.1") (d #t) (k 0) (p "dprint-swc-ecma-ast-view")) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.9") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.60.0") (f (quote ("parser" "transforms" "utils" "visit"))) (d #t) (k 0)))) (h "0r505mhx790rqkmspykf8nydzr00m5khzyyqk0qp113q9kvb9jy0") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.15.0 (c (n "deno_lint") (v "0.15.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.1.4") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "009a5y3zyss0w32j0yvb8j4mwn3qinvw9pxid01bd8250mj2pbz7") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.15.1 (c (n "deno_lint") (v "0.15.1") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.1.4") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1y2qphxkih11v4j227rwyixyap7pmvkwzq7db74vr9f7wc175cma") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.16.0 (c (n "deno_lint") (v "0.16.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.2.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0pi7g0y93069hdmzk6r9jk4ayfanfvqv6rnq74cdmc3a8w34fqrj") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.17.0 (c (n "deno_lint") (v "0.17.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.3.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "07f14rqw8hl8c4lalvpfjgqb52pnjsqhhpid5qbcykwxmz18as98") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.18.0 (c (n "deno_lint") (v "0.18.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.4.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "19gnjncrgv3cwyqkybj03kgydlqna6vb3rxzr24q68ig8qjm2w6q") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.18.1 (c (n "deno_lint") (v "0.18.1") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.4.1") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0phcpafypxrdr9bwaxwq6fvrr6m4sdjbsvazlxd1lyahm668mqfw") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.19.0 (c (n "deno_lint") (v "0.19.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.5.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0i6qw42gg93xy18vb3q4pfqa6ss5vzbcc0v1raj5wg4alh8if0vw") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.20.0 (c (n "deno_lint") (v "0.20.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1w5d8zp50b26zcqn6g3lwvam1rikg37xw0skfpi1kga8ig62pf30") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.20.1 (c (n "deno_lint") (v "0.20.1") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0z5wbq588kwmxjww1plc61dwiz6hwafk5f2wv5bg2y9m1v8b24y2") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.21.0 (c (n "deno_lint") (v "0.21.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.8.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1jbmixsijpfb1x11g585h3j4fnv46vxx897zp5n8qmlhnpgv7d4h") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.22.0 (c (n "deno_lint") (v "0.22.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1xfjq1krzhf3dl2cciq74yv5yc7d88bv6s3qhi2xyvsfj9fp3wbc") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.23.0 (c (n "deno_lint") (v "0.23.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.10.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1ga7gyb9lcfpiqysdl6kqgc1xpm6zasqxslb0r03j56lzz5bnf68") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.24.0 (c (n "deno_lint") (v "0.24.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.11.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "00swb06n8m18ya1bky5dwl00zq4jz547pxg8w122d6f68favalnw") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.25.0 (c (n "deno_lint") (v "0.25.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.11.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0rnsynqwnj1zd7xymar5jwngpi4bsyn9cp1979maijjs9br4xwbp") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.26.0 (c (n "deno_lint") (v "0.26.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "18gd0fqkyqhkv6qb28xmlr6b2nn192fw2jlfvkdk17n2p3k4kf0s") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.27.0 (c (n "deno_lint") (v "0.27.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0cq5bnsvh5i60i98jd7yqpvnbrrkchdkwm5r1gw8qx37cmrhaj6y") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.28.0 (c (n "deno_lint") (v "0.28.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.96.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1v63crakl606lngklmm8h5drg39c25i81nvhmkadsm1g87aibmyc") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.29.0 (c (n "deno_lint") (v "0.29.0") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (d #t) (k 2)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "deno_core") (r "^0.126.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "157cr2x59hkn2ny7b4bdpjbjxabc21qgx6jwf4xc88a1n9k2h9x9") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.30.0 (c (n "deno_lint") (v "0.30.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1gi9apbx6xhkjwcsfqn5m0wg4934v6bxs9mb2v0hfmqp1d5s2l55") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.31.0 (c (n "deno_lint") (v "0.31.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.16.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1952dfnk0k7kpfpndp9yr3yk54dz3by5hlnhr2fk99qdwwkravav") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.32.0 (c (n "deno_lint") (v "0.32.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0r4li1jghrl5izv03xdi58h65ca8hibg198n68mama1x7fh2f39s") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.33.0 (c (n "deno_lint") (v "0.33.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "04p6g4w4988i9wkr4l0a306lzcxihbsi701bniygz64rvzh4v5ng") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.34.0 (c (n "deno_lint") (v "0.34.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0ibzs9as2qnzkxrwwsnkv3g1b0yckzyjw7yl950dm3651zz3bdh9") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.35.0 (c (n "deno_lint") (v "0.35.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0xzdf6mb1l7dwc4l3kdv4m6hwf2mlcznzg0fxcqhbl92cd0lwb0x") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.36.0 (c (n "deno_lint") (v "0.36.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0fnvkm61ivc9z49ljdi8qx31675647b93c0h6cswhy6vjfbyzg01") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.37.0 (c (n "deno_lint") (v "0.37.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.23.1") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0jjfg6x0wvrwzdy1h4vjcggan6nd41m91ah685lxw19z2834ahl2") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.38.0 (c (n "deno_lint") (v "0.38.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0l6m882ccgh45y7i53nh19cpfm7953yp9mdmlkp4m2vadss1s845") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.39.0 (c (n "deno_lint") (v "0.39.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1siln9a32wzva5ikphy23r3hg20w9fv5mcj71cnb76pyh44d866b") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.40.0 (c (n "deno_lint") (v "0.40.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1kia2cc4w93nl0n1id08wwb7glqgv3arglswf0fxmpcc035nagb6") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.41.0 (c (n "deno_lint") (v "0.41.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "13zfvyvljw46adwa0y2a5plz3cbx3x5fln2r8w72rzxvp47a2rdv") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.42.0 (c (n "deno_lint") (v "0.42.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0macyp424lwmbzy151g9r6p4ig2nmxq3waf6p39cyw3g817mmdsm") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.43.0 (c (n "deno_lint") (v "0.43.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0r841zvz931mni5jvmjaa8ry2dx4a7hvb7djjm59nq19qvpaxzba") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.44.0 (c (n "deno_lint") (v "0.44.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "06v900ffyy3xkln4fml0l8vxf247bm56hvcj0v7nczvfx29yh543") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.45.0 (c (n "deno_lint") (v "0.45.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "13ffpqvkmmg7ra9xv3ykzhyz2d6ih4qrsnbrxpwslyb5zf5ifrrq") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.46.0 (c (n "deno_lint") (v "0.46.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1mv603kncilzc9wpb6fyiw65g5hff18j4j7ccb2jqzz95bl1bidg") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.47.0 (c (n "deno_lint") (v "0.47.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1c1pzh3zi1mci2aa9lgfk1g4dvg8dl89vcdwysl02nwvddj7hih4") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.48.0 (c (n "deno_lint") (v "0.48.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0vlwm6b6qjdxm445qiprj08qhrfbl519gdhzp1dqijzxx2151srh") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.49.0 (c (n "deno_lint") (v "0.49.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "147sg8ja6s9fxsglp8500f66gn323lh6wflsqnrkamqil9i0v475") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.50.0 (c (n "deno_lint") (v "0.50.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "17qzfpfms8hz4sjli6ph5rfrmf78m71z2c6cz09f52hhrayd6ijn") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.50.1 (c (n "deno_lint") (v "0.50.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.28.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "179s6g1ws9wfdbc3nsl59qd072snxyp4ynyal06ldq3b46km223r") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.50.2 (c (n "deno_lint") (v "0.50.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.28.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0x5y3w9fhwaardqmzpjbfcy7q14p9im2fvxwhhp3230145d8iyak") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.51.0 (c (n "deno_lint") (v "0.51.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0s2lq5s9yswd1qybsblhnpvnxc0yyj706j0q86pbjwli894yrl8m") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.52.1 (c (n "deno_lint") (v "0.52.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.30.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "1qmxdc1p7vhwikyhwphmj7a3mmxplqjqmwc47325am9qhlxfixn5") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.52.2 (c (n "deno_lint") (v "0.52.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.1") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)))) (h "0mkg80qgvk4y82xhz0ip7h188gpyb26sr6d0s537j7fgmd41pxfk") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.53.0 (c (n "deno_lint") (v "0.53.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.1") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "0540b6kwanj0llmp38lzi1dmn3k654vlgy8cjqfsh19r74k1zjf6") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.54.0 (c (n "deno_lint") (v "0.54.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1sj7mp4nsbqlmk2vakbkw1jn6182zpppi8qny2clzy2gsnmx6a5k") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.55.0 (c (n "deno_lint") (v "0.55.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1wyamfqrymvqg64193ngrfps22d6h144ilrmbdk15xcackhnl874") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.55.2 (c (n "deno_lint") (v "0.55.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "module_specifier"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "miette") (r "^4.3.0") (f (quote ("fancy-no-backtrace"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1n1pmq6jp4n7kg4fn61hzr6max8bn0vx3dpnjl7347nsw8zp28sa") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.56.0 (c (n "deno_lint") (v "0.56.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "00g4gcm5imxi9rnv3xxhdabanihg7jvx2drrb6i1w881yrjg2rq3") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.57.0 (c (n "deno_lint") (v "0.57.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "04h493vdpv6bnnnzkd21y3n7h99qa7lkxrnzijcz76h6a3sxgb96") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.57.1 (c (n "deno_lint") (v "0.57.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1l4yrdy67v99pwk4885rshgdckmhx69fglz66y5p735z44q20sx9") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.0 (c (n "deno_lint") (v "0.58.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1bcyk80j0n3xn02p6cmrbcqwxa7c7wnhaqh5y2s21a97qlgp0i1k") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.1 (c (n "deno_lint") (v "0.58.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.35.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "0synpbyr2pf5mqw1x0dm7yffqx6j1icmv13qhvwy7pwxxgmxigf5") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.2 (c (n "deno_lint") (v "0.58.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.36.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1r8q964ci44ymg9pwrzkakcalav2qj2vrxpg9yvgfvjcwq5h803v") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.3 (c (n "deno_lint") (v "0.58.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.37.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "0pzarsy3lwa54wm2qn6dqp8p017cydn1m2zcx8ma5xngk1r6igih") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.4 (c (n "deno_lint") (v "0.58.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (f (quote ("scopes" "transforms" "utils" "visit" "view"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1zkya9d5grnicblbglhcaz41z8hyqg7z7kl80yxs6bv77zids8h6") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.58.5 (c (n "deno_lint") (v "0.58.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "react"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "16hsgmgnd93v0klv8096i6j987lyg0qzhhcfgn1xf9mb3pb6lg13") (f (quote (("docs") ("default")))) (y #t)))

(define-public crate-deno_lint-0.59.0 (c (n "deno_lint") (v "0.59.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "react"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "0cwqnzc8rc9j4sc639j8bnkjjky0m93x7j4phkkb6k2jgbnajbgx") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.59.1 (c (n "deno_lint") (v "0.59.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "react"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "1qnn8d384kg9ar2v9aymqfasv076wg2w2w3dyvfpdbgqsxgmjs05") (f (quote (("docs") ("default"))))))

(define-public crate-deno_lint-0.60.0 (c (n "deno_lint") (v "0.60.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 2)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "deno_ast") (r "^0.39.0") (f (quote ("scopes" "transforms" "utils" "visit" "view" "react"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "globwalk") (r "^0.9.1") (d #t) (k 2)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (d #t) (k 2)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "0s1kjqviii5cvsrvz3p06kcc1vqdmxczvdaavzij7cbind09asmz") (f (quote (("docs") ("default"))))))

