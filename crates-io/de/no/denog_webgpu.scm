(define-module (crates-io de no denog_webgpu) #:use-module (crates-io))

(define-public crate-denog_webgpu-0.3.2 (c (n "denog_webgpu") (v "0.3.2") (d (list (d (n "deno_core") (r "^0.170.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1avlfl3np281z6l0ap1jfnbpf5mckxaakhpbhy0cbcp01pymg793")))

(define-public crate-denog_webgpu-0.4.0 (c (n "denog_webgpu") (v "0.4.0") (d (list (d (n "deno_core") (r "^0.170.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1plljdg0badssvkxgwgfq5fnkwqzgfb0w6phi10j6l5j8mav6gii")))

(define-public crate-denog_webgpu-0.5.0 (c (n "denog_webgpu") (v "0.5.0") (d (list (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19mh6sdskb76j44xp2cax16wqb89hkz476iiz1chhldvamfc14b8")))

(define-public crate-denog_webgpu-0.6.0 (c (n "denog_webgpu") (v "0.6.0") (d (list (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xzzny66bsq5iq66sfaif4x33whkslbf1ykkak7s8i4b4d22r8vf")))

(define-public crate-denog_webgpu-0.7.0 (c (n "denog_webgpu") (v "0.7.0") (d (list (d (n "deno_core") (r "^0.173.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ixqz91iz81va6ff7pffxlw5k5zi06fyv17702ha8br2ppr31j0f")))

(define-public crate-denog_webgpu-0.7.1 (c (n "denog_webgpu") (v "0.7.1") (d (list (d (n "deno_core") (r "^0.173.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1j5qn44l8pfzgadsqcqmllm4g067qygndmi1c19brl0dxiygbvrd")))

(define-public crate-denog_webgpu-0.7.2 (c (n "denog_webgpu") (v "0.7.2") (d (list (d (n "deno_core") (r "^0.174.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1k29j57a7w8mj4r9w297swgbbrjjav5ybdm09flv47lrjy66zb3x")))

(define-public crate-denog_webgpu-0.7.3 (c (n "denog_webgpu") (v "0.7.3") (d (list (d (n "deno_core") (r "^0.175.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("trace" "replay" "serde" "strict_asserts" "wgsl" "gles" "raw-window-handle"))) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.15") (f (quote ("trace" "replay" "serde"))) (d #t) (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("metal"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("vulkan"))) (d #t) (t "cfg(any(windows, all(unix, not(target_arch = \"emscripten\"))))") (k 0)) (d (n "wgpu-core") (r "^0.15") (f (quote ("dx11" "dx12"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0jkhvailc1gfb8qdv69yw0a78krg3kilhb9d3ijdkxjkycf3y9hz")))

