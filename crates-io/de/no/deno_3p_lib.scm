(define-module (crates-io de no deno_3p_lib) #:use-module (crates-io))

(define-public crate-deno_3p_lib-1.8.2 (c (n "deno_3p_lib") (v "1.8.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "deno_core") (r "^0.82.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.82.0") (d #t) (k 1)) (d (n "deno_doc") (r "^0.1.23") (d #t) (k 0)) (d (n "deno_lint") (r "^0.2.19") (d #t) (k 0)) (d (n "deno_runtime") (r "^0.10.0") (d #t) (k 0)) (d (n "deno_runtime") (r "^0.10.0") (d #t) (k 1)) (d (n "dissimilar") (r "^1.0.2") (d #t) (k 0)) (d (n "dprint-plugin-json") (r "^0.9.0") (d #t) (k 0)) (d (n "dprint-plugin-markdown") (r "^0.6.0") (d #t) (k 0)) (d (n "dprint-plugin-typescript") (r "^0.41.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.28") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "exec") (r "^0.3.1") (d #t) (t "cfg(unix)") (k 2)) (d (n "filetime") (r "^0.2.14") (d #t) (k 0)) (d (n "fwdansi") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonc-parser") (r "^0.15.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lspower") (r "^0.8.4") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "notify") (r "^5.0.0-pre.4") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9.2") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 1)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rustyline") (r "^8.0.0") (k 0)) (d (n "rustyline-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "semver-parser") (r "^0.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 1)) (d (n "shell-escape") (r "^0.1.5") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.25.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.12") (f (quote ("sourcemap"))) (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.24.1") (f (quote ("codegen" "dep_graph" "parser" "proposal" "react" "transforms" "typescript" "visit"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "trust-dns-client") (r "^0.20.0") (d #t) (k 2)) (d (n "trust-dns-server") (r "^0.20.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("knownfolders" "mswsock" "objbase" "shlobj" "tlhelp32" "winbase" "winerror" "winsock2"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 1)) (d (n "winres") (r "^0.1.11") (d #t) (t "cfg(windows)") (k 1)))) (h "0fp7i0n0facgr4fq6mdpps1j6ckmc96xc5pzjx8nip5rvmzc57v5")))

(define-public crate-deno_3p_lib-1.25.2 (c (n "deno_3p_lib") (v "1.25.2") (d (list (d (n "atty") (r "=0.2.14") (d #t) (k 0)) (d (n "base64") (r "=0.13.0") (d #t) (k 0)) (d (n "cache_control") (r "=0.2.0") (d #t) (k 0)) (d (n "chrono") (r "=0.4.22") (d #t) (k 0)) (d (n "clap") (r "=3.1.12") (d #t) (k 0)) (d (n "clap_complete") (r "=3.1.2") (d #t) (k 0)) (d (n "clap_complete_fig") (r "=3.1.5") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "data-url") (r "=0.1.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("bundler" "cjs" "codegen" "dep_graph" "module_specifier" "proposal" "react" "sourcemap" "transforms" "transpiling" "typescript" "view" "visit"))) (d #t) (k 0)) (d (n "deno_bench_util") (r "^0.62.0") (d #t) (k 2)) (d (n "deno_broadcast_channel") (r "^0.62.0") (d #t) (k 1)) (d (n "deno_console") (r "^0.68.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.150.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.150.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.82.0") (d #t) (k 1)) (d (n "deno_doc") (r "^0.45.0") (d #t) (k 0)) (d (n "deno_emit") (r "^0.9.0") (d #t) (k 0)) (d (n "deno_fetch") (r "^0.91.0") (d #t) (k 1)) (d (n "deno_graph") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_lint") (r "^0.33.0") (f (quote ("docs"))) (d #t) (k 0)) (d (n "deno_net") (r "^0.60.0") (d #t) (k 1)) (d (n "deno_node") (r "^0.5.0") (d #t) (k 1)) (d (n "deno_runtime") (r "^0.76.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.5.2") (d #t) (k 0)) (d (n "deno_url") (r "^0.68.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.99.0") (d #t) (k 1)) (d (n "deno_webgpu") (r "^0.69.0") (d #t) (k 1)) (d (n "deno_websocket") (r "^0.73.0") (d #t) (k 1)) (d (n "deno_webstorage") (r "^0.63.0") (d #t) (k 1)) (d (n "dissimilar") (r "=1.0.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "dprint-plugin-json") (r "=0.15.6") (d #t) (k 0)) (d (n "dprint-plugin-markdown") (r "=0.14.1") (d #t) (k 0)) (d (n "dprint-plugin-typescript") (r "=0.73.1") (d #t) (k 0)) (d (n "encoding_rs") (r "=0.8.31") (d #t) (k 0)) (d (n "env_logger") (r "=0.9.0") (d #t) (k 0)) (d (n "eszip") (r "=0.27.0") (d #t) (k 0)) (d (n "fancy-regex") (r "=0.10.0") (d #t) (k 0)) (d (n "flaky_test") (r "=0.1.0") (d #t) (k 2)) (d (n "flate2") (r "=1.0.24") (d #t) (k 0)) (d (n "fwdansi") (r "=1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "google-storage1") (r "^3.1.0") (d #t) (k 2)) (d (n "http") (r "=0.2.6") (d #t) (k 0)) (d (n "import_map") (r "=0.12.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "jsonc-parser") (r "=0.21.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "=0.2.127") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "mitata") (r "=0.0.7") (d #t) (k 0)) (d (n "monch") (r "=0.2.0") (d #t) (k 0)) (d (n "nix") (r "=0.24.2") (d #t) (t "cfg(unix)") (k 2)) (d (n "notify") (r "=5.0.0-pre.15") (d #t) (k 0)) (d (n "once_cell") (r "=1.12.0") (d #t) (k 0)) (d (n "once_cell") (r "=1.12.0") (d #t) (k 2)) (d (n "os_pipe") (r "=1.0.1") (d #t) (k 0)) (d (n "os_pipe") (r "=1.0.1") (d #t) (k 2)) (d (n "path-clean") (r "=0.1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "=2.2.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "pretty_assertions") (r "=1.2.1") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "regex") (r "=1.6.0") (d #t) (k 0)) (d (n "regex") (r "=1.6.0") (d #t) (k 1)) (d (n "ring") (r "=0.16.20") (d #t) (k 0)) (d (n "rustyline") (r "=10.0.0") (f (quote ("custom-bindings"))) (k 0)) (d (n "rustyline-derive") (r "=0.7.0") (d #t) (k 0)) (d (n "secure_tempfile") (r "=3.3.0") (d #t) (k 0) (p "tempfile")) (d (n "semver") (r "=1.0.13") (d #t) (k 0)) (d (n "serde") (r "=1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "=1.0.144") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_repr") (r "=0.1.8") (d #t) (k 0)) (d (n "shell-escape") (r "=0.1.5") (d #t) (k 0)) (d (n "tar") (r "=0.4.38") (d #t) (k 0)) (d (n "text-size") (r "=1.1.0") (d #t) (k 0)) (d (n "text_lines") (r "=0.6.0") (d #t) (k 0)) (d (n "tokio") (r "=1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "=0.7.2") (d #t) (k 0)) (d (n "tower-lsp") (r "=0.17.0") (d #t) (k 0)) (d (n "trust-dns-client") (r "=0.21.2") (d #t) (k 2)) (d (n "trust-dns-server") (r "=0.21.2") (d #t) (k 2)) (d (n "twox-hash") (r "=1.6.2") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "uuid") (r "=1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "=2.3.2") (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("knownfolders" "mswsock" "objbase" "shlobj" "tlhelp32" "winbase" "winerror" "winsock2"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "=0.3.9") (d #t) (t "cfg(windows)") (k 1)) (d (n "winres") (r "=0.1.12") (d #t) (t "cfg(windows)") (k 1)) (d (n "zstd") (r "=0.11.1") (d #t) (k 0)) (d (n "zstd") (r "=0.11.1") (d #t) (k 1)))) (h "1wd80gglyg8yp6hgscd2fwbpxnydzzx3wqghxp3p5l8b8cwp7hy7")))

