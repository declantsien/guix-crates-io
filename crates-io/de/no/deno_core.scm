(define-module (crates-io de no deno_core) #:use-module (crates-io))

(define-public crate-deno_core-0.0.1 (c (n "deno_core") (v "0.0.1") (h "14yhb7lnrfckm0mmgjw1fmgywxgmr074jpnvgil2mamv47xhijkm")))

(define-public crate-deno_core-0.29.0 (c (n "deno_core") (v "0.29.0") (d (list (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11.1") (d #t) (k 2)) (d (n "rusty_v8") (r "^0.0.24") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "0y0dqsiinfzf70xi8yv0gxbh45hgwr3z1cwp20rygs888r87zjfs")))

(define-public crate-deno_core-0.30.0 (c (n "deno_core") (v "0.30.0") (d (list (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11.1") (d #t) (k 2)) (d (n "rusty_v8") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "122jyw46wjbpjhzwbbpj551xzz4v73ybnvqw2yb0dm9w407y1axl")))

(define-public crate-deno_core-0.30.1 (c (n "deno_core") (v "0.30.1") (d (list (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11.1") (d #t) (k 2)) (d (n "rusty_v8") (r "= 0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "06dx09rw0k2x78xn3d6px2gb1f58mnprfgm3ylkii3z3vbikrav6")))

(define-public crate-deno_core-0.31.0 (c (n "deno_core") (v "0.31.0") (d (list (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11.1") (d #t) (k 2)) (d (n "rusty_v8") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "06ll86kjzgydbgpkh7frj5vri2w35zcf6jdcdmpmsp1cr7qpmmrz")))

(define-public crate-deno_core-0.32.0 (c (n "deno_core") (v "0.32.0") (d (list (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11.1") (d #t) (k 2)) (d (n "rusty_v8") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "10hagc1l14bcqspaz52xlyx9vjz2bh8pq7lmzn17zbl1808852yg")))

(define-public crate-deno_core-0.33.0 (c (n "deno_core") (v "0.33.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1bnh9ryxj849vaczl247gbxdndn8d91xq2w1b8da5kh4mxqwv8lr")))

(define-public crate-deno_core-0.34.0 (c (n "deno_core") (v "0.34.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "003wasx2kaci5nrxmbp8hp8wdqwasbswxn3sp2iambsrrpb22nsg")))

(define-public crate-deno_core-0.35.0 (c (n "deno_core") (v "0.35.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "= 0.3.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1cdc01qv1ji74mmy2rj4nw8jlv0plvj09m1gbazfqj0a1wgmsblw")))

(define-public crate-deno_core-0.36.0 (c (n "deno_core") (v "0.36.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0m5zgdzi683zv7dnwidbzghjivyxdar694bxw2apdwm2czbhq3s1")))

(define-public crate-deno_core-0.37.0 (c (n "deno_core") (v "0.37.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.8") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0zw84kw37kli31928khyg2a5v4fa4l2bkb6rgswmggmb6j6xr6j9")))

(define-public crate-deno_core-0.37.1 (c (n "deno_core") (v "0.37.1") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.8") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1k3n22qa1nvn1awwbr78b0q6fvzv2apgafzs902kb32qhzawkpqv")))

(define-public crate-deno_core-0.38.0 (c (n "deno_core") (v "0.38.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1jxf9djc523ld8anlqb85jz9pdzix31yivrvyvf2w2f24255nf20")))

(define-public crate-deno_core-0.39.0 (c (n "deno_core") (v "0.39.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "02mym74ryir0vc0qspsg67a4r7gip0dcba8z5i9nvpib381dyvqh")))

(define-public crate-deno_core-0.40.0 (c (n "deno_core") (v "0.40.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^0.2.16") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0iqbvac1vdqbzl6mykaybbx2b367d150r68f1rjzy09b05kmy50z")))

(define-public crate-deno_core-0.41.0 (c (n "deno_core") (v "0.41.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.3.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "tokio") (r "^0.2.18") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "04j86afp7fyyd3jj4kkfyf59687j2ldd3dn8v0ip5i6a5knrhhsz")))

(define-public crate-deno_core-0.42.0 (c (n "deno_core") (v "0.42.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "tokio") (r "^0.2.18") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1azmkskjj33dc1v4kkgcskdc2y7380gmq39w3whhjkvp3xbjrx85")))

(define-public crate-deno_core-0.42.1 (c (n "deno_core") (v "0.42.1") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "tokio") (r "^0.2.18") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0rczwlcfb0aigspl4azc178b8ng1pl1hxm8mapxxrbladnrg6b0x")))

(define-public crate-deno_core-0.43.0 (c (n "deno_core") (v "0.43.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "08pxrb63bfd3a5acp1xwf0df02fbhw68w434ipnydz36j880w8af")))

(define-public crate-deno_core-0.44.0 (c (n "deno_core") (v "0.44.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "169lnypxza01lwk0zk15xlqh2pj3xk39bkqpjay9a311p9c93j4p")))

(define-public crate-deno_core-0.45.0 (c (n "deno_core") (v "0.45.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1mfxz8wnq7na2433pmihgipgrr80zci20hng8hj8xmvwchjs08ly")))

(define-public crate-deno_core-0.45.1 (c (n "deno_core") (v "0.45.1") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1lwgwqzbvvg5792y0z7dzxmxrh640ax4xvjji557c80vq8c70bq4")))

(define-public crate-deno_core-0.45.2 (c (n "deno_core") (v "0.45.2") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0100j8462ppi4fz23vd31rs6p1l66fs2xjhndi4sdfnhs0h878ym")))

(define-public crate-deno_core-0.46.0 (c (n "deno_core") (v "0.46.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.52") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0s1vxzg2jbbpj2v6gmdpiaiyvgf4y6i5mxhwxlzlfm319w5kdzw0")))

(define-public crate-deno_core-0.47.0 (c (n "deno_core") (v "0.47.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1p3gnk2551gqcjfwzv2lsm98jkdqasy3lx4m9jc3lz0va1vyaa4z")))

(define-public crate-deno_core-0.47.1 (c (n "deno_core") (v "0.47.1") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.5.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "030xcvggfzdkvnapys3k0h8da3lw7ivg00rz3pg30sliqc573fw8")))

(define-public crate-deno_core-0.48.0 (c (n "deno_core") (v "0.48.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.5.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0db3an1mah0z72z7s3bk9g2w3c699ka8dr23nylvmx9db62xab1a")))

(define-public crate-deno_core-0.48.1 (c (n "deno_core") (v "0.48.1") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1yz6k3sj92vvmbxw95b8swi8w63zlnpgw0ys48c3kjzj2pg9znlp")))

(define-public crate-deno_core-0.48.2 (c (n "deno_core") (v "0.48.2") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "01vsf501nhq12k077hf2ln226dbfbpj541ir3cks09mxs8wn19pc")))

(define-public crate-deno_core-0.48.3 (c (n "deno_core") (v "0.48.3") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("rt-core" "tcp"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1sx3a4j9a23l7yldv8pvjsw1nf2092444wl4p0l2jq47nbyxsqs9")))

(define-public crate-deno_core-0.49.0 (c (n "deno_core") (v "0.49.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("thread-pool" "compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1h2q2wblp2di102m9555c1s1r0jdxvmas0bwqc4j2bkymv589m3x")))

(define-public crate-deno_core-0.50.0 (c (n "deno_core") (v "0.50.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "15ba0kvfp3n3wl32hppj78z7daak4kwxqgsrvzmylv1x9qmk7ra2")))

(define-public crate-deno_core-0.51.0 (c (n "deno_core") (v "0.51.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1jgwk6nvl89rhm3np4012in1hqp0irj3zcbgw71hbmnl49jl0adi")))

(define-public crate-deno_core-0.52.0 (c (n "deno_core") (v "0.52.0") (d (list (d (n "derive_deref") (r "^1.1.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.8.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0iwgq4fbj4pgrkhyphsh0b2bjgib25dkw3hm6i1qdbj44gwl5f2p")))

(define-public crate-deno_core-0.53.0 (c (n "deno_core") (v "0.53.0") (d (list (d (n "derive_deref") (r "^1.1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.74") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.8.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "00awpdl885xqdscx9vb3nvi671f1grv7sp7h03h9xfrniim5057k")))

(define-public crate-deno_core-0.54.0 (c (n "deno_core") (v "0.54.0") (d (list (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.74") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.8.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "15b14bw6g1nqx4izb4x5a1vfr29yj7s9giny0w61qkk2bqa6dkfn")))

(define-public crate-deno_core-0.55.0 (c (n "deno_core") (v "0.55.0") (d (list (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.74") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "09wcs9lanh7cm1xh6qn6z1bjbhismhlcpncb30cfrx06w88gkqz7")))

(define-public crate-deno_core-0.56.0 (c (n "deno_core") (v "0.56.0") (d (list (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.74") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0pffv99i9vkiaxhdirz7w87zic77w1bprv40z4v7814zpxcgka1x")))

(define-public crate-deno_core-0.57.0 (c (n "deno_core") (v "0.57.0") (d (list (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.5.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.74") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "09x5rqhf4xw2jjxxbmskqyldsk6954155d4awj0kafxk4wp8df1f")))

(define-public crate-deno_core-0.58.0 (c (n "deno_core") (v "0.58.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0njlzqkinchmhv25dbmfwvxwl4dhhhzm4xzivh4ckdm9r7glbn1a")))

(define-public crate-deno_core-0.59.0 (c (n "deno_core") (v "0.59.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1na8fl48c83a37idsgr215hh7jnwdyq6vbwc2mkywx670y2ilpr3")))

(define-public crate-deno_core-0.60.0 (c (n "deno_core") (v "0.60.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "04q54y0i3n3m2fww4pns60b9fl8szj4gp3l9w38q4b0qqznh68wk")))

(define-public crate-deno_core-0.61.0 (c (n "deno_core") (v "0.61.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.10.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1sqrv87bz0cnpwkq6adx60djb417cvbd7qc8yfrjm255zwan1qv5")))

(define-public crate-deno_core-0.62.0 (c (n "deno_core") (v "0.62.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0hx3vivwsvdgz3b1p1x7nc8r10762c08wzqcm4yl62pkfg7ing88")))

(define-public crate-deno_core-0.63.0 (c (n "deno_core") (v "0.63.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1df4rwhdchfmppppj80a5rq3x0kwq76glmnz38jpxx097dnj45lw")))

(define-public crate-deno_core-0.64.0 (c (n "deno_core") (v "0.64.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0l2zvzqr0dk5hcdcl4j678z668sh1mv2ir5dzrh1z66xff0hyalk")))

(define-public crate-deno_core-0.65.0 (c (n "deno_core") (v "0.65.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0nqp2xd2h0l33iz2bkk88p3gd57vvsf786wcwhkgymwkkw4sqk0l")))

(define-public crate-deno_core-0.66.0 (c (n "deno_core") (v "0.66.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0nnvv8ia4qs25yykf511s2wyz1264j2d0injfkphy97vbaac5i9j")))

(define-public crate-deno_core-0.67.0 (c (n "deno_core") (v "0.67.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1d5z0pz9j4ry4whik2gnmrigj6z1bsmx4fnbfpy5nwgagawbd343")))

(define-public crate-deno_core-0.68.0 (c (n "deno_core") (v "0.68.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0fhz5219dbc72dncblmsyh7svn6xs82nk92qcy8xq6390843b0wf")))

(define-public crate-deno_core-0.69.0 (c (n "deno_core") (v "0.69.0") (d (list (d (n "anyhow") (r ">=1.0.32, <2.0.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.5, <0.4.0") (d #t) (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.77, <0.3.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "rusty_v8") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r ">=1.4.2, <2.0.0") (d #t) (k 0)) (d (n "tokio") (r ">=0.2.22, <0.3.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r ">=2.1.1, <3.0.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "0lsdpa3y241xv6c2cnavvhy3f1i2cygvhdjfa3z80a6cfczmp2jl")))

(define-public crate-deno_core-0.70.0 (c (n "deno_core") (v "0.70.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.4") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "09w8sy961g40qh6fnd86sa5x9052hm00mvvdp5rfqh68pc3hzn3v")))

(define-public crate-deno_core-0.71.0 (c (n "deno_core") (v "0.71.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "014pjl6bpq30fni155w7mhmz68mc290xs1i0birwxhpb0pybcb1h")))

(define-public crate-deno_core-0.72.0 (c (n "deno_core") (v "0.72.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "06pfwdip91p8xg68mbfai7r9fk7qndvc361199mmb5x0v0nnnd2q")))

(define-public crate-deno_core-0.73.0 (c (n "deno_core") (v "0.73.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1cis5af0125vc2dk4bg1fk189dkkba49scszc4jqkzxfli7vygpj")))

(define-public crate-deno_core-0.74.0 (c (n "deno_core") (v "0.74.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1nrcmwjb1y0n973ab3ji9n6sqhxlpk3q7cqbdx6dxaw42w7rizs2")))

(define-public crate-deno_core-0.75.0 (c (n "deno_core") (v "0.75.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.15.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0aqa707yp4y51b24sslam4ylpfhvrmj129i9gi4j7ii40516s7v4")))

(define-public crate-deno_core-0.76.0 (c (n "deno_core") (v "0.76.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.4") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.15.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "16s7jlakwz04qxgy329rx7qvg82w3iax8vmnciygyq0sph2rlc8y")))

(define-public crate-deno_core-0.77.0 (c (n "deno_core") (v "0.77.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.4") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1j4bhvk73fb9mn6mc3qiw0pfdb48d7h26drx3fpq8azxkmdny0y2")))

(define-public crate-deno_core-0.77.1 (c (n "deno_core") (v "0.77.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.4") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.121") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "0cd1h48b46zfya7shb5cwyd3f0azykp364kl2c20adlk9gqbb9jy")))

(define-public crate-deno_core-0.78.0 (c (n "deno_core") (v "0.78.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.4") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.121") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.1.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "163vjy0597w7wixgqhl27iy0cif9wgr4yi5x4ip0nz1sv02lw81f")))

(define-public crate-deno_core-0.79.0 (c (n "deno_core") (v "0.79.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1mys19myy8n8v91acb7xyf8davm3fkxpf4njvcz8l7cgqb2bhpn8")))

(define-public crate-deno_core-0.80.0 (c (n "deno_core") (v "0.80.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "19a4fpv3lm2lf6495c84wbm0vjs3h0376wqsvwph4m0bvvbs9zyi")))

(define-public crate-deno_core-0.80.1 (c (n "deno_core") (v "0.80.1") (d (list (d (n "align-data") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.20.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1qqhrhlixp04d51iknfqypwsd6qyqv4z205mf3b87xxk5n4lhg1r")))

(define-public crate-deno_core-0.80.2 (c (n "deno_core") (v "0.80.2") (d (list (d (n "align-data") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.20.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ydq4q3mcp9n6hsxjncn5swdb1gh7qybyhkyyps9vhcf2fvbkfvx")))

(define-public crate-deno_core-0.81.0 (c (n "deno_core") (v "0.81.0") (d (list (d (n "align-data") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.21.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "14q4g9l2q88p0fkm0m3jfw3m4pnkkrsv1a18qwbiaiqz4b9lrfdq")))

(define-public crate-deno_core-0.82.0 (c (n "deno_core") (v "0.82.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.21.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "06jf07qlh723rspd29wdyd50sgxdzc238r0zl41vx74qabcm3xyh")))

(define-public crate-deno_core-0.83.0 (c (n "deno_core") (v "0.83.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.5") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.21.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kmplb3hs5afnqqbasjpz4b9h8klvyjwzrfm09a07fxxxmw5k4lf")))

(define-public crate-deno_core-0.84.0 (c (n "deno_core") (v "0.84.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0c43bpm59jcnamdl8i6i7jhvgnvnymqv1rvxy872622h4d6790ca")))

(define-public crate-deno_core-0.85.0 (c (n "deno_core") (v "0.85.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "12akam6kgcm8w1wgm663b9v40snka1yym6qr2gljlx4a1q30sii7")))

(define-public crate-deno_core-0.86.0 (c (n "deno_core") (v "0.86.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0978ag355mn92ch2ci3kwx4klz1932mzr60015fv19zkkgg1r44x")))

(define-public crate-deno_core-0.87.0 (c (n "deno_core") (v "0.87.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zjhamfczc298snjfn08nhwc3473k5i1jpxkdznf2rf2pcqqircc")))

(define-public crate-deno_core-0.88.0 (c (n "deno_core") (v "0.88.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0lbrzgac8dvj9802a7hcm7ia8jbdw5x2ywlfvx3028rw5m8pvq83")))

(define-public crate-deno_core-0.88.1 (c (n "deno_core") (v "0.88.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.1") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0i1vdqm3163qrmryl1z7f5wakkn8xyv98zd5hiw07s92jyz81j7d")))

(define-public crate-deno_core-0.89.0 (c (n "deno_core") (v "0.89.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.1") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "07v83p9qydabqy0w3sicajz7nmr3hycj26fkdn2gp86q30dnffvj")))

(define-public crate-deno_core-0.90.0 (c (n "deno_core") (v "0.90.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.1") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "04r1360amw8mawglj73x68b5k7a4zxls9ljjlqbgs0bcpaza66s7")))

(define-public crate-deno_core-0.91.0 (c (n "deno_core") (v "0.91.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.1") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kp2sc65vd0pzh3vqxkj09yjvbvjxyrpv6cz798vac807mkijbs8")))

(define-public crate-deno_core-0.92.0 (c (n "deno_core") (v "0.92.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.23.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "15ka7bbcmskdpqakalpgid500642dmp4nxwrs092chkc95i3x43a")))

(define-public crate-deno_core-0.91.1 (c (n "deno_core") (v "0.91.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.6") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.22.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.4.1") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0mvl1safx040sxckic2yln60960h62swxc33m89n6p0zk61hsqd1")))

(define-public crate-deno_core-0.93.0 (c (n "deno_core") (v "0.93.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.25.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "180s45mz2x62x0sx6z6wy0f3bnik7wvb0vyp9vwvzjvg7r8izrq6")))

(define-public crate-deno_core-0.94.0 (c (n "deno_core") (v "0.94.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.25.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bb3bzdc2ya0gf8mr8fgi88wdrh0l1fdxw4838az7y5g1c2v9g8i")))

(define-public crate-deno_core-0.95.0 (c (n "deno_core") (v "0.95.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.25.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1cwqhw3b1jhvsl92dnd9q2dmq3bdzwgc786bh6srxgs8fiwb0bzl")))

(define-public crate-deno_core-0.96.0 (c (n "deno_core") (v "0.96.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.26.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0llsy9pa9jsnwsc3ixh5gv824sfdchvdndd9j548c4c080fimq52")))

(define-public crate-deno_core-0.97.0 (c (n "deno_core") (v "0.97.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.26.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0140x5vd422v66kj2dhm9p6rjbd9nr0yzlf0zrxil7y65pmrhzdg")))

(define-public crate-deno_core-0.98.0 (c (n "deno_core") (v "0.98.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.26.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0zy68hyibf2rll7j70jrs53byshqaf1kh41ggfgj6zjif02rdgba")))

(define-public crate-deno_core-0.99.0 (c (n "deno_core") (v "0.99.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "042jw08w5xypv33my98sg39601hixv4f6p69zra5iwgr72gsrk0x")))

(define-public crate-deno_core-0.100.0 (c (n "deno_core") (v "0.100.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1h3ya2281z638h5l0zmf09qlxirkrxrak0jda6c6d0jcrp36ryji")))

(define-public crate-deno_core-0.101.0 (c (n "deno_core") (v "0.101.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.30.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vfrvkgv5jda1v5m271alxlxs8bwzn5qgbadfcnx0lw34pqld1qp")))

(define-public crate-deno_core-0.102.0 (c (n "deno_core") (v "0.102.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.31.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.14.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1wk31wxzddini5w9czw0d5bp3zkb9pwf41hrqpgrr84b8z5ni666")))

(define-public crate-deno_core-0.103.0 (c (n "deno_core") (v "0.103.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.32.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.15.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rsjimh7scfvnvkfpakmgcalbiyq01c6mlxg3gy3va1dd1nx86s4")))

(define-public crate-deno_core-0.104.0 (c (n "deno_core") (v "0.104.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.32.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.15.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0dspvzivw6nnlg24d7ivijwa4fjsnr49pc7zv7glh21nb5p20qi9")))

(define-public crate-deno_core-0.105.0 (c (n "deno_core") (v "0.105.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "rusty_v8") (r "^0.32.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.16.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "17jxbmdsim3hrbdap3pvd5knkvj42n23lixjhd0gaac1f8d4r554")))

(define-public crate-deno_core-0.106.0 (c (n "deno_core") (v "0.106.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.17.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.34.0") (d #t) (k 0)))) (h "13245g8q2qn86vsxqbps8811nyfvy2wzyy64a8myvk37vdg3bdpf")))

(define-public crate-deno_core-0.107.0 (c (n "deno_core") (v "0.107.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.18.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.34.0") (d #t) (k 0)))) (h "0abfyjxjdadyk9665n2hnvzljm7wli5dqa2gy9xp5jzxp8rwc3mw")))

(define-public crate-deno_core-0.108.0 (c (n "deno_core") (v "0.108.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.19.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.34.0") (d #t) (k 0)))) (h "1rrwqxvblvdi2nirnn7j3sddcnh7xv8sg02vfd0qwlk2x1vfgvhg")))

(define-public crate-deno_core-0.109.0 (c (n "deno_core") (v "0.109.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.20.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.35.0") (d #t) (k 0)))) (h "0ln2yclsxc825mzihwafxip1a910xfp1aq069fymkv3d3xwal3v1")))

(define-public crate-deno_core-0.110.0 (c (n "deno_core") (v "0.110.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "=1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.21.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.36.0") (d #t) (k 0)))) (h "16fxbv36nml65y940x6bdwl1q3zjf1fq44zw4hqsdral7dzrrjpz")))

(define-public crate-deno_core-0.111.0 (c (n "deno_core") (v "0.111.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.22.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.36.0") (d #t) (k 0)))) (h "1f4frdv57ncwdg7swzhlj4b720qrcaqiqf1z6yz4cafbhr6dbs8z")))

(define-public crate-deno_core-0.112.0 (c (n "deno_core") (v "0.112.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.23.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.36.0") (d #t) (k 0)))) (h "1z5b27p5cc2dbs1f95vbjb4fd4cwf1kkm8r9q3gmszafk4rabc18")))

(define-public crate-deno_core-0.113.0 (c (n "deno_core") (v "0.113.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.24.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.36.0") (d #t) (k 0)))) (h "01333js05jgiw8b0sq8yvjbk4ji6sig6sl39vbfc1pfgsfgy1ka7")))

(define-public crate-deno_core-0.114.0 (c (n "deno_core") (v "0.114.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.25.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.36.0") (d #t) (k 0)))) (h "0cb1ycj7qgkg0bp66bcjd3l8fk3vh4xzzrafqh60v3cic5qx5pfq")))

(define-public crate-deno_core-0.116.0 (c (n "deno_core") (v "0.116.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.27.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.38.1") (d #t) (k 0)))) (h "0b7n6kin95lbb0i620jy57iayyhnnpn3vbc3x295rgzvkwk3f76b")))

(define-public crate-deno_core-0.117.0 (c (n "deno_core") (v "0.117.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.28.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.38.1") (d #t) (k 0)))) (h "1008mlpw7xars229zgiv1b8gsb7g5yxxcsr25m69mxrfj37r15bj")))

(define-public crate-deno_core-0.118.0 (c (n "deno_core") (v "0.118.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.29.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.38.1") (d #t) (k 0)))) (h "1d2d052z1li1rwp9da8qz8kb8gjxl3c88yvr2ca1s53hw286kgk8")))

(define-public crate-deno_core-0.119.0 (c (n "deno_core") (v "0.119.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "deno_ast") (r "^0.11.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.30.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.40.0") (d #t) (k 0)))) (h "17vpl430aa14zsrbmlwv3cc6aprn0xwyyw0m5bf89ba6zn164zw0")))

(define-public crate-deno_core-0.120.0 (c (n "deno_core") (v "0.120.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.31.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.40.0") (d #t) (k 0)))) (h "1r69fxhs09mkj35f14cqc0fascfa95blgkwyk9bww1wic60x145l")))

(define-public crate-deno_core-0.121.0 (c (n "deno_core") (v "0.121.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.32.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.40.0") (d #t) (k 0)))) (h "0rkhplgr7zi8dfzq9vy7j9xyz09j6qga2m72jb5q1pyb2jx7axqr")))

(define-public crate-deno_core-0.122.0 (c (n "deno_core") (v "0.122.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.33.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.40.2") (d #t) (k 0)))) (h "1aibvbcphh8n6ivflmgcalf44nh612rg88f4vddkcmlacs0aqg09")))

(define-public crate-deno_core-0.123.0 (c (n "deno_core") (v "0.123.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.34.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "015wcr2h5bkgc3lbvpwnn16y4lpzpl5ycqinmqw9dpiwn2c1y6la")))

(define-public crate-deno_core-0.124.0 (c (n "deno_core") (v "0.124.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "=1.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.35.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "1j72aci4s3czsbxd3ll1ngmf008gsd4xbgr1g9l1ix3xp720v8xw")))

(define-public crate-deno_core-0.125.0 (c (n "deno_core") (v "0.125.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.36.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "00lrhxjqrhqbqf0lpdgl1db5fn6gdylbmbjb5wdkp33v8bvs5j5k")))

(define-public crate-deno_core-0.126.0 (c (n "deno_core") (v "0.126.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.37.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "1dgncy1zpjj7ndxkjrpjdv2sqjyjs6f501l1ik3jkpczaik002v0")))

(define-public crate-deno_core-0.127.0 (c (n "deno_core") (v "0.127.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.106") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.38.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "0r982jjr0agwvz4j2dzls0k2srhqvmjyrm3cwrzrhn5asbmn0q37")))

(define-public crate-deno_core-0.128.0 (c (n "deno_core") (v "0.128.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.39.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "0yk99ccbq3wmzynjz1gzx66a7lm1z9lsnc1zic4r4zgijgyfga63")))

(define-public crate-deno_core-0.129.0 (c (n "deno_core") (v "0.129.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.40.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.41.0") (d #t) (k 0)))) (h "0wafpg68a4kyllhf0jq9nsinwa54xvb0zlb0psh465dni7lms4dr")))

(define-public crate-deno_core-0.130.0 (c (n "deno_core") (v "0.130.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.41.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.0") (d #t) (k 0)))) (h "0bz54vlhhw749b4pirms5h1243mqgbkjc928fxhhp4lzn9zm3cr7")))

(define-public crate-deno_core-0.131.0 (c (n "deno_core") (v "0.131.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.42.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.0") (d #t) (k 0)))) (h "04kzsac56b4swz2qw7j6c3i2n6rxywg5xyhbfbba3rs9lf28dbya")))

(define-public crate-deno_core-0.132.0 (c (n "deno_core") (v "0.132.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.129") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.43.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.0") (d #t) (k 0)))) (h "0m7a412mr2kly0ha9bhzclzikvw5j1m4672alka8bvja3injpipr")))

(define-public crate-deno_core-0.133.0 (c (n "deno_core") (v "0.133.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.44.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.0") (d #t) (k 0)))) (h "1rx2n6gdqzqwfb4m5z3njj4362slpyyhljqqyq5gkllg7kr4l79i")))

(define-public crate-deno_core-0.134.0 (c (n "deno_core") (v "0.134.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.12.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.45.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.0") (d #t) (k 0)))) (h "0k73l48dgmj4l4cwiw1q5afa9jxx7hwcxgq0ahcdaddz4yx9161k")))

(define-public crate-deno_core-0.135.0 (c (n "deno_core") (v "0.135.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.13.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.46.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.42.1") (d #t) (k 0)))) (h "1r95c67clvkb8yz90yb4rr24phffvac2nm7ycf06z6hp41sq7k9j")))

(define-public crate-deno_core-0.136.0 (c (n "deno_core") (v "0.136.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.14.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.47.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.43.1") (d #t) (k 0)))) (h "1ibhnvi58ncgv8alvy0753qvcljphdc0br44dvp4mil4zrzxdkh7")))

(define-public crate-deno_core-0.137.0 (c (n "deno_core") (v "0.137.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.15.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.48.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.43.1") (d #t) (k 0)))) (h "1raasq0r8jdj7ff3ya0mhh268laww9isldhmdbapvm5vag0f3n1l")))

(define-public crate-deno_core-0.138.0 (c (n "deno_core") (v "0.138.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.16.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.49.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.43.1") (d #t) (k 0)))) (h "18kbv5r0arsi3l5z87ia9lzx3gfnr95kml5jlipnzskbv83cb9rj")))

(define-public crate-deno_core-0.139.0 (c (n "deno_core") (v "0.139.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.50.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.44.1") (d #t) (k 0)))) (h "1d93qiy4b3wlbhazq80x2r4ld70j4ci0vb7a7yhadylm0hzphcxr")))

(define-public crate-deno_core-0.140.0 (c (n "deno_core") (v "0.140.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.16.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.18.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.51.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.44.2") (d #t) (k 0)))) (h "13rvzfbw37g5nqmimk00qaid8m5f5s7d7918n1kv7rvpv7gb0k43")))

(define-public crate-deno_core-0.141.0 (c (n "deno_core") (v "0.141.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.16.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.19.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.52.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.44.3") (d #t) (k 0)))) (h "104gnnhfar2bihjq0d1l98mfpnd89pmsfiry9h15q818r3dbllkn")))

(define-public crate-deno_core-0.142.0 (c (n "deno_core") (v "0.142.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.16.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.20.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.53.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.44.3") (d #t) (k 0)))) (h "135k8h0xc6hqqaai81b68bzcy3njarj2471l290nzxq1h1205jb5")))

(define-public crate-deno_core-0.143.0 (c (n "deno_core") (v "0.143.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.21.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.54.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.45.0") (k 0)))) (h "1q3ibml7kc5r824l9sz92adg2yj7dl02r01z7mwczhx0h7h32k1b") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.144.0 (c (n "deno_core") (v "0.144.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.22.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.55.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.47.0") (k 0)))) (h "0f0rlp92nmr3mfz2amhk5m4swqbp2l4b832ry5ncwrjkf35jp587") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.145.0 (c (n "deno_core") (v "0.145.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.23.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.56.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.47.1") (k 0)))) (h "1xpykxdywvh4gslr3vfd228lcw99wxv3wrljzi9y4h6q56vvnvf5") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.146.0 (c (n "deno_core") (v "0.146.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.24.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.57.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.47.1") (k 0)))) (h "1jh00vnqfxzykghhrd7fnn74k5pl1mb0aizxf9rlnm70gyimsiw8") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.147.0 (c (n "deno_core") (v "0.147.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.25.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.58.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.47.1") (k 0)))) (h "1iq0dc0s5hnf06wsjb1km1pvks16ccw7cp3g5jpibk9lhnqs6874") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.148.0 (c (n "deno_core") (v "0.148.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.26.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.59.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.49.0") (k 0)))) (h "1k50v6vbhqxs56ilazp5kw8bn1a1vrljmfm6yqv4iczc1saz2slc") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.149.0 (c (n "deno_core") (v "0.149.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.27.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.60.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.49.0") (k 0)))) (h "1qn8w9vircgfpldkjwgxcxgqrhlk6i7rnbwj0rsvhqkpg3hzpc3r") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.150.0 (c (n "deno_core") (v "0.150.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.28.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.61.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "v8") (r "^0.49.0") (k 0)))) (h "0jsavazw5jlghag7ms5l6mkrf1brrxb4rr8qgd0z0w4qac9vs6p6") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.151.0 (c (n "deno_core") (v "0.151.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.29.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.62.0") (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.49.0") (k 0)))) (h "0myimclsgzs7kj2vycxabzx81fdfkd6wx54qn01x884z7ycdy2rr") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.152.0 (c (n "deno_core") (v "0.152.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.30.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.63.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.51.0") (k 0)))) (h "0rsz3ly1fwh78l4pzpdkz0a27yx0s4fcibwy7asd3vkwwx3wwdpd") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.153.0 (c (n "deno_core") (v "0.153.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.31.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.64.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.51.0") (k 0)))) (h "0ara2xcclfm36fxq7msn4zxsqdblclgjz94a25b0bsigkihgmmpn") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.154.0 (c (n "deno_core") (v "0.154.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.32.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.65.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.51.0") (k 0)))) (h "035n6wjb8xfyl4h8klb3g6yp2nd4l9zgr8q3xl6n4gvynr8fh6ik") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.155.0 (c (n "deno_core") (v "0.155.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.33.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.66.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.53.1") (k 0)))) (h "1326z93apq3vdzwbz1kl0k56f647wzarrpb2aq12hcy2ghc7kmwm") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.156.0 (c (n "deno_core") (v "0.156.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.34.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.67.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.54.0") (k 0)))) (h "1iwpgmn9d36fbgi8w7pny3dfpr5c9maqd5xil7n4ykigv05w6mwi") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.157.0 (c (n "deno_core") (v "0.157.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.35.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.68.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.54.0") (k 0)))) (h "12h6kl9c0pvrs68zwd0135jz97yczm5vy8jxg3h4d8jwxwlskb1h") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.158.0 (c (n "deno_core") (v "0.158.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.36.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.69.0") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.54.0") (k 0)))) (h "09p780mdm76mxs08wbk0cbq0f2yav7mwblmfqgzhi1n3cv3qv2rv") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.159.0 (c (n "deno_core") (v "0.159.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.37.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.70.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.55.0") (k 0)))) (h "1nc2gaj4fsv9pbypqrcvw4hwygzafa0sg48hvrmkddhi6n5k9g66") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.160.0 (c (n "deno_core") (v "0.160.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.38.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.71.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.55.0") (k 0)))) (h "1wj2glhqbsnl17f55vqmrfd7shdhplk7972mkj95c1hax0qidz6q") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.161.0 (c (n "deno_core") (v "0.161.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.39.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "=0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.72.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.21.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.55.0") (k 0)))) (h "1lc0b429kyblf9fc3zbdabmv6yv8pl50ywkj0f0na43psds9qmjb") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.162.0 (c (n "deno_core") (v "0.162.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.40.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "=0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.73.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.21.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.58.0") (k 0)))) (h "112m4nwy960a81yjl38jbakywahgb9plsyr8ki6c9bgs4a6s2aiz") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.163.0 (c (n "deno_core") (v "0.163.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.41.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.74.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.21.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.0") (k 0)))) (h "14mnagz3csq40amw9l1bjd02qr606cya787j5mrjkkllmwyaaa3q") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.164.0 (c (n "deno_core") (v "0.164.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.42.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.75.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.21.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.0") (k 0)))) (h "0v55pzaq0bcr9gk7qadpdfaqyjdwp25cky4hblivmzaqxyi7rqmp") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.165.0 (c (n "deno_core") (v "0.165.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.43.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.76.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.21.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.0") (k 0)))) (h "0n54kg80n4z5sx7pnzf92s3g8x5ia8aniw1x5i08732nzr4iyd3i") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.166.0 (c (n "deno_core") (v "0.166.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.44.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.77.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.0") (k 0)))) (h "17z3w4lkc9w34dwvp8bz7503z1pcf9srdx3z7fr879i3q8w7vny5") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.167.0 (c (n "deno_core") (v "0.167.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.45.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.78.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.1") (k 0)))) (h "192prn6m507kdcaj5mljsnkxhj03w6msmh24yccf1w7raxfrd71d") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.168.0 (c (n "deno_core") (v "0.168.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.46.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "=1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.79.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.1") (k 0)))) (h "1jaam1rajqyzywz3bvhw1ma5ki3y3mllg6rj3x7jjiii2qxkdrcv") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.169.0 (c (n "deno_core") (v "0.169.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.47.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.80.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.1") (k 0)))) (h "09fhp3ywysg94ki83b97dyl6gb01g698bc6ansr2ycb9lyc463qp") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.170.0 (c (n "deno_core") (v "0.170.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.48.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.81.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.1") (k 0)))) (h "0bfh5fzlcxvclfacvddih3qvb8ysmc8rhc2410yzw6n9gyi5ldah") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.171.0 (c (n "deno_core") (v "0.171.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.49.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.82.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.60.1") (k 0)))) (h "00ir3bqgnszldp1f92mcxqx6y96gvm01zs8h4vyarzjxy121ki1d") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.172.0 (c (n "deno_core") (v "0.172.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.50.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.83.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.63.0") (k 0)))) (h "0im0b3dn792gfzgs7j6r9ds7jmhcz61vbkcxfdyi0ypncq4gn5mw") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.173.0 (c (n "deno_core") (v "0.173.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.51.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "=1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.84.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.63.0") (k 0)))) (h "1px7z6znif05f91sbi7fdnvaj468fl7r0jy042q1xzvmp0fymxg3") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.174.0 (c (n "deno_core") (v "0.174.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "=1.2.1") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.52.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.85.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.64.0") (k 0)))) (h "1qzwcacdfsi34bzs74a9k25k59m107rmla663cpzbcksgrz3cxw0") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.175.0 (c (n "deno_core") (v "0.175.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.53.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.86.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.64.0") (k 0)))) (h "0v53410krf34qxbqg2fv27a5x69y1l4cq2dx7d566g8vfafiqpyc") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.176.0 (c (n "deno_core") (v "0.176.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.54.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.87.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.66.0") (k 0)))) (h "1a5pfx05rh5fz3jvd8rgdmqrc3p45103sqyaz390nqycg976vihv") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx")))) (y #t)))

(define-public crate-deno_core-0.177.0 (c (n "deno_core") (v "0.177.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.55.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.66.0") (k 0)))) (h "0a441yr26kvs15pjjxj55nkql9d4fma0l6wq9iffn14r657s0qqm") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.178.0 (c (n "deno_core") (v "0.178.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.56.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.89.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.68.0") (k 0)))) (h "0ayry7d0id118lk09rpkkr9lbdlzyglzi5j6dz97z1br77jdk2ym") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.179.0 (c (n "deno_core") (v "0.179.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.57.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.90.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.68.0") (k 0)))) (h "1yv0wiamswacyhl3wim4wpjahlm2hbfcnid3v85ppjwr4b50g4wc") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.180.0 (c (n "deno_core") (v "0.180.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.58.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.91.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.68.0") (k 0)))) (h "1g8h69cpnx5xy403ry59w9nidxdwsdg6as20xlz6a7bazn461viq") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.181.0 (c (n "deno_core") (v "0.181.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.59.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.92.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.68.0") (k 0)))) (h "0s1lb9bs5zz2md3c7dqlqv0mqhirchr265a81r26azp006k15mg6") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.182.0 (c (n "deno_core") (v "0.182.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.60.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.93.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.0") (k 0)))) (h "0xgvxk6l5b3l9q0cnx2a00yprshy3p67sbcgz946xyjn82mi8nsc") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.183.0 (c (n "deno_core") (v "0.183.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.61.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.94.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.0") (k 0)))) (h "08gwsxxiwhbvfhb44k346vcnjypsw6569lcnlz0f5k0ygqsaw7dd") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.184.0 (c (n "deno_core") (v "0.184.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.62.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.95.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.0") (k 0)))) (h "1z63syvs9687295sx6i1zkbi9jzm6x47f3iwhh6xijqd6mqdrmmq") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.185.0 (c (n "deno_core") (v "0.185.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.63.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.96.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tikv-jemalloc-sys") (r "^0.5.3") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.0") (k 0)))) (h "106kii15r3asyl69zakwwp4lg1ywanyprhynzm6l2ndxw5i7wavd") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.186.0 (c (n "deno_core") (v "0.186.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.64.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.97.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.1") (k 0)))) (h "0ffzfcnkr25lxxcy5zz49vyk4ljf62pkmk2qamfjxbimarf5jsfp") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.187.0 (c (n "deno_core") (v "0.187.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.65.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.98.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.71.2") (k 0)))) (h "14ry22zfh9ij0a5mcb566cl6cyblwx0432cmh3si9501lq7x2blj") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.188.0 (c (n "deno_core") (v "0.188.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.66.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.99.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.72.0") (k 0)))) (h "0xhzza8060sci60l7vjl9fv5fgn495zdhaka0lp6qnq4shwkqmw3") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.189.0 (c (n "deno_core") (v "0.189.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.67.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.100.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.73.0") (k 0)))) (h "1m4yhk870b2vla6ikdv9znv2q736jrvjqxmzx0sbbf7fq890zjf6") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.190.0 (c (n "deno_core") (v "0.190.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.68.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.101.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.73.0") (k 0)))) (h "1nxmvq2nbi1gbh138fv1szyl5v7gqp8ixsj449bcxdqdj5516x18") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.191.0 (c (n "deno_core") (v "0.191.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.69.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.102.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.73.0") (k 0)))) (h "0apsb0gbkdd6z9ljr0qp9fpwvf3xh5zl5gwcdqv1nqspakwh8ms9") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.192.0 (c (n "deno_core") (v "0.192.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.70.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.0") (k 0)))) (h "080d6pn4qbpvin9ii945fpvzpch7j96qmw5jp6dyxs6mh7a54c09") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.193.0 (c (n "deno_core") (v "0.193.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.71.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.104.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.1") (k 0)))) (h "1kyi9jpkypbd4vngxjqampab8mqv3pq90nidwbzpgwsm6s3fnzid") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.194.0 (c (n "deno_core") (v "0.194.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.72.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "=0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.105.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.1") (k 0)))) (h "178yacii6m4k2z8rsc9l5g6mi6f87hsv11n6akasffgzrmkpb1fc") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.195.0 (c (n "deno_core") (v "0.195.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.73.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.106.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.2") (k 0)))) (h "0jyr9433ihvqkipqyvskanq89kdl3z52cbgq3i8dsc6yhqrl73j0") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.196.0 (c (n "deno_core") (v "0.196.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.74.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.107.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.3") (k 0)))) (h "0r8ah9rnkqwhc79miy1gl7jxjs64n2jcfdva7ny1l1znnxf1y8hx") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.197.0 (c (n "deno_core") (v "0.197.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.75.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.108.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.3") (k 0)))) (h "0xiradg3k1j54csw9rrpz5x2l85wnzdiqkqw92g8h3slzdphdpzg") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.198.0 (c (n "deno_core") (v "0.198.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.76.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.109.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.3") (k 0)))) (h "0wv4y0n4h9wphjjgbgq9p4fpxh5y4vpcjd4k8kqsdvkfm35bcd4v") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.199.0 (c (n "deno_core") (v "0.199.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.77.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.110.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.3") (k 0)))) (h "13kmffyk4jfv4ni5g5hlm1d0qa322gqca26p12n6zhqacb5x1yvh") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.200.0 (c (n "deno_core") (v "0.200.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.78.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.111.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.74.3") (k 0)))) (h "1zbmkmyhf6hdln73607r2ah6rs6air6nfbnq75dykdnfj15jdfm8") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.201.0 (c (n "deno_core") (v "0.201.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.79.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.112.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.0") (k 0)))) (h "0hy5jk759wgjygbaplks4s7jl6lfzv84nqvw3wxq45j8glxppzyr") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.202.0 (c (n "deno_core") (v "0.202.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.80.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.113.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.0") (k 0)))) (h "0yh8mxzhvrl7p2xw78xnk8m7h17fm8lg5qa5hyxy0q98kjnz7m79") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.203.0 (c (n "deno_core") (v "0.203.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.81.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.114.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "=0.74.3") (k 0)))) (h "0bcmin52wfmf5gnbwsjxf9sr19pr9471ijpn2aqj7rkzvi3ziri2") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.204.0 (c (n "deno_core") (v "0.204.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.82.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.115.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "=0.74.3") (k 0)))) (h "0s2xfvvlfr2cls86szd7hgg8jbrz9d0q8ixp985bcfwsxcfzbpdl") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.205.0 (c (n "deno_core") (v "0.205.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.83.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.116.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.1") (k 0)))) (h "0r4vwidn82ybbn5agq5lkcs33sjxy89rqs2y7nw95hhzg893nr0p") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.206.0 (c (n "deno_core") (v "0.206.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.84.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.117.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.1") (k 0)))) (h "1dl6dm1jdsm4j7znlz4n3wq7zwyzgi7fc3nc2zdjvvzpbdnvmcg9") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.207.0 (c (n "deno_core") (v "0.207.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.85.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.118.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.1") (k 0)))) (h "0wjwpjfdqkz00wg6kfrmqy4r21yhqqnknhy5j4xzdnizyzm6n2r3") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.208.0 (c (n "deno_core") (v "0.208.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.86.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.119.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.1") (k 0)))) (h "1n65zf7nlf115cxi710ipq7hs8k89wmbf134wnqinskvf09v1cma") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.209.0 (c (n "deno_core") (v "0.209.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.87.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.120.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.75.1") (k 0)))) (h "0yqxj49f9j0hqr30a4v84ajjabzxh19vh0f1v674pnpf7bwg33y4") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.210.0 (c (n "deno_core") (v "0.210.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.88.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.76.0") (k 0)))) (h "0pfbl6ka230kp1yyc8r5p2a2g8mf4bspimkm434xc0bmyphyvfhs") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.211.0 (c (n "deno_core") (v "0.211.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.88.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.76.0") (k 0)))) (h "0mrgp8rkgpjniw8inrc6zi9rfcx5jxmhsvpni0xf3njm6n0g4qrf") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.213.0 (c (n "deno_core") (v "0.213.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.90.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.123.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.76.0") (k 0)))) (h "0krp38w26nchk2069sfmnbgklbs5kd1gycgrv0ybgabpk7j9syfi") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.214.0 (c (n "deno_core") (v "0.214.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.90.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.123.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.76.0") (k 0)))) (h "0j19pb89spq0kw5ypihh9fpxz6hbn4d1flx2r7vnd9z9zxpgf2my") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.215.0 (c (n "deno_core") (v "0.215.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.91.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.124.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.77.0") (k 0)))) (h "1bc7clzj5zyr9n7r85bk1lm51rnwy73am5i7q96vdrqsbv6j8a6v") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.216.0 (c (n "deno_core") (v "0.216.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.92.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.125.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.78.0") (k 0)))) (h "0ibsq1dl99jfyrci1s4ira2687ys373j6slf6vnc6xaapxhq09r8") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.217.0 (c (n "deno_core") (v "0.217.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.93.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.126.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.78.0") (k 0)))) (h "1xw3mi4qsjps371mcv3l7s0fdkp9sr1szl9lvf6090vbr2xpqs5q") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.218.0 (c (n "deno_core") (v "0.218.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.94.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.127.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.78.0") (k 0)))) (h "0f69qyj6di7yykknxdlliy319klgq4027b8f7xn5ry6yy655lnjj") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.219.0 (c (n "deno_core") (v "0.219.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.95.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.128.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.79.0") (k 0)))) (h "1cpanrpacv53gsnz02hgnhvfcv1li2rir23bdnsniqzh59vdslx6") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.220.0 (c (n "deno_core") (v "0.220.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.96.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.129.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.79.1") (k 0)))) (h "1w918h7qkizyvbmcfwkjzqrpk11fmj69n1dm44yq0f662421v8mr") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.221.0 (c (n "deno_core") (v "0.221.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.97.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.130.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.79.1") (k 0)))) (h "0l8w54ga67z9spycgb9iq6kjnfa76pwnarq3sbxbsl2hlmk4ssfg") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.222.0 (c (n "deno_core") (v "0.222.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.98.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.131.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.79.2") (k 0)))) (h "174iw1j1pqc5l82s59dz7nmhnf9nzi28l23pgc76hql4xawq2g5i") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.223.0 (c (n "deno_core") (v "0.223.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.1") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.99.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.132.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.79.2") (k 0)))) (h "13182hc4ra09307dg0rqcr0pvqyzb10bxskfzw2l4h8y8ql55ib8") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.224.0 (c (n "deno_core") (v "0.224.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.100.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.133.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "1s3nljjpqqi4960f6zx4akcfx1lmmp2qxgn7qcv545g47qry48sx") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.225.0 (c (n "deno_core") (v "0.225.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.101.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.134.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "1va7xr66x1yvisyg0lqvb890z6ibhavr7kpgp2xmskb6vny898k8") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.226.0 (c (n "deno_core") (v "0.226.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.102.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.135.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "0g29820jixfmlhn1ah53zqawviycns362f1csapds76ba413928w") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.227.0 (c (n "deno_core") (v "0.227.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.136.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "00a145ybcq285jj27hv50mw7wv8pgpcvjy0iz3s6vxsys44qs8fn") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.228.0 (c (n "deno_core") (v "0.228.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.104.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.137.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "0lmmaaid0nsay5wzwz0yfbvxdwxbkviln8y9rx9a0xcrvr16p6bq") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.229.0 (c (n "deno_core") (v "0.229.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.138.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "0840n2x0dnbww7lmb364sjv2h4r8xzfyd0hach1wszpmk3cpxfkb") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.230.0 (c (n "deno_core") (v "0.230.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.106.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.139.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "02j3b39gm2fa0q0n7v34xg77ydmj5j4d84fha6c20789aqfhl14g") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("default" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.231.0 (c (n "deno_core") (v "0.231.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.107.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.140.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "0byk9qjrmlsw99m15kyvfbklmcx1sazjzdpc06fg9hv3awqw9m6y") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.232.0 (c (n "deno_core") (v "0.232.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.108.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.141.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.81.0") (k 0)))) (h "056ig6dklfxrp126y8kh844kfz5wf7vj4qas3a5192q2iq8gv7r2") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.233.0 (c (n "deno_core") (v "0.233.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.109.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.142.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "186r9gqsywgijx9s2xjnydifms6b1jg5jjngg50lifwiy6nrs70v") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.234.0 (c (n "deno_core") (v "0.234.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.110.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.143.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "08pf46zh7d7sfr74nk0gds9xbf1z0kfmv2fllnnqzzp6qdwhkzll") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.235.0 (c (n "deno_core") (v "0.235.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.111.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.144.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "05lr62wa1w1wv998jjxqmsnfjnzp6bcs6r06npf0b9cmh7ds22fx") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.236.0 (c (n "deno_core") (v "0.236.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.112.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.145.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0zh4jpcihsicy383vbzl4lxlcclv7fm7yfhgfg4w62ymg1psp81y") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.237.0 (c (n "deno_core") (v "0.237.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.113.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.146.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0b77rh4qbrdmxjhaym5cn1p09hvrac3p4jrw9rrvbg8s4a671sm2") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.238.0 (c (n "deno_core") (v "0.238.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.114.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.147.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "1a9pbgazkjp1c0rca6df5l2dcbj8dkfhjfci544slda4krsqpv8d") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.239.0 (c (n "deno_core") (v "0.239.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.148.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0sr3myhsq8193lhlnfzbcia0ll6y77f2iz1s914qkgnwias5yxn7") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.240.0 (c (n "deno_core") (v "0.240.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.116.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.0") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.149.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0xccawy4caaspipq5nba1x8ly4g3gqi1yhk19vvbxiylsw0fm6za") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.241.0 (c (n "deno_core") (v "0.241.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.117.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.1") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.150.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0ka1cri001wr3nbkww1zacxfdirl67fxl6iqfilirplabz391gsw") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_joinset")))) (y #t)))

(define-public crate-deno_core-0.242.0 (c (n "deno_core") (v "0.242.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.118.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.1") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.151.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "1yvbgwd477nf9hrjwsn5f5r6rh59swrkazcv82r2fnblfix99qxw") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_joinset"))))))

(define-public crate-deno_core-0.243.0 (c (n "deno_core") (v "0.243.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.2") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.1") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.152.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0bbjpa280dy0z4wwlbxaz6gxc4wr198nxlhblr28pk6air79kp6a") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_joinset"))))))

(define-public crate-deno_core-0.244.0 (c (n "deno_core") (v "0.244.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.153.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "1nlxlqrrl8abg69q98a2q1qqk1wbhmdzy5phyb8zz78i4dhzh63w") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_joinset"))))))

(define-public crate-deno_core-0.245.0 (c (n "deno_core") (v "0.245.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.121.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.154.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.82.0") (k 0)))) (h "0vi03cvqia546335da9a2bs7fsk61j6k6g5hqzd1jx9bf7jdf868") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.246.0 (c (n "deno_core") (v "0.246.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.122.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.155.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "13wl3nbfgb83fh7imrbkl6acxrzdbdg96dh9lm0yjwhp5s43lgqv") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.247.0 (c (n "deno_core") (v "0.247.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.123.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.156.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "1hy8ri8gbm1lclkgcdy767l1486icyf6aj2s9zdc2a45w3i8wvpz") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.248.0 (c (n "deno_core") (v "0.248.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.124.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.157.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "0zp22jn22zwpj3jcvbc7wk1v35l97y1w6xga2k56raj7crdhfkcp") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.249.0 (c (n "deno_core") (v "0.249.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_ops") (r "^0.125.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.158.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "0pqhyxy3gig2b1m50wr88ya46v76c9a1l8bkdlmdw952ygj93v82") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.253.0 (c (n "deno_core") (v "0.253.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.162.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "0iq71kbx3a2lcawvmjmgqcpcxxqk9iimq85rdd7xlm0pald3z26h") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.254.0 (c (n "deno_core") (v "0.254.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.130.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.163.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "0b92yhh53b9f3gijr2p6v88i2m3wh6wz20qkqxrk0qb5zgz7qx6x") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.255.0 (c (n "deno_core") (v "0.255.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.131.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.164.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "18067bm31wgdljf55s816d1xkyp916gcynav8d8xgjp9v07rsd36") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.256.0 (c (n "deno_core") (v "0.256.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.132.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.165.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "1b0lmfzy7skcdail1ln2783vvx2wwqzg89z7padijincdcl9fnfd") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.257.0 (c (n "deno_core") (v "0.257.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.133.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.166.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "1x78yafhm80j26nx4rwg2rw0gja1zg5hg560jqip3sbz7cw874ia") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("op_driver_joinset") ("op_driver_futuresunordered") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "op_driver_futuresunordered"))))))

(define-public crate-deno_core-0.258.0 (c (n "deno_core") (v "0.258.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.134.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.167.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "068n905p5l1yh80wjjl21b2jr385cgjv1qsnxkj82lklc70ws07j") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.259.0 (c (n "deno_core") (v "0.259.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.135.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.168.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "14f440zz3x48sjy9j3wvw02p9ni8j44fmyrpds84iyjngy7whbgn") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.260.0 (c (n "deno_core") (v "0.260.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.169.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.1") (k 0)))) (h "1accyd3nn3nfk7ba2b6wp0jympw2wyvq448lrp178s1k70na9b3k") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.261.0 (c (n "deno_core") (v "0.261.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.137.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.170.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "0ri0fx3g5bz26ga7k3hiaqj7621jiv74l37mra4ljkh0l68v2hvp") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.262.0 (c (n "deno_core") (v "0.262.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.138.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.171.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "0jzl9sgwn27nhibfl695kj73zn97i9lxv4nyagzrgi7jwkxi435v") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_data_json") ("snapshot_data_bincode" "bincode") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "snapshot_data_json"))))))

(define-public crate-deno_core-0.263.0 (c (n "deno_core") (v "0.263.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.139.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.172.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "0b37r3l1fa8h30i2735lyp2nw5xsj87hfyxaqx44c8yyrli3z0ai") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_data_json") ("snapshot_data_bincode" "bincode") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "snapshot_data_json"))))))

(define-public crate-deno_core-0.264.0 (c (n "deno_core") (v "0.264.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.140.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.173.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "130xhij1nm43xkirab9dwqxv0gnpna6ral2cg1faz764w0gw138w") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_data_json") ("snapshot_data_bincode" "bincode") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "snapshot_data_json"))))))

(define-public crate-deno_core-0.265.0 (c (n "deno_core") (v "0.265.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.141.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.174.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "026zpxjzmy1nc3mnksyysz4da7aligzww14kvbnzwd8vqg2ks2pl") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_data_json") ("snapshot_data_bincode" "bincode") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "snapshot_data_json"))))))

(define-public crate-deno_core-0.266.0 (c (n "deno_core") (v "0.266.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.175.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "1kymllldvn8nmc7iylnm0nxncrk83xh7py3kp7pspqrv2dfydgyg") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_data_json") ("snapshot_data_bincode" "bincode") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx" "snapshot_data_json"))))))

(define-public crate-deno_core-0.267.0 (c (n "deno_core") (v "0.267.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.143.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.176.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "0mh5v1br9r25bm4brmkkkws0x5la5rgy65m7iwfqrrwqrzm9mp5m") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.268.0 (c (n "deno_core") (v "0.268.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.144.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.177.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "09k06rd8g84ya4szcqpps4lhz00i2ryws3fgg25mvjdjg73pdr3i") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.269.0 (c (n "deno_core") (v "0.269.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.145.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.178.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.83.2") (k 0)))) (h "08q93jzv02v5xnf7vmi40lfz75mv3shiqcby3h2ckwnrhbwd0jx1") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("lazy_eval_snapshot") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.270.0 (c (n "deno_core") (v "0.270.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.179.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.85.0") (k 0)))) (h "0d64dh5l3zfisb0svx8p6iw5m7r6s9w0lq38kkkvv906baam9y1a") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("lazy_eval_snapshot") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.271.0 (c (n "deno_core") (v "0.271.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.147.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.180.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.87.0") (k 0)))) (h "16vd9inr4n046apmd6bvmq8nr8pvrb8lypc9glhn79rfx9q9g68w") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.272.0 (c (n "deno_core") (v "0.272.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.148.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.181.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^7") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.89.0") (k 0)))) (h "08rm129hvg8i17qg5z6441wmmkprwlf2vzjcc4ik0xmgya8kh287") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.273.0 (c (n "deno_core") (v "0.273.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.32.0") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.149.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.182.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.89.0") (k 0)))) (h "00hn27p60kaaryggmr969m32xk7jyrsdq5yzpabzfkvzldp4996d") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.274.0 (c (n "deno_core") (v "0.274.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.150.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.183.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.89.0") (k 0)))) (h "1m4zdmg1w958bbj2nll2i7hh1jajwb19msxdlqnyfqk8z9y7wgs7") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.275.0 (c (n "deno_core") (v "0.275.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.184.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.90.1") (k 0)))) (h "1zwpf3gc54k9g7dplm7f0nmfd8j258mqlamm41cjhdsq0kx30081") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.276.0 (c (n "deno_core") (v "0.276.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.152.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.185.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.91.0") (k 0)))) (h "03vpayhz361hxv0m43x55acvv1sg1bcc70scl0mjvf1lrqa5bb9p") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx")))) (y #t)))

(define-public crate-deno_core-0.277.0 (c (n "deno_core") (v "0.277.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.153.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.186.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.91.0") (k 0)))) (h "1w6dr6lrd5kxh62agmsb1jmzm0plaln40f79cnavvbmzc1b2wmiw") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.278.0 (c (n "deno_core") (v "0.278.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.154.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.187.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.91.0") (k 0)))) (h "1v2p3ja3lwkr7n3q9c2v8nz09p3ky8di2pr1lgip3vk05j5x0g1m") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.279.0 (c (n "deno_core") (v "0.279.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r ">=1.6.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.155.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.188.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.91.0") (k 0)))) (h "15zdj28sp47kd1mv3vl80h58x4n89w3sghq7gz01b8zwcn03kx3a") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.280.0 (c (n "deno_core") (v "0.280.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r ">=1.6.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.156.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.189.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.91.1") (k 0)))) (h "1pgb2cqxlcqix03anr3crwgsqj7c40mm9asi13fvnfr47qnnzlhj") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.281.0 (c (n "deno_core") (v "0.281.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r ">=1.6.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.157.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.190.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.92.0") (k 0)))) (h "1jjvx6q0scaf5cnd2ahizwn5r18mdzsifq5vh0nvdcchxgczmy24") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.282.0 (c (n "deno_core") (v "0.282.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r ">=1.6.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.158.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.191.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.92.0") (k 0)))) (h "1d6lxxz90zv4687dbpj2a269c8jqcynl9r5qn9n9ih4ybwaq9sfd") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

(define-public crate-deno_core-0.283.0 (c (n "deno_core") (v "0.283.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0") (d #t) (k 0)) (d (n "bit-vec") (r "^0") (d #t) (k 0)) (d (n "bytes") (r ">=1.6.0") (d #t) (k 0)) (d (n "cooked-waker") (r "^5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "deno_ast") (r "=0.35.3") (f (quote ("transpiling"))) (d #t) (k 2)) (d (n "deno_core_icudata") (r "^0.0.73") (o #t) (d #t) (k 0)) (d (n "deno_ops") (r "^0.159.0") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (d #t) (k 0)) (d (n "fastrand") (r "^2") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "memoffset") (r ">=0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rstest") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.192.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (d #t) (k 0)) (d (n "sourcemap") (r "^8") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (d #t) (k 2)) (d (n "unicycle") (r "^0") (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde" "expose_internals"))) (d #t) (k 0)) (d (n "v8") (r "^0.92.0") (k 0)))) (h "0kp5fxfgw4h9qrjn04k5fmnp1qcrcja1rr333q1gx8rnyvwl6l0g") (f (quote (("v8_use_custom_libcxx" "v8/use_custom_libcxx") ("unsafe_use_unprotected_platform") ("unsafe_runtime_options") ("snapshot_flags_eager_parse") ("include_js_files_for_snapshotting") ("include_icu_data" "deno_core_icudata") ("default" "include_icu_data" "v8_use_custom_libcxx"))))))

