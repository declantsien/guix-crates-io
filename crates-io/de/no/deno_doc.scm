(define-module (crates-io de no deno_doc) #:use-module (crates-io))

(define-public crate-deno_doc-0.1.0 (c (n "deno_doc") (v "0.1.0") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.9.1") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.3.2") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1c7a7mlxa37zqkg9msmkq9f5ng62fig2npnaak419yvm5xlhyw61")))

(define-public crate-deno_doc-0.1.1 (c (n "deno_doc") (v "0.1.1") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.9.1") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.5.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "17a896a12cgdqsqj56c7xwmvnbf59x80bh7r3f409va09cdkrvn3")))

(define-public crate-deno_doc-0.1.2 (c (n "deno_doc") (v "0.1.2") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.6.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0xn4v7kvavhc6m95bz053kh6swx7cfl94zh5q2bprfnjqk4fpms4")))

(define-public crate-deno_doc-0.1.3 (c (n "deno_doc") (v "0.1.3") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.6.3") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0xv1l26qiiw7a4wjxq5bg4dmc9bfg0rz0k10valnqgckqbyp2kyd")))

(define-public crate-deno_doc-0.1.4 (c (n "deno_doc") (v "0.1.4") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0v8l19rc2mgp6gpw6yc2f6dd14fz8a4hfv4sygdsgzpyxl0gk56k")))

(define-public crate-deno_doc-0.1.5 (c (n "deno_doc") (v "0.1.5") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0lcsq6np4lf4zpdhj0bvz7qxj81dy539lkgbyi7cqs3ah9xw3h09")))

(define-public crate-deno_doc-0.1.6 (c (n "deno_doc") (v "0.1.6") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.3") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0q4zg19h7f29gkrqms77ixmzd7lg5p6nmd2sxgp3h719izrwyrfw")))

(define-public crate-deno_doc-0.1.7 (c (n "deno_doc") (v "0.1.7") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.4") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1vwl48ic267m90x95622glxjz7zkxwn08r4nbfq9q0in4bza5i29")))

(define-public crate-deno_doc-0.1.8 (c (n "deno_doc") (v "0.1.8") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.5") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1f4fjg33kvgm0v770xa9a3x6xbarhyq1ypp102g3ynix87y0a6f3")))

(define-public crate-deno_doc-0.1.9 (c (n "deno_doc") (v "0.1.9") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.2") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.7.7") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1ccvicfnvpjcyy9gkgnqlmbl9vkagczcrmbqy8mvhnlnv4gxlcgm")))

(define-public crate-deno_doc-0.1.10 (c (n "deno_doc") (v "0.1.10") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.3") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.8.3") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0aaqh3fx86n4mmsbxnnqba8q93mjirmysby6211kq74sqrwfrj4g")))

(define-public crate-deno_doc-0.1.11 (c (n "deno_doc") (v "0.1.11") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.3") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.9.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0cjpj1phxbphxm9fxijgwg1h1l7hdzfq6qdgyvhrhbvvids585fg")))

(define-public crate-deno_doc-0.1.12 (c (n "deno_doc") (v "0.1.12") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.10.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1hra32xcziz231wyvxxwf2xag3iz0q0s8zrc9mhb2bk43skcgni6")))

(define-public crate-deno_doc-0.1.13 (c (n "deno_doc") (v "0.1.13") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.11.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "0rgc78sn19anv3g17fg6kcz8m78wja08lrnz9dhcbgzdjn0q7wj3")))

(define-public crate-deno_doc-0.1.14 (c (n "deno_doc") (v "0.1.14") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1yf5lmdzcfk496zddcbllwgwrc20704i3ry654q84la59ykv6n82")))

(define-public crate-deno_doc-0.1.15 (c (n "deno_doc") (v "0.1.15") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.13.3") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 2)))) (h "1pg1fs40949wzknicak0jrahx8s5zbqypsszilnm1xr16b8fx86k")))

(define-public crate-deno_doc-0.1.16 (c (n "deno_doc") (v "0.1.16") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "=0.10.5") (d #t) (k 0)) (d (n "swc_ecmascript") (r "=0.14.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "1z5gjl0zhb1gr76wrbyycw3ah1ww59p015p43xbbyys5yqz0a1m2")))

(define-public crate-deno_doc-0.1.17 (c (n "deno_doc") (v "0.1.17") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.14.4") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "1cj4l362g5al2ra6sjpxhgy80zgy01l94hggbz6qvhahhhiqb7sx")))

(define-public crate-deno_doc-0.1.18 (c (n "deno_doc") (v "0.1.18") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.7") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.15.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "1sfbbmybh47ccdxfamwq62l5aj65nwk0hlgkb4s4lgqwf95pyd0s")))

(define-public crate-deno_doc-0.1.19 (c (n "deno_doc") (v "0.1.19") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.7") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.16.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "00pdiddc2nv2l2gxnd192banwgfjjlx8mm8fmw4gsfpq67csidb8")))

(define-public crate-deno_doc-0.1.20 (c (n "deno_doc") (v "0.1.20") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.17.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.5") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "0102ji26blfnqzc2l1824n5pfamp0bfg1b5crl7ssx8infd9lskb")))

(define-public crate-deno_doc-0.1.21 (c (n "deno_doc") (v "0.1.21") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.9") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.18.4") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "12p316v1y17cwg9kgwniflvj44hb607jdzq4y6i184f0p690z62m")))

(define-public crate-deno_doc-0.1.22 (c (n "deno_doc") (v "0.1.22") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.9") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.20.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "0ifn5rvmws1qpwcd50i2q0hx9kcjvm44b5qgzzbj1i162ivp78fb")))

(define-public crate-deno_doc-0.1.23 (c (n "deno_doc") (v "0.1.23") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.12") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.24.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "1sarhql1y3iq2g64hlnxs6d2g8lz63hc1ik315ayjl2mcy1pg5li")))

(define-public crate-deno_doc-0.2.0 (c (n "deno_doc") (v "0.2.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.12") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.24.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "0p56b169kk204nzbrps7kxc604y3vvashwfhdzh43brpr9a9z046") (y #t)))

(define-public crate-deno_doc-0.2.1 (c (n "deno_doc") (v "0.2.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.15") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.31.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 2)))) (h "1wz8b887xb7hh0y0gp588pgnm3z9fxr5yrs9pwmzflg3rab0jwvz")))

(define-public crate-deno_doc-0.3.0 (c (n "deno_doc") (v "0.3.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.17") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.31.3") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "12dmk1v7ybybn6sb2xhiidyx19j9hiig814km88ahk6swd7q5cz1")))

(define-public crate-deno_doc-0.4.0 (c (n "deno_doc") (v "0.4.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.18") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.33.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "1myfsrklmjnca83wl4lqjmljrd1bmlw31r6gs1zzwwh84a9f4l7h")))

(define-public crate-deno_doc-0.5.0 (c (n "deno_doc") (v "0.5.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.20") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.36.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "0yy587c9spb6zi8zpd5553qhk77s6w0m3l838yqgbnb1yj72abxj")))

(define-public crate-deno_doc-0.6.0 (c (n "deno_doc") (v "0.6.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.20") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.39.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "0x2p0fhwfz3bilhjvv93h3xn95viggv1y6mqpv0ck64xs37xhhzm")))

(define-public crate-deno_doc-0.7.0 (c (n "deno_doc") (v "0.7.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.21") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.44.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "1iwr12f90bxpfk8ahmpavd60c4j0qbw17z94v482xaazsw05i7zb")))

(define-public crate-deno_doc-0.8.0 (c (n "deno_doc") (v "0.8.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.10.21") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.45.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "1ai4gchbj4yx1ba1ad085a7wkcb586kfvcwazbg086y5j7nsi8as")))

(define-public crate-deno_doc-0.9.0 (c (n "deno_doc") (v "0.9.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.46.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "0x65nkg7lykkywg44dkrv3bk355zhfr6r5clq2bk90k8jfssrzj4")))

(define-public crate-deno_doc-0.10.0 (c (n "deno_doc") (v "0.10.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "=1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.52.1") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2.1") (d #t) (k 2)))) (h "0af20a7aysi412b0bs38a46bacdpya67b50by0sjhlwjjjrl79c1")))

(define-public crate-deno_doc-0.11.0 (c (n "deno_doc") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "deno_graph") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.57.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "1gi48r0qacf59kh0418si08lv4ap0yj66wfd8y6i49krgj73g1lg") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.12.0 (c (n "deno_doc") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_graph") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.60.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "125453sws1xxh2jk9xbvvpm8nb5cmbs8ag8l4a2ybldwxgbc4a62") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.12.1 (c (n "deno_doc") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_graph") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.60.0") (f (quote ("parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "1kpzf1sk43f035vsjmfwf3dwnzyzxpjykm5gb9bg284i6nr61j13") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.13.0 (c (n "deno_doc") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.1.4") (d #t) (k 0)) (d (n "deno_graph") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "0lqsvcd63vnry4bz28dxj7ril20g1420192m819qa05ipdrncigi") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.14.0 (c (n "deno_doc") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (o #t) (d #t) (k 0)))) (h "1kzs7397fcnr998603xfk6rlfng63pmfkm48frd0b9fnidy97yis") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.15.0 (c (n "deno_doc") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (o #t) (d #t) (k 0)))) (h "07rhssmzkdc95vmh4wma5n0wqfw2kx60h0wxlg7x6qy4449mgh6a") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.16.0 (c (n "deno_doc") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (o #t) (d #t) (k 0)))) (h "1wwgq4m822hd0sghznq2y0p2iaj7w92s3k7vdmdcwsra93kj7ykk") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.17.0 (c (n "deno_doc") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.4.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (o #t) (d #t) (k 0)))) (h "082y8q82wcq9s568lm61j2s4z2yiwxbwx6ak6a785kp0xzy4p5g8") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.17.1 (c (n "deno_doc") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.4.1") (d #t) (k 0)) (d (n "deno_graph") (r "^0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (o #t) (d #t) (k 0)))) (h "0ynapp2b0y3r5qzq28ily5v1xlz756nspmrv87yd8zm18w20zdln") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.18.0 (c (n "deno_doc") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.4.1") (d #t) (k 0)) (d (n "deno_graph") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1i9yq0s0bpaslrh13qa79jsi4wqra2hnipxj4005h8yskfvlwx41") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.19.0 (c (n "deno_doc") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.5.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1rwis28xbqzl7q9sx219zgvhq5pyxj4adng3lrdlrrzdygcsvaq8") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.20.0 (c (n "deno_doc") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.5.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "18prik7kvs8c8c5jh0wl47s61ffaqc7k37jj1zdbyvssnyv7cbbd") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.21.0 (c (n "deno_doc") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.5.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.12.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0pkyncj19h0pnyf21945bj2nraj6z4pwgvy6m7791bsf8ldhqnq7") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.22.0 (c (n "deno_doc") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.7.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.13.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "162vwa2kv4rnf8hrvsich9qshmbcisxwg673fib7sv28yi5mhsin") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.23.0 (c (n "deno_doc") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.7.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.14.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1b825y0ks6f2wz13p13nzpicx9d5zsv5m7ybqd67w6b34zsh3nkc") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.24.0 (c (n "deno_doc") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.7.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.16.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1yra5ii5lzbddpmy2vgqwyhyq8jgfcv2al9slhlqqkhaykazjqv5") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.25.0 (c (n "deno_doc") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.8.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.17.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0cwqn3pdvk1335rgnh1qdasqdxvfigqzhxz5dnq4bbkcyd655zg3") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.26.0 (c (n "deno_doc") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.9.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.18.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "18b8yz7wb8ndxgjizlmyqdycdpcmvanvmxcr6y22l0d44ap85zvk") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.26.1 (c (n "deno_doc") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.9.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.18.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0flbmbxq7xyl9a1q56ipz7szb5n6qfimr4ghml29qy1va7b4abz8") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.27.0 (c (n "deno_doc") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.9.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.20.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0h1kzjrqhswrpg9s3d56smx4hvn9lxcn60s967p1zc9h7rkw2nvd") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.28.0 (c (n "deno_doc") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.10.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.21.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1g8kgjz2f7l9p78aqsnbv0syggh68km78dq74vwg3j60iiq40w53") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.29.0 (c (n "deno_doc") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.11.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.22.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0pj1fywvsk3qs43d2sf4w3m02zar2m21kix1i6g7ajhczwwgkj2i") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.30.0 (c (n "deno_doc") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.11.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.23.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1rlvbscfypnb7lwc08fdh87bxwxslxq42pjp0wnzk5x6p11pq6fs") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.31.0 (c (n "deno_doc") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.11.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.23.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0qx4dwvad5abz7xxiagv5wsgcnxh7j3jlg8xlf8fyqc790priqn7") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.32.0 (c (n "deno_doc") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.12.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.24.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1fazd64wispwibw4qlfbkvhp286dv2l7xqi2riw8bw995yypmwjd") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.33.0 (c (n "deno_doc") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.13.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.25.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "024zca6731w6l1bkvs9z2vycribcdxffazck4lzdygk1vmd8jndz") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.34.0 (c (n "deno_doc") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.14.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.26.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0db9ar2d3a3v2isicidrkavh08r97c49ajcnlsn9h1kaxnw4rp8a") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.35.0 (c (n "deno_doc") (v "0.35.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.15.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.27.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "12qjanza5v7pxdwg47mfhz9xnv1sb7syx7micpsrb8a6rh6qqjfb") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.36.0 (c (n "deno_doc") (v "0.36.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.16.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.28.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "15gafnbx1i2aaij48hjia9jc12p6m8jagybji2lni14vs40l5lhd") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.37.0 (c (n "deno_doc") (v "0.37.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.16.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.28.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1irpbabhcgjq1rz8cdz724mfafzbyq4a4zg9b59ikaz6a86g558z") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.38.0 (c (n "deno_doc") (v "0.38.0") (d (list (d (n "anyhow") (r "^1.0.43") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.29.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1v3b33fwb7wvns8a4vsq6iqd4qq4yxi0nbwxnvj8wi46nm9k0ckx") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.39.0 (c (n "deno_doc") (v "0.39.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.29.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "07dj3f9sjqzsvfahq6rgmwmgl043a8h2asll0nqxkf7w3shn03rh") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.40.0 (c (n "deno_doc") (v "0.40.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.30.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0i3fz2z92mqxa4q76qh86pwzgcma9p00n3v4rkwr5ccnpd1dbbzq") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.41.0 (c (n "deno_doc") (v "0.41.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.30.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1flzz8xwrbkn0ldppalgn5h764rcns6rd0d2xrb5izlfib82j898") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.42.0 (c (n "deno_doc") (v "0.42.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.31.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1dip72f004mf9w7c7shvgid0z44wbb14dszrv7g68ddn7zwb5axq") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.43.0 (c (n "deno_doc") (v "0.43.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.32.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1zpgn3750ijkimyvr7n05pvwsm26bvsaq3rb91qs53fgrdvjq5i2") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.44.0 (c (n "deno_doc") (v "0.44.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.33.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "13i486zsksi7g3vmfgl623hf89f0fqypmdjcikjwqkkvrzxgqx7m") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.45.0 (c (n "deno_doc") (v "0.45.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.19.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.34.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0lzb1q8711sv557ybbh1f6kfa2w8dxkjb873p5ylwn31rb8nq1gg") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.46.0 (c (n "deno_doc") (v "0.46.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.19.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.34.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0nccxqz33xi48fvs7x62ccfdy6m09lm4znjh1ps7x2vdg2fqh3wi") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.47.0 (c (n "deno_doc") (v "0.47.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.37.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "13cgql87r7kqbi5i5gxmfcgfnydz2y3191fp1bgvg9q2wyb34wmc") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.48.0 (c (n "deno_doc") (v "0.48.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.37.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "1jhyz1n9vv4qf1brypwka225bwhh2j3v9fg3yfpsy323clqclya5") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.49.0 (c (n "deno_doc") (v "0.49.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.38.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.12.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "1lhd7v0qzpphr974r0f9zw5f14w6i8pm5vj20wshnygbccaiv4qy") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.49.1 (c (n "deno_doc") (v "0.49.1") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.38.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "14kdpcd9mvw7rd0cq7whb9xzsdshqla0nvn9rwina2rmvamv0fzs") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.50.0 (c (n "deno_doc") (v "0.50.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.38.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "142g5461m8m41ahg3v55rdsp7mba7k31g9d7dqiijlpj8bdbwh6w") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.51.0 (c (n "deno_doc") (v "0.51.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.39.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "088y0gmk909rc55gw2n1lmw76pdnd3dcks9gsb0w1schyqj0ypvs") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.52.0 (c (n "deno_doc") (v "0.52.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.23.1") (d #t) (k 0)) (d (n "deno_graph") (r "^0.41.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "1frfd72rjj6lyvna2r79wmskh7wscjwzxv610m08qk09lxnn8kas") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.53.0 (c (n "deno_doc") (v "0.53.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.23.1") (d #t) (k 0)) (d (n "deno_graph") (r "^0.42.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "1g9m9782hjk3nikyhqlrcs415myq9kra0kyb4jmqjbb9pkd2wycx") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.54.0 (c (n "deno_doc") (v "0.54.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.23.1") (d #t) (k 0)) (d (n "deno_graph") (r "^0.42.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "0d8jz9vyvv49amvpkk6kvv60zdk6ann2ld9sclf52xff4rzls05z") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.55.0 (c (n "deno_doc") (v "0.55.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.43.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "1m0pv9lgnr3l1yfi0sk9j8rl3jalhbsaqj9a91a8f6vxr1gmc7ym") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.57.0 (c (n "deno_doc") (v "0.57.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.44.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "030jax4cg95r8k4wpifx58dri2khfjd37xp7llb4wgnn5nq04wvi") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.58.0 (c (n "deno_doc") (v "0.58.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.24.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.44.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.58") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.31") (o #t) (d #t) (k 0)))) (h "15kdpv5iy750b9p6l69sma7l9qnz4p9fr2v9cdaqfvnx7r60r92s") (f (quote (("wasm" "anyhow" "js-sys" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.59.0 (c (n "deno_doc") (v "0.59.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.25.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.45.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (o #t) (d #t) (k 0)))) (h "1hqklrlqraa6rx786g77x42jsyfgckj2fki9hf9k6n1hjq8vi7l0") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.60.0 (c (n "deno_doc") (v "0.60.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.25.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.46.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (o #t) (d #t) (k 0)))) (h "03qizr6022cr9yw9f6ipf26ylrv3awhglynvjxaxbjd3lw5w57h2") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.61.0 (c (n "deno_doc") (v "0.61.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.25.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.47.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (o #t) (d #t) (k 0)))) (h "0ag78dbcr27057y9icl64xjay1vskkxwc2cchccyv83x2fisc6xf") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.61.1 (c (n "deno_doc") (v "0.61.1") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.25.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.47.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (o #t) (d #t) (k 0)))) (h "086vdmcjwh3xll0ra6jj3d5fx44m85r66sppgcn6lngcfs0gc721") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.62.0 (c (n "deno_doc") (v "0.62.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.26.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.48.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (o #t) (d #t) (k 0)))) (h "12ib65lyjkh91lhjrpy30d4y2g1l8mn3xch09zfv1r3rcs14qvha") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.63.0 (c (n "deno_doc") (v "0.63.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.49.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.13.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "1wk80vp6pi01ksdbk1kv57vyhh4ci9z7xz4rc5hpljgfcfwm55zh") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.63.1 (c (n "deno_doc") (v "0.63.1") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.49.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "1yirxmq2z5sly4l79vdnblwajpnzygg2jzp8m9ycdhq604q3d6a9") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.64.0 (c (n "deno_doc") (v "0.64.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.27.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.50.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "0a9q26sqv5fb39ma5cw8i03d0bqlvn81g1d1qw5ikhp4jkf3hpf2") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.65.0 (c (n "deno_doc") (v "0.65.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.52.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "1znh9wgfc9yl1nav86z0s0frafw5m4js75gfxbc85bh2lwj7rfqh") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.66.0 (c (n "deno_doc") (v "0.66.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.54.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "1431h8rpgmc6w0g6xg91jfg7hg571iy3df2rix1qwcxaw14jzi2c") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.67.0 (c (n "deno_doc") (v "0.67.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.55.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "1kj4n0s8d2aj5sg8232b11fw4xa6478kgnvcx9zc1arvd0frg014") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.68.0 (c (n "deno_doc") (v "0.68.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.56.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "07x8xr34ffhgagazlxafqnq1nbsjdhqgdvr77pks73cc7sd69xdp") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.69.0 (c (n "deno_doc") (v "0.69.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.29.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.57.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.63") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.86") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.36") (o #t) (d #t) (k 0)))) (h "0wp866nbbbsylswh7pzsrdvfyjyj57si08bdyc281br43014zc47") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.69.1 (c (n "deno_doc") (v "0.69.1") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.30.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.58.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "1704g8dlk7x4ljdgshanrc5cxd5s9gwzd092jl56r74smbpmdrx1") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.69.2 (c (n "deno_doc") (v "0.69.2") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0riqmnw7bl335hdf1gx5xa581699h7fxllv47f5ln5frpjwgnck9") (f (quote (("wasm" "anyhow" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.70.0 (c (n "deno_doc") (v "0.70.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.1") (f (quote ("type_tracing"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0f4qkdnnl9rlzqzbff67jm9vsamx15ivnzxa3hx1xni4y1ms9l0x") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("default" "rust"))))))

(define-public crate-deno_doc-0.71.0 (c (n "deno_doc") (v "0.71.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.1") (f (quote ("type_tracing"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0dw8nsc83rm3cm1wdsc3cmqxr4sriwk7fp3z3ff5kljdr2h8rs9c") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "indexmap" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.72.0 (c (n "deno_doc") (v "0.72.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.1") (f (quote ("type_tracing"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0sb9brcjmj1aamvvi9nqmryrqrc63wrrw2g2zzpj3cxn9gm52w17") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "indexmap" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.72.1 (c (n "deno_doc") (v "0.72.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.2") (f (quote ("type_tracing"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "11pscig0n37vmsw3zmlzkbzxjab94g6iqz4yha79swxpy2n5vskb") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.72.2 (c (n "deno_doc") (v "0.72.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.59.2") (f (quote ("type_tracing"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0r8v1z48sls4m6wk9h2i2bj07s0fclh88h9lxyws1dvb8kzhmh28") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.0 (c (n "deno_doc") (v "0.73.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.60.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "061n0mldbx8yvjzp8gc3j57py5razjlanfyc9hby0xw6v5xpk32q") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.1 (c (n "deno_doc") (v "0.73.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "1ygs4s37pm36jx2c8350ww6779nycszzhl77k929pdig6k749ahc") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.2 (c (n "deno_doc") (v "0.73.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.17.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "1nvibdjkjb9c1ba85330bfrbfkvz9fv2lfabhjas5zpdx534d1fj") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.3 (c (n "deno_doc") (v "0.73.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.17.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "1m6d1msww5cvs97xw7n5k6yz9q2l4fl5n40cyw3286ss1gmar6vj") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.4 (c (n "deno_doc") (v "0.73.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "1zg3rcf6dwd4lh9gp4jl509ljca6w8rz1cg5x2scrr9mbysrqhry") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.5 (c (n "deno_doc") (v "0.73.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0ah0nsad5cbx4vnc9vaccsmx2fq2k7yygi3ywmjaziz51jbd5m3n") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.73.6 (c (n "deno_doc") (v "0.73.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.61.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0lfjsxlfjaadxwdq0wnna7waljc4vxac0gwdg2d9n0cx6n5d7qx7") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.74.0 (c (n "deno_doc") (v "0.74.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0syyzgah5x7fxx095a256ljfq7cyqdmk413gspi1qkzsp6464yil") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.74.1 (c (n "deno_doc") (v "0.74.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "0pvh5b5j5zvn9q4apahnmk0v70fv5d51gqdr27vrc5za3hxbagzy") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.75.0 (c (n "deno_doc") (v "0.75.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.0") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "=0.5.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "=0.2.87") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (o #t) (d #t) (k 0)))) (h "19hkm1illmmkci31jw70kdsqsjm15h32lf6h0c8xx1s3a45qq67c") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "console_error_panic_hook") ("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "rust"))))))

(define-public crate-deno_doc-0.75.1 (c (n "deno_doc") (v "0.75.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "02j151gvpd1pbp56mfc025avn6r898v6gw5sd7sm5aaxrcfgrh3w") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.76.0 (c (n "deno_doc") (v "0.76.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "10ngzah8kxkg9zs430pr6lgh29v2c38w02xr42jy7dj77nyccmqn") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.77.0 (c (n "deno_doc") (v "0.77.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1da9jsaaq258dclddrl7sj0w1sly59ghg8w3344rgl932v4zn5fk") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.78.0 (c (n "deno_doc") (v "0.78.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "08vlndf2jqqg6ahyk0wf8h9y9f2qja1wzpqgcsa5lnv6a0mpbrdv") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.79.0 (c (n "deno_doc") (v "0.79.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1y0fla07iv01qssv0hdvsd3i4gqrm6hxvp7rq4bvxw6xlnwi2mbz") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.80.0 (c (n "deno_doc") (v "0.80.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0wgiawiyrs91nqz00qh5yxcn525h00xmk1g4n8045dbdbym7j0sc") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.81.0 (c (n "deno_doc") (v "0.81.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-fancy"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1lkydd3qvlwv2hzqic62zky9bwvaq68xx7c4sbjh7ca46dbly6jb") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.82.0 (c (n "deno_doc") (v "0.82.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-fancy"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1rhyr0kijrrfc3bjq07kzmkv852pnp4ar4w0k7x105g2fvq4x1vw") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.83.0 (c (n "deno_doc") (v "0.83.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.19.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1jvsdvgykc9g63mvlvxjhm9f729w2v7iinqaiz3c91s7rkhndbpq") (f (quote (("rust") ("html" "html-escape" "comrak" "tinytemplate") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.84.0 (c (n "deno_doc") (v "0.84.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^4.5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1f07wwcdsm8wxzi9ls4cl65f46rwkn5nphr3kmgns1f32micq7yk") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.85.0 (c (n "deno_doc") (v "0.85.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^4.5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0c3slbbajqwhbvii1cbl1zw73xw6f780kaz9ciyahyj6nq7k5dl3") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.86.0 (c (n "deno_doc") (v "0.86.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^4.5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1x9l7i4fp1135z5zyqnp95b4bhpgld3az2s5slc10n374c7p1y82") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.87.0 (c (n "deno_doc") (v "0.87.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.31.5") (d #t) (k 0)) (d (n "deno_graph") (r "^0.62.1") (f (quote ("symbols"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1d9myvrqwcjbrlhair4kqx54mv92iwqp5zz3zkhnzs28kw53ddvx") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.88.0 (c (n "deno_doc") (v "0.88.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1pdjjbpp7zjj157cr7qiz1jz3n54zhsbdb3a97psq68zfxx6kia5") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.89.0 (c (n "deno_doc") (v "0.89.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1ikzd06wlazzy85d9pq3d9mhvahk8b29mjyyj778ywxspjcnrw80") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.89.1 (c (n "deno_doc") (v "0.89.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1rswqx429kfm057iaa4832ffl747yb7bnlm3p77wwsfs8czzyzhs") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.90.0 (c (n "deno_doc") (v "0.90.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0ibfig52si70bx3n0c7m4fsv00ba8zk2wfnnxnhbm8fzk7l9phqb") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.91.0 (c (n "deno_doc") (v "0.91.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1nywyimgs9dkv8m4bjw5cis9842kpibl94xr9yg9qfkpq92h0kz0") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.92.0 (c (n "deno_doc") (v "0.92.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0vd6vwj2kzln0hnxb0px34x8k5gi4sgalzhd871jap4yvxmdfbyh") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.93.0 (c (n "deno_doc") (v "0.93.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0gy9df7qriysz3nl1kzjfa015ag01wdhnwpvkplsgiw66wwpqkmz") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.94.0 (c (n "deno_doc") (v "0.94.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^1.0.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.2") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1bjd50265i6y1c3kppndwpgfqpxy8ihg1rixi3nb6l6h8n6rl2xv") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.94.1 (c (n "deno_doc") (v "0.94.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "19ppppdpl6l36gjpzjvn946565wncrjr0f3r16q2473knlxgs9dk") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.95.0 (c (n "deno_doc") (v "0.95.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "07lgzddhfn4w5al8jw8scliv1j9r09nl10zh9fwagk75j431pvsj") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.96.0 (c (n "deno_doc") (v "0.96.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "11fqs27md6a2z9a2dvw2nsr8pl81k263lpqjhmpfrhj7cab74qva") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.97.0 (c (n "deno_doc") (v "0.97.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "12mf1as4xjriqrax5msii0pw9gy2y6szmhjg4q7fp7b6w1l2z20f") (f (quote (("tree-sitter-all" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars" "tree-sitter-highlight" "tree-sitter-all") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.98.0 (c (n "deno_doc") (v "0.98.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "01y4267plfnv36v90j2lji7dv7hlfhhshws9qnb3zgx7yyazayl3") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.99.0 (c (n "deno_doc") (v "0.99.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.63.5") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "145dx4w0g58w0p0q5923937lfra5i5a980m9dva1b2lpj222b36x") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.100.0 (c (n "deno_doc") (v "0.100.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.64.1") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0yqv0sbc0dnvb25qnx8rqbhf8cs8v9qsga84qd3mhcx41fkrppyi") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.101.0 (c (n "deno_doc") (v "0.101.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.64.1") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "179wh8aaimv21br844h99bigvkd35igjm0hkz4a5226993zl6vw4") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.102.0 (c (n "deno_doc") (v "0.102.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.64.1") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "054dfn0x6kqsf6q9nhwmfyx8cahg8bn0h15y3w0f7q58b3n169ai") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.103.0 (c (n "deno_doc") (v "0.103.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.2") (d #t) (k 0)) (d (n "deno_graph") (r "^0.65.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "05vhn54874y06qln9jwlvj24r5wbcqdwvldq04zwlmj42kc6pzkk") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.104.0 (c (n "deno_doc") (v "0.104.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.2") (d #t) (k 0)) (d (n "deno_graph") (r "^0.65.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1cbnjs84p4n9ca5ligfbdqfynwrisylbgv6bpynwgb3d45ih668z") (f (quote (("rust") ("html" "html-escape" "comrak" "handlebars" "syntect") ("default" "html" "rust"))))))

(define-public crate-deno_doc-0.105.0 (c (n "deno_doc") (v "0.105.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.2") (d #t) (k 0)) (d (n "deno_graph") (r "^0.65.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "10vg3rm8va7g8pnkssknfy41ijpai2mvl9yjgwjphkf85m2v8lhq") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.106.0 (c (n "deno_doc") (v "0.106.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.2") (d #t) (k 0)) (d (n "deno_graph") (r "^0.65.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "044x3shmfvzz68kwr1agjg1x100h76v23ddhsjl5xara59r0498d") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.107.0 (c (n "deno_doc") (v "0.107.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.66.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "03rk3zl2j38rxh753vwp80ls2c5hiixl93p4l6v8x5g7gpr7h97q") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.108.0 (c (n "deno_doc") (v "0.108.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.67.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1dbnkpvs2821igbjvb9vcgkc5ca8pf2hng75xrv7dwb5xlysv2qh") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.109.0 (c (n "deno_doc") (v "0.109.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.67.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "01m7flyslrxzy0yrk7m4w378kc2zd5hisw7zia6q5la0bwbqwlc1") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.110.0 (c (n "deno_doc") (v "0.110.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.33.3") (d #t) (k 0)) (d (n "deno_graph") (r "^0.68.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0y5x1vf8xj8vxgmifgcg9fqzca2jqz1r2qm0nd1q1md0qy86ycc7") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.110.1 (c (n "deno_doc") (v "0.110.1") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "04z9afnlyi0g62a8f8cdbsnzj9xfpizaazf53rbvdg2vdrc5ria8") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.111.0 (c (n "deno_doc") (v "0.111.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0d7n8cw0yqfhvgccybrj3zy52ila25x8cam17017fdqqds4qlv7v") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.112.0 (c (n "deno_doc") (v "0.112.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1rc2xc03h1hzf3qc4hqcl6ggn92v6qq1cd19dmhpsgcv5nxdq83q") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.112.1 (c (n "deno_doc") (v "0.112.1") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1vbkn9axw4prcahpykmk9kijfszs24lbaa1xcphkd7p11g8cxn9r") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.113.0 (c (n "deno_doc") (v "0.113.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1mbrlm2xy97c5khkxwgjqbbq0hnjb335b9p56pmw9c9xa14ac75w") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.113.1 (c (n "deno_doc") (v "0.113.1") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1vfnr6fl6c5hikfgnqfajma83f1kkzi9xr09nfygfwrilarq2hrr") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.114.0 (c (n "deno_doc") (v "0.114.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "01bb0nfqiaw3bmlbgf8gbs5gsj1zmi39kp7csmgzd0wjsdw84ijp") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.115.0 (c (n "deno_doc") (v "0.115.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0dx415pir2mx84p9af85gyb0j47bm7fyihaxrnsixjm779a3kwbd") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.116.0 (c (n "deno_doc") (v "0.116.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "12dddr0xwji1pk80xr8bdayb72k65mj00azy0ydm4zcxls0gk9gn") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.117.0 (c (n "deno_doc") (v "0.117.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0mb5l2z6ryqm7l9cqx77symzi9kyw3p3d2inj5xi9722f79rml82") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.118.0 (c (n "deno_doc") (v "0.118.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0jnjfkw105xamsdrwsd6l9mqcwdl0zq0drxswhk4871l288qvq1h") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.119.0 (c (n "deno_doc") (v "0.119.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1v7kspr7m1nzszjx749pcqw0b1kfb15qfxzhdk4in5jz5k8w1bnb") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.120.0 (c (n "deno_doc") (v "0.120.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1184xikcmfvhm0s75wzswwmh4s5mypgyz63w8sxw6rlr58dl9kv4") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.121.0 (c (n "deno_doc") (v "0.121.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.69.3") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "104xvia2590bwff0whxx09cygqcliqpzfig9y45w03fr8l56896y") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.122.0 (c (n "deno_doc") (v "0.122.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.70.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0xfk9hh6hkjr843zj95wrld3nm8r8wdc1ad70k3n8ciyr9z40vfs") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.123.0 (c (n "deno_doc") (v "0.123.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.70.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0azfwyr158nr75kb5zs2bf9a37rdk0ayb4cmz7svap68hxvwr5g0") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.123.1 (c (n "deno_doc") (v "0.123.1") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.36.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.71.0") (f (quote ("symbols"))) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0fi7gaismqb6ccq36f33n4319wagad95dvn5x41511hpmbcc51d1") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.124.0 (c (n "deno_doc") (v "0.124.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.72.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "11s9mz1x81wgbng8rgnzb2ppybc0qzwpywrjryapaaidgcb1a4iy") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.125.0 (c (n "deno_doc") (v "0.125.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.73.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0fqabsmi8dh2mfsd3548q95v6c6bj35rbllkqvyk3j0cl3ylv923") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.127.0 (c (n "deno_doc") (v "0.127.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.73.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0mkap7blpw0f4nvq5a21p4d5r392djh2f4dpqvm0gl9f4fllbmz3") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.128.0 (c (n "deno_doc") (v "0.128.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.73.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "124yccyfs2pflcx0qk0l34wz2dwzxil0fywf4lav25h8f90h72hf") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.128.1 (c (n "deno_doc") (v "0.128.1") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0f7f3iq35brmas9rl2g6w1lcapr27a2nbnrgjb0c1v6k6rz6jy2z") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.129.0 (c (n "deno_doc") (v "0.129.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "19ipfnncng6mvkp3d49z12i2qrjp4c75blbig800z9q50mk1gp1q") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.130.0 (c (n "deno_doc") (v "0.130.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1dcgrr1y200ph19mzvnpg0fwhjq3ly6cjrsi1ndlakwiiswdf86v") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.131.0 (c (n "deno_doc") (v "0.131.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0plzpc2d02y2ibd9xjghwbqr369hprdcp48j4f0363z8w3w6a3gh") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.132.0 (c (n "deno_doc") (v "0.132.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1h6p9frlv9ir1qn048ikv66qkj11z3wmz4kpnca3adsqzzx4si0n") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.133.0 (c (n "deno_doc") (v "0.133.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.74.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0zz95gmwmrygr2z2r5542fp6xdavha9ig30ciglgdhfymf702293") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.134.0 (c (n "deno_doc") (v "0.134.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.75.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1xlbdrxjkrj3m8rpkwah3cgf8x8xyffxism0w8gyssj5z19qmjb5") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.135.0 (c (n "deno_doc") (v "0.135.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.75.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1pcqsglmd5dmhbnqa87x9164g539drjxg68spazyixk94yz9phy2") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.136.0 (c (n "deno_doc") (v "0.136.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.75.1") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "06zw2pxgdds36hqdddmhk36f2nq2xssx2gh51iixav4fj7z1rz2h") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.137.0 (c (n "deno_doc") (v "0.137.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.77.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1giyxf4dfyx28hki172w70pyya7s4mq68r449q0mpq5jaii3vwap") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

(define-public crate-deno_doc-0.138.0 (c (n "deno_doc") (v "0.138.0") (d (list (d (n "ammonia") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "comrak") (r "^0.20.0") (o #t) (k 0)) (d (n "console_static_text") (r "^0.8.2") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "html_reports"))) (d #t) (k 2)) (d (n "deno_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "deno_graph") (r "^0.77.0") (f (quote ("symbols"))) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "handlebars") (r "^5.0") (f (quote ("string_helpers"))) (o #t) (d #t) (k 0)) (d (n "html-escape") (r "^0.2.13") (o #t) (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (f (quote ("parsing" "default-syntaxes" "default-themes" "html" "dump-load" "regex-onig"))) (o #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "13znbfrdc1ffmzafbbhj8y21iqdd2mlz675k2qsn7rvsp98wg4q5") (f (quote (("tree-sitter" "tree-sitter-highlight" "tree-sitter-javascript" "tree-sitter-typescript" "tree-sitter-json" "tree-sitter-regex" "tree-sitter-css" "tree-sitter-toml" "tree-sitter-md" "tree-sitter-rust" "tree-sitter-html" "tree-sitter-bash") ("rust") ("html" "html-escape" "comrak" "handlebars") ("default" "html" "rust" "ammonia"))))))

