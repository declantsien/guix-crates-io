(define-module (crates-io de no deno_graph) #:use-module (crates-io))

(define-public crate-deno_graph-0.1.0 (c (n "deno_graph") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.54.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1zhjlwyzyv8i45g95nqd1fr3wxn7ra992ajvvygmbnj45xrapq0s") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "wee_alloc") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.2.0 (c (n "deno_graph") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.4") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.54.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "1p1q14nkx9m8diy5p8nrfwsg6jjrl3ngkbmsz1jzxjf4mgp0f45f") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.2.1 (c (n "deno_graph") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.56.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "1lhmwm2ccgp5pj87q0a1dc97s32gckb94280v01h8y92j3bf40vx") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.2.2 (c (n "deno_graph") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.57.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.25") (o #t) (d #t) (k 0)))) (h "14dmr2441xymp5k3kjb065ilq0fa6djqisak13icnyldagkgbh5l") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.3.0 (c (n "deno_graph") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.8") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.60.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "text_lines") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "18vxgy972hfv5cxy4y2havf2karvxrk179fwcym9flvy3qwian01") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.3.1 (c (n "deno_graph") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.11.8") (d #t) (k 0)) (d (n "swc_ecmascript") (r "^0.60.0") (f (quote ("dep_graph" "parser"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "text_lines") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "1p2k9dhzcpi158gybhs7la0fq3swgmaz0x8rlmpkzmhkiq870v7c") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.4.0 (c (n "deno_graph") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.1.4") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "0wmyb9gx7xdnkna78mn793b8z8fwaaq1kh1b9ifgnfca1q7ib7iw") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.5.0 (c (n "deno_graph") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.2.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "1171nkk9d6hn7gk10r0l7c0wa15vmf1l5kjpx9y1z2z23fp6lady") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.6.0 (c (n "deno_graph") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.2.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "17k1czvbsgcbm2jp0dz4bsxhgxfmzl40f84hkyfkk17xwd1nz18x") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.7.0 (c (n "deno_graph") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.3.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "1v2ffnq6smawpd3bss6laz8jrks9646sf26dnkmi3hz4zjncibd9") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.8.0 (c (n "deno_graph") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.4.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot_core") (r "=0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "1gshqpvb63yf7qv056ablx8977a5cjnkqbf7s56cb0ay1d7wxvds") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.8.1 (c (n "deno_graph") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.4.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot_core") (r "=0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "0xr89ica5x6nn4v4xc15dqihsgbfcm3j5vpx3rfks004xg4khqs7") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.8.2 (c (n "deno_graph") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.4.1") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot_core") (r "=0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.76") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.26") (o #t) (d #t) (k 0)))) (h "0w1wghn96527bkvbnz86syaf5x5i9lf3mp0yglg2mg8a95zikmyk") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.9.0 (c (n "deno_graph") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.4.1") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "11nkwaj0z3k0lkwg7jw4pr05d5ka74sgxjbqfchcgw5y1cyzjygm") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.9.1 (c (n "deno_graph") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.4.1") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0qxq1q12fx7adgfs0im1y7i7wbf98g2rzac2xd71mp98xhi3qlfp") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.10.0 (c (n "deno_graph") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.5.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "10jvr2j74pgxnn2cn8j914n7vll3g69aifagrqj983bq6nqy3xvd") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.11.0 (c (n "deno_graph") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.5.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0jyvf262ki38qz25smabzn8wy6vs13nwprxhl9h6rpinx47ji10l") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.11.1 (c (n "deno_graph") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.5.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "13wn3sfsh19b5kajknivk0a25fb9cwmpkgi1awlvz0ygw3g4vn7n") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.12.0 (c (n "deno_graph") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.5.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0mvwblazfi3v743bgw8zmsnwb7522g584c6b244w8ikpqsbk3rly") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.13.0 (c (n "deno_graph") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "074ialk9lx506bny413zdwd457hlaaf2wj3cghxkrn32wih6xv0h") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.14.0 (c (n "deno_graph") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "14kp216am4bzhp7vbwvvch5c9j9559naskw07nwwkrq0rlapcbmp") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.14.1 (c (n "deno_graph") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0im751sjplb1l5azxnga9q4psw377h6m5b6bfc0cvr1kxkzdv6pj") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.14.2 (c (n "deno_graph") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "14s0m68c7caxplcfppv1bj866qbqw8pvfhii6sq2an2vdxcq0clg") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.15.0 (c (n "deno_graph") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1lsipb6jf3hzks705kalcc83j96364vlxx64xhx0lzkwqb52c60j") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.16.0 (c (n "deno_graph") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.7.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1zd4brkdm3j9qz0xvyvfaxsj3qy3qh21vwiz63adjlaacjfgp0nv") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.17.0 (c (n "deno_graph") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.8.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0afmmyf5kkc89wbklfwjy10ivkndrrnk2aa8fyqx517wa26s5vf5") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.18.0 (c (n "deno_graph") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1zgpq6cqj8mgdxma0wprpmciqzpzk1a8b54bda2fizfjxpz22ajv") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.19.0 (c (n "deno_graph") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1k1dqfbs1wcgzv4pwj7wmjphi6h5nxibj41xf2h83cizy6vc66y0") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.19.1 (c (n "deno_graph") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1bc5hrm67vv4bg96l1gvf6js1n8llclbg7vc6bkf5svb29xhnfzp") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.20.0 (c (n "deno_graph") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.9.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "08x3qn73wnijlxycpszci523y6qqdqd1kkz9025hiq0w9q70ljc4") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.21.0 (c (n "deno_graph") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.10.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0jvjbcbrs7h59h5g23jrf53is5r4846lg6851vqj66mm649c0cci") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.21.1 (c (n "deno_graph") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.10.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0xa77mivk63whsd7qd9rgh783vz37nv87gbc5spcx7df473wxv46") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.22.0 (c (n "deno_graph") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.11.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1mfmhwihrvvc0d7w6csfkwa925ryi48isl769cbshkr9ssw89gfa") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.23.0 (c (n "deno_graph") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.11.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "12x3hifi58z34v8hbf1dg253qzab9670sm687bw3kx70fpx8n45k") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.24.0 (c (n "deno_graph") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.12.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "14z1vg0d2anx6y86mi3z4jqjfvaxj3rvbr90cl39sfhzlzyhv4ym") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.25.0 (c (n "deno_graph") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.13.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)))) (h "1n56gc44wap0hw7173lcziz4raaxrr0gxlbww1pgl9l5xz0gjf9l") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.26.0 (c (n "deno_graph") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.14.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)))) (h "1z35q9z3kv45crawrpq0s108b4xgpdp4rxzxl1pwzys50jaldjz2") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.27.0 (c (n "deno_graph") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.15.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (o #t) (d #t) (k 0)))) (h "195sknmn5qypcfmkm4fsyc8d4p2lv1bcyldxlr9wc3y9djz0n4cr") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.28.0 (c (n "deno_graph") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.16.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1pnrv4r1pl43c8ws8a01c4b5bk9k1xwnyr2giwyfpgy0wlhsbv4d") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.29.0 (c (n "deno_graph") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "=6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1m8q872c3jwjpg0ib4n80ih842gf26wxz9951340s75j0m6wrili") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.30.0 (c (n "deno_graph") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1xry8bqxll82bf670b67rq9pmqd36kp0akgnfidgfp3axrzciwyr") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.31.0 (c (n "deno_graph") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0pvfdpx15zcrmpcllr7h5a7m0iagwsvh51y2yipa7z47arcpi5zr") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.32.0 (c (n "deno_graph") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0f8c95yas4w99v8j9pnklm36yd32vk331cgz7d1jzj2m0087qc9h") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.33.0 (c (n "deno_graph") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.17.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "19nqz514wnyx0bd0iq9rgljmb2y9jmvklq6454n0kxxnq7d7blx8") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.34.0 (c (n "deno_graph") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "11cbf3m8gqdqr0x0lkw4bn6mh1nn5jswp319pxi47inkihh4yr35") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.36.0 (c (n "deno_graph") (v "0.36.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.19.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "0hc0plid0badlfxi0srxil0ancaxmf28380qh05xd3l685cb2l0r") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.37.0 (c (n "deno_graph") (v "0.37.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.1.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1v354jyfy4nzkqq9jxfv2rjxir7dalz8wr1w7ay58j376i9sng94") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.37.1 (c (n "deno_graph") (v "0.37.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.20.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1y55gkrcl3z6n4xhvppdbj6br23jxxmrmm02yp40dbfnb7j1g51l") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.38.0 (c (n "deno_graph") (v "0.38.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1svjy0wk496024a0v5ap65qd74r1hhsyw8dw2adpa6mp4ci6psv5") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.39.0 (c (n "deno_graph") (v "0.39.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.31") (o #t) (d #t) (k 0)))) (h "1408pfd7gxyx6vxa9nfnhqq6rb3s46r25sf6z8sg4b5njf4pbcw7") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.40.0 (c (n "deno_graph") (v "0.40.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.21.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (k 0)))) (h "1rsbfhbnv3cwzsi40lc4jqq4sgzyh6bgx0xvzaxwycg7k977kyl9") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.41.0 (c (n "deno_graph") (v "0.41.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.1") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (k 0)))) (h "0ijs3axdig63vmqiqbr9hgl1jsf4nfdia6ab5xw246ggd7chm648") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.42.0 (c (n "deno_graph") (v "0.42.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.23.1") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (k 0)))) (h "0h1r4s79qd8944k1ln6jihidg613sc8bq8rga7yygdscd6hb8sgl") (f (quote (("wasm" "js-sys" "serde-wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures") ("rust") ("default" "rust"))))))

(define-public crate-deno_graph-0.43.0 (c (n "deno_graph") (v "0.43.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "197rx82pxiqy09c67cwkn8ck680cp780a7gf59an43cm2j5v86zp")))

(define-public crate-deno_graph-0.43.1 (c (n "deno_graph") (v "0.43.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "132pv80c91rxlnlm72id27g9fz5r8sd4650phacd2m4frsh0pzlv")))

(define-public crate-deno_graph-0.43.2 (c (n "deno_graph") (v "0.43.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rfi45xk6qfgqpi2j4m6bg71lncj7f8b7kyfs3ycgfyl2v86731c")))

(define-public crate-deno_graph-0.43.3 (c (n "deno_graph") (v "0.43.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1b7cjjjc4hkl1amn6zryr4gwc3c98l7q9pyn2lvsk777784lyr9v")))

(define-public crate-deno_graph-0.44.0 (c (n "deno_graph") (v "0.44.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1pzfl0mi1vjlb677zab6rygrq0yww17fjslwq04izk4h956png7h")))

(define-public crate-deno_graph-0.44.1 (c (n "deno_graph") (v "0.44.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1qys7qr4pmykpwh8j7lyj6av8ql730f62ci2frwpxzgrpf5gvabm")))

(define-public crate-deno_graph-0.44.2 (c (n "deno_graph") (v "0.44.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rbixx7s3ns02hq08vi912ban7xzbdr6bli3zgar88l52k2bhb0s")))

(define-public crate-deno_graph-0.44.3 (c (n "deno_graph") (v "0.44.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.24.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "037f2ah34mndygir83wdwi37rx4g4fmr0hm8483sysvzyyhjn3jh")))

(define-public crate-deno_graph-0.45.0 (c (n "deno_graph") (v "0.45.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0sz5bbdjshjv54b7g200bd3cr8j798vlwrxz1g6qwnvlx5lpki26")))

(define-public crate-deno_graph-0.45.1 (c (n "deno_graph") (v "0.45.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "03w4kgp1xms3d3fdbxsbpxvn53cy61nzdfksayzyyiqvzmaisgbd")))

(define-public crate-deno_graph-0.46.0 (c (n "deno_graph") (v "0.46.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1l3ix2p369c8cdjx4lvca61wld54zzy8hn6fa5p95rib7hgm7d8z")))

(define-public crate-deno_graph-0.47.0 (c (n "deno_graph") (v "0.47.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0jxajx7n3mxhwyq9rnznm69jn0jpxkiia4zz5xdpcrsagrxr7kdh")))

(define-public crate-deno_graph-0.47.1 (c (n "deno_graph") (v "0.47.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.25.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "18jf4pqhwrzizcrdma3wm0malvsy2n2h5k0q0m0wdq5z79pqk09y")))

(define-public crate-deno_graph-0.48.0 (c (n "deno_graph") (v "0.48.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hmjmyni5irn6pwywa0pkz2a5cpn6lq65hqcyb4aq59082936s2p")))

(define-public crate-deno_graph-0.48.1 (c (n "deno_graph") (v "0.48.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.26.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vvg3dn1d0sqzsk666rfh783pbiydc89camsjvaiv929zrxw3nyw")))

(define-public crate-deno_graph-0.49.0 (c (n "deno_graph") (v "0.49.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1snkxxzzd76jsqz3sv9d3mj56jysbx1nkkh3gjd1mp67yvgpzq57")))

(define-public crate-deno_graph-0.50.0 (c (n "deno_graph") (v "0.50.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "19z69g0rq4jkd4fcmdmfrp6jygh6pajxbrnydsdjazx1jd6jql3k") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.51.0 (c (n "deno_graph") (v "0.51.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.27.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1nah0yic44vgwwg91vrcp6h3xlh1lajhjwkdn8zqb5n6czp8mk34") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.52.0 (c (n "deno_graph") (v "0.52.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.2.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.28.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0m3ksps0wm4hsb9spb185f35qfgiibjrhab3bnc3rs7mjlw79k3a") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.52.1 (c (n "deno_graph") (v "0.52.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.28.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "03d003027c9prg2b5n575gbhrk4ql27aphfrsz924rxsskggc1i5") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.53.0 (c (n "deno_graph") (v "0.53.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0qdx9p0ncg0nn6mkqkf3kmcxgrgyss6d695hvw2g26if4fd74jc9") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.54.0 (c (n "deno_graph") (v "0.54.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rjfkp3ljpdajs50phwmif6sh4ml7ymm00kx80k8lx0kmd7lddyw") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.55.0 (c (n "deno_graph") (v "0.55.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0h4yr3pm02bcbcvip0qkxzywbpcilsvf097fwdxs60i4q7d9777h") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.56.0 (c (n "deno_graph") (v "0.56.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1yyhck5zys5bh58msxqg1zqdsk8a5147rgxmjcnv5hw0bpmhdsin") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.56.1 (c (n "deno_graph") (v "0.56.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0chkxmqb6sm7xiyn5gxg1xxndgnb7p0mda8ajv3xdw2hmmm5b3mm") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.56.2 (c (n "deno_graph") (v "0.56.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ikib27djid4f178flyrdlxzmy76dqi1jjz2kdkixvckcvgq3fsb") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.56.3 (c (n "deno_graph") (v "0.56.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "09zc3q4ds9pqvjkwdymhydnx0qhwhv2w3wvfasaih86kl19xnbgh") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.57.0 (c (n "deno_graph") (v "0.57.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1fl98095kcic0p924x4bf36nf99w0yzxjvrdnpz3p0ph42f3v52v") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.57.1 (c (n "deno_graph") (v "0.57.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.29.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0q29b77qaid1pv6li4lc2dwr42xv9dm2f2c8rb94zg1ykmxf0241") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.58.0 (c (n "deno_graph") (v "0.58.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.30.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0nwk83dlaxrp654bman2s7756qymj3naadbvdybb4wf0ns1jlm4m") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.59.0 (c (n "deno_graph") (v "0.59.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1im4ixk4gv6640287f7ilfj353mssmbka5v4kbpvw0vw1n7w8qw8") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.59.1 (c (n "deno_graph") (v "0.59.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1g420mzm5y9cjwrzlr262g5y47qzrj09xdbhbyi13b54miadbrgd") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.59.2 (c (n "deno_graph") (v "0.59.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "04hg33c4ps0fwahps8q2s9h8sqcqs2gslg7yp3hpspcd3zwq8000") (f (quote (("type_tracing" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.60.0 (c (n "deno_graph") (v "0.60.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1sn8791lxrl8whzkmgf1kl3rylh04mqjv9lr649xkwhfi6jrs1k4") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.0 (c (n "deno_graph") (v "0.61.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.15.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0safk4mq1qlpybb55z7039m28cn65jaqq5k06xvaghnfsc6p1mhv") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.1 (c (n "deno_graph") (v "0.61.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.0") (f (quote ("dep_graph" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.17.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0lbbql66zx46v43p6xifc31y03y4p44790wcnxb1940h3ihhnv07") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.2 (c (n "deno_graph") (v "0.61.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "06ssnkfh7sh0d1gyvf59xk44lfs6ylc7yvvrazrh7alq1vnn8ch6") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.3 (c (n "deno_graph") (v "0.61.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hbpm23sflzqkzjb1vnr626lvgcp4vg3g99gdhx4vzdw2a5gay3h") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.4 (c (n "deno_graph") (v "0.61.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "12xrpfqa49276b4gf8hlx3rlir4lz1p4dkpsx713g68j8cwqg2gx") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.61.5 (c (n "deno_graph") (v "0.61.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1gk8rsrv3vr313khgqf54p5dvlxvdd1g3spd9346s9mk60cnlbik") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.62.0 (c (n "deno_graph") (v "0.62.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "11y214mhpk2qfpv54iasj69hd7n91xzf0ymzci056aypiiaia31b") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.62.1 (c (n "deno_graph") (v "0.62.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "15b182yq2972x995v0g62h7lhk73n4s3fq9lb0x7r31w3r596mjz") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.62.2 (c (n "deno_graph") (v "0.62.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0f2qphh093p75kx2dh8ky3np47lipr96izw2h28czgg0aakxrrnd") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.62.3 (c (n "deno_graph") (v "0.62.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.31.4") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1yvpqd9yaa7qzfb5papblbp55ay5w2f9hsfba4s63cnn4i1xr451") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils"))))))

(define-public crate-deno_graph-0.63.0 (c (n "deno_graph") (v "0.63.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0c8298jw01m9qw5yldb6ppgd9k0bhhf292yvykrg0ad9hir539y9") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.1 (c (n "deno_graph") (v "0.63.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ymb7mjc8izg9f9vlaz5y232cczz8a8vii24mbzncx59fb2sma6x") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.2 (c (n "deno_graph") (v "0.63.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0750k19vxvk5nr0wfz4pddnkaml907ls0grswn0y2yg2b97cwbqv") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.3 (c (n "deno_graph") (v "0.63.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "14lxcxxvglq7m8xm89vbbdcv6dis78q7fn2kpkj7n9kakf91dkyp") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.4 (c (n "deno_graph") (v "0.63.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^1.0.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "11f0n1wh3h6i4qj2cyadalnxbbscl1khk71gshsws2vjvarisxdy") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.5 (c (n "deno_graph") (v "0.63.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1k3cnwqwnjahgwb9mbblswhqazgq5qg7m5r054x5s0mh0vydmr41") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.63.6 (c (n "deno_graph") (v "0.63.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vpdzpighfjv78jf3ams956pq9njp36a0y4spmlvkvy2idq48dsa") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.64.1 (c (n "deno_graph") (v "0.64.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0i4c4qp0j4qaslvf6kr3l2j9hbfbvnw0s3m0gf38an7shkbnmsy0") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.64.2 (c (n "deno_graph") (v "0.64.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.32.0") (f (quote ("dep_analysis" "module_specifier"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1nkjz4sl5lph9wlabv07g9dqdlzpzms0j0iv1d99b4grdlbfy3d6") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.65.0 (c (n "deno_graph") (v "0.65.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1l51bx0jh7d3d1czdgdpmld7wjhwnwjl9941gk1qcli56b61fzmx") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.65.1 (c (n "deno_graph") (v "0.65.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "08q2fsf293ispynhxd3hvpq6ayj8j9n2v19fn957jm0zs86dryh6") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.65.2 (c (n "deno_graph") (v "0.65.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1x4d6v5yqfw6c9207lzqff0zrpn7vcqdpxdvg25r1q4m87d48p8z") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.65.3 (c (n "deno_graph") (v "0.65.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "00jhndhnf3cm0nw07adkd57wby8byd8qksnkxv80m5fzj9zwh4jd") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.66.0 (c (n "deno_graph") (v "0.66.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1igkc3yq2s3hdbf6z8afrly1bl6jhpiqx8yzn5h3br3hbp0cfrwc") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.66.1 (c (n "deno_graph") (v "0.66.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0h6yig6hy36jwyg0jw5kiscqgyl41wr4z1jah5awyvv4ja8jmbaq") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.66.2 (c (n "deno_graph") (v "0.66.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "03r3gv6577jvxs9p8495w0npp595n35m201m0iyfj07v4v9gn3p1") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.67.0 (c (n "deno_graph") (v "0.67.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1yz9njvlp00k1hrsxajkbzgf7wwc2vjlg857kgkjxklbl6xd8v7a") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.68.0 (c (n "deno_graph") (v "0.68.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "19r20xzclfdqb61bg7r5il9p2qi9yq5ww559i59knvpn3bg258a7") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.68.1 (c (n "deno_graph") (v "0.68.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.33.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hlbifkd485xx0zj7qkcy7dqrcvrsqma2hhlyn2w6xlc843kpk45") (f (quote (("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check"))))))

(define-public crate-deno_graph-0.69.0 (c (n "deno_graph") (v "0.69.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bv10l2bjq4k0dv353xlvkqdyc1qrw3cwhpbq0gqnay1pgg8li4q") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.1 (c (n "deno_graph") (v "0.69.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1631wmi5wgkbdqzcv7di3gk9c4q38qni37c8agrz8a60dajf410n") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.2 (c (n "deno_graph") (v "0.69.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.18.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1jws5vxjpijcvsf8mn2caspramm2hp0qi3pzinzfz2alhvvn7wpj") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.3 (c (n "deno_graph") (v "0.69.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "08i21kx0pgbrh4mwj412f60sqg08gy0v8pg1jdz5d5pxzqm9b617") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.4 (c (n "deno_graph") (v "0.69.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hwxkaax1y9hbpbfz31micq2xxkrxh2sl90grx6qa47f702kpj3k") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.5 (c (n "deno_graph") (v "0.69.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "15r898vph74791rd8rq30qs67n3v1crz77qvv7r00hmigvypr7fl") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.6 (c (n "deno_graph") (v "0.69.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0w7nf5s6940zahycv3q4s0jy1zqmngv1b7alx1lh796qr25lzl59") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.7 (c (n "deno_graph") (v "0.69.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1l507cnajm4bn18iy69zvc682zr05rdvrrk147jycrpcdrr5krsj") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.8 (c (n "deno_graph") (v "0.69.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "14ccb5l3z51n0rqsbrshhhb6prl4vndp9wzmiypm3mlfhpl9vcg8") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.9 (c (n "deno_graph") (v "0.69.9") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rzdyv4c23fynmb0sh6bkak1qixb2yfgpn63fmbyzx9s25q0vnw3") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.69.10 (c (n "deno_graph") (v "0.69.10") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.34.1") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0hw5r15v4ffwsp62ldgvlp9km9wcs5f0y8l5jjgn2fdvckw44r0f") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.70.0 (c (n "deno_graph") (v "0.70.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.35.0") (f (quote ("dep_analysis"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ygmjqh308dqsms917144z4a87n6426wslv97mf25rwg8ix65gyb") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.71.0 (c (n "deno_graph") (v "0.71.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.36.0") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "06i6jnvmagqqa6wnryf00lwrxr8a6xrnnmmrhhh9qgn0whhqaxh4") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.71.1 (c (n "deno_graph") (v "0.71.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.36.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rfs9v327r5sizdrhpq6p4g11jkr1hl56k3fpk0v4m2pvbihp3hr") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.71.2 (c (n "deno_graph") (v "0.71.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.36.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1d58ql7jpgrskjdalygyihgmd73s9qy7vbi4xh1kn36sdvxiasqf") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.71.3 (c (n "deno_graph") (v "0.71.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.36.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1yggwrn4x077waagz60xr408wdzyhzfnxz32d14a0wq395h55gya") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.71.5 (c (n "deno_graph") (v "0.71.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.36.2") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0alkmvi52v85lpqn67cj2yc9p5y018q7xq4hlgknfgxkv6j1yql9") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.72.0 (c (n "deno_graph") (v "0.72.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.37.0") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.2.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "12ijkwjzgwgrbgywar2bvdhina04vd11ib0bqhd5p2qa2kv931sh") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.73.1 (c (n "deno_graph") (v "0.73.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.37.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0kiih85crwzxlimprc07n37ddp55hgbnj21x6vdwg0fyz3j26q84") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.0 (c (n "deno_graph") (v "0.74.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.0") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0j5vlakvjf0yx73iqckvwjsgcymd5ajny89lvr4xgvbld9yzmx82") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.1 (c (n "deno_graph") (v "0.74.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0w0gwzkdwbf6nlvnrr5gigvii68xqj45cni8sbgg5a7gc6f1lhz0") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.2 (c (n "deno_graph") (v "0.74.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1z4qwsxy9jasn8r7mx8ixifckrfrbcmr3b2qq1kn50zajx8cja6q") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.3 (c (n "deno_graph") (v "0.74.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ji8z3zy3zxlx2rb3xwfxk95zm6qi5idqmj2ga5qzrszdg7h42ik") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.4 (c (n "deno_graph") (v "0.74.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rbpfm43vrkz8f4446s8bcbgazxm2kcxqvyv2zc66j2s1qq7n3fp") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.74.5 (c (n "deno_graph") (v "0.74.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.4.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0qasdncqv8wyajvbjqfb5h62mznz4sc91xy8kqs57zx4hkaphw4v") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.75.0 (c (n "deno_graph") (v "0.75.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "158sx2z68ap0mflb08kyap6xbf13krnqm7a445c2b1hb9dyynff3") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.75.1 (c (n "deno_graph") (v "0.75.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "17pslblgq8z5fsnpdzzp2i2sl85lsv4vf26lj3knnvdbggd93jh9") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.75.2 (c (n "deno_graph") (v "0.75.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "19nv664nlvyd15n42409f4l0329ppym6rvkph9ba5h48rs3xr3d6") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("default" "fast_check" "tokio_executor"))))))

(define-public crate-deno_graph-0.76.0 (c (n "deno_graph") (v "0.76.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "19mzl4b0h9pn0gbf9xaf024p41c0rkxzy63b3bwjpgvqpady08g0") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("ecosystem_test") ("default" "fast_check" "tokio_executor" "ecosystem_test"))))))

(define-public crate-deno_graph-0.77.0 (c (n "deno_graph") (v "0.77.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "10pcj0r6184plpf4kdks8zpl98arjiqw3r0rhhghd1v0pcwqfjp9") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("ecosystem_test") ("default" "fast_check" "tokio_executor" "ecosystem_test"))))))

(define-public crate-deno_graph-0.77.2 (c (n "deno_graph") (v "0.77.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "data-url") (r "^0.3.0") (d #t) (k 0)) (d (n "deno_ast") (r "^0.38.1") (f (quote ("dep_analysis" "emit"))) (d #t) (k 0)) (d (n "deno_semver") (r "^0.5.4") (d #t) (k 0)) (d (n "deno_terminal") (r "^0.1.1") (d #t) (k 2)) (d (n "deno_unsync") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "file_test_runner") (r "^0.7.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "import_map") (r "^0.19.0") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "monch") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("http2" "charset" "rustls-tls-webpki-roots"))) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("macros" "rt-multi-thread" "sync"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1gial21rk5mllk34yifffxb3nnpndn8nnrmj566r5321smhnyb8r") (f (quote (("wasm_executor") ("tokio_executor" "deno_unsync") ("symbols" "deno_ast/transforms" "deno_ast/visit" "deno_ast/utils") ("fast_check" "symbols" "deno_ast/transpiling" "twox-hash") ("ecosystem_test") ("default" "fast_check" "tokio_executor" "ecosystem_test"))))))

