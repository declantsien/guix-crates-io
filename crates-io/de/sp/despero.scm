(define-module (crates-io de sp despero) #:use-module (crates-io))

(define-public crate-despero-0.0.1 (c (n "despero") (v "0.0.1") (d (list (d (n "ash") (r "^0.37.0") (d #t) (k 0)) (d (n "ash-window") (r "^0.11.0") (d #t) (k 0)) (d (n "bus") (r "^2.3.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "egui") (r "^0.20.1") (d #t) (k 0)) (d (n "egui-winit") (r "^0.20.1") (d #t) (k 0)) (d (n "egui-winit-ash-integration") (r "^0.3.0") (d #t) (k 0)) (d (n "gpu-allocator") (r "^0.21.0") (d #t) (k 0)) (d (n "hecs") (r "^0.7.7") (d #t) (k 0)) (d (n "hecs-hierarchy") (r "^0.11.7") (d #t) (k 0)) (d (n "hecs-schedule") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "mlua") (r "^0.8.6") (f (quote ("lua51"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.2") (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (d #t) (k 0)) (d (n "rapier3d") (r "^0.16.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "readonly") (r "^0.2.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tobj") (r "^3.2.3") (d #t) (k 0)) (d (n "vk-shader-macros") (r "^0.2.8") (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "10hl5i9mnglmd9mi7np112s2fq7g07qrac8r96p9y8v1qzmv99fw")))

(define-public crate-despero-0.1.0 (c (n "despero") (v "0.1.0") (d (list (d (n "ash") (r "^0.37.0") (d #t) (k 0)) (d (n "ash-window") (r "^0.11.0") (d #t) (k 0)) (d (n "collada") (r "^0.15.0") (d #t) (k 0)) (d (n "egui") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "egui-winit-ash-integration") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gpu-allocator") (r "^0.21.0") (d #t) (k 0)) (d (n "hecs") (r "^0.9.1-f") (f (quote ("column-serialize"))) (d #t) (k 0) (p "despero-hecs")) (d (n "hecs-schedule") (r "^0.6.2") (d #t) (k 0) (p "despero-hecs-schedule")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "kira") (r "^0.7.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lz4") (r "^1.24.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.6") (f (quote ("lua51" "vendored"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rapier3d") (r "^0.16.1") (f (quote ("debug-render" "serde-serialize"))) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tobj") (r "^3.2.3") (d #t) (k 0)) (d (n "typetag") (r "^0.2.8") (d #t) (k 0)) (d (n "vk-shader-macros") (r "^0.2.8") (d #t) (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 0)))) (h "1qfnkcsj11lq2bb2w1xwfj4p0bvydridbagfrmbmn2jvpwdmcml4") (f (quote (("default" "egui")))) (s 2) (e (quote (("egui" "dep:egui" "dep:egui-winit" "dep:egui-winit-ash-integration"))))))

