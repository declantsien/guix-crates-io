(define-module (crates-io de ep deep_filter) #:use-module (crates-io))

(define-public crate-deep_filter-0.1.6 (c (n "deep_filter") (v "0.1.6") (d (list (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "079ssrx87qf7bdwjq9lrraihmzawaisrmphly40mzfbjp16dy05k") (f (quote (("transforms" "thiserror" "ndarray") ("default") ("dataset" "thiserror" "ndarray" "hdf5" "rand" "rand_xoshiro" "rayon" "serde_json" "serde" "lewton" "ogg" "hound" "rubato" "bincode"))))))

(define-public crate-deep_filter-0.1.9 (c (n "deep_filter") (v "0.1.9") (d (list (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0553d0xl9jpf3g3djprmrwa24g7l2z9hy85fk9a5gyczni5mczfx") (f (quote (("transforms" "thiserror" "ndarray") ("default") ("dataset" "thiserror" "ndarray" "hdf5" "rand" "rand_xoshiro" "rayon" "serde_json" "serde" "lewton" "ogg" "hound" "rubato" "bincode"))))))

(define-public crate-deep_filter-0.1.10 (c (n "deep_filter") (v "0.1.10") (d (list (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^2.0.1") (d #t) (k 0)) (d (n "rubato") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "097cdbvh18hv2j3hsdwqxzclyd95m0ndm9w739qgqsgxdp636d6m") (f (quote (("transforms" "thiserror" "ndarray") ("default") ("dataset" "thiserror" "ndarray" "hdf5" "rand" "rand_xoshiro" "rayon" "serde_json" "serde" "lewton" "ogg" "hound" "rubato" "bincode"))))))

(define-public crate-deep_filter-0.1.11 (c (n "deep_filter") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (f (quote ("blosc"))) (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rubato") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0ipq5i3l6g4kk37hjnklimphxdb5d9mwx8h759yx6lsnd94m566q") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset" "thiserror" "ndarray" "hdf5" "rand" "rand_xoshiro" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "bincode"))))))

(define-public crate-deep_filter-0.2.0 (c (n "deep_filter") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "roots") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rubato") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("compression"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0f57nnsnyp64hxdwqwfifihi5cw40wdafbxnbrmpnih00k60d0gp") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset_timings") ("dataset" "thiserror" "ndarray" "ndarray-rand" "rand_xoshiro" "hdf5" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "roots" "log") ("cache" "sled" "bincode") ("bin" "anyhow" "ctrlc"))))))

(define-public crate-deep_filter-0.2.1 (c (n "deep_filter") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "roots") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rubato") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("compression"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0jy2kzb7ms3b3pdwqmjdil0vx988fkhzz2w2krm55i7az5qb11jk") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset_timings") ("dataset" "thiserror" "ndarray" "ndarray-rand" "rand_xoshiro" "hdf5" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "roots" "log") ("cache" "sled" "bincode") ("bin" "anyhow" "ctrlc"))))))

(define-public crate-deep_filter-0.2.2 (c (n "deep_filter") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "roots") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rubato") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("compression"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1d6scrd65437hd6mxixnc7hmhjmzsh68a5w2drqj6qj431rc85ca") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset_timings") ("dataset" "thiserror" "ndarray" "ndarray-rand" "rand_xoshiro" "hdf5" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "roots" "log") ("cache" "sled" "bincode") ("bin" "anyhow" "ctrlc"))))))

(define-public crate-deep_filter-0.2.3 (c (n "deep_filter") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "roots") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rubato") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("compression"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0qz4wj4p6mc28sk5vvv0jvsbcp2dpv6n4pl66imrqx1kid4qay1w") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset_timings") ("dataset" "thiserror" "ndarray" "ndarray-rand" "rand_xoshiro" "hdf5" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "roots" "log") ("cache" "sled" "bincode") ("bin" "anyhow" "ctrlc"))))))

(define-public crate-deep_filter-0.2.5 (c (n "deep_filter") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc") (f (quote ("std" "serde"))) (o #t) (k 0)) (d (n "claxon") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "hdf5") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hound") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "lewton") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ogg") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "realfft") (r "^3.0.0") (d #t) (k 0)) (d (n "roots") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.15") (d #t) (k 2)) (d (n "rubato") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("compression"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0p40yfam95c7sgbz9gza4f9n19jppk2n7m1f8p3k5hcj7ddjdca2") (f (quote (("vorbis" "lewton" "ogg") ("transforms" "thiserror" "ndarray") ("flac" "claxon") ("default") ("dataset_timings") ("dataset" "thiserror" "ndarray" "ndarray-rand" "rand_xoshiro" "hdf5" "rayon" "crossbeam-channel" "serde_json" "serde" "hound" "rubato" "roots" "log") ("cache" "sled" "bincode") ("bin" "anyhow" "ctrlc"))))))

