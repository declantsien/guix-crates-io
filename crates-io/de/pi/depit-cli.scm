(define-module (crates-io de pi depit-cli) #:use-module (crates-io))

(define-public crate-depit-cli-0.1.0 (c (n "depit-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "camino") (r "^1") (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "color" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "depit") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "fs" "macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("display" "parse"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json" "std"))) (k 0)) (d (n "wit-bindgen") (r "^0.4") (f (quote ("default"))) (k 2)) (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 1)) (d (n "depit") (r "^0.1") (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "macros" "rt-multi-thread"))) (k 1)))) (h "0c8fg6g6hrpcvmcc9gqh5jl83s74wgzpgq42qz4sw36zkh9nmzrk")))

(define-public crate-depit-cli-0.2.0 (c (n "depit-cli") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "camino") (r "^1") (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "color" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "depit") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "fs" "macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("display" "parse"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json" "std"))) (k 0)) (d (n "wit-bindgen") (r "^0.4") (f (quote ("default"))) (k 2)))) (h "0vhasqlax4i2dvmnsg3319akqf74bmpdvwqynhlgw7qqbrsg2b61")))

(define-public crate-depit-cli-0.2.1 (c (n "depit-cli") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "camino") (r "^1") (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "color" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "depit") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "fs" "macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("display" "parse"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json" "std"))) (k 0)) (d (n "wit-bindgen") (r "^0.4") (f (quote ("default"))) (k 2)))) (h "0v54lxb6xf4wxdrgah4dnf0j55jhdmgwcc0bhszwipbdckbl5l8x")))

(define-public crate-depit-cli-0.2.2 (c (n "depit-cli") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "camino") (r "^1") (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "color" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "depit") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "fs" "macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("display" "parse"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json" "std"))) (k 0)) (d (n "wit-bindgen") (r "^0.4") (f (quote ("default"))) (k 2)))) (h "0p6lh32bla7swj3mfhfr0v7w7sklvzdbwkynlhzbwq65dz0g0w0z")))

