(define-module (crates-io de pi depict-parse) #:use-module (crates-io))

(define-public crate-depict-parse-0.1.0 (c (n "depict-parse") (v "0.1.0") (d (list (d (n "depict") (r "^0.1") (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "miette") (r "^4") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (f (quote ("traced-error"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1ykjk4sp6299vpnkvvmzprj4g3kk2x30q9zc7qi9wk2wpdl3w1cp")))

(define-public crate-depict-parse-0.2.0 (c (n "depict-parse") (v "0.2.0") (d (list (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "depict") (r "^0.2") (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "miette") (r "^4") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (f (quote ("traced-error"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "09cvbpzpnyggl73gwjy6g2rqq4kbq42dk6n3fhdk5hhvnzpsf7lc")))

(define-public crate-depict-parse-0.3.0 (c (n "depict-parse") (v "0.3.0") (d (list (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "depict") (r "^0.3") (f (quote ("osqp"))) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "miette") (r "^4") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (f (quote ("traced-error"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1fynr67yicpkl5y6zki5v6k2incwx2wjww7hj809vsxqxjw9wwgx")))

