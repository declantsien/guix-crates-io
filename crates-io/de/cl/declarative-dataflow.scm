(define-module (crates-io de cl declarative-dataflow) #:use-module (crates-io))

(define-public crate-declarative-dataflow-0.1.0 (c (n "declarative-dataflow") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.6") (d #t) (k 0)) (d (n "jemallocator") (r "^0.1.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-rational") (r "^0.2") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "timely") (r "^0.9.0") (f (quote ("bincode"))) (d #t) (k 0)) (d (n "timely_sort") (r "^0.1.6") (d #t) (k 0)))) (h "15fiqjkd522z68cgh16d58a95nn1pmz2nj77fff6s8iqlv5kp1ys") (f (quote (("set-semantics") ("real-time") ("json-source" "serde_json" "chrono") ("csv-source" "csv" "chrono"))))))

(define-public crate-declarative-dataflow-0.2.0 (c (n "declarative-dataflow") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.10.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.6") (d #t) (k 2)) (d (n "fixed") (r "^0.3.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-rational") (r "^0.2") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "timely") (r "^0.10.0") (f (quote ("bincode"))) (d #t) (k 0)) (d (n "timely_sort") (r "^0.1.6") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0b6s550jxmlijr1rpksvs415q2zm6ps3k48s7i3qqw6xiwh7f8c3") (f (quote (("set-semantics") ("real-time") ("real" "fixed") ("json-source" "serde_json" "chrono") ("graphql" "graphql-parser" "serde_json") ("csv-source" "csv" "chrono"))))))

