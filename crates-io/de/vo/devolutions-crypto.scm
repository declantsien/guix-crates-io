(define-module (crates-io de vo devolutions-crypto) #:use-module (crates-io))

(define-public crate-devolutions-crypto-0.2.0 (c (n "devolutions-crypto") (v "0.2.0") (d (list (d (n "aead") (r "^0.1.1") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.2.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (f (quote ("no_cc"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6.4") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.54") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.5.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "1imqnr0wwncvvanl9djidirn4xn5d752mvhbhhk8wj4n39kaak8c")))

(define-public crate-devolutions-crypto-0.3.0 (c (n "devolutions-crypto") (v "0.3.0") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.32") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "047iq13xdp9xdcwn95n4glkq7apjp824jc9jk87fignzzc02r9qr")))

(define-public crate-devolutions-crypto-0.3.2 (c (n "devolutions-crypto") (v "0.3.2") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.32") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "0fzhjz8hg5a784h1a8macp5afxjkayh93wbbkii3ca5jnjywd9gx")))

(define-public crate-devolutions-crypto-0.3.3 (c (n "devolutions-crypto") (v "0.3.3") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.32") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "0w8cmv8six30dk9kd7nk3yvwqh7fdy5xg5a89rckm349q25yqihx")))

(define-public crate-devolutions-crypto-0.4.0 (c (n "devolutions-crypto") (v "0.4.0") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3.1") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "sharks") (r "^0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "15bwrz00lp00icbjbdmfyq4919mf6w2f5f76vbyz1v1ybbd51is8") (f (quote (("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.5.0 (c (n "devolutions-crypto") (v "0.5.0") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.4.1") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.36") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.4.3") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "sharks") (r "^0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.59") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "1iphq8i0iwjayh36djc1xm65916fbr9rybrky9xp6nng2wy5248b") (f (quote (("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.5.1 (c (n "devolutions-crypto") (v "0.5.1") (d (list (d (n "aead") (r "^0.2.0") (d #t) (k 0)) (d (n "aes") (r "^0.3.2") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.4.1") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.36") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.4.3") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "sharks") (r "^0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.59") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "1c47r1c77k4vpzf3raiyxia1hmpfa8qmqq6jy7pg8j656fzbsv3w") (f (quote (("fuzz" "arbitrary") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.6.0 (c (n "devolutions-crypto") (v "0.6.0") (d (list (d (n "aead") (r "^0.3.1") (d #t) (k 0)) (d (n "aes") (r "^0.4.0") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "block-modes") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.5.1") (d #t) (k 0)) (d (n "hmac") (r "^0.8.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.5.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-argon2") (r "^0.8.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scrypt") (r "^0.3.0") (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "sharks") (r "^0.4.1") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "06sslfqx19zb9b3ly98152hygqa831plv6dhlj6mfvxzm6177km4") (f (quote (("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.6.1 (c (n "devolutions-crypto") (v "0.6.1") (d (list (d (n "aead") (r "^0.3.1") (d #t) (k 0)) (d (n "aes") (r "^0.4.0") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "block-modes") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.5.1") (d #t) (k 0)) (d (n "hmac") (r "^0.8.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.5.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (k 0)) (d (n "pyo3") (r "^0.11.1") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-argon2") (r "^0.8.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scrypt") (r "^0.3.0") (k 0)) (d (n "sha2") (r "^0.9.0") (d #t) (k 0)) (d (n "sharks") (r "^0.4.1") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle") (r "^2.2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.60") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.0") (d #t) (k 0)))) (h "1ymm7gw0bn1iqfv9ns4n6k039gym5m9bx05v8gvjzpl36w8ay26i") (f (quote (("python" "pyo3") ("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.7.1 (c (n "devolutions-crypto") (v "0.7.1") (d (list (d (n "aead") (r "^0.4.2") (d #t) (k 0)) (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getrandom1") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0) (p "getrandom")) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.8.0") (k 0)) (d (n "pyo3") (r "^0.14.1") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scrypt") (r "^0.7.0") (k 0)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sharks") (r "^0.5.0") (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21.1") (d #t) (k 0)) (d (n "subtle") (r "^2.4.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^1.1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.2.0") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1.0.1") (d #t) (k 0)))) (h "0qpvd41p0qzj5vqh6llv1r1wbp7fv1vbjfyr1lw34ld958n0ipyg") (f (quote (("wbindgen" "wasm-bindgen" "js-sys") ("python" "pyo3") ("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.8.0 (c (n "devolutions-crypto") (v "0.8.0") (d (list (d (n "aead") (r "^0.4") (d #t) (k 0)) (d (n "aes") (r "^0.7") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getrandom1") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0) (p "getrandom")) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9") (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scrypt") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sharks") (r "^0.5") (d #t) (k 0)) (d (n "strum") (r "^0.22") (d #t) (k 0)) (d (n "strum_macros") (r "^0.22") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^1") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1") (d #t) (k 0)))) (h "1naxgpxdi4n0vdnpp6py8k69jm1rrsj91s3jlq3nbf252kwlyi8j") (f (quote (("wbindgen" "wasm-bindgen" "js-sys") ("python" "pyo3") ("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.8.1 (c (n "devolutions-crypto") (v "0.8.1") (d (list (d (n "aead") (r "^0.4") (d #t) (k 0)) (d (n "aes") (r "^0.7") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "getrandom1") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0) (p "getrandom")) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.50") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9") (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scrypt") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sharks") (r "^0.5") (d #t) (k 0)) (d (n "strum") (r "^0.22") (d #t) (k 0)) (d (n "strum_macros") (r "^0.22") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.70") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^1") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)) (d (n "zeroize_derive") (r "^1") (d #t) (k 0)))) (h "0r08db4wfp5il8zcwmpgvnwzm8ww59431wqmmbyk6wk5zw7wx5g6") (f (quote (("wbindgen" "wasm-bindgen" "js-sys") ("python" "pyo3") ("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

(define-public crate-devolutions-crypto-0.9.0 (c (n "devolutions-crypto") (v "0.9.0") (d (list (d (n "aead") (r "^0.5") (d #t) (k 0)) (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("block-padding" "alloc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch=\"wasm32\")") (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (o #t) (d #t) (t "cfg(target_arch=\"wasm32\")") (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12") (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (t "cfg(target_arch=\"wasm32\")") (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (t "cfg(not(target_arch=\"wasm32\"))") (k 0)) (d (n "scrypt") (r "^0.11") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch=\"wasm32\")") (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sharks") (r "^0.5") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (o #t) (d #t) (t "cfg(target_arch=\"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch=\"wasm32\")") (k 2)) (d (n "x25519-dalek") (r "^2.0.0") (f (quote ("static_secrets"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "0lhk00pbk6m458skbjpn09aq05s1h9g729cjnz82ljf8kgimxh7w") (f (quote (("wbindgen" "wasm-bindgen" "serde-wasm-bindgen" "js-sys") ("python" "pyo3") ("fuzz" "arbitrary" "sharks/fuzzing") ("ffi") ("default"))))))

