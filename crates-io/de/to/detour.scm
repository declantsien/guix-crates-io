(define-module (crates-io de to detour) #:use-module (crates-io))

(define-public crate-detour-0.1.0 (c (n "detour") (v "0.1.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.0.7") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "volatile_cell") (r "^1.0.0") (d #t) (k 2)))) (h "0mmcah71j97r03793pvpqi70wjcr6ag08pnpshnsm375a99pr56k") (f (quote (("static") ("default" "static"))))))

(define-public crate-detour-0.1.1 (c (n "detour") (v "0.1.1") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.0.7") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "volatile_cell") (r "^1.0.0") (d #t) (k 2)))) (h "10i7yia32i2hq2r7div9iz1icprg3sfmgrb7snbsbj7haj3jv9wf") (f (quote (("static") ("default" "static"))))))

(define-public crate-detour-0.2.0 (c (n "detour") (v "0.2.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (k 0)) (d (n "generic-array") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.0.9") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "volatile_cell") (r "^1.0.0") (d #t) (k 2)))) (h "0v8ii7wwfdlx6rh64yphgbgnkp3xwj33pw8vh0cc9zavsjf6xh76") (f (quote (("static") ("default" "static"))))))

(define-public crate-detour-0.3.0 (c (n "detour") (v "0.3.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (k 0)) (d (n "generic-array") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.0.9") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "volatile_cell") (r "^1.0.0") (d #t) (k 2)))) (h "1vcxdv9v8qjaclg3gg2sdy60jbj8qnzdylidcbi2zz0g7jkv4fa6") (f (quote (("static") ("default" "static"))))))

(define-public crate-detour-0.4.0 (c (n "detour") (v "0.4.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.2.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.1") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "tap") (r "^0.2.1") (d #t) (k 0)))) (h "04vvl7248syf0cir5h3gwisixjmw10h43ls41j66zy8pbzl2847f") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.4.1 (c (n "detour") (v "0.4.1") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.2.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.1") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "tap") (r "^0.2.1") (d #t) (k 0)))) (h "0bsyk7vk6yrd4lkq8lyznh3cg4ja0qzmkmlapqa1whrnj844gp7s") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.5.0 (c (n "detour") (v "0.5.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.2.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^0.3") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "tap") (r "^0.2.1") (d #t) (k 0)))) (h "0q8f2y4242mixkqff21rh2vmd1mgin4c9xz2lmvz69c02sxc9mai") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.6.0 (c (n "detour") (v "0.6.0") (d (list (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "libudis86-sys") (r "^0.2.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "mmap-fixed") (r "^0.1") (d #t) (k 0)) (d (n "region") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "tap") (r "^0.3.0") (d #t) (k 0)))) (h "12fk8nhzwdnp50zngwzsn5nzdm8iq40a5hpdzypaa95fsk5nnd24") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.7.0 (c (n "detour") (v "0.7.0") (d (list (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.12.0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mmap") (r "^0.1.0") (d #t) (k 0) (p "mmap-fixed")) (d (n "region") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-pool") (r "^0.3.4") (d #t) (k 0)) (d (n "udis") (r "^0.2.0") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0) (p "libudis86-sys")) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "windef" "winnt"))) (d #t) (t "cfg(windows)") (k 2)))) (h "0crh47ylnkjr705k4n578kbvhwjpj8ap5xi1mc53fc77cjaycg1a") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.7.1 (c (n "detour") (v "0.7.1") (d (list (d (n "cfg-if") (r "^0.1.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2.2") (d #t) (t "cfg(windows)") (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mmap") (r "^0.1.0") (d #t) (k 0) (p "mmap-fixed")) (d (n "region") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-pool") (r "^0.4.1") (d #t) (k 0)) (d (n "udis") (r "^0.2.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0) (p "libudis86-sys")) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "windef" "winnt"))) (d #t) (t "cfg(windows)") (k 2)))) (h "1lyhg31gsaqm6w0xz6lmriz8k5yazz0s2g5fafp2467zqax9b187") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.8.0 (c (n "detour") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mmap") (r "^0.1.0") (d #t) (k 0) (p "mmap-fixed")) (d (n "region") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-pool") (r "^0.4.1") (d #t) (k 0)) (d (n "udis") (r "^0.2.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0) (p "libudis86-sys")) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "windef" "winnt" "libloaderapi"))) (d #t) (t "cfg(windows)") (k 2)))) (h "1x1a7gc9w5fy1wp5l1k9fn5rfay2aapp3rk9d9lgpp9pm9b1m43c") (f (quote (("nightly") ("default" "nightly"))))))

(define-public crate-detour-0.8.1 (c (n "detour") (v "0.8.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mmap") (r "^0.1.0") (d #t) (k 0) (p "mmap-fixed")) (d (n "region") (r "^2.0.0") (d #t) (k 0)) (d (n "slice-pool") (r "^0.4.1") (d #t) (k 0)) (d (n "udis") (r "^0.2.1") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0) (p "libudis86-sys")) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "windef" "winnt" "libloaderapi"))) (d #t) (t "cfg(windows)") (k 2)))) (h "1ffp6hkvklbskf3nn790xkg1b2khx9v3bh90jghkdhrvrjmkzj7k") (f (quote (("nightly") ("default" "nightly"))))))

