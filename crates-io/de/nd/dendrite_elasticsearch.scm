(define-module (crates-io de nd dendrite_elasticsearch) #:use-module (crates-io))

(define-public crate-dendrite_elasticsearch-0.1.0 (c (n "dendrite_elasticsearch") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.8.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.4.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "187rkfpzxccpbi89bxr6zyqn2klj6b890dga9s0afjajil0bvgi7")))

(define-public crate-dendrite_elasticsearch-0.2.0 (c (n "dendrite_elasticsearch") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.9.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.4.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "1spmwx1wxgwjbqn276qq3wn5yhnn95qv9vxpl39zic89jgs5f2cl")))

(define-public crate-dendrite_elasticsearch-0.2.2 (c (n "dendrite_elasticsearch") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.10.1") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.4.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "1xayd0jjli6nd17rrivbqij7pkh9h926k67zz345dim1i95sjy1c")))

(define-public crate-dendrite_elasticsearch-0.3.0 (c (n "dendrite_elasticsearch") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.11.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "0g6cv518b7icvhm4zq92djjpv84xwljxmqc4x2lqzwqzz22zhrq2")))

(define-public crate-dendrite_elasticsearch-0.4.0 (c (n "dendrite_elasticsearch") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.12.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "0fmajkivzs72n0lyglmylp5dzgvfp2s5g32x4s1089p4msp3waqz")))

(define-public crate-dendrite_elasticsearch-0.5.0 (c (n "dendrite_elasticsearch") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.13.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "1p8shag52knjqh3ym4645r2q0vqlfglg4dcbrjh9gafg5xnlyp0v")))

(define-public crate-dendrite_elasticsearch-0.6.0 (c (n "dendrite_elasticsearch") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.14.0") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "0ara9y2bhnhn51z4x5wii0l40s22sm4jj79bv87siani695h0a8h")))

(define-public crate-dendrite_elasticsearch-0.6.1 (c (n "dendrite_elasticsearch") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "dendrite_lib") (r "^0.14.1") (d #t) (k 0)) (d (n "dendrite_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "elasticsearch") (r "^7.14.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "~1") (d #t) (k 0)) (d (n "serde_json") (r "~1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)))) (h "1ls9fyqfpjc9kwf5i2z9xayipjwcg4mr1d340l2bl8s4m1ry9g21")))

