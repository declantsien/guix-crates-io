(define-module (crates-io de fm defmt-decoder) #:use-module (crates-io))

(define-public crate-defmt-decoder-0.1.0 (c (n "defmt-decoder") (v "0.1.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "^0.1.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)))) (h "1m931v0zd8wypgbk8dqjdygzl94qamvv2vqmvban43ld720gs7m4") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.1.1 (c (n "defmt-decoder") (v "0.1.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "^0.1.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)))) (h "058l0xf3d4p4l29w4qj955maz1vj8vr1cj5iyfs99hwbvgzn56d8") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.1.2 (c (n "defmt-decoder") (v "0.1.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "^0.1.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)))) (h "1wn63shi5bhaja1flmm1fk4p5ccf00bs270h7mazmbc715ws1gm4") (f (quote (("unstable")))) (y #t)))

(define-public crate-defmt-decoder-0.1.3 (c (n "defmt-decoder") (v "0.1.3") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "^0.1.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)))) (h "1dm7c7hkbgxs7srdsyv3dmx9viy4jc5vh0np2mj7cnq7yg35gf0g") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.1.4 (c (n "defmt-decoder") (v "0.1.4") (d (list (d (n "byteorder") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "colored") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r ">=0.1.0, <0.2.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "leb128") (r ">=0.2.4, <0.3.0") (d #t) (k 0)) (d (n "ryu") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "semver") (r ">=0.11.0, <0.12.0") (d #t) (k 1)))) (h "065lpy0pslvw8qljs68gg03dzx6143ci9p390368pswhf2w296by") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.2.0 (c (n "defmt-decoder") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.2.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.22.0") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1cwsigbky83x47zg56ks2bhk2hnjkv5ki7fl4n9r14811gc5x805") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.2.1 (c (n "defmt-decoder") (v "0.2.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.2.1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.23.0") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0lc0011qrprfg40k2bdmh128yjzcgbndvzzgg1r8icdxr8rxiph6") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.2.2 (c (n "defmt-decoder") (v "0.2.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.2.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.23") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "12hksmzvl9f1lvxz1lhhbp41y4q7a1sgb4x4lhmdp0aangkd9kgq") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.0 (c (n "defmt-decoder") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2") (d #t) (k 0)) (d (n "gimli") (r "^0.24") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.25") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "1n9rphz68rcp6ymrpnqrw851rfvjwy8cii65xxcj8b5lkc95av9j") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.1 (c (n "defmt-decoder") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.27") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0i38mkygqqc2zqf3zl2zg1fkznxv2jgvhri9bcz42qf4cr9pdmd7") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.2 (c (n "defmt-decoder") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.27") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)))) (h "1dn88wgq7nd6rw3daqf33l27ppni5iax1bvbfk0l9q4mbnzs86gn") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.3 (c (n "defmt-decoder") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc" "clock"))) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "difference") (r "^2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.29") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)))) (h "0m0jvnwv5qfs8gh7mmwzm379vpi4gfxgf4flr9zvxh9j00l0a51x") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.4 (c (n "defmt-decoder") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.27") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.30") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "184hhw3c520ircrzkfxsdkfbfdzhvwr2my28br6cn5wg1j2b0hnd") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.5 (c (n "defmt-decoder") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.27") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.30") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "0dlq9cpv3sv23zn9hrzhqpq9wksznf8irpscj71dw39a5kgzdzvk") (f (quote (("unstable")))) (y #t)))

(define-public crate-defmt-decoder-0.3.6 (c (n "defmt-decoder") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.27") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.30") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "1ph27l4xxqmq1ri1vfpwlwfazy1j31chx9a3k96i7lfp2jq6chr7") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.7 (c (n "defmt-decoder") (v "0.3.7") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.27") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "object") (r "^0.30") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "1sbbh23k2cm3mgh7qbw6797qd3wyx8li7zfgipwq6rvdgds2nsqj") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.8 (c (n "defmt-decoder") (v "0.3.8") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.27") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "object") (r "^0.31") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "0i2hjj1rhlj0i43qaas5hfa3xbb4qq3i67b449nmwh1717glnjb9") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.9 (c (n "defmt-decoder") (v "0.3.9") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "object") (r "^0.32") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "0h4if1avnb0l10cwgil53m1mq8wv5jwk50s917kgrzdfzi8ckj2w") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.10 (c (n "defmt-decoder") (v "0.3.10") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.4") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "object") (r "^0.32") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "1ynz07k8g0lb32cyxnvix2z94xb04l43k521qjm5gbd0n97rxzgd") (f (quote (("unstable"))))))

(define-public crate-defmt-decoder-0.3.11 (c (n "defmt-decoder") (v "0.3.11") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "defmt-json-schema") (r "^0.1") (d #t) (k 0)) (d (n "defmt-parser") (r "=0.3.4") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "dissimilar") (r "^1") (d #t) (k 0)) (d (n "gimli") (r "^0.29") (f (quote ("read" "std"))) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "object") (r "^0.35") (f (quote ("read_core" "elf" "std"))) (k 0)) (d (n "ryu") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("alloc" "formatting" "large-dates" "macros"))) (k 0)))) (h "1kyfqw49a8ivdl9g7lan4mnlajjdfwgljq5s01vva0r237r59fhn") (f (quote (("unstable"))))))

