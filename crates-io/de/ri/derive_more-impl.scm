(define-module (crates-io de ri derive_more-impl) #:use-module (crates-io))

(define-public crate-derive_more-impl-1.0.0-beta.1 (c (n "derive_more-impl") (v "1.0.0-beta.1") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0c2y6vw5pqh320casslhm495fw7kbj8i4qzdas6qbad9gwm4j5hb") (f (quote (("try_into" "syn/extra-traits") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref") ("as_mut") ("add_assign") ("add")))) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.65.0")))

(define-public crate-derive_more-impl-1.0.0-beta.2 (c (n "derive_more-impl") (v "1.0.0-beta.2") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0ai4pg8403wak346f631naxdr3m9w48m1gilf16gvv2nli1fwnir") (f (quote (("try_into" "syn/extra-traits") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("full" "add" "add_assign" "as_mut" "as_ref" "constructor" "debug" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "mul" "mul_assign" "not" "sum" "try_into" "try_unwrap" "unwrap") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref") ("as_mut") ("add_assign") ("add")))) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.65.0")))

(define-public crate-derive_more-impl-1.0.0-beta.3 (c (n "derive_more-impl") (v "1.0.0-beta.3") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0cpqqfxvlhdjwibnzr95sfzmjvysl62lpki8w8mkasc05871wm6z") (f (quote (("try_into" "syn/extra-traits") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("full" "add" "add_assign" "as_mut" "as_ref" "constructor" "debug" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "mul" "mul_assign" "not" "sum" "try_into" "try_unwrap" "unwrap") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref") ("as_mut") ("add_assign") ("add")))) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.65.0")))

(define-public crate-derive_more-impl-1.0.0-beta.4 (c (n "derive_more-impl") (v "1.0.0-beta.4") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "1x1jlr36rlajlnvbbjr4iv3ig62vnwnip3fvmmw915xi35lil84i") (f (quote (("try_into" "syn/extra-traits") ("try_from") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("full" "add" "add_assign" "as_ref" "constructor" "debug" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "mul" "mul_assign" "not" "sum" "try_from" "try_into" "try_unwrap" "unwrap") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref" "syn/extra-traits" "syn/visit") ("add_assign") ("add")))) (y #t) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.72.0")))

(define-public crate-derive_more-impl-1.0.0-beta.5 (c (n "derive_more-impl") (v "1.0.0-beta.5") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "07f50cz00hsjsi42cm5cjw4mjch1zk3sx5sgf2015ma82rnhzpmf") (f (quote (("try_into" "syn/extra-traits") ("try_from") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("full" "add" "add_assign" "as_ref" "constructor" "debug" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "mul" "mul_assign" "not" "sum" "try_from" "try_into" "try_unwrap" "unwrap") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref" "syn/extra-traits" "syn/visit") ("add_assign") ("add")))) (y #t) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.72.0")))

(define-public crate-derive_more-impl-1.0.0-beta.6 (c (n "derive_more-impl") (v "1.0.0-beta.6") (d (list (d (n "convert_case") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (o #t) (d #t) (k 1)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0vkjlm18xnaxyc6vaxw3lpr3xqn3zi21ikqgxzkqrifpfac3xfib") (f (quote (("try_into" "syn/extra-traits") ("try_from") ("sum") ("not" "syn/extra-traits") ("mul_assign" "syn/extra-traits") ("mul" "syn/extra-traits") ("into_iterator") ("into" "syn/extra-traits") ("index_mut") ("index") ("full" "add" "add_assign" "as_ref" "constructor" "debug" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "mul" "mul_assign" "not" "sum" "try_from" "try_into" "try_unwrap" "unwrap") ("from_str") ("from" "syn/extra-traits") ("error" "syn/extra-traits") ("deref_mut") ("deref") ("default") ("constructor") ("as_ref" "syn/extra-traits" "syn/visit") ("add_assign") ("add")))) (s 2) (e (quote (("unwrap" "dep:convert_case") ("try_unwrap" "dep:convert_case") ("testing-helpers" "dep:rustc_version") ("is_variant" "dep:convert_case") ("display" "syn/extra-traits" "dep:unicode-xid") ("debug" "syn/extra-traits" "dep:unicode-xid")))) (r "1.72.0")))

