(define-module (crates-io de xt dexter-router) #:use-module (crates-io))

(define-public crate-dexter-router-1.0.0 (c (n "dexter-router") (v "1.0.0") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.5.0") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 0)) (d (n "cw2") (r "^1.0.1") (d #t) (k 0)) (d (n "cw20") (r "^1.0.1") (d #t) (k 0)) (d (n "cw20") (r "^1.0.1") (d #t) (k 2)) (d (n "cw20-base") (r "^1.0.1") (f (quote ("library"))) (d #t) (k 0)) (d (n "dexter") (r "^1.3.0") (k 0)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0jq9srama3m1w085vdyrrdpjclsngglq4jfcas87z63xxx9253jr") (f (quote (("backtraces" "cosmwasm-std/backtraces"))))))

(define-public crate-dexter-router-1.1.0 (c (n "dexter-router") (v "1.1.0") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.5.0") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 0)) (d (n "cw2") (r "^1.0.1") (d #t) (k 0)) (d (n "cw20") (r "^1.0.1") (d #t) (k 0)) (d (n "cw20") (r "^1.0.1") (d #t) (k 2)) (d (n "cw20-base") (r "^1.0.1") (f (quote ("library"))) (d #t) (k 0)) (d (n "dexter") (r "^1.4.0") (k 0)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "10lklrc4xx8b3c8djh7qh9mi8sqyz4308nx0pbabf0cvfg0ni7j7") (f (quote (("backtraces" "cosmwasm-std/backtraces"))))))

