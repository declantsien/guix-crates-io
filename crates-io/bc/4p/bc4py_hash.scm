(define-module (crates-io bc #{4p}# bc4py_hash) #:use-module (crates-io))

(define-public crate-bc4py_hash-0.1.0 (c (n "bc4py_hash") (v "0.1.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "146ziagh62mzdkrk2yc0sfhrv78x4yjg9p30cscq3v5qvlqca34c")))

(define-public crate-bc4py_hash-0.1.1 (c (n "bc4py_hash") (v "0.1.1") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "etcommon-bigint") (r "^0.2.10") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "123jzbgbdxhc1h3b50ksiski3vcjcw3j0nnsngsv4kn5fb7hi5vk")))

(define-public crate-bc4py_hash-0.1.2 (c (n "bc4py_hash") (v "0.1.2") (d (list (d (n "blake2b_simd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "etcommon-bigint") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0pyij98slvh0nry3yx41xckx7ml6n8zwylg1l5y2mfz8x5whrn9k") (f (quote (("progress-bar") ("poc" "regex" "etcommon-bigint" "blake2b_simd") ("hashs" "libc") ("default"))))))

(define-public crate-bc4py_hash-0.1.3 (c (n "bc4py_hash") (v "0.1.3") (d (list (d (n "blake2b_simd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "etcommon-bigint") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "08x79761jks2kidazzsg1gjq89mdpw9grbnm9zyz60y2c8gm93ji") (f (quote (("progress-bar") ("poc" "regex" "etcommon-bigint" "blake2b_simd") ("hashs" "libc") ("default" "hashs" "poc" "progress-bar"))))))

