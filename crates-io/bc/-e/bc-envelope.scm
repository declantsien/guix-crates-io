(define-module (crates-io bc -e bc-envelope) #:use-module (crates-io))

(define-public crate-bc-envelope-0.1.0 (c (n "bc-envelope") (v "0.1.0") (d (list (d (n "bc-components") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.1") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1k3g20qk01552madcf9y9vc3m540f9sf6k7cysa17gxgcnvc5lkj")))

(define-public crate-bc-envelope-0.2.0 (c (n "bc-envelope") (v "0.2.0") (d (list (d (n "bc-components") (r "^0.2.1") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.4") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "18frvkkipc6kfpvgczpym2x385qjsrw6rqxviznm005xdr7j6ail")))

(define-public crate-bc-envelope-0.2.1 (c (n "bc-envelope") (v "0.2.1") (d (list (d (n "bc-components") (r "^0.2.1") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.4") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0j6mv0l2dw36v5kir66ivhm33ycg5r90k5dl2bgmypwy7bv8w3n2")))

(define-public crate-bc-envelope-0.3.0 (c (n "bc-envelope") (v "0.3.0") (d (list (d (n "bc-components") (r "^0.2.1") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.4") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "09fq786hgnailsyi0j0cmfbp059bvfprjfrx7szk8d9wszgfyva8")))

(define-public crate-bc-envelope-0.3.1 (c (n "bc-envelope") (v "0.3.1") (d (list (d (n "bc-components") (r "^0.2.2") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.5") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1h1bmkd14w8i8bm6vs25n8sd1aklb4ljyd42i2cw7ymp3m3jjria")))

(define-public crate-bc-envelope-0.3.2 (c (n "bc-envelope") (v "0.3.2") (d (list (d (n "bc-components") (r "^0.2.2") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.5") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1wn0iqhgzh9irsm6787kz1qv4g110vgphqn7gg1r2z6sj91df3fq")))

(define-public crate-bc-envelope-0.4.0 (c (n "bc-envelope") (v "0.4.0") (d (list (d (n "bc-components") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.3") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.5") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "19338hdncvdszjkwclici4vcmzz0ri7bsdywij4r39063h78n6wg")))

(define-public crate-bc-envelope-0.4.1 (c (n "bc-envelope") (v "0.4.1") (d (list (d (n "bc-components") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.1.4") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.5") (d #t) (k 0)) (d (n "dcbor") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0rj2fqy29r1jrb96rc4zhk875f2n7p9qlmvizyv3w9ad650mc0cl")))

(define-public crate-bc-envelope-0.5.0 (c (n "bc-envelope") (v "0.5.0") (d (list (d (n "bc-components") (r "^0.4.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.1.7") (d #t) (k 0)) (d (n "dcbor") (r "^0.8.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "04ivqck4x59jbgqqxpjwrjjb2x47snv1ah01hmw5gamm01r30pm2")))

(define-public crate-bc-envelope-0.6.0 (c (n "bc-envelope") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.5.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1j3ykywpxy8ygdb48jqlrmi7mrplgsncxlfqcdpymwdkc97bzvpd")))

(define-public crate-bc-envelope-0.7.0 (c (n "bc-envelope") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.5.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1m98nar2rivs7mfddgxc9n18wml40zzxmwa02i0vvi9iahg88msj") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "compress" "encrypt" "expression" "known_value" "recipient" "salt" "signature" "sskr" "types") ("compress"))))))

(define-public crate-bc-envelope-0.8.0 (c (n "bc-envelope") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.5.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.9.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0fc009ll9sc4nz1p5v8ylvg1gfqj6rwic6diay0yzpf5qvf7ck4f") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.9.0 (c (n "bc-envelope") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.5.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.9.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1qqq0h0ky2q8n1lb2karxkx4ala60icdyk5ami1sv3qw4xk2cl6l") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.10.0 (c (n "bc-envelope") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.5.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.9.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "02mwrdzfbkn94m5a3j8kmf2w9zvh0g5r0hx04bjdn44i9j9d6ygw") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.11.0 (c (n "bc-envelope") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.6.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.1") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1j93r9yzbq7rz2g79rxab68xlr8krd73lnvqq017zmfx1n28326f") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.12.0 (c (n "bc-envelope") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.7.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.1") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.11.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "15vxxid0923sbn6q85hxsv82mxs8x81lw56vw7mmiyybbksclfwn") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.12.1 (c (n "bc-envelope") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.7.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.1") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.11.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1b8qx2gl30149x28mm02v5jj5v7jrnjzd1dhbr4jcfgfc2vf5kbb") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.12.2 (c (n "bc-envelope") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.7") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.11") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1zsz08q9by4f8awfyg9li6fyp4jd7r5n3y8gsq89d25h0il3763d") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.13.0 (c (n "bc-envelope") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.8") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1") (d #t) (k 0)) (d (n "bc-ur") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.11") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "01jak7i9qi57ys81pxpmvqsgia1lns5jfr7yxkbw6rnspqmn0wss") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.14.0 (c (n "bc-envelope") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.9") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "11g8y7ax4qxf7qqgyf6v4mn9a2vjl88v8jw16aywm5793rfg9ql8") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.14.1 (c (n "bc-envelope") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.9") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0mvqiw55r6q8dxi6aaiwa2g67w97d0yif0mhwimba92j2wyp18j1") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.15.0 (c (n "bc-envelope") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.10") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0s3d4011rimf6v9xzg96nyx00s3phg6d5bp993p4f3f0i4f5g6dn") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.15.1 (c (n "bc-envelope") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.10.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "06m5r7br49l4nagrllqbnw8w3rf9z8zjdv0156a0r2y59vpyrkz3") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.15.2 (c (n "bc-envelope") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.10.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0l0vb1wghdilpiascs4cianpn69cjxm6x370jnqg4alcm59jk6zj") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.15.3 (c (n "bc-envelope") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.10.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.3.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.13.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0swnhxwr7jcn23cmmlm8vqd1z7r86wkc75v422772cjmaza6zpfb") (f (quote (("types" "known_value") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "known_value" "encrypt" "expression" "proof" "recipient" "salt" "signature" "sskr" "types") ("compress") ("attachment" "known_value"))))))

(define-public crate-bc-envelope-0.16.0 (c (n "bc-envelope") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0910jsmnhnh93rig7vvlhgg64siy8bmlh8jb658iknf9nivk34v9") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

(define-public crate-bc-envelope-0.17.0 (c (n "bc-envelope") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0jlvbhxa5mdgawmcydhlggqf2kbks363fl5xbh5gn08rlvafi593") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

(define-public crate-bc-envelope-0.17.1 (c (n "bc-envelope") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0rill7a7095i9m5cqaz89pdkwizp0dcq4cxmjnf4pzk86w9163qm") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

(define-public crate-bc-envelope-0.17.2 (c (n "bc-envelope") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0gvp4mf9vwg1ipfs8blm854bwdypcai4v308mgnlv025nxccnrkx") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

(define-public crate-bc-envelope-0.17.3 (c (n "bc-envelope") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "0bc08mr6wjnvprk0cq8sdg33g45qa7jqcdj2imn3xnlmh7rbb9gc") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

(define-public crate-bc-envelope-0.17.4 (c (n "bc-envelope") (v "0.17.4") (d (list (d (n "anyhow") (r "^1.0.0") (d #t) (k 0)) (d (n "bc-components") (r "^0.11.0") (d #t) (k 0)) (d (n "bc-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "bc-rand") (r "^0.1.0") (d #t) (k 0)) (d (n "bc-ur") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dcbor") (r "^0.14.0") (f (quote ("multithreaded"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.0") (d #t) (k 2)))) (h "1jmhxz3fw1i5cbkypc4zk61jrwsbdhq2n55fwifb891b674hfmbx") (f (quote (("types" "known_value") ("transaction" "expression" "signature" "recipient") ("sskr" "encrypt") ("signature" "known_value") ("salt" "known_value") ("recipient" "encrypt") ("proof") ("multithreaded" "dcbor/multithreaded") ("known_value") ("expression" "known_value") ("encrypt" "known_value") ("default" "attachment" "compress" "encrypt" "expression" "known_value" "proof" "recipient" "salt" "signature" "sskr" "transaction" "types") ("compress") ("attachment" "known_value" "types"))))))

