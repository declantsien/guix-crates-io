(define-module (crates-io xv c- xvc-walker) #:use-module (crates-io))

(define-public crate-xvc-walker-0.3.0 (c (n "xvc-walker") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.3") (d #t) (k 0)))) (h "0clclsd7niprd5lwwqlsnl7qqjnp6iihwxiv77fdw30pfczs34lg")))

(define-public crate-xvc-walker-0.3.2 (c (n "xvc-walker") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.3") (d #t) (k 0)))) (h "04fxb8manwqc987rahvhfzfvbc9bq50kddr35fc74v7cx23468f2")))

(define-public crate-xvc-walker-0.3.3 (c (n "xvc-walker") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.3") (d #t) (k 0)))) (h "0lczlj4bw1nn62a8d6zlqf1ahfwy6rl1bc9ggwdn7b813zm7jbkp")))

(define-public crate-xvc-walker-0.3.4 (c (n "xvc-walker") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.3") (d #t) (k 0)))) (h "0wfi20k6gnyyh0wkiw0akiwsngaqcvm4lwfxgag1q1jjzq7ykkfq")))

(define-public crate-xvc-walker-0.4.0 (c (n "xvc-walker") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.4.0") (d #t) (k 0)))) (h "06m1n7wmymmbmb9w30kxdv4gczpfpnd0ah9yw7zkp4187y5mg51h")))

(define-public crate-xvc-walker-0.4.2-alpha.0 (c (n "xvc-walker") (v "0.4.2-alpha.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "configparser") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored" "meta-logging-in-format"))) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "path-absolutize") (r "^3.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "reflink") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "relative-path") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "seahash") (r "^4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "fold"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xvc-logging") (r "^0.4.0") (d #t) (k 0)))) (h "1r20kf6cymjrvby8ra6yr3155dk9rr6mbzw97pplwia7hjvfswv3")))

(define-public crate-xvc-walker-0.4.2-alpha.6 (c (n "xvc-walker") (v "0.4.2-alpha.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.4.2-alpha.6") (d #t) (k 0)))) (h "0vrwzy84ipk605gy4r1qy2lxp5qg6fkscr90pzdmkdbf7japhqcz")))

(define-public crate-xvc-walker-0.4.2-alpha.8 (c (n "xvc-walker") (v "0.4.2-alpha.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.4.2-alpha.6") (d #t) (k 0)))) (h "0n8hsc8fcnwp695lwhczw4p49q42hvd5zssll4myg06srzrpw8if")))

(define-public crate-xvc-walker-0.4.2 (c (n "xvc-walker") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.4.2-alpha.6") (d #t) (k 0)))) (h "14xb0vvp0gkd86nyp4cbjlbra2rpwbglr18g9rw8jh95fzdvhdgm")))

(define-public crate-xvc-walker-0.5.0 (c (n "xvc-walker") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.5.0") (d #t) (k 0)))) (h "1rzv3knzxfq30csbb2jhm5mqk2amnlv79qp7an33msrg3gzmkfzq")))

(define-public crate-xvc-walker-0.5.2 (c (n "xvc-walker") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.5.0") (d #t) (k 0)))) (h "0gnm07xc26g7l4bk0g8g9jx5v0jb5849h25mc2r3fglhpqnb0mzn")))

(define-public crate-xvc-walker-0.6.0 (c (n "xvc-walker") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.0") (d #t) (k 0)))) (h "0ahgfxi7y62gs53al869hblwfcpz51n0w8ndpkk982xcrkxcj31i")))

(define-public crate-xvc-walker-0.6.1 (c (n "xvc-walker") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.0") (d #t) (k 0)))) (h "0sd6z9q6hphv5r9lyl0fa09kg5439p8faa1qjmps9dmq814liclg")))

(define-public crate-xvc-walker-0.6.2 (c (n "xvc-walker") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.0") (d #t) (k 0)))) (h "0kzx0s76hp57w4qrc9q4570bjcgzkcinqixkisjg1vqfi15q4gcj")))

(define-public crate-xvc-walker-0.6.3 (c (n "xvc-walker") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.0") (d #t) (k 0)))) (h "068jbnk8x2acppmad6g2dsyni601jm3mhvqcwszrh5ymsgwl0ggf")))

(define-public crate-xvc-walker-0.6.4-alpha.1 (c (n "xvc-walker") (v "0.6.4-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.0") (d #t) (k 0)))) (h "03rj6vnw44g949c78nrwh9is473mlhbpjfxmc6y734yrbq4igkjy")))

(define-public crate-xvc-walker-0.6.4-alpha.3 (c (n "xvc-walker") (v "0.6.4-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6") (d #t) (k 0)))) (h "1r2xkbhnwrhp7zlj7k5vp1k4k5dsz5mwx83y3mgrxmbdp4mv8168")))

(define-public crate-xvc-walker-0.6.4-alpha.4 (c (n "xvc-walker") (v "0.6.4-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6") (d #t) (k 0)) (d (n "xvc-test-helper") (r "^0.6") (d #t) (k 2)))) (h "067sf9lq0zk4wznw0yn100mn692nc9kji992i61r1c46ffbja1sp")))

(define-public crate-xvc-walker-0.6.4 (c (n "xvc-walker") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6") (d #t) (k 0)) (d (n "xvc-test-helper") (r "^0.6") (d #t) (k 2)))) (h "15mgq8h84y96yjlp4b3fd18znariz5s30199pzxn5r4ai0zqlnh2")))

(define-public crate-xvc-walker-0.6.5 (c (n "xvc-walker") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.5") (d #t) (k 0)) (d (n "xvc-test-helper") (r "^0.6.5") (d #t) (k 2)))) (h "0p97hqniz9r12vs6ipcpyrxn2jjxgk4nmgh71dn674f8j1y5kz1j")))

(define-public crate-xvc-walker-0.6.6-alpha.0 (c (n "xvc-walker") (v "0.6.6-alpha.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.6-alpha.0") (d #t) (k 0)) (d (n "xvc-test-helper") (r "^0.6.6-alpha.0") (d #t) (k 2)))) (h "1k73g5x6a2j3dx71kqi72659h1mkyqhbfqqy22xqh36l2blwnnfd")))

(define-public crate-xvc-walker-0.6.6 (c (n "xvc-walker") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xvc-logging") (r "^0.6.6") (d #t) (k 0)) (d (n "xvc-test-helper") (r "^0.6.6") (d #t) (k 2)))) (h "1m9drkbznwwrcqk39lla2lxhjsq422sj5zlfb8qqalmy1j5jglhm")))

