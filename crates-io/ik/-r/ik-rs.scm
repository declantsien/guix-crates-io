(define-module (crates-io ik -r ik-rs) #:use-module (crates-io))

(define-public crate-ik-rs-0.1.0 (c (n "ik-rs") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "tantivy") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "0c0fxzd4skwbs67r843fvl78bzhf4hnhpm2dx85l3xvvxc8yyzad") (y #t)))

(define-public crate-ik-rs-0.1.1 (c (n "ik-rs") (v "0.1.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "tantivy") (r "^0.18.1") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1fbc2hi7kfh4shm8amb6q9i4y7xdp62qdx4ykdks01zpn91w705c")))

(define-public crate-ik-rs-0.1.2 (c (n "ik-rs") (v "0.1.2") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "tantivy") (r "^0.18.1") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "0b6cj95dfiazndr8rnb9pzxdnlg6aman3nzx411yaqb5kjkqhsj7")))

(define-public crate-ik-rs-0.2.0 (c (n "ik-rs") (v "0.2.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1wi4gyic3pi42jm9pypwdfs93g6nr67snfplrhb2rviglmch8kjn")))

(define-public crate-ik-rs-0.2.1 (c (n "ik-rs") (v "0.2.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1i44kj6zyai6njbcpafxhvc941xiin115j10h1xwrn65pgf3s1yr") (y #t)))

(define-public crate-ik-rs-0.3.0 (c (n "ik-rs") (v "0.3.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1bacvxakwq431xfw85d4jz0i061wq47haj8y1lmc8x5jrfzy34sr")))

(define-public crate-ik-rs-0.3.1 (c (n "ik-rs") (v "0.3.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "04qc4cn560vylg0r0p08llygzi6zlly9x3mmdi6wl7kz2616lhl3")))

(define-public crate-ik-rs-0.3.2 (c (n "ik-rs") (v "0.3.2") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1lffkw5w53vsy2hjd3lx9dpbg9h3lsmiz5isxy868dsym2qhyhbn")))

(define-public crate-ik-rs-0.3.3 (c (n "ik-rs") (v "0.3.3") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "1azif30d9hsr1ypw3ix1blxh9q8lnb4vpdmdxfxmphddir9620br")))

(define-public crate-ik-rs-0.3.5 (c (n "ik-rs") (v "0.3.5") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "0knfpf6xyqig37bin1v2rbnzjvv1lmg0apqf1dalhcqrhrsqxnfp")))

(define-public crate-ik-rs-0.3.6 (c (n "ik-rs") (v "0.3.6") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "16d7p41y25sfng7x89zq4jn75pvr64rhhagfb3q31ilf2vx46vf8") (y #t)))

(define-public crate-ik-rs-0.5.0 (c (n "ik-rs") (v "0.5.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "00vb0k5wqhj706wbw6vnfvvyjx9979fcip5wmjkz2ahsxhn911qi")))

(define-public crate-ik-rs-0.6.0 (c (n "ik-rs") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection" "hardware-lock-elision"))) (o #t) (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "0rqf0a2n6bq1q7zr7awk0z7fp3i35fny9x3fib7b92lkx1qipsi6") (f (quote (("use-std-sync") ("default" "use-parking-lot")))) (y #t) (s 2) (e (quote (("use-parking-lot" "dep:parking_lot"))))))

(define-public crate-ik-rs-0.6.1 (c (n "ik-rs") (v "0.6.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection" "hardware-lock-elision"))) (o #t) (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "0qbsbln4z6vjnpk0lxifq7d6pfkk1aqlsl40ilhaljjdvp41cg2v") (f (quote (("use-std-sync") ("default" "use-parking-lot")))) (s 2) (e (quote (("use-parking-lot" "dep:parking_lot"))))))

(define-public crate-ik-rs-0.7.0 (c (n "ik-rs") (v "0.7.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection" "hardware-lock-elision"))) (o #t) (d #t) (k 0)) (d (n "random-string") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.11") (d #t) (k 0)) (d (n "unicode-blocks") (r "^0.1.4") (d #t) (k 0)))) (h "19j8w7nbhxlsmnmsxfd824i2kqakn6xd1v0gapm7dw624ggd9nvg") (f (quote (("use-std-sync") ("default" "use-parking-lot")))) (s 2) (e (quote (("use-parking-lot" "dep:parking_lot"))))))

