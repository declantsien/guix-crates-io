(define-module (crates-io ft ml ftml) #:use-module (crates-io))

(define-public crate-ftml-0.2.19 (c (n "ftml") (v "0.2.19") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1r0zwrh0v3ksbsc33r8gkxvz5l4vb7gcr7rh1xqfjrfv3yfcgwf5")))

(define-public crate-ftml-0.3.1 (c (n "ftml") (v "0.3.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "slog") (r "^2.5") (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (d #t) (k 2)) (d (n "sloggers") (r "^1") (d #t) (k 2)) (d (n "str-macro") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)))) (h "0zfs9cx2v6i7fhcljh1a6r6dimlp8z583c2wziv7lah1mxyrkrak")))

(define-public crate-ftml-0.4.0 (c (n "ftml") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "sloggers") (r "^1") (d #t) (k 2)) (d (n "str-macro") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wikidot-normalize") (r "^0.6") (d #t) (k 0)))) (h "0zh5v0q47wn422zxdsi61n31v4qvij8srv2d20qf9pvjqddqfhgj")))

(define-public crate-ftml-0.5.0 (c (n "ftml") (v "0.5.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "sloggers") (r "^1") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wikidot-normalize") (r "^0.7") (d #t) (k 0)))) (h "1zqkywlmrdx8q22b3npd9vwqwjvlhdwgar8vvqypyah7iw7x9v13")))

(define-public crate-ftml-0.10.2 (c (n "ftml") (v "0.10.2") (d (list (d (n "built") (r "^0.4") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace"))) (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "slog-mock") (r "^0.2") (d #t) (k 0)) (d (n "sloggers") (r "^1") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.8") (d #t) (k 0)))) (h "10mcyjz692v1s7nr4csl62q47qkfdslgzcx6yr904mh4qf5ny5bb") (f (quote (("wasm-log") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "ffi" "log"))))))

(define-public crate-ftml-1.0.0 (c (n "ftml") (v "1.0.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace"))) (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "slog-mock") (r "^0.4") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.8") (d #t) (k 0)))) (h "1nb7mczyrg9fj0sz2g51s4c89h4iwshl1d65b9if8hhgms71yxvd") (f (quote (("wasm-log") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "css" "ffi" "log") ("css"))))))

(define-public crate-ftml-1.3.0 (c (n "ftml") (v "1.3.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace"))) (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "slog-mock") (r "^0.4") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.8") (d #t) (k 0)))) (h "12jwyk0pzzcii2470j9lbcd0nd7xndkz3by2bgcdrbjmjnpfz4n5") (f (quote (("wasm-log") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "css" "ffi" "log") ("css"))))))

(define-public crate-ftml-1.6.3 (c (n "ftml") (v "1.6.3") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "1p6gg8p6wds7ghl7cmkd8xnvyqpafdfqm0kvdjhw6x8119cjqb07") (f (quote (("wasm-log") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "ffi" "log"))))))

(define-public crate-ftml-1.12.3 (c (n "ftml") (v "1.12.3") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "08znswxcysrqkar5fcmipwiwbx6qvfh1nnn4yyc7xy6pvdcyvysj") (f (quote (("wasm-log") ("mathml" "latex2mathml") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "ffi" "log" "mathml"))))))

(define-public crate-ftml-1.12.6 (c (n "ftml") (v "1.12.6") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "0g4gnna02jj3ygyhjj7yjvkchcszjw5dl17nqsrxm3mjvgl006a6") (f (quote (("wasm-log") ("mathml" "latex2mathml") ("log" "slog") ("ffi" "parking_lot" "slog-bunyan") ("default" "ffi" "log" "mathml")))) (r "1.57.0")))

(define-public crate-ftml-1.13.0 (c (n "ftml") (v "1.13.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.20") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "slog-bunyan") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "05m8j3ckxfjz984xvm4qr3p6f0pv1rwmlj0kz1rpy8b00jlf26hs") (f (quote (("mathml" "latex2mathml") ("ffi" "parking_lot" "slog-bunyan") ("default" "ffi" "mathml")))) (r "1.57.0")))

(define-public crate-ftml-1.15.2 (c (n "ftml") (v "1.15.2") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cbindgen") (r "^0.22") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "1bsq5vml5afw1k7bvlfq0m6f6q5lbi95p2shz6b10v5kkackx271") (f (quote (("mathml" "latex2mathml") ("default" "mathml")))) (r "1.60.0")))

(define-public crate-ftml-1.16.0 (c (n "ftml") (v "1.16.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "00zh9xmw2sha55x1zkrf234mwn09a7hk7xg3q499bzssxqld0yjp") (f (quote (("mathml" "html" "latex2mathml") ("html") ("default" "html" "mathml")))) (r "1.60.0")))

(define-public crate-ftml-1.16.1 (c (n "ftml") (v "1.16.1") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.9") (d #t) (k 0)))) (h "0aqgbh6znjbiykkdsldnnn0rbss03qp660hqz3mji8g2lm2xis9l") (f (quote (("mathml" "html" "latex2mathml") ("html") ("default" "html" "mathml")))) (r "1.60.0")))

(define-public crate-ftml-1.16.2 (c (n "ftml") (v "1.16.2") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "1n73xwi0z6n5843cnm29svlz5l019zl3gnhxsj7im6v6az9s1750") (f (quote (("mathml" "html" "latex2mathml") ("html") ("default" "html" "mathml")))) (r "1.60.0")))

(define-public crate-ftml-1.17.0 (c (n "ftml") (v "1.17.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.30") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sloggers") (r "^2") (d #t) (k 2)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "0rjlwpz5bphb0611sk9h57aml9j2il2f50r171pp32hbnrp5xkig") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.18.1 (c (n "ftml") (v "1.18.1") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "1i8f01ywyhcvxv0jpcfx7ljmrap4d4faiycjwvxf5baj1qv9fwk4") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.18.2 (c (n "ftml") (v "1.18.2") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "1p1ggxckgiygvf2363k8yp8snpkk75svwd6c2gi0wpk8g5lr71n6") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.19.0 (c (n "ftml") (v "1.19.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "0d5zfvjml58507bzzy669hag7lck3hsdrwrl7j7jygryw8g8fryg") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.20.0 (c (n "ftml") (v "1.20.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "0ri0fr2rzm9mm4qpmrjp26rs11xzivwh4qg2194c3zy06s3hphbr") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.21.0 (c (n "ftml") (v "1.21.0") (d (list (d (n "built") (r "^0.5") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.10") (d #t) (k 0)))) (h "17lcysxzfhmphj8l5580qh1bflz0bbiz6c2sldfxqk36s801vw71") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.22.0 (c (n "ftml") (v "1.22.0") (d (list (d (n "built") (r "^0.6") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde"))) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.11") (d #t) (k 0)))) (h "040r63fg9b6d6ki8c0a33wyqzbd5nvjmikxmhqqygm9lqrfdrj7v") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.22.1 (c (n "ftml") (v "1.22.1") (d (list (d (n "built") (r "^0.6") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^0.10") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde"))) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.11") (d #t) (k 0)))) (h "1agbyzj6bk5v50abz1zjw8a9bnjq3k8s8inlvbqhngkd9bjc8la5") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.22.2 (c (n "ftml") (v "1.22.2") (d (list (d (n "built") (r "^0.7") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde" "serde-human-readable"))) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.11") (d #t) (k 0)))) (h "1mi6kda3sdirfw0dz2in1fak7znk5143vl2ba99p7947cww63gk6") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.23.0 (c (n "ftml") (v "1.23.0") (d (list (d (n "built") (r "^0.7") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde" "serde-human-readable"))) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.12") (d #t) (k 0)))) (h "1m4f5pbvhp23lhpdp25azl4avrjx6la2lqgymb02w4bzlhxhhxv7") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

(define-public crate-ftml-1.24.0 (c (n "ftml") (v "1.24.0") (d (list (d (n "built") (r "^0.7") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "entities") (r "^1") (d #t) (k 0)) (d (n "enum-map") (r "^2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "latex2mathml") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parcel_css") (r "^1.0.0-alpha.32") (o #t) (d #t) (k 0)) (d (n "parcel_selectors") (r "=0.24.7") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "ref-map") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "str-macro") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde" "serde-human-readable"))) (k 0)) (d (n "tinyvec") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wikidot-normalize") (r "^0.12") (d #t) (k 0)))) (h "0dc1ripbfw79g5cxcj1vxj1qkq6dz4p0zqbxldq2l64wav48pjv8") (f (quote (("mathml" "html" "latex2mathml") ("html" "parcel_css") ("default" "html" "mathml"))))))

