(define-module (crates-io ft -s ft-sdk) #:use-module (crates-io))

(define-public crate-ft-sdk-0.1.0 (c (n "ft-sdk") (v "0.1.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "diesel") (r "^2") (d #t) (k 0)) (d (n "ft-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hwpyvync2wbsv8jzgiy826cq2g2nmyx0q9kq1kxb3c27j0j3gjl")))

(define-public crate-ft-sdk-0.1.1 (c (n "ft-sdk") (v "0.1.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "diesel") (r "^2") (d #t) (k 0)) (d (n "ft-sys") (r "^0.1.1") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0hrz43f9a4qg1l41sm13mlfw8hd15zv9jlmsrwl5kl5hzmya00dc")))

(define-public crate-ft-sdk-0.1.2 (c (n "ft-sdk") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "diesel") (r "^2") (f (quote ("serde_json"))) (o #t) (d #t) (k 0)) (d (n "ft-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "ft-sys") (r "^0.1.2") (k 0)) (d (n "ft-sys-shared") (r "^0.1.2") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v8"))) (k 0)))) (h "0fnva0zkvd7sxbcbirpqvk8kfhanxc9cb34m4ghimmqd663d0pp6") (f (quote (("sqlite-default" "ft-sys/sqlite-default" "sqlite") ("sqlite" "ft-sys/sqlite" "diesel") ("postgres-default" "ft-sys/postgres-default" "postgres") ("postgres" "ft-sys/postgres" "diesel") ("migration") ("field-extractors") ("default" "sqlite-default" "migration") ("auth-provider"))))))

(define-public crate-ft-sdk-0.1.3 (c (n "ft-sdk") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "diesel") (r "^2") (f (quote ("serde_json"))) (o #t) (d #t) (k 0)) (d (n "ft-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "ft-sys") (r "^0.1.3") (d #t) (k 0)) (d (n "ft-sys-shared") (r "^0.1.2") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v8"))) (k 0)))) (h "19gr5nw0ij8afxs4ivlhd6z42fw6s7xydcyzkswp2d3n3ljq1ps6") (f (quote (("sqlite-default" "sqlite") ("sqlite" "ft-sys/sqlite" "diesel") ("postgres-default" "postgres") ("postgres" "ft-sys/postgres" "diesel") ("migration") ("field-extractors") ("default" "sqlite-default" "migration") ("auth-provider"))))))

