(define-module (crates-io ro qo roqoqo-quest) #:use-module (crates-io))

(define-public crate-roqoqo-quest-0.1.0 (c (n "roqoqo-quest") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.3") (d #t) (k 0)) (d (n "quest-sys") (r "^0.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^0.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)))) (h "05dl1fmgvfhwfs4dp1gmsqn9niwyhh8cgff6qvnwf1iq8q551p4s") (f (quote (("openmp" "quest-sys/openmp") ("default"))))))

(define-public crate-roqoqo-quest-0.1.1 (c (n "roqoqo-quest") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.5") (d #t) (k 0)) (d (n "quest-sys") (r "^0.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^0.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)))) (h "1cfvwzjds1a68rb7k2a11pym0y08g27sh3y79hgfq03zq6qpksjh") (f (quote (("openmp" "quest-sys/openmp") ("default"))))))

(define-public crate-roqoqo-quest-0.2.0 (c (n "roqoqo-quest") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.5") (d #t) (k 0)) (d (n "quest-sys") (r "^0.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^0.9") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)))) (h "0msjirkql6ip0crr7srl7r2dzs1hcb6jjnvi3vdr87ysra1ic44h") (f (quote (("openmp" "quest-sys/openmp") ("default"))))))

(define-public crate-roqoqo-quest-0.3.0 (c (n "roqoqo-quest") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.6") (d #t) (k 0)) (d (n "quest-sys") (r "^0.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^0.10") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^1.2") (d #t) (k 2)))) (h "1wcwxkrljzjf7cv7ipfnr7x4299a515y31q65zls72wb8f19avxq") (f (quote (("openmp" "quest-sys/openmp") ("default"))))))

(define-public crate-roqoqo-quest-0.4.0 (c (n "roqoqo-quest") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.7") (d #t) (k 0)) (d (n "quest-sys") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^0.11") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "0g653i6nwbpm6h8khq76z088pp3xvqx28qpk9nvg1mdbzyc7v3a1") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.5.0 (c (n "roqoqo-quest") (v "0.5.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.7") (d #t) (k 0)) (d (n "quest-sys") (r "^0.5") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1inbrfpj5iq91rrk267sb6pwbjb6wiy79l6cmkc5h0qwj3h500fk") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.6.0 (c (n "roqoqo-quest") (v "0.6.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.8") (d #t) (k 0)) (d (n "quest-sys") (r "^0.6") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "15bxgifdk9px3a1c49i7qw2nx1bnwk6vqmbbw2k4g264nl93nnn2") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.6.1 (c (n "roqoqo-quest") (v "0.6.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.8") (d #t) (k 0)) (d (n "quest-sys") (r "^0.6") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1m66zmgmhciif7vk57kii5vym87ci8w0hkwamcl0l61nidm18lfk") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.7.0 (c (n "roqoqo-quest") (v "0.7.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.8") (d #t) (k 0)) (d (n "quest-sys") (r "^0.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-alpha.5") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "0n9bwhmnv1p2lzr65p0pbmzwdzp45zsymrz14995vaiz5kx0n662") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.7.1 (c (n "roqoqo-quest") (v "0.7.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^0.8") (d #t) (k 0)) (d (n "quest-sys") (r "^0.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-alpha.5") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1ziscrz3qnwvgrs27k40x7vw5p78y090390jy24wsn6blsigx9vd") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.7.2 (c (n "roqoqo-quest") (v "0.7.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.0") (d #t) (k 0)) (d (n "quest-sys") (r "^0.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-beta.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1m6l57wkvm3rhzhf5zxszspmlr3waasbsxx2i5k4p0g5l869ijk9") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.7.3 (c (n "roqoqo-quest") (v "0.7.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.0") (d #t) (k 0)) (d (n "quest-sys") (r "^0.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0-beta.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1rspqcd9yldyz1x3ranmdaa9gn6bhlyn9nzb1vd9ldwv1gzv5jvw") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.7.4 (c (n "roqoqo-quest") (v "0.7.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.0") (d #t) (k 0)) (d (n "quest-sys") (r "^0.7.4") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "roqoqo") (r "^1.0.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1jypbazq6zsvhckbhwdglk8lwzhyykaqbh2v53xvikm6i14pidn7") (f (quote (("openmp" "quest-sys/openmp") ("default")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0-beta.1 (c (n "roqoqo-quest") (v "0.8.0-beta.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.0") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0-beta.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1s48zfp7p3n2j52fxzd0axk12190276x60xh6ca47yp1dx8b9xi8") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0-beta.2 (c (n "roqoqo-quest") (v "0.8.0-beta.2") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.0") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0-beta.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "0y7q79s19acg6vz60g8h06h3fm24h5klqdcvkjyck9fr71vrka7r") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0-beta.3 (c (n "roqoqo-quest") (v "0.8.0-beta.3") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0-beta.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0-beta.10") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1a3s2s8z06gkzm42w9c661xa9h048vp4y92cs57kn4jmkzzy8i0b") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0-beta.4 (c (n "roqoqo-quest") (v "0.8.0-beta.4") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0-beta.4") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0-beta.10") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1rr5iw3m8wjjql1rk5lk18ia2wy3xqib990swxw5gw1qxdb9f09i") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0-beta.5 (c (n "roqoqo-quest") (v "0.8.0-beta.5") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0-beta.5") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0-beta.12") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "0bmd1slfbf90w0gsm5yf91mc1nchsnvw58rf4xx0scy1hf8v13qh") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.0 (c (n "roqoqo-quest") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1zi887jm7k2lqaq68gdr6b6qdxl9ycp6fa0577njjxmbjxl0d5b9") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.1 (c (n "roqoqo-quest") (v "0.8.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1vjq5fhmflcnilbj2zdalykn1cs3z255s0acnjlyrpsr6ffd9khj") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.9.0-alpha.1 (c (n "roqoqo-quest") (v "0.9.0-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.9.0-alpha.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.2.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1hhzjp3677q9m7rfgrwry73x3p0vs9q6966ygrfn6v5b7w266jb8") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.9.0-alpha.2 (c (n "roqoqo-quest") (v "0.9.0-alpha.2") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.9.0-alpha.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.2.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "05mcpyqbx90w9cihkhqlx79ka5n1cx3jxcpzali3lx2qdm2hbvss") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.8.2 (c (n "roqoqo-quest") (v "0.8.2") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.8.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.1.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "1l767d1v32sp7jx0zxiyx1974r7cjkhi1lzg46a7kpx26rirnjg5") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.9.0 (c (n "roqoqo-quest") (v "0.9.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.9.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.0") (d #t) (k 2)))) (h "0ll31i7kyksm6bjvjm56j003kcnlsp6lmzciw713nb9ink37jyr7") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.9.1 (c (n "roqoqo-quest") (v "0.9.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.9.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1w8s5r4paaqj570cqzln18ap8m4djijn3xzkhdinrlq9w2qyi5cs") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.10.0 (c (n "roqoqo-quest") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.10.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1kxxk62idnzq1magihr8jp12bxsbp9ajqi25yys2dqyigdi675cw") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.10.1 (c (n "roqoqo-quest") (v "0.10.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.10.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0wz3y18h5z48nldpbm6vcs5kqx6szkfp1n6fsg9ij52pmvrv5csm") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.11.0 (c (n "roqoqo-quest") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.11.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.4") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1lyny7x0jpwvizsx6hc927z48mcjr7g7f6i6c3ig3gqri01j24f4") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.11.1 (c (n "roqoqo-quest") (v "0.11.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.11.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.5") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "13p11fc5sijkjn3kkbdw9cacyrkq0m5s6pzsah3kxhafnrrrc58l") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.11.2 (c (n "roqoqo-quest") (v "0.11.2") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.7") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1sk843jnfp9dfi74nfm7vsfif41gyps0sqkqprijwfj5a9sgs20q") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.11.3-alpha.1 (c (n "roqoqo-quest") (v "0.11.3-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.11.3-alpha.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0irq4sqfj8xaylswjy41l65c568k3nglk5sc2f4dmaxp2i20c8gr") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.11.3 (c (n "roqoqo-quest") (v "0.11.3") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0jazhxs8kind02andmph3lbm1g3vb9b1crq7j3p0hwnnmpjb72n7") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.56")))

(define-public crate-roqoqo-quest-0.12.0-alpha.0 (c (n "roqoqo-quest") (v "0.12.0-alpha.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.0-alpha.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1lpdgfny4d0vp0j4pk80xbii7lw3zcygy599pls77gs85mjgn9ng") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.12.0 (c (n "roqoqo-quest") (v "0.12.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "176sfvj9zk3m0ymhlm6if603c5fbvvls4gnp2pr41w8hfyiyhl5y") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.12.1 (c (n "roqoqo-quest") (v "0.12.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "06gr0ylhdc27dlsxfgp7wyl4gbs1bh4y9c4xk3v2jypshp4jr65r") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.12.2 (c (n "roqoqo-quest") (v "0.12.2") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0620m2cwcqyp3va4am8pvcn3dskkffwp1ql84g3i3gy5z8pv49n2") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.12.3 (c (n "roqoqo-quest") (v "0.12.3") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "1rb32wfwc5xm327rfmcl5blgcvbk1f4hs0yq2g2sx8a88crppq4z") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.12.4 (c (n "roqoqo-quest") (v "0.12.4") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.12.4") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.11.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0h0cvm17dvhw22r7yn28jk01impfii8yl3zgcri04bz1q6m7gcnb") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.13.0 (c (n "roqoqo-quest") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.13.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.11") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "19ll2j3d7zhrw19xyjgsiikf8vlx3jzifk8l87cwvch9nv2838d6") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

(define-public crate-roqoqo-quest-0.13.1 (c (n "roqoqo-quest") (v "0.13.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "qoqo_calculator") (r "^1.1") (d #t) (k 0)) (d (n "quest-sys") (r "^0.13.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "roqoqo") (r "^1.11") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)))) (h "0bw76hd7zj9677aw9ac7gwp7xh1qbh2zyzfgsmig6qk2w3bddlyv") (f (quote (("parallelization" "rayon") ("openmp" "quest-sys/openmp") ("default") ("cuquantum" "quest-sys/cuquantum") ("cuda" "quest-sys/cuda") ("async" "async-trait" "roqoqo/async" "futures")))) (r "1.60")))

