(define-module (crates-io ro ck rocketmq) #:use-module (crates-io))

(define-public crate-rocketmq-0.0.1 (c (n "rocketmq") (v "0.0.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitflags_serde_shim") (r "^0.2.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "dirty-json") (r "^0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.7") (f (quote ("blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("tcp" "dns" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.3.1") (d #t) (k 0)))) (h "0xy0szfix16dak89f0g1jv4lvgwjd6rrdgqrrc87ik34y4k4igx2")))

(define-public crate-rocketmq-0.0.2 (c (n "rocketmq") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitflags_serde_shim") (r "^0.2.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "dirty-json") (r "^0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.9.0") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.7") (f (quote ("blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.1") (d #t) (k 0)) (d (n "time") (r "^0.2.16") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("tcp" "dns" "io-util" "time" "macros"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.11") (d #t) (k 2)))) (h "18l9j69h7blrxhs13rxsb7d80grllky34m64hrz6bksv4js1sbl3")))

(define-public crate-rocketmq-0.0.3 (c (n "rocketmq") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitflags_serde_shim") (r "^0.2.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "consistent_hash_ring") (r "^0.8.0") (d #t) (k 0)) (d (n "dirty-json") (r "^0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.0") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.1") (d #t) (k 0)) (d (n "time") (r "^0.2.16") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "io-util" "time" "macros" "fs" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.11") (d #t) (k 2)))) (h "0y99x32jby8pq1dqpa5v5w8xhqqc5k97n5nfc6c8x05vbk4rpbyj")))

(define-public crate-rocketmq-0.0.4 (c (n "rocketmq") (v "0.0.4") (d (list (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitflags_serde_shim") (r "^0.2.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "consistent_hash_ring") (r "^0.8.0") (d #t) (k 0)) (d (n "dirty-json") (r "^0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.1") (d #t) (k 0)) (d (n "time") (r "^0.2.16") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("net" "io-util" "time" "macros" "fs" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.11") (d #t) (k 2)))) (h "12iadzs08kbv2bfn9mz1383zm291f2j554amddkyp9kvgabfip0d")))

(define-public crate-rocketmq-0.1.0 (c (n "rocketmq") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "awaitility") (r "^0.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.4") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("metrics" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("metrics" "grpc-tonic"))) (d #t) (k 0)) (d (n "os_type") (r "^2.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 1)) (d (n "siphasher") (r "^0.3.10") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (f (quote ("default" "dangerous_configuration"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "default" "channel" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.0") (d #t) (k 1)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "which") (r "^4.4.0") (d #t) (k 1)) (d (n "wiremock-grpc") (r "^0.0.3-alpha2") (d #t) (k 2)))) (h "0pirj1qlnyr9fz14h2jnwcs0f30hwxr8z3yklkl7pv9skl7mmf8h") (y #t) (r "1.61")))

(define-public crate-rocketmq-0.1.1 (c (n "rocketmq") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "awaitility") (r "^0.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.4") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("metrics" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("metrics" "grpc-tonic"))) (d #t) (k 0)) (d (n "os_type") (r "^2.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 1)) (d (n "siphasher") (r "^0.3.10") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (f (quote ("default" "dangerous_configuration"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "default" "channel" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.0") (d #t) (k 1)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "which") (r "^4.4.0") (d #t) (k 1)) (d (n "wiremock-grpc") (r "^0.0.3-alpha2") (d #t) (k 2)))) (h "1c6ibmrl0n9rc3hpqvzb9swp3v13pxyqryjf11bc8psh64xvr1ls") (r "1.61")))

(define-public crate-rocketmq-0.1.2 (c (n "rocketmq") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "awaitility") (r "^0.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.4") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("metrics" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("metrics" "grpc-tonic"))) (d #t) (k 0)) (d (n "os_info") (r "^3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 1)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "siphasher") (r "^0.3.10") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (f (quote ("default" "dangerous_configuration"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "default" "channel" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.0") (d #t) (k 1)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "which") (r "^4.4.0") (d #t) (k 1)) (d (n "wiremock-grpc") (r "^0.0.3-alpha2") (d #t) (k 2)))) (h "09s9yj1dr9lr25wm0n3qgjymga0lam337yq7aajfk62v64ly7rdj") (r "1.61")))

(define-public crate-rocketmq-5.0.0-rc1 (c (n "rocketmq") (v "5.0.0-rc1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "awaitility") (r "^0.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.4") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("metrics" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("metrics" "grpc-tonic"))) (d #t) (k 0)) (d (n "os_info") (r "^3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 1)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "siphasher") (r "^0.3.10") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (f (quote ("default" "dangerous_configuration"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "default" "channel" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.0") (d #t) (k 1)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "which") (r "^4.4.0") (d #t) (k 1)) (d (n "wiremock-grpc") (r "^0.0.3-alpha2") (d #t) (k 2)))) (h "1jps7s3piw9i3ijvw9dibzm0bzk6qxbgmfl0c314z275kp6ljsly") (r "1.61")))

(define-public crate-rocketmq-5.0.0 (c (n "rocketmq") (v "5.0.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "awaitility") (r "^0.3.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.4") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("metrics" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("metrics" "grpc-tonic"))) (d #t) (k 0)) (d (n "os_info") (r "^3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 1)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "siphasher") (r "^0.3.10") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (f (quote ("default" "dangerous_configuration"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "default" "channel" "tls-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.0") (d #t) (k 1)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "which") (r "^4.4.0") (d #t) (k 1)) (d (n "wiremock-grpc") (r "^0.0.3-alpha2") (d #t) (k 2)))) (h "1cx2z8nwzh1v473wb266nrlxqkyzhfv2h8hsnbbv24sxkzw9q0jm") (r "1.61")))

