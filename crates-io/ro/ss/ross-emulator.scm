(define-module (crates-io ro ss ross-emulator) #:use-module (crates-io))

(define-public crate-ross-emulator-0.1.0 (c (n "ross-emulator") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "capstone") (r "^0.11") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "sdl2") (r "^0.35") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "svd-parser") (r "^0.13") (d #t) (k 0)) (d (n "termcolor") (r "^1.1") (d #t) (k 0)) (d (n "unicorn-engine") (r "^2.0.0-rc3") (d #t) (k 0)))) (h "0dhmykzj6b4rypwzfgnsmj2k2nm1lb35x7qachxakq346x2xn003") (y #t)))

