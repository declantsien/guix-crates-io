(define-module (crates-io ro to rotor-carbon) #:use-module (crates-io))

(define-public crate-rotor-carbon-0.1.0 (c (n "rotor-carbon") (v "0.1.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "quick-error") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.5.0") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "0bfzb39fwnckpg9daj0p6xxc3wn7qh7ixr549v6fk4q1d3v74v99")))

(define-public crate-rotor-carbon-0.2.0 (c (n "rotor-carbon") (v "0.2.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "quick-error") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.5.0") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "16mz6vmghmdf6cp2drfw19kjr534rsy0cwxxhcwdl09kw4vjc3l5")))

(define-public crate-rotor-carbon-0.3.0 (c (n "rotor-carbon") (v "0.3.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "quick-error") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.5.0") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "0ikvzfw5qnrrxisphc32sl68lv0n0fxf31wwah23k1g4pxgbrnmv")))

(define-public crate-rotor-carbon-0.4.0 (c (n "rotor-carbon") (v "0.4.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1.30") (d #t) (k 0)) (d (n "quick-error") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.5.0") (d #t) (k 0)) (d (n "rotor-tools") (r "^0.2.0") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "0h8qcf7nbhad4bwiss5vkzmly4cnrivlysbv1h11cbjs7622rb34")))

(define-public crate-rotor-carbon-0.5.0 (c (n "rotor-carbon") (v "0.5.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1.30") (d #t) (k 0)) (d (n "quick-error") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.6.0") (d #t) (k 0)) (d (n "rotor-stream") (r "^0.5.0") (f (quote ("replaceable"))) (d #t) (k 0)) (d (n "rotor-tools") (r "^0.3.0") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "0nx41jzlsl86wf2jyfzs7i9bmpjqpjczg1vm2mm82lpc10kcqqra")))

(define-public crate-rotor-carbon-0.5.1 (c (n "rotor-carbon") (v "0.5.1") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "ip") (r "^1.0.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "netbuf") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1.30") (d #t) (k 0)) (d (n "quick-error") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.6.0") (d #t) (k 0)) (d (n "rotor-stream") (r "^0.5.0") (f (quote ("replaceable"))) (d #t) (k 0)) (d (n "rotor-tools") (r "^0.3.0") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "void") (r "^0.0.5") (d #t) (k 0)))) (h "10mxg6xkvmk7mzy6vplnxzyh97fcrg2i5apnlagprzhhm8zrhf9d")))

(define-public crate-rotor-carbon-0.6.0 (c (n "rotor-carbon") (v "0.6.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.2") (d #t) (k 2)) (d (n "log") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1.30") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.6.1") (d #t) (k 0)) (d (n "rotor-stream") (r "^0.6.1") (f (quote ("replaceable"))) (d #t) (k 0)) (d (n "rotor-tools") (r "^0.3.1") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)))) (h "12wsf29g2v2jpxq5nkw73l1108zh8i10qlh66vbi05far68zipy0")))

(define-public crate-rotor-carbon-0.7.0 (c (n "rotor-carbon") (v "0.7.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.2") (d #t) (k 2)) (d (n "log") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.1.30") (d #t) (k 0)) (d (n "rand") (r "^0.3.13") (d #t) (k 2)) (d (n "rotor") (r "^0.6.1") (d #t) (k 0)) (d (n "rotor-stream") (r "^0.6.1") (f (quote ("replaceable"))) (d #t) (k 0)) (d (n "rotor-tools") (r "^0.3.1") (d #t) (k 0)) (d (n "time") (r "^0.1.34") (d #t) (k 0)))) (h "11q96k44841m506kpskdq17cr09ppza0lk1q4mvzi9dvqkivwmmi")))

