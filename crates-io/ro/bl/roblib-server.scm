(define-module (crates-io ro bl roblib-server) #:use-module (crates-io))

(define-public crate-roblib-server-0.1.0 (c (n "roblib-server") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.19") (f (quote ("http1" "tokio" "ws"))) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "envy") (r "^0.4.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "roblib") (r "^0.1.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread" "time" "sync" "signal" "io-util" "macros" "net"))) (k 0)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)))) (h "11zmyqjb0jr8qcx278mps566h03qaxd54fr3nxzz6rlw39wm2y5q") (f (quote (("roland" "roblib/roland") ("gpio" "roblib/gpio") ("default") ("camloc" "roblib/camloc") ("backend" "roblib/gpio-backend") ("all" "roland" "gpio" "camloc" "backend"))))))

