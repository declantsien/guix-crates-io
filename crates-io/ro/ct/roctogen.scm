(define-module (crates-io ro ct roctogen) #:use-module (crates-io))

(define-public crate-roctogen-0.1.0 (c (n "roctogen") (v "0.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.71") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08yhm77d0wjscw3f4avkqq36kfil1jsj1z3n27zg87y33hza0g9z") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.1.1 (c (n "roctogen") (v "0.1.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.71") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0kb05c15ld68sns7zzbhaf7qb1jicdgqs5a0z6fk8xhq8ph5dhk1") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.1.2 (c (n "roctogen") (v "0.1.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.71") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1l9k6rgpgmwyprjry8s1qdlb18764r4s0bsz8m7kb9q49njv042h") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.2.0 (c (n "roctogen") (v "0.2.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1v4qd4yvnqy6zriwz6847qhfgvkg95i7pnv6nv55japicmz8ca08") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.2.2 (c (n "roctogen") (v "0.2.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06596fq0p0ajqd9n6azkk9xnrz0xsklcqaipji9r40sygskqxnq9") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.3.0 (c (n "roctogen") (v "0.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zinrl8v47samg0k0077fycr1myig3wvm50ir0n8hair4z47rk5s") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.4.0 (c (n "roctogen") (v "0.4.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0k02frphz6gr6c7flq61vhaij2056v2yxad9scp71if2qfknaw4n") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.5.0 (c (n "roctogen") (v "0.5.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04df6y57ramiss8fa8pg49xnpf35qkgkqc4i3p27c8axvxxisll9") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.6.0 (c (n "roctogen") (v "0.6.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0gkdm47fwccc8ph2sfmwqymaanv0a64f6b6c5pk20f2ak4xjiqmi") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.7.0 (c (n "roctogen") (v "0.7.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12q0nqibr7bxjnbjx1slavx7nglil7lllzg2zn8isg097gdgyxl7") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.8.0 (c (n "roctogen") (v "0.8.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vnwn6hz8iyx9dy899zhcij5zw856b39l66bl22vjsqcfkmqzrwy") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.9.0 (c (n "roctogen") (v "0.9.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1sjqabdwi64a98iklf2sj063295h3h2ypznyvgfb9fxipbz7c3qc") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.10.0 (c (n "roctogen") (v "0.10.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1f67j4dj5h93nisj3a6i5l656qqz8dh1g10l78sddxjgzmpw2nzn") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.11.0 (c (n "roctogen") (v "0.11.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1s2cqn5869qx82a6niirpwvadyv6d1sdvpspx4w5w3pyacsaflsq") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

(define-public crate-roctogen-0.12.0 (c (n "roctogen") (v "0.12.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-core") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-io") (r "^0.3.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "isahc") (r "^1.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("macros" "rt-multi-thread"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.1.0") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.72") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "Response" "ServiceWorkerGlobalScope" "Window" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1542g4xi2iz7cis4azp8xvd9fvbp9i1a36pf1dmaj5a3npi3n7l7") (f (quote (("zzzax") ("wyandotte") ("switcheroo") ("surtur") ("starfox") ("squirrel-girl") ("scarlet-witch") ("nebula") ("mockingbird") ("mock") ("mercy") ("lydian") ("luke-cage") ("london") ("inertia") ("groot") ("flash") ("dorian") ("corsair") ("comfort-fade") ("cloak") ("baptiste") ("ant-man"))))))

