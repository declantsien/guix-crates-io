(define-module (crates-io ro sl roslibrust_codegen) #:use-module (crates-io))

(define-public crate-roslibrust_codegen-0.1.0 (c (n "roslibrust_codegen") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "roslibrust_rospack") (r "^0.1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1sr3s5dixr4ksqwbfj6l5xnj7kalcc5kdlxhpnmrs76mc2bz9fqr")))

(define-public crate-roslibrust_codegen-0.2.0 (c (n "roslibrust_codegen") (v "0.2.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "roslibrust_rospack") (r "^0.2.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0sndgx8c73ixd929jdj07kpbfchgrg1sn2lv6jzbdw4rxm73b6vk")))

(define-public crate-roslibrust_codegen-0.6.0 (c (n "roslibrust_codegen") (v "0.6.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "signal"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "1yxqc9l73fv905byjsp2sr57sxr14vyy4czkxnhlca4zhjiq6qgw") (f (quote (("default" "tokio") ("all" "tokio")))) (s 2) (e (quote (("tokio" "dep:tokio"))))))

(define-public crate-roslibrust_codegen-0.7.0 (c (n "roslibrust_codegen") (v "0.7.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "signal"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "184pb2xn8c51zmikdi223gny0p30h3lcn4aa0pwwih5sqb96pvax") (f (quote (("ros2_test") ("ros1_test") ("default" "tokio") ("all" "tokio")))) (s 2) (e (quote (("tokio" "dep:tokio"))))))

(define-public crate-roslibrust_codegen-0.8.0 (c (n "roslibrust_codegen") (v "0.8.0") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple-error") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("time" "signal"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "00wyjm19k92yi9152pg1myq243drfabp0334hq68x38arad24xrg") (f (quote (("ros2_test") ("ros1_test") ("default" "tokio") ("all" "tokio")))) (s 2) (e (quote (("tokio" "dep:tokio"))))))

(define-public crate-roslibrust_codegen-0.9.0 (c (n "roslibrust_codegen") (v "0.9.0") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple-error") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("time" "signal"))) (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "0h04rwhmlpbxp457qbqqpfcna5szyqds0rwx3ajdn7blddsyiycv") (f (quote (("ros2_test") ("ros1_test") ("default" "tokio") ("all" "tokio")))) (s 2) (e (quote (("tokio" "dep:tokio"))))))

