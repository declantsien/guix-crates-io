(define-module (crates-io ro ut router-bridge) #:use-module (crates-io))

(define-public crate-router-bridge-0.1.0-alpha.1 (c (n "router-bridge") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1v83yfrq89vyy1n8yriqgnvmxcrlqxmzjdhzwpjybzbsasg7cxig")))

(define-public crate-router-bridge-0.1.0 (c (n "router-bridge") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0p922iw5lpz80gm8h1yv6wj2sry212f6pxrvrm0j5vdnb8cna13h")))

(define-public crate-router-bridge-0.1.1 (c (n "router-bridge") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1g6azx1z5cwikcvz21j26r0v9f1p619yxrfy6i5xg7py33q73q54")))

(define-public crate-router-bridge-0.1.2 (c (n "router-bridge") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "066rvm93j42dk8d7k4md35zydd393zn3naa0vc2bdh383mbgvzqx")))

(define-public crate-router-bridge-0.1.3 (c (n "router-bridge") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1cipx6jhaxdibwciplgm17gx824s8vq26mf6jpnziwz5cmm16zqr")))

(define-public crate-router-bridge-0.1.4 (c (n "router-bridge") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0c9fmanimn6bffsx9ircimkybzr4mva14070zw9jlvrq173f0m9k")))

(define-public crate-router-bridge-0.1.5 (c (n "router-bridge") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1pjmak8ypnjq698yq4fszkhpslgmc3l6w5xbxsn7b5qqx6bj9f7l")))

(define-public crate-router-bridge-0.1.6 (c (n "router-bridge") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1gnff0mzyrxz7apz52yh56zsjxkyg2ii5xx0xhm1kmq16wx9zixc")))

(define-public crate-router-bridge-0.1.7 (c (n "router-bridge") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0h4r6s2k80zddps4bsfjinmblpx41cfsqnv2avwipz38zkq8xmwm") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.9 (c (n "router-bridge") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0642lkd56fp7qv76q129zmd2lfdwi4a012npm5vplpkx8mxjash1") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.10 (c (n "router-bridge") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "05j1v09sfb97284nxxj7k1s7wh43yx27anvhq1r1fa4rmifmxv91") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.11 (c (n "router-bridge") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1d29zgciifj4680jwk496889pi8php3niyb8gcds8f8cxd6l7lkl") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.12 (c (n "router-bridge") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.142.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "05qgjs2qc2b483y41w27wazrmfyc5b793kh0vzf8kgr5v9qijnl5") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.13-beta+v2.3.0-beta.2 (c (n "router-bridge") (v "0.1.13-beta+v2.3.0-beta.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.164.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.164.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0hvjdwq6scsp5r7w4qchsdz0s9l28wqpn48w677rcfgh63k3p8ww") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.13-beta+v2.3.0-beta.3 (c (n "router-bridge") (v "0.1.13-beta+v2.3.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.164.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.164.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0ygd8l40yfygijs3vwdv07qxv1vm1d3dwmw8ggsplppbv547slgj") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.13-beta.0+v2.3.0-beta.3 (c (n "router-bridge") (v "0.1.13-beta.0+v2.3.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "08m40n60mhiaxdwk0c8d9pcz699c9nlz7v35gw6q9v5wkrr6784i") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.14+v2.3.0 (c (n "router-bridge") (v "0.1.14+v2.3.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0pkjzj2a3s1jkzifg8pyz5rkf2n0dli8107icn6swjrpwn3ankad") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.15+v2.3.1 (c (n "router-bridge") (v "0.1.15+v2.3.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1r4ljp1fbj33dyyj7jk2chab7997rnvk2dai6ss2xrwh5cp69y5y") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.16+v2.3.2 (c (n "router-bridge") (v "0.1.16+v2.3.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "04rvmjlgpjcj3ziinsq4b5dhqq12gq9wckc2fw5iq0k3mk3javng") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.18+v2.3.4 (c (n "router-bridge") (v "0.1.18+v2.3.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0sbm9hhynrkabxk6gkqj3kwvlwa496ww0czyls3636hfv1jbbgd6") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.19+v2.4.0-alpha.1 (c (n "router-bridge") (v "0.1.19+v2.4.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.167.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "insta") (r "^1.26.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "109vmzhqyf8w1xs82w13igkrfhs59khqls5s5iy6618y4y2j10mk") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.20+v2.3.5 (c (n "router-bridge") (v "0.1.20+v2.3.5") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "0y6ppl3c3ppm39lassfsiw5xfhcg63yr5mjrk5c4imikd48ixlgk") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.1.21+v2.4.0 (c (n "router-bridge") (v "0.1.21+v2.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1pgdycy48k8z5h4w9795hspms5dxllhdprygq12wahfp2wlfhsyr") (f (quote (("docs_rs")))) (y #t)))

(define-public crate-router-bridge-0.2.0+v2.4.0 (c (n "router-bridge") (v "0.2.0+v2.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.2.2") (d #t) (k 1)))) (h "1aj9wws04dl8k14dysqiwmw1rxhnigywf79yrnqmpmmi6jv9lq7f") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.1+v2.4.1 (c (n "router-bridge") (v "0.2.1+v2.4.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1m1pq1j8krrf8vz25wkybw9l2xmq26q51q711b04mzbjgwcgvjsa") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.2+v2.4.2 (c (n "router-bridge") (v "0.2.2+v2.4.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "0vl5fj2cpkp0y87gm5ib7x93h7shsmrvxvlqwdj3da759inz9dx3") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.3+v2.4.3 (c (n "router-bridge") (v "0.2.3+v2.4.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "16qfjjnswhk0r35iysgbnkxbkyjh19n6mqhhh1c47f228j9n4nqh") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.4+v2.4.5 (c (n "router-bridge") (v "0.2.4+v2.4.5") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.171.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.103.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.89.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.120.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.89.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "08njc9c8z468b4vzb51xhn14lbw6mpw5dkgfy71h6s95zdqsjkfd") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.5+v2.4.6 (c (n "router-bridge") (v "0.2.5+v2.4.6") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "10m44w8nz1bhz5gg2rz943ib6cxcr7x3gh7cph7zsv60w87gwwqi") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.6+v2.4.7 (c (n "router-bridge") (v "0.2.6+v2.4.7") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "08wnhlcnh8arpvgzdd3f4z7m9csf3qfnkdjf8kr59fdpxci2ikdv") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.7+v2.4.7 (c (n "router-bridge") (v "0.2.7+v2.4.7") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1mc41ghl8xn2qya7cpwgg5gf3s1m81bs4j0asyf6f73nwsyd2478") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.8+v2.4.8 (c (n "router-bridge") (v "0.2.8+v2.4.8") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "0dq09kn4r58dj9931bmwfqgddrvvm4b3c6lrh897m0dplq1dxcxp") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.2.9+v2.4.8 (c (n "router-bridge") (v "0.2.9+v2.4.8") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1bq2m75fcb3n0l3qrsian6vlcvmgcsg24k1bkr2pmw29f4632hyg") (f (quote (("docs_rs")))) (y #t)))

(define-public crate-router-bridge-0.3.0+v2.4.8 (c (n "router-bridge") (v "0.3.0+v2.4.8") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "19j83fv6ydz2lh88874csq3ba6l9bgzkxa0mp5gkfdg417lz1yhn") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.3.1+v2.4.9 (c (n "router-bridge") (v "0.3.1+v2.4.9") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1pjlf4s2q52i211y4bqh64cw0y05vbb2d51l13q27gmpf06w0p4b") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.3.2+v2.4.10 (c (n "router-bridge") (v "0.3.2+v2.4.10") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "01fgjljs1yzlvl6az88x436kzmaxyx6598cab4jzvwwrkw9wig33") (f (quote (("docs_rs")))) (y #t)))

(define-public crate-router-bridge-0.4.0+v2.4.10 (c (n "router-bridge") (v "0.4.0+v2.4.10") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1pr53icczq1bayjskj92bfldjl1z81a36i41jm9zdqf4wc0a19rc") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.0+v2.5.0 (c (n "router-bridge") (v "0.5.0+v2.5.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1q61m01anyl5fa4pz70macgfqvsw4gn1i7pkgm3p7dlmmxfhc62p") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.4.1+v2.4.11 (c (n "router-bridge") (v "0.4.1+v2.4.11") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "05zp8n8bqzmaqws5qibvckg54a4wi8g5a0x040kkyh0lqdlys3c4") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.1+v2.5.1 (c (n "router-bridge") (v "0.5.1+v2.5.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "01gvxq0x4al1w1pj17sfxb47df6j0m4c7dqj8pl36jcmhmfic5kb") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.2+v2.5.2 (c (n "router-bridge") (v "0.5.2+v2.5.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "11sa8k9v6s3nmv2rr304llbbvjh7p9jg43gqx3y14ar4b97hxldl") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.4.2+v2.4.12 (c (n "router-bridge") (v "0.4.2+v2.4.12") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.187.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.119.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.105.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.136.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.105.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1i54l23yalaa2fa51nhgnw5w0fdpq9mg1559dhf124cygswlf0q3") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.3+v2.5.3 (c (n "router-bridge") (v "0.5.3+v2.5.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "00abm23lasdpxyr0zbcn0cfxhrzpmdddl98yc5za8s8njsv3xns5") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.4.3+v2.4.13 (c (n "router-bridge") (v "0.4.3+v2.4.13") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "0jrh5lzicrv53rvzbd71wql3cmq9b15qq89vsy6nnmr9rn4xpvyp") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.4+v2.5.3 (c (n "router-bridge") (v "0.5.4+v2.5.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "076nlrbn3dfryl408gdlbawqzammj117vlfw7ssym4kxqfzy3lw2") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.5+v2.5.4 (c (n "router-bridge") (v "0.5.5+v2.5.4") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "0fbm6j5mc9b6vnkx23fvalr10qh1jg6lrffkl3b5y5kr1f9xyg53") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.6+v2.5.5 (c (n "router-bridge") (v "0.5.6+v2.5.5") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "0zpnhf1nq29kb4i1qjw5sl0lcq9vw87qa0vgwlk29ml2vpa9pk2f") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.8+v2.5.7 (c (n "router-bridge") (v "0.5.8+v2.5.7") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1576kb9l1k9bkf39j3nn73sxs07ibw6b09kvym8jcg8d0p5gi9ay") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.9+v2.6.0 (c (n "router-bridge") (v "0.5.9+v2.6.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "04z2rdsmz93nj5c4sx2165shdwcqh8yfg8silvmqi5a6bv7rpvc6") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.10+v2.6.1 (c (n "router-bridge") (v "0.5.10+v2.6.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1q2q7nw205yna2s1qz40g25ywzgii9gyr2d02bnfd5919dj4c64w") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.11+v2.6.2 (c (n "router-bridge") (v "0.5.11+v2.6.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "1xn2xs97igwbl64xv56xfxr07v25q54mlylpka7sd3l8kwg0bsj6") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.12+v2.6.2 (c (n "router-bridge") (v "0.5.12+v2.6.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "insta") (r "^1.28.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.0") (d #t) (k 1)))) (h "01djiic756sy50ya849vspbnhirvw7d2jmvq1cgkcbnkaaaa5wlp") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.13+v2.6.2 (c (n "router-bridge") (v "0.5.13+v2.6.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "1vbl4v78gzmm78gwkh137p377z7rfip8h2qw2mxzs457pbisn45a") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.14+v2.6.3 (c (n "router-bridge") (v "0.5.14+v2.6.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0wdcscch1z29gw72nhnfy7lyzbh7dj8sqdmjrbc26cd34jgpp6kf") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.15+v2.7.0 (c (n "router-bridge") (v "0.5.15+v2.7.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "1xxm1xrn6558vzgsvc93cciprfhf9jy0narqbf30navg31r7v2cr") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.16+v2.7.1 (c (n "router-bridge") (v "0.5.16+v2.7.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0xsp8130qyfzzhshc490khfd61g38y3d2b7qhasicp6w3ghnjkr2") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.17+v2.7.2 (c (n "router-bridge") (v "0.5.17+v2.7.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0b4s7y3apark75mvvcg929jykss964pacv77hd18mcvrf4hkw61g") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.18-alpha.0+v2.7.2 (c (n "router-bridge") (v "0.5.18-alpha.0+v2.7.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0yp79x58xnr8v5593anb6bf1k2pak9qqr140xlvxz2vydc01rbm7") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.18+v2.7.2 (c (n "router-bridge") (v "0.5.18+v2.7.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "1zacwzmv834z709by53x8llh2gpmnvzkmlw9gk43h6bnvmb5yfk7") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.19+v2.7.3 (c (n "router-bridge") (v "0.5.19+v2.7.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "113h7brzkvcqf3ddyigsp2n7m42fnnyqazgi0fkdqif8kxnc0f51") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.20+v2.7.4 (c (n "router-bridge") (v "0.5.20+v2.7.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "1frzk7s53cwm0ffjc3df9k3d9qd463zgpxn5w9v2vjn9qgralyai") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.21+v2.7.5 (c (n "router-bridge") (v "0.5.21+v2.7.5") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "04qbdk7jgm4hvla9lj5vvah4i90i28yhiif3lgksmqizzr2j855j") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.22+v2.7.8 (c (n "router-bridge") (v "0.5.22+v2.7.8") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.151.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.280.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.280.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.165.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.165.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.151.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.182.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.182.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.151.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "1n8qxigpjk9vwfkzvkjzhxbkwcxi0l9arpyld5ra1waynkmndfdf") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.23+v2.8.0-alpha.0 (c (n "router-bridge") (v "0.5.23+v2.8.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.151.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.280.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.280.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.165.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.165.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.151.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.182.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.182.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.151.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.151.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "092w7mb5744g1f2gzalvn9maaamzxpz3xy0z16sga7bghc5by938") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.24+v2.8.0-alpha.1 (c (n "router-bridge") (v "0.5.24+v2.8.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0ssnfnqp977i6ypi4l0cy1wfa3g8f5b6sw94sv99giv81fj94jsa") (f (quote (("docs_rs"))))))

(define-public crate-router-bridge-0.5.25+v2.8.0 (c (n "router-bridge") (v "0.5.25+v2.8.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio" "async_futures"))) (d #t) (k 2)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_console") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 0)) (d (n "deno_core") (r "^0.200.0") (d #t) (k 1)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 0)) (d (n "deno_crypto") (r "^0.129.0") (d #t) (k 1)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_url") (r "^0.115.0") (d #t) (k 1)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 0)) (d (n "deno_web") (r "^0.146.0") (d #t) (k 1)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 0)) (d (n "deno_webidl") (r "^0.115.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.1") (d #t) (k 2)) (d (n "which") (r "^4.4.2") (d #t) (k 1)))) (h "0g6nnh6ga5kxl0zypi4m3xy96vvnc87bqjx339dnay9rjxanrkwy") (f (quote (("docs_rs"))))))

