(define-module (crates-io ro ut route_verification_bgp) #:use-module (crates-io))

(define-public crate-route_verification_bgp-0.1.0 (c (n "route_verification_bgp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "bloom") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bloom")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.1.0") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "0fqcxc0jzjadjqicvzfd285a87qfi2a6svxirhxflv70m16r0a8f")))

(define-public crate-route_verification_bgp-0.2.0 (c (n "route_verification_bgp") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "bloom") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bloom")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.1.1") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "0kr4dpn5g9z1nmrzf0dk4ml4jvvf6221md9if59x1msgw8n9xlqg")))

(define-public crate-route_verification_bgp-0.3.0 (c (n "route_verification_bgp") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.2.0") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.2.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "12x4g07l5pla5x9h3pchn5f537bc23khm6p6w5ij1jy9q3m4gds7")))

(define-public crate-route_verification_bgp-0.4.0 (c (n "route_verification_bgp") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.2.0") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.2.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "0wyy51hp2p9vj6sqnsq3ixrr70wb22ari1qxqwwr3vkbs2gclgg0")))

(define-public crate-route_verification_bgp-0.5.0 (c (n "route_verification_bgp") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.2.0") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.2.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "19s9kqd3p6pckw8453w44n11cw0qgwasj290nhbziwl2l9p4gdpx")))

(define-public crate-route_verification_bgp-0.6.0 (c (n "route_verification_bgp") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as_path_regex") (r "^0.2.0") (d #t) (k 0) (p "route_verification_as_path_regex")) (d (n "as_rel") (r "^0.1.0") (d #t) (k 0) (p "route_verification_as_rel")) (d (n "bgpmap") (r "^0.1.0") (d #t) (k 0) (p "route_verification_bgpmap")) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "io") (r "^0.1.0") (d #t) (k 0) (p "route_verification_io")) (d (n "ipnet") (r "^2.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ir") (r "^0.3.0") (d #t) (k 0) (p "route_verification_ir")) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0") (d #t) (k 0)) (d (n "lex") (r "^0.2.0") (d #t) (k 0) (p "route_verification_lex")) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("unbounded_depth"))) (d #t) (k 0)))) (h "0r9janhzihaqbg1ia2sb2kb2gzvcydhwhzflwnfj1rb5gfmhsyky")))

