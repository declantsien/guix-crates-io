(define-module (crates-io ro fl rofl) #:use-module (crates-io))

(define-public crate-rofl-0.0.1 (c (n "rofl") (v "0.0.1") (d (list (d (n "color_quant") (r "^1.0") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "css-color-parser") (r "^0.1.2") (d #t) (k 0)) (d (n "derive-error") (r "^0.0.3") (d #t) (k 0)) (d (n "enum_derive") (r "^0.1") (d #t) (k 0)) (d (n "gif") (r "^0.9") (d #t) (k 0)) (d (n "gif-dispose") (r "^1.0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "image") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "lru-cache") (r "^0.1") (d #t) (k 0)) (d (n "macro-attr") (r "^0.2") (d #t) (k 0)) (d (n "maplit") (r "^0.1") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "newtype_derive") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rusttype") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_qs") (r "^0.2.1") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "try_opt") (r "^0.1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "unreachable") (r "^0.1") (d #t) (k 0)))) (h "1f862qkv4vhdzhcmvsa7wcf62g7nbl621bhpd3drjzqvnkwwy5k7")))

