(define-module (crates-io ro bo robot-description-builder) #:use-module (crates-io))

(define-public crate-robot-description-builder-0.0.1 (c (n "robot-description-builder") (v "0.0.1") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "043r3n9hcd7vlh37pnlnvn79fx76kxhamb73b62sy14h0ycchd2g") (f (quote (("urdf" "xml") ("sdf" "xml") ("default" "urdf")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("logging" "dep:log"))))))

(define-public crate-robot-description-builder-0.0.2 (c (n "robot-description-builder") (v "0.0.2") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (f (quote ("std"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0a4kwqgn7kgr21nmcq1cgr3l27w1lxlaw4ibxwcyzh4i7gasi907") (f (quote (("wrapper" "smart-joint-extension") ("urdf" "xml") ("smart-joint-extension") ("sdf" "xml") ("default" "urdf")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("logging" "dep:log"))))))

(define-public crate-robot-description-builder-0.0.3 (c (n "robot-description-builder") (v "0.0.3") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("std"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16rp4kq2hfj8xklyzzfgklj07y0d9irxbk26aazaqw2jyhr6h97z") (f (quote (("wrapper" "smart-joint-extension") ("urdf" "xml") ("smart-joint-extension") ("sdf" "xml") ("default" "urdf")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("logging" "dep:log"))))))

