(define-module (crates-io ib c- ibc-types-transfer) #:use-module (crates-io))

(define-public crate-ibc-types-transfer-0.3.0 (c (n "ibc-types-transfer") (v "0.3.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.29") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0gnl376711xv8yp3w9gdjb9s18kcsv9gxl67wxfp74ci4pn4vbji") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.4.0 (c (n "ibc-types-transfer") (v "0.4.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0nwi5v141kq8xcpl9jgaghpclf648igqa2x7iaji3wdsr9z7a1rm") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (y #t) (r "1.60")))

(define-public crate-ibc-types-transfer-0.5.0 (c (n "ibc-types-transfer") (v "0.5.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1x05wb14fbbxg3n6srj50v6hallgfrgzb6qcc0nqn1zdamxzaq0k") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.6.0 (c (n "ibc-types-transfer") (v "0.6.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0q4ivgxsj637zhvrszgps1g7ijyvc3dk0rqqbqyj46fq8isv3vmq") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.6.1 (c (n "ibc-types-transfer") (v "0.6.1") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "033rh7jjv7h3s5krvpa07x98gdpl4di4453bn0hfhjlvmaalkil4") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.6.2 (c (n "ibc-types-transfer") (v "0.6.2") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1cli6gnxy655a6y3gm9pil5vq0r6n4qry2lzdlbkxp1fa3ma0vqp") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.6.3 (c (n "ibc-types-transfer") (v "0.6.3") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0kigyin0x76ah59nx9al2iskifqgiycyc1ddjwzfv023n6hgzqja") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.6.4 (c (n "ibc-types-transfer") (v "0.6.4") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "04h6v8g1hbps1yj5dyb1n9xw7cwlpr0jds8x6wjiyxirrb02pmgx") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.7.0 (c (n "ibc-types-transfer") (v "0.7.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "031dph93lqn8d8ga7vm56g41cridqflyjinp4fn9a78h755ps19f") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.8.0 (c (n "ibc-types-transfer") (v "0.8.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0dqc21647z555l95fjxdxr1zgmac1fqbmi579v5i3q0jh0f4wpk3") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.9.0 (c (n "ibc-types-transfer") (v "0.9.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1c70ap8ckix4363mk7ldzj4vi01875q2099vdyljyq2qxacvya8i") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.10.0 (c (n "ibc-types-transfer") (v "0.10.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "02m6n6ahbz2x9rrdz6iyz6gw4iqkyx21h6abxp57r40cr7x3g48k") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.11.0 (c (n "ibc-types-transfer") (v "0.11.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1p33b7014arw5ij1s0psn6b2sicf4gnzbh9j3khzsmbhk2aj2df9") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.11.1 (c (n "ibc-types-transfer") (v "0.11.1") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "06jmx6qykmmf3bmbzzwdrx6i3x7v1qi4m90qywkwlywq00045xs5") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.12.0 (c (n "ibc-types-transfer") (v "0.12.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0d3d6m4xg7vb7mavg5b3p6xk31zzxjd342pc68b0v3ddzfhkr5xd") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-transfer-0.13.0 (c (n "ibc-types-transfer") (v "0.13.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tendermint-testgen") (r "^0.33") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0xcz9icvxqiznz1jqd6p4l9ax5bgrmmhx0pa9v6kqdlmp3kr4lnr") (f (quote (("with_serde" "serde" "serde_derive") ("upgrade_client") ("std" "serde/std" "displaydoc/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

