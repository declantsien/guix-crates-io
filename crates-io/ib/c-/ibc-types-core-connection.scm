(define-module (crates-io ib c- ibc-types-core-connection) #:use-module (crates-io))

(define-public crate-ibc-types-core-connection-0.3.0 (c (n "ibc-types-core-connection") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.31.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.3.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.3.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.3.0") (f (quote ("serde"))) (k 0)) (d (n "ibc-types-domain-type") (r "^0.3.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.3.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.3.0") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.32.0") (k 0)) (d (n "tendermint-proto") (r "^0.32.0") (k 0)) (d (n "tendermint-testgen") (r "^0.32.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "07nwqgrnx2m56vyxihfwvasml66xb6qcx1ai178l2nq2zyrp2ifg") (f (quote (("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "serde_json") ("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.5.0 (c (n "ibc-types-core-connection") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.5.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.5.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.5.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.5.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.5.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.5.0") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1m6h3ivbj1zpa6bs3l9kp01xfhkslfr9w52s0462w9wfr3rv7flq") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.6.0 (c (n "ibc-types-core-connection") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.6.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.6.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.6.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.6.0") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0p72s4sspkskgphsdhchgpnk549zap8hkrrhrggld9ikyavybyad") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.6.1 (c (n "ibc-types-core-connection") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.1") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.1") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.6.1") (k 0)) (d (n "ibc-types-domain-type") (r "^0.6.1") (k 0)) (d (n "ibc-types-identifier") (r "^0.6.1") (k 0)) (d (n "ibc-types-timestamp") (r "^0.6.1") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0jnmgwwkilsq0gwy7r3cp671arcvjmjzasxg3hb3ml2i92g5d8ga") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.6.2 (c (n "ibc-types-core-connection") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.2") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.2") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.6.2") (k 0)) (d (n "ibc-types-domain-type") (r "^0.6.2") (k 0)) (d (n "ibc-types-identifier") (r "^0.6.2") (k 0)) (d (n "ibc-types-timestamp") (r "^0.6.2") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0psan7v2hadldd1dqrimspy4zcasg0xds8rkz5z2f8d6dhbfy2xv") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.6.3 (c (n "ibc-types-core-connection") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.3") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.3") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.6.3") (k 0)) (d (n "ibc-types-domain-type") (r "^0.6.3") (k 0)) (d (n "ibc-types-identifier") (r "^0.6.3") (k 0)) (d (n "ibc-types-timestamp") (r "^0.6.3") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "05mwhg2fy03gpy8pcjc4m47y1m8k9pbfjivn31p7pss8xlaa67nc") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.6.4 (c (n "ibc-types-core-connection") (v "0.6.4") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.33.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.4") (k 0)) (d (n "ibc-types-core-client") (r "^0.6.4") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.6.4") (k 0)) (d (n "ibc-types-domain-type") (r "^0.6.4") (k 0)) (d (n "ibc-types-identifier") (r "^0.6.4") (k 0)) (d (n "ibc-types-timestamp") (r "^0.6.4") (k 0)) (d (n "ics23") (r "^0.10.1") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0qs1yy89d4c68jdzdjh4qkvaffc35yc7dw1gdswi8hjpcj8fy05q") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.7.0 (c (n "ibc-types-core-connection") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.37.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.7.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.7.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.7.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.7.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.7.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.7.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1jaa8q4parq32p4s9h77h6vqkv9461kyk5zzaj7yrl1jlgsdswjp") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.8.0 (c (n "ibc-types-core-connection") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.37.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.8.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.8.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.8.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.8.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.8.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.8.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0qkhnz96wl8gyfpf1qivxymqf7pa4cxahpkl24lp22dfv7f9q4dk") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.9.0 (c (n "ibc-types-core-connection") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.39.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.9.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.9.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.9.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.9.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.9.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.9.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1ni12qbdqkb48ppzrvkbrbpmc0lrkll2bdjxfw1x8m9d3bbblkgk") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.10.0 (c (n "ibc-types-core-connection") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.39.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.10.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.10.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.10.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.10.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.10.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.10.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1l63bqfgw8nrmpp9xgcvkrk8k5884x1y4cbfs8x99341694x14fq") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.11.0 (c (n "ibc-types-core-connection") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.40.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.11.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.11.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.11.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.11.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.11.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.11.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1dgb8wvz6qq2ngpwri924v0bqbisk1sx9l65yxm27w8cwxkr8vzq") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.11.1 (c (n "ibc-types-core-connection") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.40.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.11.1") (k 0)) (d (n "ibc-types-core-client") (r "^0.11.1") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.11.1") (k 0)) (d (n "ibc-types-domain-type") (r "^0.11.1") (k 0)) (d (n "ibc-types-identifier") (r "^0.11.1") (k 0)) (d (n "ibc-types-timestamp") (r "^0.11.1") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "044mlv1kps1hifcj78h7j7rr0m1wf2jgdbw7bwr6jnid4cm86ycg") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.12.0 (c (n "ibc-types-core-connection") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.41.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.12.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.12.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.12.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.12.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.12.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.12.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1rsgj0k2j6c44hc4fayxj363kzipca18qiq7jh2lifp901n352js") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

(define-public crate-ibc-types-core-connection-0.13.0 (c (n "ibc-types-core-connection") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into" "display"))) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ibc-proto") (r "^0.42.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.13.0") (k 0)) (d (n "ibc-types-core-client") (r "^0.13.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "ibc-types-core-commitment") (r "^0.13.0") (k 0)) (d (n "ibc-types-domain-type") (r "^0.13.0") (k 0)) (d (n "ibc-types-identifier") (r "^0.13.0") (k 0)) (d (n "ibc-types-timestamp") (r "^0.13.0") (k 0)) (d (n "ics23") (r "^0.11.0") (f (quote ("host-functions"))) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "safe-regex") (r "^0.2.5") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0vhdkxp69vnhbwpgg95wa7d1rlf0ybbqkpf0727b9zac9cngygsr") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "ibc-proto/std" "ibc-types-core-client/std" "ibc-types-identifier/std" "ibc-types-timestamp/std" "ics23/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "sha2/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (s 2) (e (quote (("parity-scale-codec" "dep:parity-scale-codec" "dep:scale-info") ("borsh" "dep:borsh")))) (r "1.60")))

