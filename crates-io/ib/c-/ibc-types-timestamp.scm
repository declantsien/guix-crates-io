(define-module (crates-io ib c- ibc-types-timestamp) #:use-module (crates-io))

(define-public crate-ibc-types-timestamp-0.3.0 (c (n "ibc-types-timestamp") (v "0.3.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.32.0") (k 0)) (d (n "tendermint-proto") (r "^0.32.0") (k 0)) (d (n "tendermint-testgen") (r "^0.32.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "10qyvn4hrl3y5mc4jsdgd6ywbrzalmhlhlig156n31369fb112iv") (f (quote (("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.4.0 (c (n "ibc-types-timestamp") (v "0.4.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1my39v5xdjnkdih63rywfk2p7ckhv64bhxp1h568n0j47lqjzmcf") (f (quote (("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (y #t) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.5.0 (c (n "ibc-types-timestamp") (v "0.5.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "16d597lkw5m4zvlahl9s32x59jhfrdx1pxr8yvxw7r08vnvbl7b6") (f (quote (("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.6.0 (c (n "ibc-types-timestamp") (v "0.6.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1z4zd4znm1ysx2z3flr5i7bv7181y2mi4ly3gw5diiccvi5sj52i") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.6.1 (c (n "ibc-types-timestamp") (v "0.6.1") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1kl964mxnfs6vpxcdvnmq1vrfky53mnfm6r9mlzscncipfhliqmb") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.6.2 (c (n "ibc-types-timestamp") (v "0.6.2") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1kbkh7ry03qixrmr8nf7gjsav4nyshafnwbirmf42p2j008dwysy") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.6.3 (c (n "ibc-types-timestamp") (v "0.6.3") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1fjf111rzvskmkqkmdg1q23f36kip44jg5hrb1mn8p6fmp4fhz70") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.6.4 (c (n "ibc-types-timestamp") (v "0.6.4") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.11") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.33.0") (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "tendermint-testgen") (r "^0.33.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1kyk0lbriz7dhfn1yyppfs65hf5znbbng939ady6ldbs3qkzk52k") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.7.0 (c (n "ibc-types-timestamp") (v "0.7.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1nbkc9sjwdz9pvg72vxlk8dnnjvbqw7zvi82gcr7r5nb52k83xim") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.8.0 (c (n "ibc-types-timestamp") (v "0.8.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0vhh3qygphzydflfb30a08q5xrg1fi5jcdzxs6vs0njb0d6wm2qa") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.9.0 (c (n "ibc-types-timestamp") (v "0.9.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1878nllqhb30ch15cfb0znv2sn140gx2hn1y7gblcb0f2v2vadsz") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.10.0 (c (n "ibc-types-timestamp") (v "0.10.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "14qw2zfy91jkrysd0dnfav719spvragzsy2fn34cxnf61iphng3p") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.11.0 (c (n "ibc-types-timestamp") (v "0.11.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r ">=0.3.0, <0.3.20") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1fmfvdm08kzhvngzidvh6b4qdq7zvsyq6fy43gy2ljcdvsa67x79") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.11.1 (c (n "ibc-types-timestamp") (v "0.11.1") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "1h6ziyw70lfb8qd9c1njrbk6a62g1fqn36wm258l901lpvj3vs95") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.12.0 (c (n "ibc-types-timestamp") (v "0.12.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "0yi32b4l8ikjhd0qfqacbdl9v4dksm6lnd51m0ngdgldhdiygllk") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

(define-public crate-ibc-types-timestamp-0.13.0 (c (n "ibc-types-timestamp") (v "0.13.0") (d (list (d (n "borsh") (r "^0.10.0") (o #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "parity-scale-codec") (r "^3.0.0") (f (quote ("full"))) (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "prost") (r "^0.12") (k 0)) (d (n "scale-info") (r "^2.1.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (k 0)) (d (n "tendermint") (r "^0.34.0") (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "tendermint-testgen") (r "^0.34.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "time") (r "^0.3") (k 0)) (d (n "tracing") (r "^0.1.36") (k 2)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "env-filter" "json"))) (d #t) (k 2)))) (h "055k1r2swidh76ndpgw1ixfy3axndz8syikrsxpir0jy7jxhpm6a") (f (quote (("with_serde" "serde" "serde_derive" "serde_json") ("upgrade_client") ("std" "bytes/std" "displaydoc/std" "num-traits/std" "prost/std" "serde/std" "serde_json/std" "subtle-encoding/std" "tendermint/clock" "tendermint/std") ("mocks-no-std" "cfg-if") ("mocks" "tendermint-testgen" "tendermint/clock" "cfg-if" "parking_lot") ("default" "std")))) (r "1.60")))

