(define-module (crates-io gi ve given) #:use-module (crates-io))

(define-public crate-given-0.1.0 (c (n "given") (v "0.1.0") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)))) (h "137y1is1pnaciw7bf22y3q4g96l3bgi43nrjzjq78aid246q1n5p")))

(define-public crate-given-0.1.1 (c (n "given") (v "0.1.1") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)))) (h "11hcz3rbg8yaf9xs95vqcyqwf3hdahazyf4nrwl6miqqm3l9qwqs")))

(define-public crate-given-0.1.2 (c (n "given") (v "0.1.2") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)))) (h "0grgnys5p6yg99m8fhsnapi70x7x2wf038iqmfz6ikgd6dk998p1")))

(define-public crate-given-0.1.3 (c (n "given") (v "0.1.3") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)) (d (n "webbrowser") (r "^1.0.1") (d #t) (k 0)))) (h "009hm0n2dvh65a1522pgnl1kvp0lcb6p6rjhqmyfbbngqzrkcvg8")))

(define-public crate-given-0.1.4 (c (n "given") (v "0.1.4") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)) (d (n "webbrowser") (r "^1.0.1") (d #t) (k 0)))) (h "0ff21wkg8cmag06jlf2vbr4dnzwh7k1w8xhd58mj0zwa2baydb84")))

(define-public crate-given-0.1.5 (c (n "given") (v "0.1.5") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)) (d (n "webbrowser") (r "^1.0.1") (d #t) (k 0)))) (h "1xxn70apjrmbqr90zw3z3cxryivzysxz5q0dgbpk5qa3vjr3ajrj")))

(define-public crate-given-0.1.6 (c (n "given") (v "0.1.6") (d (list (d (n "altar") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serde" "serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "tokio") (r "^1.38.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tree-sitter") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21") (d #t) (k 0)) (d (n "webbrowser") (r "^1.0.1") (d #t) (k 0)))) (h "1p98j3m4kjzypkxvmy7534i4sd67snd4dlfi483ch73d9lain9c4")))

