(define-module (crates-io gi lr gilrs-core) #:use-module (crates-io))

(define-public crate-gilrs-core-0.1.0 (c (n "gilrs-core") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("winerror" "xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0s06sb5lnqrhbk6s2ga2x82z4diswfhrrd2l30rbsb4jfhbj4wnh")))

(define-public crate-gilrs-core-0.2.0 (c (n "gilrs-core") (v "0.2.0") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("winerror" "xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zdjhs3isg92glpw2vzd7j6yp870dz7sl1b6c6pz4r141j2ry8z2")))

(define-public crate-gilrs-core-0.2.1 (c (n "gilrs-core") (v "0.2.1") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("winerror" "xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nphcji2xlaj4pp8yrmmkd56jiv9lfw9dmn79f7jf7cf2mvnxnvk")))

(define-public crate-gilrs-core-0.2.2 (c (n "gilrs-core") (v "0.2.2") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1k8w70gfch5kab09j276djbxgxyrsvzms7llpg27hyqmjlwla3s1")))

(define-public crate-gilrs-core-0.2.3 (c (n "gilrs-core") (v "0.2.3") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0l26zw569ndq6pn7nipv1d7x0d213yzvyiy0plll3i8k5lhpi1mn")))

(define-public crate-gilrs-core-0.2.4 (c (n "gilrs-core") (v "0.2.4") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mb8cga7hjj0i375xf0skhjpv2rzla87kby29jg6qa1nzbc3x8bx")))

(define-public crate-gilrs-core-0.2.5 (c (n "gilrs-core") (v "0.2.5") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hy1mnfa9q4mmpxhgr4mkgpbja972w7np8ig6sabbv0rv6i4xpbb")))

(define-public crate-gilrs-core-0.2.6 (c (n "gilrs-core") (v "0.2.6") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1k8928i2y21akdxas1ha2sd7ff937dz50mgyf9l6vwkaykd5iis3")))

(define-public crate-gilrs-core-0.3.0 (c (n "gilrs-core") (v "0.3.0") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.62") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1im2xg70qgxmk7v3p9imbph5hfqn6p96w3y9p2nx4rswdh2d890h") (f (quote (("serde-serialize" "serde"))))))

(define-public crate-gilrs-core-0.3.1 (c (n "gilrs-core") (v "0.3.1") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.20") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen-rs") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2) (p "wasm-bindgen")) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rym5vn1y9q2fb3f6j1bayxxkmpikj1kikr8k98xk87rgfwmnpls") (f (quote (("wasm-bindgen" "js-sys" "web-sys") ("serde-serialize" "serde"))))))

(define-public crate-gilrs-core-0.3.2 (c (n "gilrs-core") (v "0.3.2") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusty-xinput") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.13") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen-rs") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2) (p "wasm-bindgen")) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "125bmban224w7lwihllmzkd0m81bkl684iyqn74jk178w4n2diw4") (f (quote (("wasm-bindgen" "js-sys" "web-sys") ("serde-serialize" "serde"))))))

(define-public crate-gilrs-core-0.4.0 (c (n "gilrs-core") (v "0.4.0") (d (list (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "02irg35sswjkfv6aqrzpl6dwb5karkr5xv3kh38wj682kp819hm0") (f (quote (("serde-serialize" "serde"))))))

(define-public crate-gilrs-core-0.4.1 (c (n "gilrs-core") (v "0.4.1") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "00kxkhwx7fi10zll0wfcbgw3g4m4wp7s822fi5zd5by5gx5dka4n") (f (quote (("serde-serialize" "serde"))))))

(define-public crate-gilrs-core-0.5.0 (c (n "gilrs-core") (v "0.5.0") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1qi9g7hr0ysdhbg71w5wy4aaf0zlcvzw5x3frl5nqj36p6r0wzyr") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi"))))))

(define-public crate-gilrs-core-0.5.1 (c (n "gilrs-core") (v "0.5.1") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lsyb30vgk34qc73cj77ij1d94vj5d7v7b4a5k70j1r71np9ykhy") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.2 (c (n "gilrs-core") (v "0.5.2") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pb68v77p0355xaxs7y8vayg3d5lc8zx4rakw6j80ckc8xbd72b7") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.3 (c (n "gilrs-core") (v "0.5.3") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04lrcyp1i46l76mnf3mpkvr2mf78civ839z53z0anac24lc4h96j") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.4 (c (n "gilrs-core") (v "0.5.4") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("ioctl"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <0.49") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13wdvwjwd7axqdwar4qm93zzjs8s6madwnf5c7zlza75jvamafrp") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.5 (c (n "gilrs-core") (v "0.5.5") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <0.49") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1y94prmpx2afnfxf82za8fjnmbb661igbb5bixp7a1x2n465nx7x") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.6 (c (n "gilrs-core") (v "0.5.6") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <0.49") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rd92a1jhahl1g9jc4yglnghyjaaiabs4rx0qk7n019gawkhynzq") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.7 (c (n "gilrs-core") (v "0.5.7") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "io-kit-sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <=0.51") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03c3gfrvrrp8nvpn67x131k1avpl67xanjsc6fmgqgynp3lrkk2w") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.64.0")))

(define-public crate-gilrs-core-0.5.8 (c (n "gilrs-core") (v "0.5.8") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "inotify") (r "^0.10.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "io-kit-sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <=0.51") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1x9g7lx0v0afkqjn9s38yd4gl0iisc8iqyg4k6iys6sgpq1lw7z1") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.65.0")))

(define-public crate-gilrs-core-0.5.9 (c (n "gilrs-core") (v "0.5.9") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "inotify") (r "^0.10.2") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "io-kit-sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <=0.51") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gc3wf7fbrrpraj7fshnh08s515np6sv46kxhf3v2iws2zd6k1qp") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.65.0")))

(define-public crate-gilrs-core-0.5.10 (c (n "gilrs-core") (v "0.5.10") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "inotify") (r "^0.10.2") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "io-kit-sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <=0.52") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nlc1qx1819hi28zyqgv6cjw2r0dxarw217819s6vwyjgmxq5w8a") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.65.0")))

(define-public crate-gilrs-core-0.5.11 (c (n "gilrs-core") (v "0.5.11") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "inotify") (r "^0.10.2") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "io-kit-sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libudev-sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (f (quote ("ioctl" "event"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "rusty-xinput") (r "^1.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Gamepad" "GamepadButton" "GamepadMappingType" "Window" "Navigator" "DomException"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("xinput"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r ">=0.44, <=0.54") (f (quote ("Gaming_Input" "Foundation_Collections" "Devices_Power" "System_Power" "Gaming_Input_ForceFeedback"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03kj5j48zpzka9bmbz4a14wnqcsw0wqyfrkxwr42apqm18kk5hc5") (f (quote (("xinput" "rusty-xinput" "winapi") ("wgi" "windows") ("serde-serialize" "serde") ("default" "wgi")))) (r "1.65.0")))

