(define-module (crates-io gi to gitoid) #:use-module (crates-io))

(define-public crate-gitoid-0.1.1 (c (n "gitoid") (v "0.1.1") (d (list (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("io-util" "fs" "rt" "macros"))) (d #t) (k 0)))) (h "1ab4cf9m32r3gqwjbpdsgzb86q0h4ajxc6wbm2r4vcd3cm04pxz3") (y #t)))

(define-public crate-gitoid-0.1.2 (c (n "gitoid") (v "0.1.2") (d (list (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "sha1") (r "^0.10.4") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("io-util" "fs" "rt" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1rimlmpb84sjlfzk4cid0i9gw6g9rr84pl6ckvg7yzj2ajy74pf8") (y #t)))

(define-public crate-gitoid-0.1.3 (c (n "gitoid") (v "0.1.3") (d (list (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "sha1") (r "^0.10.4") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("io-util" "fs" "rt" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0y43k075ligalig3jijyihb0n2jpsrzz0pdrybmxg4q85g6q8ng9") (y #t)))

(define-public crate-gitoid-0.1.4 (c (n "gitoid") (v "0.1.4") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "sha1") (r "^0.10.4") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1734q4ikgx7wx8cr36m3r2xc65jah7gcbcr05ya6d0q2ndxb17il") (y #t)))

(define-public crate-gitoid-0.1.5 (c (n "gitoid") (v "0.1.5") (d (list (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "sha1") (r "^0.10.4") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "02nxb5wndarjm9ad4ryhnp0fj5p0d5x5k385iqzb8lfhxdrkdjnx") (y #t)))

(define-public crate-gitoid-0.2.0 (c (n "gitoid") (v "0.2.0") (d (list (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "sha1") (r "^0.10.6") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "02d5b6w5hpwax2qgv09nd3qv36hq439kic4c8r1qzg05fp8wv4i4")))

(define-public crate-gitoid-0.3.0 (c (n "gitoid") (v "0.3.0") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (f (quote ("std"))) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "1d37rymvsf220lr818hl35wd57gzhyzjd8zvzil5hdp81n6hjkpv")))

(define-public crate-gitoid-0.4.0 (c (n "gitoid") (v "0.4.0") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (f (quote ("std"))) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "02z88yksaccl6q51czmi6bfdbn483pvx9nddsiiqaq27znl10cqa")))

(define-public crate-gitoid-0.5.0 (c (n "gitoid") (v "0.5.0") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "sha1") (r "^0.10.6") (f (quote ("std"))) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "fs" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "1h3zakpyszs426bkwjvk6aq9vwql0ckvg2gcggbwa8m5kz8z1jdd")))

(define-public crate-gitoid-0.5.1 (c (n "gitoid") (v "0.5.1") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "sha1") (r "^0.10.6") (f (quote ("std"))) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "fs" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "0nc82a87ac6b5vp2gp88mzbnz8p23qyyvrh1lxdmf01nrigkldpl")))

(define-public crate-gitoid-0.6.0 (c (n "gitoid") (v "0.6.0") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (f (quote ("digest-trait"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "fs" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (o #t) (d #t) (k 0)))) (h "0dnbai0xy1p62xypgx2l3wf0lyybp2yp32vgyxa8k34axz1np5dh") (f (quote (("default" "async" "hex" "serde" "sha1" "sha1cd" "sha256" "std" "url")))) (s 2) (e (quote (("url" "dep:url" "hex" "std") ("std" "digest/std" "sha1?/std" "sha1collisiondetection?/std" "sha2?/std" "dep:format-bytes") ("sha256" "dep:sha2") ("sha1cd" "dep:sha1collisiondetection") ("sha1" "dep:sha1") ("serde" "dep:serde" "url" "std") ("hex" "dep:hex" "std") ("async" "dep:tokio" "std"))))))

(define-public crate-gitoid-0.7.0 (c (n "gitoid") (v "0.7.0") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (f (quote ("digest-trait"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "fs" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (o #t) (d #t) (k 0)))) (h "1b8phhgh9gw41kg03pxwc74klmp1vlbg11p8ghdmj50307kkqbjb") (f (quote (("default" "async" "hex" "serde" "sha1" "sha1cd" "sha256" "std" "url")))) (s 2) (e (quote (("url" "dep:url" "hex" "std") ("std" "digest/std" "sha1?/std" "sha1collisiondetection?/std" "sha2?/std" "dep:format-bytes") ("sha256" "dep:sha2") ("sha1cd" "dep:sha1collisiondetection") ("sha1" "dep:sha1") ("serde" "dep:serde" "url" "std") ("hex" "dep:hex" "std") ("async" "dep:tokio" "std"))))))

(define-public crate-gitoid-0.7.1 (c (n "gitoid") (v "0.7.1") (d (list (d (n "digest") (r "^0.10.7") (d #t) (k 0)) (d (n "format-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (o #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.3") (f (quote ("digest-trait"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("io-util" "fs" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (o #t) (d #t) (k 0)))) (h "1r8skxlmmlbr4j3ixc933hnn9c8bhi93i55fysnicz0bngjbl5z7") (f (quote (("default" "async" "hex" "serde" "sha1" "sha1cd" "sha256" "std" "url")))) (s 2) (e (quote (("url" "dep:url" "hex" "std") ("std" "digest/std" "sha1?/std" "sha1collisiondetection?/std" "sha2?/std" "dep:format-bytes") ("sha256" "dep:sha2") ("sha1cd" "dep:sha1collisiondetection") ("sha1" "dep:sha1") ("serde" "dep:serde" "url" "std") ("hex" "dep:hex" "std") ("async" "dep:tokio" "std"))))))

