(define-module (crates-io gi t- git-object) #:use-module (crates-io))

(define-public crate-git-object-0.1.0 (c (n "git-object") (v "0.1.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quick-error") (r "^1.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0gzwyq6sc5yxxia9hc06cr15fgjn6rjv5cvdza2mpnbibpbaxsbp") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde"))))))

(define-public crate-git-object-0.3.0 (c (n "git-object") (v "0.3.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-ref") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1pycasr5s6fpfkydv17hq1wz4qc68fbin2pc1flb6nfdvp1g598r") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde"))))))

(define-public crate-git-object-0.4.0 (c (n "git-object") (v "0.4.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0nh56fg3nv2knmd8xkxnaln3q8v089z8054ff3vnk6yydi043433") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde"))))))

(define-public crate-git-object-0.5.0 (c (n "git-object") (v "0.5.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1wgc1m7jl6zcw8kzhmyap1xwz46mhk1s420y316qjzg5vki2kaqi") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde"))))))

(define-public crate-git-object-0.6.0 (c (n "git-object") (v "0.6.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-hash") (r "^0.1.0") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1vh81ym6597slm64mkgihkwspflgiwgrrg9k8mnl6rk7c4r42aig") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1"))))))

(define-public crate-git-object-0.7.0 (c (n "git-object") (v "0.7.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "123yxbr3ja2afvgyqvkw0czzzqsq23walwdh5lv53zprlbvgkrlk") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1"))))))

(define-public crate-git-object-0.8.0 (c (n "git-object") (v "0.8.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-hash") (r "^0.3.0") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0yymdl0iyp3vcywyj10qwrndp43fbs2i0y1azdqj7jh7g0lckb18") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1"))))))

(define-public crate-git-object-0.9.0 (c (n "git-object") (v "0.9.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-hash") (r "^0.3.0") (d #t) (k 0)) (d (n "git-ref") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^6.0.0-alpha1") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0v4zh4alnlyxd93f7dxsdkxhd9k32vpqzk3knri4b0m71iqhhx9z") (f (quote (("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1"))))))

(define-public crate-git-object-0.10.0 (c (n "git-object") (v "0.10.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.2.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-testtools") (r "^0.3") (d #t) (k 2)) (d (n "git-validate") (r "^0.4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "17g00kvjkbjjywqcmn2pnf1bz8fsyf3xjah592hwgiiipxg2slga") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.11.0 (c (n "git-object") (v "0.11.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.3.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-testtools") (r "^0.4") (d #t) (k 2)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1m8gca2jqm6ykvlw4mzhl4f329ifpmkbm5dhiklrgs6j8qrn6fra") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.12.0 (c (n "git-object") (v "0.12.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.3.1") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-testtools") (r "^0.4") (d #t) (k 2)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0s9c2b4gd039aby56vq1aha494lh9y11kwlpf2z53jmb0axll4g1") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.12.1 (c (n "git-object") (v "0.12.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.3.1") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1nbavcwvisj8qf0fhdin11svwy958invnrf9daj0zml92lc10xb8") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.12.2 (c (n "git-object") (v "0.12.2") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.3.1") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0n541cs06l3sz5wh2xk17hcixznch4c1mjybkgz3zajf9in0gr4p") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.13.0 (c (n "git-object") (v "0.13.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.5.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.5.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "09lvrf33cjj3b80h5n3hz259c8xr0mm0gjkmn0j5d6rws678fmkx") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.13.1 (c (n "git-object") (v "0.13.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.5.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.6.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1l52gn6xj6ps9m3ji17xyn5m028341ciyr5p7hll41748zxyx0md") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.14.0 (c (n "git-object") (v "0.14.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std"))) (k 0)) (d (n "git-actor") (r "^0.5.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.6.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "0hs19ka6cnwka5qs0v47bnhk7q5md6m5qsm74zwdysa7jmjnpw2i") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.14.1 (c (n "git-object") (v "0.14.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "git-actor") (r "^0.5.3") (d #t) (k 0)) (d (n "git-hash") (r "^0.7.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1pjlzvfkb8q4cy83x6a2akcv5nlsv2y0m7yk1vd8s126ff5ajr25") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.15.0 (c (n "git-object") (v "0.15.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "git-actor") (r "^0.6.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.8.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "015w580s78a1alril9kjba3x9p0y24yd4asgs9kvir8kw6j95fig") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.15.1 (c (n "git-object") (v "0.15.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "git-actor") (r "^0.6.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.8.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)))) (h "1v0i4kaq85xrzf59553xnbyi26jj1hq3jz50d04szr13nq6jgbv0") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.16.0 (c (n "git-object") (v "0.16.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-actor") (r "^0.7.0") (d #t) (k 0)) (d (n "git-hash") (r "^0.8.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^0.4.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "0vpwd61p6p9xn1prkj3nm8928n1bgz5jwpw5953x9mnsz8sdhrxp") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.17.0 (c (n "git-object") (v "0.17.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-actor") (r "^0.8.0") (d #t) (k 0)) (d (n "git-features") (r "^0.19.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.1") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "16gq3aanhakpi1qc90jx17xr7nnaxgq0h074n0w608if8gz61sci") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.17.1 (c (n "git-object") (v "0.17.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "git-actor") (r "^0.8.0") (d #t) (k 0)) (d (n "git-features") (r "^0.19.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.2") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "1qmhci2cd5n2mbbc8ifny5dkfsjpblkqriiivpw91qs3v22cy19n") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.18.0 (c (n "git-object") (v "0.18.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.9.0") (d #t) (k 0)) (d (n "git-features") (r "^0.20.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.3") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "0w53yqki42z9vx8gyrk3slvx2ia9lwgfdkva2jk6d8rqy379ymzd") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.19.0 (c (n "git-object") (v "0.19.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.10.0") (d #t) (k 0)) (d (n "git-features") (r "^0.21.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.4") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "0fy69sy9niz91zj9lfyxi6gxqm8kplbi1f8vqhi9cyzicrx8lr43") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.20.0 (c (n "git-object") (v "0.20.0") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.11.0") (d #t) (k 0)) (d (n "git-features") (r "^0.22.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.6") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "13ha8db775k48w8jrwcxqc4lga8vs9nq2wq321jbajwdl9fxmfvq") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.20.1 (c (n "git-object") (v "0.20.1") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.11.1") (d #t) (k 0)) (d (n "git-features") (r "^0.22.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.7") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "0z60j8hrfafjfadwyzgkj12l14cypg8za4kxi79sm45lfdfd4wr8") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.20.2 (c (n "git-object") (v "0.20.2") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.11.3") (d #t) (k 0)) (d (n "git-features") (r "^0.22.2") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.8") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "0vvsiym7mgp6x0pcfqi5pc0wjj7r8pyjbiqyaxl1cgms7xxg2iah") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.20.3 (c (n "git-object") (v "0.20.3") (d (list (d (n "bstr") (r "^0.2.13") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.11.3") (d #t) (k 0)) (d (n "git-features") (r "^0.22.2") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.8") (d #t) (k 0)) (d (n "git-validate") (r "^0.5.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)))) (h "1lqnpg4h4fpvi97n3cc0bazk8jd2gapbdyalsqmr133k30spm66x") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde1" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.21.0 (c (n "git-object") (v "0.21.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.12.0") (d #t) (k 0)) (d (n "git-features") (r "^0.22.5") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.10") (d #t) (k 0)) (d (n "git-validate") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0nq1k2m68yy3ag9aay7q00jrrbvph8gb7i5id7nl8b79sg44dz2w") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.22.0 (c (n "git-object") (v "0.22.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.13.0") (d #t) (k 0)) (d (n "git-features") (r "^0.23.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.11") (d #t) (k 0)) (d (n "git-validate") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "08fiif4b4pi035ndqj8z9b9gb3am9dfys354vd2cfmimjlvwzbqh") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.22.1 (c (n "git-object") (v "0.22.1") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.13.0") (d #t) (k 0)) (d (n "git-features") (r "^0.23.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.9.11") (d #t) (k 0)) (d (n "git-validate") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1czp4cvk310svlsk6wbl2vvxvd3ln5dlabm1fvp01dcb1p0ahscl") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.23.0 (c (n "git-object") (v "0.23.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.14.0") (d #t) (k 0)) (d (n "git-features") (r "^0.24.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1bbxb6ccd3mv152gzkflggisdxf2n2vjz2l98gl841wgrpwi83yf") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.24.0 (c (n "git-object") (v "0.24.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.15.0") (d #t) (k 0)) (d (n "git-features") (r "^0.25.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.1") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0wb5ry832vxybnbhax48cnmhrfs9wx5j78p0nf6dhjg1wgqmidim") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.25.0 (c (n "git-object") (v "0.25.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.16.0") (d #t) (k 0)) (d (n "git-features") (r "^0.26.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.1") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1xpwwgza9ggbcgazmr1x8bprrd2cpq8iwrcbvir93fbnngfw5mps") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.26.0 (c (n "git-object") (v "0.26.0") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.17.0") (d #t) (k 0)) (d (n "git-features") (r "^0.26.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.1") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "069fkxbh46np16611drcpbdkmp7ck57p21ii7w2xf97msvi6719z") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1"))))))

(define-public crate-git-object-0.26.1 (c (n "git-object") (v "0.26.1") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.17.1") (d #t) (k 0)) (d (n "git-features") (r "^0.26.2") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.2") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0mjg2acms3wyga3dn1pv8ni21nzipmgnrwpb8v175sfkwgj1rx0j") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1")))) (r "1.64")))

(define-public crate-git-object-0.26.2 (c (n "git-object") (v "0.26.2") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "git-actor") (r "^0.17.2") (d #t) (k 0)) (d (n "git-features") (r "^0.26.5") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "git-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "git-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0z8smca5m7xqrzpgn0ybasfcafplz7idx2r8zyfg9g6r373bjlds") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "git-hash/serde1" "git-actor/serde1")))) (r "1.64")))

