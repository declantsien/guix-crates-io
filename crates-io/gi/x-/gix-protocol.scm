(define-module (crates-io gi x- gix-protocol) #:use-module (crates-io))

(define-public crate-gix-protocol-0.26.3 (c (n "gix-protocol") (v "0.26.3") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.9.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.4") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.14.2") (d #t) (k 2)) (d (n "gix-transport") (r "^0.25.4") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "15yb1lxlagb2bz8zk78wywh9lsnsscv38w63qbpd5hvz9907sdp3") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.26.4 (c (n "gix-protocol") (v "0.26.4") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.9.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.5") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.14.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.25.6") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1vdyksn57y5qvjjmasawrd8dvbipm50aja0vcfn538vjsbb5z8xz") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.27.0 (c (n "gix-protocol") (v "0.27.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.10.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.27.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.14.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.26.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0hfmavz4kkxlpq709f3s5x6xqvfw1nydwgkg19l8cd4bzjhn2sfc") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.28.0 (c (n "gix-protocol") (v "0.28.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.11.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.14.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.27.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1h9iydhfjwqygsqgmxgnayniwz560dk1lgqfh0hsqa2x3nqjldvd") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.29.0 (c (n "gix-protocol") (v "0.29.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.14.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.28.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0glhlyjnw0ly0bsby0v2gwacaq5iygqa3vqq9lmymawhqpi28l38") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.30.0 (c (n "gix-protocol") (v "0.30.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.15.0") (d #t) (k 2)) (d (n "gix-transport") (r "^0.29.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "070w4p7h4whwmdmaizgsi1zffq7bga8djg9a4z1k9bc7nrv1n72l") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.30.1 (c (n "gix-protocol") (v "0.30.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.15.0") (d #t) (k 2)) (d (n "gix-transport") (r "^0.29.1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1i2rs1b36b80a7ym9rdrhvz2hsicn15n7dazigrl1jc2w9x070a0") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.30.2 (c (n "gix-protocol") (v "0.30.2") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.15.1") (d #t) (k 2)) (d (n "gix-transport") (r "^0.29.1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0h2zhapjl9adk5c73aphrhdr4axc8f6zfxs4zbgxcp6xpyc89lvv") (f (quote (("serde1" "serde" "bstr/serde" "gix-transport/serde1" "gix-hash/serde1") ("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (r "1.64")))

(define-public crate-gix-protocol-0.31.0 (c (n "gix-protocol") (v "0.31.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.13.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.29.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.0") (d #t) (k 2)) (d (n "gix-transport") (r "^0.30.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0a10c32ii2r2pkqqw6rcr8rzl9ms75p4zg0yvmkfphbxpfdwc4kc") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.64")))

(define-public crate-gix-protocol-0.32.0 (c (n "gix-protocol") (v "0.32.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.14.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.29.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.0") (d #t) (k 2)) (d (n "gix-transport") (r "^0.31.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0fhyjqyxxv032ilp0wpr13pljbwb1yms5ngpqbdz8c0pgx0ljzl7") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.64")))

(define-public crate-gix-protocol-0.33.0 (c (n "gix-protocol") (v "0.33.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.15.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.30.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.2") (d #t) (k 2)) (d (n "gix-transport") (r "^0.32.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1wr0g0m79dd5snyxln07ahpvv2q4hhf3m0rjb8qqfzlsdrq6f9hq") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.64")))

(define-public crate-gix-protocol-0.33.1 (c (n "gix-protocol") (v "0.33.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.15.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.30.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.2") (d #t) (k 2)) (d (n "gix-transport") (r "^0.32.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1qnlp0r6xiv3f1kw4l7f69ir3bvp5ddq8lpc8sx1511w70ismb48") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.64")))

(define-public crate-gix-protocol-0.33.2 (c (n "gix-protocol") (v "0.33.2") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.15.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.30.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.2") (d #t) (k 2)) (d (n "gix-transport") (r "^0.32.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "093c9zlqxy8248nynyb909g12xkfxsv5z32j8w41yijwnic718cj") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.64")))

(define-public crate-gix-protocol-0.34.0 (c (n "gix-protocol") (v "0.34.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.16.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.6.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.31.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.33.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1y247kfjim9bh8v4pl2h09lyqp6if9kw56z04p04a3468f9krs97") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.35.0 (c (n "gix-protocol") (v "0.35.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.16.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.31.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.33.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "16a0zns3cg90hbs2z2zyqdqb6k143vgr0y5xni1v08zbqzx6jw7d") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.36.0 (c (n "gix-protocol") (v "0.36.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.17.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.34.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0kn9riz4vgpwjcjaq1k5f8ka81637p5fqrns4i2v1cwx0z1v2hzm") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.36.1 (c (n "gix-protocol") (v "0.36.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.17.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.4") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.4") (d #t) (k 2)) (d (n "gix-transport") (r "^0.34.1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0w2i0dlpd4gdl3rpjrg4l84i1wyh3zsjkdf8ldp0llfmiasgi30g") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.37.0 (c (n "gix-protocol") (v "0.37.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.17.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.4") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.4") (d #t) (k 2)) (d (n "gix-transport") (r "^0.34.2") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "01f1m5i1bbxsw1qjbg1adm8aa4vwzkpii4m8ya9rnd2liixn5isk") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.38.0 (c (n "gix-protocol") (v "0.38.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.18.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.33.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.5") (d #t) (k 2)) (d (n "gix-transport") (r "^0.35.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1babg4lg2qspknrklmg6iw4jhwrnp9w4g7kdrp6c12wjzfna1acy") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.39.0 (c (n "gix-protocol") (v "0.39.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.19.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.34.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.0") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.6") (d #t) (k 2)) (d (n "gix-transport") (r "^0.36.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "1pv30745mr7w6xic2ja84jz06138kv5kwj0xcnh0w5407zyffvjx") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.40.0 (c (n "gix-protocol") (v "0.40.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.20.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.35.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.0") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.6") (d #t) (k 2)) (d (n "gix-transport") (r "^0.37.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "16qc5q53z5jdqb433106lzzifhf321zgv89ha65bxj8cq86p0yyc") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.41.0 (c (n "gix-protocol") (v "0.41.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.21.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.36.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.7") (d #t) (k 2)) (d (n "gix-transport") (r "^0.37.1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "1vpzdy2g1d5yihpibaas1wqqbn7glli6z0cy0gmn6z0f22jdz3q5") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.41.1 (c (n "gix-protocol") (v "0.41.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.21.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.36.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.16.7") (d #t) (k 2)) (d (n "gix-transport") (r "^0.38.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "03hy77hbszssdkc4iwig3f82ib4i6agfag37svd90pzsppm3y7ir") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.42.0 (c (n "gix-protocol") (v "0.42.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "gix-credentials") (r "^0.22.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.36.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.0") (d #t) (k 2)) (d (n "gix-transport") (r "^0.39.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "05zq1vpak1nd83155j4n7gqvj8zmzkxr39yybddd22yv0zs6wwwm") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.43.0 (c (n "gix-protocol") (v "0.43.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.23.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.37.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.0") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.1") (d #t) (k 2)) (d (n "gix-transport") (r "^0.40.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "0kywcx5g9gjfbz0nmwfp3lfm335r6h3pskwnyv21p02zb1gjfm9d") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.70")))

(define-public crate-gix-protocol-0.43.1 (c (n "gix-protocol") (v "0.43.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.23.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.37.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.2") (d #t) (k 2)) (d (n "gix-transport") (r "^0.40.1") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "1pfg4b0b6a753mxrp2x7jaclry6d88x3lzxx7dgi14ar8cw2g9gc") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.44.0 (c (n "gix-protocol") (v "0.44.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.24.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.41.0") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "1g7fhma278ivl17k417dcmqhw83r346bvmdll4iz8zvq6ra4dbw4") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.44.1 (c (n "gix-protocol") (v "0.44.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.24.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.4") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.0") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.3") (d #t) (k 2)) (d (n "gix-transport") (r "^0.41.1") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.10") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "0f6jw5ngd4qv5cxfd6s6si7vg35h84kx46m80jlgc67a23gvv9i3") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.44.2 (c (n "gix-protocol") (v "0.44.2") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.24.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.5") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.4") (d #t) (k 2)) (d (n "gix-transport") (r "^0.41.2") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.11") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "169vnddd4wapba6lpn8w6qw3snwwi25gk0929xpyvn3fjh0cs1d9") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.45.0 (c (n "gix-protocol") (v "0.45.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.24.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.5") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.1") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.4") (d #t) (k 2)) (d (n "gix-transport") (r "^0.42.0") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.12") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "04fgb95s3qcxdm0zqbjzqjgmb7jp49q9vaiv81834nl3g5hvplxf") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

(define-public crate-gix-protocol-0.45.1 (c (n "gix-protocol") (v "0.45.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (o #t) (d #t) (k 0)) (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "gix-credentials") (r "^0.24.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.6") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.2") (f (quote ("progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-packetline") (r "^0.17.4") (d #t) (k 2)) (d (n "gix-transport") (r "^0.42.1") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.12") (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "1vlbgyayibrixgpmd8wxz0q2hq8vl0hz0y5ddf14i410dm60s51w") (f (quote (("blocking-client" "gix-transport/blocking-client" "maybe-async/is_sync") ("async-client" "gix-transport/async-client" "async-trait" "futures-io" "futures-lite")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "gix-transport/serde" "gix-hash/serde")))) (r "1.65")))

