(define-module (crates-io gi x- gix-object) #:use-module (crates-io))

(define-public crate-gix-object-0.26.1 (c (n "gix-object") (v "0.26.1") (d (list (d (n "bstr") (r "^1.0.1") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.17.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.4") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.2") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "19s0hg5b4kslx2bxg3f7k0rjldwmvr6mqfr3vyxgvrbw4ppnrajh") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.26.2 (c (n "gix-object") (v "0.26.2") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.17.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.5") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "06a69h4pij27czcp4b8zspn2cb2d9wily405s0wbinld0bih8fyy") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.26.3 (c (n "gix-object") (v "0.26.3") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.17.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.5") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0cmx4892qx2a4qc7i8baay5nbcx04y5bp1z6j6h1dch39di203cr") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.26.4 (c (n "gix-object") (v "0.26.4") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.17.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.26.5") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0kigr6y8hik3fcnpm6dzpk470axwz1b1aqq4fd4c2vygxdq73kpd") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.27.0 (c (n "gix-object") (v "0.27.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.18.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.27.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1kxx7clhn64sb0x5p9clfdwjx8jnlq247b91zrrp1wzl6vccayng") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.28.0 (c (n "gix-object") (v "0.28.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.19.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.28.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.10.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "05y0dywd77wbm87mrc3nnpf0n9wy6r44hl3hpdgr7vl0j7dniw4d") (f (quote (("verbose-object-parsing-errors" "nom/std") ("serde1" "serde" "bstr/serde" "smallvec/serde" "gix-hash/serde1" "gix-actor/serde1")))) (r "1.64")))

(define-public crate-gix-object-0.29.0 (c (n "gix-object") (v "0.29.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.20.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.29.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.0") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "15impbs8wnvphzyqmhmss6hbdk2xhszbxg2a1al2k38p989nrmj2") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.64")))

(define-public crate-gix-object-0.29.1 (c (n "gix-object") (v "0.29.1") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.20.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.29.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.1") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1q811ajfkrwbi6c6awm5a45xvijb38vgx7m2vab71lqq13731fy9") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.64")))

(define-public crate-gix-object-0.29.2 (c (n "gix-object") (v "0.29.2") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.20.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.29.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.1") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1kk1wbcv6p71ysvyibf6y6s03c50ry1j22zp6zfwr2nh1xibv5id") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.64")))

(define-public crate-gix-object-0.30.0 (c (n "gix-object") (v "0.30.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.21.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.30.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.2") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1is6hkzcv38m9k2yzja39h3d9s5rvs9vqpfb17kw7pj43kswh9l9") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.64")))

(define-public crate-gix-object-0.31.0 (c (n "gix-object") (v "0.31.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.22.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.6.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.31.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "080zm0la8rydgbw8vp37f07cq0av2bk13w1qh9vi13fcwix4fpi5") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.32.0 (c (n "gix-object") (v "0.32.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.23.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.31.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "19p2k5mp36017vhdvn8vklrhxj3jg600a7dbld5765mdzzbz6lx9") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.33.0 (c (n "gix-object") (v "0.33.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.24.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.3") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0iic4g79r1lhnzs8h8m232xb0hvilfva9q2flxa2z7zbrcyd8cmz") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.33.1 (c (n "gix-object") (v "0.33.1") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.24.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.4") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "1lk64z7qx29dxv5cm2sv69ql3ybpb1q3x52vd5049bsli1l8pwbh") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.33.2 (c (n "gix-object") (v "0.33.2") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.24.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.4") (d #t) (k 0)) (d (n "gix-validate") (r "^0.7.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0hrr4dzf7cs3jacs7xbq903j25kn9cx8c5m6rzz9m8bi1i98gpdz") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.34.0 (c (n "gix-object") (v "0.34.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.24.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.32.1") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.11.4") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "nom") (r "^7") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)))) (h "0raii70pgm55lr1hd8kiqwyjvhw7s7xkirn32544n4ccnblij6sg") (f (quote (("verbose-object-parsing-errors" "nom/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.35.0 (c (n "gix-object") (v "0.35.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.25.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.7.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.33.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.12.0") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.0") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "15bdzz92423mdg05dfrp16051rvp3k6rlghqwgiayf4lbrxkna64") (f (quote (("verbose-object-parsing-errors")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.36.0 (c (n "gix-object") (v "0.36.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.26.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.34.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.0") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.0") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "1s3b6dsd96x63nnc5n1wx0ia2py4m126wsbyai6h9169nbajhm9y") (f (quote (("verbose-object-parsing-errors")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.37.0 (c (n "gix-object") (v "0.37.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.27.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.35.0") (f (quote ("rustsha1"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.0") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.0") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "0vzxayiss5k7pmlm0q4axaliidg9a3lq7bkv2ds775k7dihijzhy") (f (quote (("verbose-object-parsing-errors")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.38.0 (c (n "gix-object") (v "0.38.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.28.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.0") (d #t) (k 0)) (d (n "gix-features") (r "^0.36.0") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.1") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.0") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.14") (f (quote ("simd"))) (d #t) (k 0)))) (h "0lbaz0mzsg5vvm5qvi1nf6f0hyz62hfx18xk3h57fn3z4r22l3vl") (f (quote (("verbose-object-parsing-errors")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.39.0 (c (n "gix-object") (v "0.39.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.28.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.1") (d #t) (k 0)) (d (n "gix-features") (r "^0.36.1") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.13.2") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.1") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "0cqya07cwq0wcx2kzmxsm9acpl4mwsxwfx797z3c282phb2pkgzy") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.40.0 (c (n "gix-object") (v "0.40.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.29.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.2") (d #t) (k 0)) (d (n "gix-features") (r "^0.37.0") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.0") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.2") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "14sfmc7afqc9ws48pgb9w93rbl93rqgq8ak3mxzi54mszx3pxiz4") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.70")))

(define-public crate-gix-object-0.40.1 (c (n "gix-object") (v "0.40.1") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.29.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.37.1") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "18hklfk1a1mpnr1syxb40dhy92c5yfl6b1ilvsgv8hdaiwp4128c") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.41.0 (c (n "gix-object") (v "0.41.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "btoi") (r "^0.4.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.30.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.3") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.0") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.5.24") (f (quote ("simd"))) (d #t) (k 0)))) (h "0yvpwjkijk49zwzb42nf5h1qxd0mfiwqnbgghaq6ql210z9yjg39") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.41.1 (c (n "gix-object") (v "0.41.1") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.30.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.4") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.0") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.1") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.10") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "0cc66jx1gv6qgs6riysppgap3w421d2gsxz41qj2hwkfa1h27sfz") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.42.0 (c (n "gix-object") (v "0.42.0") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.31.0") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.5") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.1") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.11") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.4") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "027g6i5jkcyyxm6d74jhv76h0njpy2s1j44mxs6m9p8cg5pfbs83") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.42.1 (c (n "gix-object") (v "0.42.1") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.31.1") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.5") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.1") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.11") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.4") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "0lg04riq9gggss7107m1p7clirs84fz2vl4198fdyc10wzx8wkrx") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

(define-public crate-gix-object-0.42.2 (c (n "gix-object") (v "0.42.2") (d (list (d (n "bstr") (r "^1.3.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "document-features") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "gix-actor") (r "^0.31.2") (d #t) (k 0)) (d (n "gix-date") (r "^0.8.6") (d #t) (k 0)) (d (n "gix-features") (r "^0.38.2") (f (quote ("rustsha1" "progress"))) (d #t) (k 0)) (d (n "gix-hash") (r "^0.14.2") (d #t) (k 0)) (d (n "gix-utils") (r "^0.1.11") (d #t) (k 0)) (d (n "gix-validate") (r "^0.8.5") (d #t) (k 0)) (d (n "itoa") (r "^1.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (f (quote ("write"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "winnow") (r "^0.6.0") (f (quote ("simd"))) (d #t) (k 0)))) (h "1pz1bb7ps05izla94ry4hdch01w11iivsvifjh66h70r855drqhz") (f (quote (("verbose-object-parsing-errors" "winnow/std")))) (s 2) (e (quote (("serde" "dep:serde" "bstr/serde" "smallvec/serde" "gix-hash/serde" "gix-actor/serde")))) (r "1.65")))

