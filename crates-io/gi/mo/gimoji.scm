(define-module (crates-io gi mo gimoji) #:use-module (crates-io))

(define-public crate-gimoji-0.1.0 (c (n "gimoji") (v "0.1.0") (d (list (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "ratatui") (r "^0.20.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (k 0)))) (h "0rrm6425inb8gmj4x234xxq2l8rl4gvz08mrg5wghw2p7xg0qbzq")))

(define-public crate-gimoji-0.2.0 (c (n "gimoji") (v "0.2.0") (d (list (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "ratatui") (r "^0.20.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (k 0)))) (h "1dcw8k8mdzr9gq8hswlqhs0lf0sxlrjzif4vdr9a5n790w32gf3h")))

(define-public crate-gimoji-0.3.0 (c (n "gimoji") (v "0.3.0") (d (list (d (n "arboard") (r "^3.2.0") (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "ratatui") (r "^0.20.1") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (k 0)))) (h "0g2zrwy1b15927zy9gday7v8llqiif6kbmi28gdzakaclaayrli2")))

(define-public crate-gimoji-0.4.0 (c (n "gimoji") (v "0.4.0") (d (list (d (n "arboard") (r "^3.2.0") (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "ratatui") (r "^0.20.1") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (k 0)))) (h "00appsddl3w9wf25sxfk8dfp7xxy5n5430dp4cfy7i67fcaggzap")))

(define-public crate-gimoji-0.5.0 (c (n "gimoji") (v "0.5.0") (d (list (d (n "arboard") (r "^3.2.0") (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "ratatui") (r "^0.21.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 1)))) (h "1h2927hml54l0rr77yb1c25yzz7n9rhna6sym6qgr45znr8mpx1l")))

(define-public crate-gimoji-0.5.1 (c (n "gimoji") (v "0.5.1") (d (list (d (n "arboard") (r "^3.2.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.26") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.21.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 1)))) (h "0kbb7bvpnjizhivaqdkfdmryqzk3zp3yxnj4b825m91kiw3grqmi")))

(define-public crate-gimoji-0.6.0 (c (n "gimoji") (v "0.6.0") (d (list (d (n "arboard") (r "^3.2.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.26") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.21.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "137j7p0149f8xdxycpmi5jav394qn5z4yk5nvfzqmv4rx5p36nww")))

(define-public crate-gimoji-0.6.1 (c (n "gimoji") (v "0.6.1") (d (list (d (n "arboard") (r "^3.2.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.26") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.21.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "0m0h4w2hlq5zr1h129v5433hscfn655ff48llh520a4rhph2fpi3")))

(define-public crate-gimoji-0.6.2 (c (n "gimoji") (v "0.6.2") (d (list (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.25.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "105bh1r75n772md65nbam0zqglvqipvcl6bjgfjgsygzbciyl4cj")))

(define-public crate-gimoji-0.7.0 (c (n "gimoji") (v "0.7.0") (d (list (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.25.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "1xdnh73sn567mxypwbz720lpyrxjdvn95zjaw9a3nqhc48k3n0iv")))

(define-public crate-gimoji-0.7.1 (c (n "gimoji") (v "0.7.1") (d (list (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.25.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "17zvbrncg7k271r2f2kv923jam5s1ak8kw1bc1ri60ckp83mf1qx")))

(define-public crate-gimoji-0.7.2 (c (n "gimoji") (v "0.7.2") (d (list (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.4.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.25.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "1fj6mzzpxi0s4rk3rhb8l1cqhr3kq6iga2ir8dn3y20w2jc2g1s7")))

(define-public crate-gimoji-0.7.3 (c (n "gimoji") (v "0.7.3") (d (list (d (n "arboard") (r "^3.3.0") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.4.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.25.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 1)) (d (n "terminal-light") (r "^1.1.1") (d #t) (k 0)))) (h "1bky42zkp30ccsy09x5k3rzzqfqh3bjiq10ichans6z4m0c80qa4")))

(define-public crate-gimoji-0.7.4 (c (n "gimoji") (v "0.7.4") (d (list (d (n "arboard") (r "^3.3.1") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.26.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 1)) (d (n "terminal-light") (r "^1.2.0") (d #t) (k 0)))) (h "05jmndlbjvc0ykq7gd2xg1fhg7ix9yfw6cq2ls3bq4a5yvq6jwhf")))

(define-public crate-gimoji-0.7.5 (c (n "gimoji") (v "0.7.5") (d (list (d (n "arboard") (r "^3.3.1") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.26.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "terminal-light") (r "^1.2.0") (d #t) (k 0)))) (h "0jhhxyysk2zlapkpy533y5m0dy67ix8k0w95hjy2gzz5qfjq0k8q")))

(define-public crate-gimoji-0.7.6 (c (n "gimoji") (v "0.7.6") (d (list (d (n "arboard") (r "^3.3.1") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.27") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.26.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "terminal-light") (r "^1.2.0") (d #t) (k 0)))) (h "0nii37qdkdbfbrv9gnkidmvgryxyqmq9956y1cbc5zj3vx8hk28p")))

(define-public crate-gimoji-1.0.0 (c (n "gimoji") (v "1.0.0") (d (list (d (n "arboard") (r "^3.3.2") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.28") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.26.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "terminal-light") (r "^1.2.0") (d #t) (k 0)))) (h "0dc5b8nqnq584c555ghih4h7sgvr2ps386ymvnvvj1f0dnm9crhn")))

(define-public crate-gimoji-1.1.0 (c (n "gimoji") (v "1.1.0") (d (list (d (n "arboard") (r "^3.3.2") (f (quote ("wayland-data-control"))) (k 0)) (d (n "clap") (r "^4.5.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("use-dev-tty"))) (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 1)) (d (n "nix") (r "^0.28") (f (quote ("process"))) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0.26.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "unicode-case"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 1)) (d (n "terminal-light") (r "^1.4.0") (d #t) (k 0)))) (h "1bnqygk6a2jpl7a63w386r3gwx4g8xr815znr0hn2mcpgy1msk3q")))

