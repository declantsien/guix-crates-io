(define-module (crates-io ge on geonetworking) #:use-module (crates-io))

(define-public crate-geonetworking-0.1.0 (c (n "geonetworking") (v "0.1.0") (d (list (d (n "bitvec") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "bytes") (r "^1.5") (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("verifying"))) (o #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("alloc"))) (k 0)) (d (n "nom-bitvec") (r "^0.2.0") (d #t) (k 0) (p "bitvec-nom2")) (d (n "num") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (k 0)) (d (n "sm2") (r "^0.13.3") (f (quote ("dsa"))) (o #t) (k 0)) (d (n "sm3") (r "^0.4.2") (o #t) (k 0)))) (h "0n8nk29jyl8bpcf19mvyak9cagb7ppdkjxgvckfm7phnq5hrn18q") (f (quote (("validate" "ecdsa" "openssl" "openssl-sys" "p256" "p384" "sha2" "sm2" "sm3") ("json" "serde_json" "serde" "bytes/serde") ("default" "json" "validate"))))))

