(define-module (crates-io ge ph geph4-protocol) #:use-module (crates-io))

(define-public crate-geph4-protocol-0.1.0 (c (n "geph4-protocol") (v "0.1.0") (d (list (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.4") (d #t) (k 0)))) (h "0kjh0d3gm50vjpi7jrbckvm4bimag4yj0yxgarh65cp0in5qqgis")))

(define-public crate-geph4-protocol-0.1.1 (c (n "geph4-protocol") (v "0.1.1") (d (list (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)))) (h "169vxfr4vs5rcy47717blrd1c63fiq63crd4li0ma0a5v2fjrx53")))

(define-public crate-geph4-protocol-0.2.0 (c (n "geph4-protocol") (v "0.2.0") (d (list (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)))) (h "1makxa3kqiv9gx2cw1y3gqwldbz35javsjksg7lxzc8671qlsg0g")))

(define-public crate-geph4-protocol-0.3.0 (c (n "geph4-protocol") (v "0.3.0") (d (list (d (n "acidjson") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "async-net") (r "^1.6.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "geph4-binder-transport") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.16") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.45") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bbkzj7d1fa3hq2k2lyppj6limg779vizcs00ra123n5walxpj4d")))

(define-public crate-geph4-protocol-0.4.0-alpha.1 (c (n "geph4-protocol") (v "0.4.0-alpha.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0mqhhz6zaszkvx26g2sl3ipk5q7ngmsdxhwgcwydnqqm658mxd9i")))

(define-public crate-geph4-protocol-0.4.0 (c (n "geph4-protocol") (v "0.4.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1nqgyfrlzb4ip72cj6gfanj258g8jrxkbgp4aync78ds7xcd969n") (y #t)))

(define-public crate-geph4-protocol-0.4.1 (c (n "geph4-protocol") (v "0.4.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0qpw0kfckl450svassmnz65gblmcgr09f3vak4fqc10vckyiyv1n") (y #t)))

(define-public crate-geph4-protocol-0.4.2 (c (n "geph4-protocol") (v "0.4.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1vr2qbyjhgvmcaf6q9lw9psv6k4xagkzpc6m316rhwfwwysh8fbp") (y #t)))

(define-public crate-geph4-protocol-0.4.3 (c (n "geph4-protocol") (v "0.4.3") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "172hrvhm8s665dqjm8n3aq8lhgmk765hnz7apj2g8ha4k9hkjix6") (y #t)))

(define-public crate-geph4-protocol-0.4.4 (c (n "geph4-protocol") (v "0.4.4") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1hbgicpajgjqd63gbygfc4dqlgiydmka3wi6lsa0pvmzgw6rsc7d") (y #t)))

(define-public crate-geph4-protocol-0.4.5 (c (n "geph4-protocol") (v "0.4.5") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "00d8adyq5xdgdb938af3c31yd2bx386pjzydakg66lvfwm8j4vza") (y #t)))

(define-public crate-geph4-protocol-0.4.6 (c (n "geph4-protocol") (v "0.4.6") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1wkwscmdk7qx3qb4jdg2xyw45vqaxi4gyhgn6s5xf57x4xh6yqn5") (y #t)))

(define-public crate-geph4-protocol-0.4.7 (c (n "geph4-protocol") (v "0.4.7") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0380xkg6bmnzvr9mvmk246ag8jdjyfhwv19bil04dlbl61hzpsli") (y #t)))

(define-public crate-geph4-protocol-0.4.8 (c (n "geph4-protocol") (v "0.4.8") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0r9mdnmqgdykpa66na0vyj5xpqlkxdam9zdlh9v6m1dhjnsy4m6p") (y #t)))

(define-public crate-geph4-protocol-0.4.9 (c (n "geph4-protocol") (v "0.4.9") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0yvwkcplrdm2rxlxasda433j71kxvsdbc6jmci81dxrrz03v4430") (y #t)))

(define-public crate-geph4-protocol-0.4.10 (c (n "geph4-protocol") (v "0.4.10") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1m9fz6wx467f75bwd6xvbxhfha7p87cfnhfzc947qs3dbdn01a6g") (y #t)))

(define-public crate-geph4-protocol-0.4.11 (c (n "geph4-protocol") (v "0.4.11") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.42") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0lj0lgqq7x0bvazmvc55diqlkisyga311yr14qx8afncr3j8d3lg") (y #t)))

(define-public crate-geph4-protocol-0.4.12 (c (n "geph4-protocol") (v "0.4.12") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.42") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1pn418mpb3iwvqg0xm7gnpzr5gj4hm9f3qp079fnx632nbp1acj4")))

(define-public crate-geph4-protocol-0.4.13 (c (n "geph4-protocol") (v "0.4.13") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.42") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1irlnj7c0l7xhmlih6lg40kqx9ljx69cs7gxz8sn5kzpcjqvkvxc")))

(define-public crate-geph4-protocol-0.5.0 (c (n "geph4-protocol") (v "0.5.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.42") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "176m4dscvciblm5s72yf1dhzhwiyxsksd2n76km7wymrsqshybxf")))

(define-public crate-geph4-protocol-0.5.1 (c (n "geph4-protocol") (v "0.5.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.42") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0l1nm8g9caj7galca19l34dgl27c37bh403x8prc2azx82gycw3v")))

(define-public crate-geph4-protocol-0.5.2 (c (n "geph4-protocol") (v "0.5.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0zk7dl8h3vdzsrnj0wisdbfbqhr8q0wy87dbdnv18klqggqca8gp")))

(define-public crate-geph4-protocol-0.6.0 (c (n "geph4-protocol") (v "0.6.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1z6aq90mlg84c29s76z6w08zaaw3mc3pdb7nflkcd3fjgyx723yb")))

(define-public crate-geph4-protocol-0.6.1 (c (n "geph4-protocol") (v "0.6.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "10srmaf9zxmjqayy9dpcrrbn26l7s17kd295nr8ccq7wb41xb7d6")))

(define-public crate-geph4-protocol-0.6.2 (c (n "geph4-protocol") (v "0.6.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.4.48") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1i02r604azk56xj0mfjff49qcdc903pf3327hrhgrv5cf6xkyh9b")))

(define-public crate-geph4-protocol-0.7.0 (c (n "geph4-protocol") (v "0.7.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "18r4b2asj8r199m3qgdlsrkbfhrwq2p1r7y3a7khqi8zar315s9z")))

(define-public crate-geph4-protocol-0.7.1 (c (n "geph4-protocol") (v "0.7.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1i5na5i4j7j53adf4cn9ncs5yv2izdc0w74mgfqdl5f7pnxvxi9s")))

(define-public crate-geph4-protocol-0.7.2 (c (n "geph4-protocol") (v "0.7.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1gi6q9x4j5ll4md6zh1qvhgvrkfm0mvd6528p2wsk4aqs6yf57bk")))

(define-public crate-geph4-protocol-0.8.0 (c (n "geph4-protocol") (v "0.8.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "10gxs6xy4adb3cg1vk9kkbsbrrhxpkvmq6lg51wcxbp978b69kgr")))

(define-public crate-geph4-protocol-0.8.1 (c (n "geph4-protocol") (v "0.8.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "sosistab") (r "^0.5") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0wwha1wlb15i5v9rf987399slmwizgn881ic74jfzr3n7g7nm349")))

(define-public crate-geph4-protocol-0.9.0 (c (n "geph4-protocol") (v "0.9.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1ampqb6yynrj7w5s30ay96sjylhqvxdahyskkb4l2h1r7c42a15d")))

(define-public crate-geph4-protocol-0.9.1 (c (n "geph4-protocol") (v "0.9.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1bf4dxv5vis93r45lmr6p0g6ank7xbs1yfdc5by5f888xm4ikdsp")))

(define-public crate-geph4-protocol-0.9.2 (c (n "geph4-protocol") (v "0.9.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1vmbz7dal6vyv4s01rxg289jzhnw68vwwsbg5awlgfl63jdzmh1v")))

(define-public crate-geph4-protocol-0.10.0 (c (n "geph4-protocol") (v "0.10.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0h3nfrxqrv79rvc5ssard9d8476l3x1091mk8n95ilvvsc3f0nza")))

(define-public crate-geph4-protocol-0.10.1 (c (n "geph4-protocol") (v "0.10.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1vsimmzllajpgy5qw7lmqdx6hq7fj8gzq0rjc5fs661pcsp3l4ip")))

(define-public crate-geph4-protocol-0.11.0 (c (n "geph4-protocol") (v "0.11.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0dmbw3ifrsh7b6ii7mwjvlwbf1k736awwprdzzjb6h5w2rnsx8xc")))

(define-public crate-geph4-protocol-0.11.1 (c (n "geph4-protocol") (v "0.11.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1zzcv8qsl7lx7yhimrbn1lrlf4114hg4ccn3a7xalpdlwxd3ib55")))

(define-public crate-geph4-protocol-0.12.0 (c (n "geph4-protocol") (v "0.12.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "01cy0sc1xi999xn17316g9rw8nhzdx0xbhnyzd71g0s85xwiv34v")))

(define-public crate-geph4-protocol-0.13.0 (c (n "geph4-protocol") (v "0.13.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "08q28p68sdlfg2pbhr2kysijy3risc7bwaqgdmh6f8zzkc5aw2dw")))

(define-public crate-geph4-protocol-0.13.1 (c (n "geph4-protocol") (v "0.13.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0857faxs6da9s65jyvbg007ymgxny5bfqnwlzwdvzj2syhcyysfc")))

(define-public crate-geph4-protocol-0.14.0 (c (n "geph4-protocol") (v "0.14.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "19npfs32p1ljymh8gvhfsn796ylnzgrigkh2392skqw4kb205jlb")))

(define-public crate-geph4-protocol-0.14.1 (c (n "geph4-protocol") (v "0.14.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "05smwwphm4nzj5695ppmiw076p8s7krqpknicxgs401cm2kgnr0m")))

(define-public crate-geph4-protocol-0.14.2 (c (n "geph4-protocol") (v "0.14.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "10gz40cqlf5fkv6bbqqcpd6znzwza7c8qvzvqxcqhfb3cnasil8s")))

(define-public crate-geph4-protocol-0.15.0 (c (n "geph4-protocol") (v "0.15.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1qax3124pjgpyhp1bcmqzx70pp6jnsjbw05d21lm68a9w564x4rw")))

(define-public crate-geph4-protocol-0.16.0 (c (n "geph4-protocol") (v "0.16.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "14f0nbkc3jwrrjp8nh135x449yqhpmpwja7k3v3mfsb79gicfzdi")))

(define-public crate-geph4-protocol-0.16.1 (c (n "geph4-protocol") (v "0.16.1") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0v72asarnasbsji7jdwjq68gmwvmbjrph9y2y7q75wb682dshs3y")))

(define-public crate-geph4-protocol-0.16.2 (c (n "geph4-protocol") (v "0.16.2") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1f80c202n4qckm32s28b41vzjnvnydwgwnj3b64mx5f8dqcizy1i")))

(define-public crate-geph4-protocol-0.16.3 (c (n "geph4-protocol") (v "0.16.3") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "061wd4scb5rk6fjpasc4hynfwlb234b6abkrgbnmdrvq2znrydvi")))

(define-public crate-geph4-protocol-0.16.4 (c (n "geph4-protocol") (v "0.16.4") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1d31arkazf9mv8cb89k4aq7xzcdc6b403ab6cpgws3ijpnp83xk7")))

(define-public crate-geph4-protocol-0.16.5 (c (n "geph4-protocol") (v "0.16.5") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "1pnjw5qwv4axf1dbg4wg0bkj76pwi0iz3ddkbdhpbqj4j482ma4n")))

(define-public crate-geph4-protocol-0.16.6 (c (n "geph4-protocol") (v "0.16.6") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0qi4fpfl06aj8qgixm35k8kpd2gj801kfcjh0ai4bc2d26v2azyi")))

(define-public crate-geph4-protocol-0.16.7 (c (n "geph4-protocol") (v "0.16.7") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "15bqjzbwha3cnlzgjy2a9fyw1an1vi0fkcw59x07m3pb2ykblrpm")))

(define-public crate-geph4-protocol-0.16.8 (c (n "geph4-protocol") (v "0.16.8") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0adz2rsdxfflh3bm8gpq8zwym6kb03m0fpnjqh18j27vs5470hb3")))

(define-public crate-geph4-protocol-0.16.9 (c (n "geph4-protocol") (v "0.16.9") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "13vycri947pfr0f25nlvdrlacdwdqxxsn4pjbjdpqycvz6hlr5hm")))

(define-public crate-geph4-protocol-0.17.0 (c (n "geph4-protocol") (v "0.17.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0rsnc11x7gfhvcmx31n5cfj2fm5jhp15b11pfv7lpr7i2cm6755m")))

(define-public crate-geph4-protocol-0.18.0 (c (n "geph4-protocol") (v "0.18.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "event-listener") (r "^2.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.24") (d #t) (k 0)) (d (n "geph4-aioutils") (r "^0.1.3") (d #t) (k 0)) (d (n "gibbername") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "mizaru") (r "^0.1.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rsa-fdh") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (f (quote ("base64" "hex"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.9") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolscale") (r "^0.3.41") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.7") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.2.0") (f (quote ("serde"))) (k 0)))) (h "0gsgfjdkj6l1i651ff502wkaxdxjpiq6f4gj2hi5cw7s7vbz08fm")))

