(define-module (crates-io ge ma gemachain-rpc) #:use-module (crates-io))

(define-public crate-gemachain-rpc-1.8.0 (c (n "gemachain-rpc") (v "1.8.0") (d (list (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "gemachain-account-decoder") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-client") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-entry") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-faucet") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-gossip") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-ledger") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-measure") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-metrics") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-net-utils") (r "=1.8.0") (d #t) (k 2)) (d (n "gemachain-perf") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-poh") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-runtime") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-sdk") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-send-transaction-service") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-stake-program") (r "=1.8.0") (d #t) (k 2)) (d (n "gemachain-storage-bigtable") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-streamer") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-transaction-status") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-version") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-vote-program") (r "=1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-core-client") (r "^18.0.0") (f (quote ("ipc" "ws"))) (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-pubsub") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-ws-server") (r "^18.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.102") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "soketto") (r "^0.6") (d #t) (k 0)) (d (n "spl-token-v2-0") (r "=3.2.0") (f (quote ("no-entrypoint"))) (d #t) (k 0) (p "spl-token")) (d (n "stream-cancel") (r "^0.8.1") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec" "compat"))) (d #t) (k 0)))) (h "1lgfn3pslwpndpw4wx23qsip5p4wpkiz650zzvj3g058hh1pv4ll")))

