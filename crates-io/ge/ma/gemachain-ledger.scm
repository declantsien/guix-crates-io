(define-module (crates-io ge ma gemachain-ledger) #:use-module (crates-io))

(define-public crate-gemachain-ledger-1.8.0 (c (n "gemachain-ledger") (v "1.8.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "gemachain-account-decoder") (r "=1.8.0") (d #t) (k 2)) (d (n "gemachain-bpf-loader-program") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-entry") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-frozen-abi") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-frozen-abi-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-logger") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-measure") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-metrics") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-perf") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-rayon-threadlimit") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-runtime") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-sdk") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-storage-bigtable") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-storage-proto") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-transaction-status") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-vote-program") (r "=1.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.102") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "prost") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^4.0.2") (d #t) (t "cfg(any(target_arch = \"aarch64\", target_arch = \"aarch64_apple_darwin\"))") (k 0)) (d (n "reed-solomon-erasure") (r "^4.0.2") (f (quote ("simd-accel"))) (d #t) (t "cfg(not(any(target_arch = \"aarch64\", target_arch = \"aarch64_apple_darwin\")))") (k 0)) (d (n "rocksdb") (r "^0.17.0") (f (quote ("lz4"))) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "trees") (r "^0.4.2") (d #t) (k 0)))) (h "18lv3zwiqdjlwr5ykb7x4d7p90aqn74rarz2xk6wfmrzkxkga3zv")))

