(define-module (crates-io ge ma gemachain-sdk) #:use-module (crates-io))

(define-public crate-gemachain-sdk-1.8.1 (c (n "gemachain-sdk") (v "1.8.1") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "gemachain-crate-features") (r "=1.8.1") (o #t) (d #t) (k 0)) (d (n "gemachain-frozen-abi") (r "=1.8.1") (d #t) (k 0)) (d (n "gemachain-frozen-abi-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "gemachain-logger") (r "=1.8.1") (o #t) (d #t) (k 0)) (d (n "gemachain-program") (r "=1.8.1") (d #t) (k 0)) (d (n "gemachain-sdk-macro") (r "=1.8.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.3") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hmac") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "1xsy55lh8fix6rh1r0z5br6avzdl81iw95w6ga95raqrgvsfwf68") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "gemachain-logger" "gemachain-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full")))) (y #t)))

(define-public crate-gemachain-sdk-1.8.0 (c (n "gemachain-sdk") (v "1.8.0") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "gemachain-crate-features") (r "=1.8.0") (o #t) (d #t) (k 0)) (d (n "gemachain-frozen-abi") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-frozen-abi-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-logger") (r "=1.8.0") (o #t) (d #t) (k 0)) (d (n "gemachain-program") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-sdk-macro") (r "=1.8.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "10w7xjpv32b4zg331v74l206hp97rfsv7gq85ywkffjl7yqd1vv1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "gemachain-logger" "gemachain-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-gemachain-sdk-1.8.2 (c (n "gemachain-sdk") (v "1.8.2") (d (list (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.0") (d #t) (k 2)) (d (n "derivation-path") (r "^0.1.3") (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "gemachain-crate-features") (r "=1.8.2") (o #t) (d #t) (k 0)) (d (n "gemachain-frozen-abi") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain-frozen-abi-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain-logger") (r "=1.8.2") (o #t) (d #t) (k 0)) (d (n "gemachain-program") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain-sdk-macro") (r "=1.8.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.9.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.1") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.3") (d #t) (k 0)))) (h "15vcllfm3d2r413k1nxrhkq6p04w9v21qnxna6m98v1lxgj7n1ds") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "gemachain-logger" "gemachain-crate-features" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

