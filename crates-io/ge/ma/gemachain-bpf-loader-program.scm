(define-module (crates-io ge ma gemachain-bpf-loader-program) #:use-module (crates-io))

(define-public crate-gemachain-bpf-loader-program-1.8.0 (c (n "gemachain-bpf-loader-program") (v "1.8.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "gemachain-measure") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-program-runtime") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-runtime") (r "=1.8.0") (d #t) (k 2)) (d (n "gemachain-sdk") (r "=1.8.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 1)) (d (n "solana_rbpf") (r "=0.2.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l9mbl6mq105w6w24myjzval27ylrw5gplxch8w6a7k9x7xjk2jl") (y #t)))

(define-public crate-gemachain-bpf-loader-program-1.8.1 (c (n "gemachain-bpf-loader-program") (v "1.8.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "gemachain-measure") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-program-runtime") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain-runtime") (r "=1.8.0") (d #t) (k 2)) (d (n "gemachain-sdk") (r "=1.8.0") (d #t) (k 0)) (d (n "gemachain_rbpf") (r "=0.2.14") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0w0pm8winxc24681d7mdd5dba1wzrlj01v3xyxfal81knaq4h1y5")))

(define-public crate-gemachain-bpf-loader-program-1.8.2 (c (n "gemachain-bpf-loader-program") (v "1.8.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "gemachain-measure") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain-program-runtime") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain-runtime") (r "=1.8.2") (d #t) (k 2)) (d (n "gemachain-sdk") (r "=1.8.2") (d #t) (k 0)) (d (n "gemachain_rbpf") (r "=0.2.14") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0r45yl1vjbhirls9v1if7nq58qvawwpz8r5cl93gq7cr3bni45z4")))

