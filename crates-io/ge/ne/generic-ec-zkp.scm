(define-module (crates-io ge ne generic-ec-zkp) #:use-module (crates-io))

(define-public crate-generic-ec-zkp-0.1.0 (c (n "generic-ec-zkp") (v "0.1.0") (d (list (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "generic-ec") (r "^0.1") (k 0)) (d (n "generic-ec") (r "^0.1") (f (quote ("all-curves"))) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "14f80wl9xni6ci9wiyfaf0y0ganh4s8i0s7qspfha5jxhwd43qvr") (f (quote (("std" "alloc") ("default" "std") ("alloc" "udigest/alloc")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("serde" "dep:serde" "generic-ec/serde" "generic-array/serde"))))))

(define-public crate-generic-ec-zkp-0.1.1 (c (n "generic-ec-zkp") (v "0.1.1") (d (list (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "generic-ec") (r "^0.1") (k 0)) (d (n "generic-ec") (r "^0.1") (f (quote ("all-curves"))) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1nb0mrp0jszrghkgalr3gf1c4y3887s6xi5flj4ig5b2izb4b1pr") (f (quote (("std" "alloc") ("default" "std") ("alloc" "udigest/alloc")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("serde" "dep:serde" "generic-ec/serde" "generic-array/serde"))))))

(define-public crate-generic-ec-zkp-0.1.2 (c (n "generic-ec-zkp") (v "0.1.2") (d (list (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "generic-ec") (r "^0.1") (k 0)) (d (n "generic-ec") (r "^0.1") (f (quote ("all-curves"))) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1aag0pc5ibpfd5dhgikn6indsckh5k8s60r680sc1v0ns55kv8mb") (f (quote (("std" "alloc") ("default" "std")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("serde" "dep:serde" "generic-ec/serde" "generic-array/serde") ("alloc" "udigest?/alloc" "serde?/alloc"))))))

(define-public crate-generic-ec-zkp-0.2.0 (c (n "generic-ec-zkp") (v "0.2.0") (d (list (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "generic-ec") (r "^0.2") (k 0)) (d (n "generic-ec") (r "^0.2") (f (quote ("all-curves"))) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1342w4zvhrlfni1abcgimg4pcrr75samp7271pl980psf7m33dm9") (f (quote (("std" "alloc") ("default" "std")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("serde" "dep:serde" "generic-ec/serde" "generic-array/serde") ("alloc" "udigest?/alloc" "serde?/alloc"))))))

(define-public crate-generic-ec-zkp-0.3.0 (c (n "generic-ec-zkp") (v "0.3.0") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "generic-ec") (r "^0.3") (k 0)) (d (n "generic-ec") (r "^0.3") (f (quote ("all-curves"))) (k 2)) (d (n "generic-tests") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_dev") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0xyri5rijlinxzip2nk9z8ca7flpqy9w3dq3q7nmq09krvla9qys") (f (quote (("std" "alloc") ("default" "std")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("serde" "dep:serde" "generic-ec/serde" "generic-array/serde") ("alloc" "udigest?/alloc" "serde?/alloc"))))))

