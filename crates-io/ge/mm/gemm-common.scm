(define-module (crates-io ge mm gemm-common) #:use-module (crates-io))

(define-public crate-gemm-common-0.14.0 (c (n "gemm-common") (v "0.14.0") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "05x50m2dygj63p9xrksy80kw7ib4dnc08swr00q5j7j63v9qydcb") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.1 (c (n "gemm-common") (v "0.14.1") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0v8m2pjqjaajkqrfaxjgvhblb1pqs3d51m122rm8a2w90a4cgqi5") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.2 (c (n "gemm-common") (v "0.14.2") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1f9ayaarmlbm0b225wl25n8lchaflgvcl2chi6wgjjy8g4zjxm3w") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.3 (c (n "gemm-common") (v "0.14.3") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "04kzh6lyg0djcjns7n267lnlwxfx61rjaa31842pn0zjvbp0jzwj") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.4 (c (n "gemm-common") (v "0.14.4") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1a96m8nwm3xgv9yl3njj0q3qljb3cbiyddwdylikwfpxs6bcibar") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.5 (c (n "gemm-common") (v "0.14.5") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "07p7kr7mrizzjl3gxl5g2hyiqqyblp19rhzbs8sq4rcyaki2229m") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.6 (c (n "gemm-common") (v "0.14.6") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0h3wna69hfk96llr21n0mvz7awxzigqi5p3wqylgh2xs0kghfh2c") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.7 (c (n "gemm-common") (v "0.14.7") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1h37323dqwarrfaikn9pwzykcnxrn2n6rm2f64l66p12z6wp1cip") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.14.8 (c (n "gemm-common") (v "0.14.8") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1k0kqw19fwq9laqcrbkkc6fxcickddwd3f4cs8ml0f55mz1y8mas") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.15.0 (c (n "gemm-common") (v "0.15.0") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1jvhjg9868iba3dl6famd10fp0s65pxfm3jfjjz4crws1cr66hj2") (f (quote (("std") ("nightly") ("default" "std")))) (y #t)))

(define-public crate-gemm-common-0.15.1 (c (n "gemm-common") (v "0.15.1") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1rmqsiyw8h57rwfzya01119pyg1kd0xgxr4rhqszxn4r26lfk5dj") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.15.2 (c (n "gemm-common") (v "0.15.2") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1w8mpi38fwhkgilm9k98akyvzchzcnlqgxxhx6qvhzki87l93y4j") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.15.3 (c (n "gemm-common") (v "0.15.3") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1r0wsvbh0l0s0xy11jlx6m4lk0vblc35rmr2blxgqh3qavcvl6mr") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.15.4 (c (n "gemm-common") (v "0.15.4") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "076pvli6kbi2s58xh5ykz0p768856k7wjwi6mdi6102n0gz4j8li") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.15.5 (c (n "gemm-common") (v "0.15.5") (d (list (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "04n06x308lnw23im833nczbcvdshas0wyn2b5sg8hf60icbkdh10") (f (quote (("std") ("nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.16.0 (c (n "gemm-common") (v "0.16.0") (d (list (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.15.0") (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1apfnq68c7hgfp9g23ygsl1kwcnjb98ga4qamb17ssbpwdjmx5nr") (f (quote (("wasm-simd128-enable") ("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.16.1 (c (n "gemm-common") (v "0.16.1") (d (list (d (n "bytemuck") (r "^1.14.0") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.15.0") (k 0)) (d (n "raw-cpuid") (r "^10.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1lmqcrg1zn0njynl38liww74sijzy38qb2ymrjmn3zn0vfxm4qz9") (f (quote (("wasm-simd128-enable") ("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-gemm-common-0.16.2 (c (n "gemm-common") (v "0.16.2") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1gz36d2cmgbvp1msg1mb4lbz0ixy77kjgf7y8aynkyfpx99ys40f") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.3 (c (n "gemm-common") (v "0.16.3") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1bx36v4kbmbdviz8fwmw5ch3j7f4dg5k0r16wjy6s4vqwiv865z4") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.4 (c (n "gemm-common") (v "0.16.4") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "12klp0z0rvmainqkgpwv4qpnrdml5llhkv9ifkwbvdm48acpfjbh") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.5 (c (n "gemm-common") (v "0.16.5") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0jqx36wg6sk2vjxaxfnaz5ffq3g8izmdya2qm7fqydnqq4i0b9x5") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.6 (c (n "gemm-common") (v "0.16.6") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0lmib674s3c0g6lyfwj588ccw5l7rz5m49sqhhcs4v1sw6ra2mj6") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.7 (c (n "gemm-common") (v "0.16.7") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "049jwh7llqpx8w96i9vdfkyny4smq7chjd027nr26v1ximg8xk8w") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.8 (c (n "gemm-common") (v "0.16.8") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1zghl9s788k32apniqhjq927nqk70zspakq00cijpkvva51f4zd3") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.9 (c (n "gemm-common") (v "0.16.9") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0zqibv2zimq4gm860p32h0wwwn9myms9f9dsqkz5k2nj18dl6x8v") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.12 (c (n "gemm-common") (v "0.16.12") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0m1pg6ck9c5zsgc0nwjjf51arx9x61xp0kby8ia54pklz5lnmad2") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.13 (c (n "gemm-common") (v "0.16.13") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1lqrw6kf8gjr3zfl5kvpfcaqdj83yfpr7z4ira4plygqy4k24x0b") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.14 (c (n "gemm-common") (v "0.16.14") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1ij7gjpspfw3ji2dvnlginn936isyrm7j4lrpb8q39xgjd4ds8n0") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.16.15 (c (n "gemm-common") (v "0.16.15") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1mjs0kx4xczb2aqqd17yq4h5lnzmbbqwbqpyni3b0rh5m3x9k14q") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std") ("nightly" "pulp/nightly") ("f16" "half") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.17.0 (c (n "gemm-common") (v "0.17.0") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "sysctl") (r "^0.5.5") (o #t) (d #t) (t "cfg(target_vendor = \"apple\")") (k 0)))) (h "1azfgy40adaps17s9s1gf4rzcm9f4r26q5n3fxpjf2cv6dv8ll92") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std" "sysctl") ("nightly" "pulp/nightly") ("f16" "half") ("experimental-apple-amx" "std") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.17.1 (c (n "gemm-common") (v "0.17.1") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "sysctl") (r "^0.5.5") (o #t) (d #t) (t "cfg(target_vendor = \"apple\")") (k 0)))) (h "1s2l4gzzsd27qn6isiv80vywskpv9xxr3nwmvgcbqylq5h3fmrx2") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std" "sysctl") ("nightly" "pulp/nightly") ("f16" "half") ("experimental-apple-amx" "std") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

(define-public crate-gemm-common-0.18.0 (c (n "gemm-common") (v "0.18.0") (d (list (d (n "bytemuck") (r "^1.14") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "half") (r "^2.3") (f (quote ("num-traits" "bytemuck"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.18") (f (quote ("race" "alloc"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18") (k 0)) (d (n "raw-cpuid") (r "^10.7") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "sysctl") (r "^0.5.5") (o #t) (d #t) (t "cfg(target_vendor = \"apple\")") (k 0)))) (h "1xmyx9hvmgd879gi7agfxhn5appmsmgk4fbvyia9d4r5qm7j7zch") (f (quote (("wasm-simd128-enable") ("std" "pulp/std" "dyn-stack/std" "once_cell/std" "sysctl") ("nightly" "pulp/nightly") ("f16" "half") ("experimental-apple-amx" "std") ("default" "std" "rayon" "f16")))) (s 2) (e (quote (("rayon" "dep:rayon" "std"))))))

