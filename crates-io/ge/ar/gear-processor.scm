(define-module (crates-io ge ar gear-processor) #:use-module (crates-io))

(define-public crate-gear-processor-0.1.0 (c (n "gear-processor") (v "0.1.0") (d (list (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.1.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.1.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.1.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.1.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0m4lgn3fj3qnqw0gn7csp3z3grwxdzisq9bc9qgca6sx3rcsl4li") (f (quote (("strict"))))))

(define-public crate-gear-processor-0.2.1-alpha.0 (c (n "gear-processor") (v "0.2.1-alpha.0") (d (list (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.2.1-alpha.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0yrkrpf6hf7drznx0vflsabhlihm4ag3ya2p4nmsiqzz70y64y8q") (f (quote (("strict"))))))

(define-public crate-gear-processor-0.2.1-alpha.1 (c (n "gear-processor") (v "0.2.1-alpha.1") (d (list (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.2.1-alpha.1") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.1") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.1") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "17xmcnkb7b7vp9fga2dglcpkwdx8dc1803xzhfrmjm5z89mvcxpd") (f (quote (("strict"))))))

(define-public crate-gear-processor-0.2.1-alpha.2 (c (n "gear-processor") (v "0.2.1-alpha.2") (d (list (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.2.1-alpha.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.2") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0naz3phfbhhlmg6ka106d8bdh93m9bcpyxpmi77v97pgw5hrksy1") (f (quote (("strict"))))))

(define-public crate-gear-processor-0.3.1-alpha.0 (c (n "gear-processor") (v "0.3.1-alpha.0") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0fybqlns7dhipcb3bgqby1rds5mjq69mjdr4p3kany7mgjndvk9g") (f (quote (("strict") ("mock"))))))

(define-public crate-gear-processor-0.3.1-alpha.1 (c (n "gear-processor") (v "0.3.1-alpha.1") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.1") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0kfrz9ffidv6wx21vwkxxmrcl1dvwr6m3ly34ymc2nrm58dw4v4g") (f (quote (("strict") ("mock"))))))

(define-public crate-gear-processor-0.3.1-alpha.2 (c (n "gear-processor") (v "0.3.1-alpha.2") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.2") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "16ricgvsznas3sp7hf3zidjanrmkzi7fbkzfjfdqji03vv7b0qj2") (f (quote (("strict") ("mock"))))))

(define-public crate-gear-processor-0.3.2 (c (n "gear-processor") (v "0.3.2") (d (list (d (n "actor-system-error") (r "^0.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "gear-backend-common") (r "^0.3.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "1wlvr18w5q3l069ccq0rx8nx8vj18raaihld22gsp9x92awfnjny") (f (quote (("strict") ("mock"))))))

