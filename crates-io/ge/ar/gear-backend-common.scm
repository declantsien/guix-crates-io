(define-module (crates-io ge ar gear-backend-common) #:use-module (crates-io))

(define-public crate-gear-backend-common-0.0.0 (c (n "gear-backend-common") (v "0.0.0") (h "174rdwz8vaiwaya2rhi7m6wpsq2534nmdrdv5996rwmvv53x3vgi")))

(define-public crate-gear-backend-common-0.1.0 (c (n "gear-backend-common") (v "0.1.0") (d (list (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.1.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.1.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.1.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.1.0") (k 0)) (d (n "gsys") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "1hdb5w1n066fr3gf731jfmhbyqpk3gvnr5xwk4xcrhl2rz58mvzq") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.2.1-alpha.0 (c (n "gear-backend-common") (v "0.2.1-alpha.0") (d (list (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.2.1-alpha.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.0") (k 0)) (d (n "gsys") (r "^0.2.1-alpha.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "10lc9krq31w2n3xvnlmr3mj1kyrfhci4w7zj6szfpk7g60a6yz19") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.2.1-alpha.1 (c (n "gear-backend-common") (v "0.2.1-alpha.1") (d (list (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.2.1-alpha.1") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.1") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.1") (k 0)) (d (n "gsys") (r "^0.2.1-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "02xks4qjfqlnljqng8y8pky0i0hxxfrgccl00shgk0j7bn67r25k") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.2.1-alpha.2 (c (n "gear-backend-common") (v "0.2.1-alpha.2") (d (list (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.2.1-alpha.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.2.1-alpha.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.2.1-alpha.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.2.1-alpha.2") (k 0)) (d (n "gsys") (r "^0.2.1-alpha.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "1ys9gccg3gcnif29k18dj84s8p0iqqygb5q1flzf1336bkfp6g7r") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.1-alpha.0 (c (n "gear-backend-common") (v "0.3.1-alpha.0") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.0") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.0") (k 0)) (d (n "gsys") (r "^0.3.1-alpha.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "05a0gqs2igs0hhx3sfz6gfb4a44z02pxwc0nrqpf12n75qhlqr1h") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.1-alpha.1 (c (n "gear-backend-common") (v "0.3.1-alpha.1") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.1") (k 0)) (d (n "gsys") (r "^0.3.1-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "0fp6vzgbxy2zx9ka6cs5d2by9mirqqs1nzsfq9vl7j6awcic1nz0") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.1-alpha.2 (c (n "gear-backend-common") (v "0.3.1-alpha.2") (d (list (d (n "actor-system-error") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.1-alpha.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.1-alpha.2") (k 0)) (d (n "gsys") (r "^0.3.1-alpha.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "0k9mn7pxckn8gy91jyd51lflh4njv1i1f0ihmnhqbf675j5qla9m") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.2 (c (n "gear-backend-common") (v "0.3.2") (d (list (d (n "actor-system-error") (r "^0.3.2") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.2") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2") (k 0)) (d (n "gsys") (r "^0.3.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "16fd71yrs41c2qpm7mrvww2mnkwj01g060aplwdr5fgb821wyw84") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.2-alpha.1 (c (n "gear-backend-common") (v "0.3.2-alpha.1") (d (list (d (n "actor-system-error") (r "^0.3.2-alpha.1") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.2-alpha.1") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2-alpha.1") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2-alpha.1") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2-alpha.1") (k 0)) (d (n "gsys") (r "^0.3.2-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "03nfhz1l6xnqmmkr0zbir1ml24r1ik1d31rq7ivl2gza6pci6qlh") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.2-alpha-2 (c (n "gear-backend-common") (v "0.3.2-alpha-2") (d (list (d (n "actor-system-error") (r "^0.3.2-alpha-2") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.2-alpha-2") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2-alpha-2") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2-alpha-2") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2-alpha-2") (k 0)) (d (n "gsys") (r "^0.3.2-alpha-2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "1pzc67ljxi1iglfafzwr28iws5gmj0w7ckjw88flp1j22dc9kkf3") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.2-alpha.3 (c (n "gear-backend-common") (v "0.3.2-alpha.3") (d (list (d (n "actor-system-error") (r "^0.3.2-alpha.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.2-alpha.3") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2-alpha.3") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2-alpha.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2-alpha.3") (k 0)) (d (n "gsys") (r "^0.3.2-alpha.3") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "1v1anghlp2wqg43pg64nihi7546hi87mhcriyc6z2q9sqkxwdjd1") (f (quote (("mock"))))))

(define-public crate-gear-backend-common-0.3.2-alpha.4 (c (n "gear-backend-common") (v "0.3.2-alpha.4") (d (list (d (n "actor-system-error") (r "^0.3.2-alpha.4") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "gear-backend-codegen") (r "^0.3.2-alpha.4") (d #t) (k 0)) (d (n "gear-core") (r "^0.3.2-alpha.4") (d #t) (k 0)) (d (n "gear-core-errors") (r "^0.3.2-alpha.4") (f (quote ("codec"))) (d #t) (k 0)) (d (n "gear-wasm-instrument") (r "^0.3.2-alpha.4") (k 0)) (d (n "gsys") (r "^0.3.2-alpha.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)))) (h "1c7hnqz3wxgvrzglsf82za3ww216dxglqqnw1gw6r4nky054b45p") (f (quote (("mock"))))))

