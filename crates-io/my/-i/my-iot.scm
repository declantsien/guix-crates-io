(define-module (crates-io my #{-i}# my-iot) #:use-module (crates-io))

(define-public crate-my-iot-0.11.0 (c (n "my-iot") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "humansize") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "180i6zv1vsgl1vpnpih0w14k4grki3bi221k9gdgjm5n5cfbdg4s")))

(define-public crate-my-iot-0.12.0 (c (n "my-iot") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "humansize") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0xqrlryrvcfqhn0gppxbbws440r71l3rdx50mmnmf1jb12hkiqxs")))

(define-public crate-my-iot-0.13.0 (c (n "my-iot") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "humansize") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0f7z7nbkvb4r1c0wncinr08wsl9di5j6c2v9fvi5vzr0k3x4pvsh")))

(define-public crate-my-iot-0.14.0 (c (n "my-iot") (v "0.14.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "humansize") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0isbsv5y345mgcpnhflwdb4bx5w6bhnyxdjwnf3mldpx6d5cgakh")))

(define-public crate-my-iot-0.15.0 (c (n "my-iot") (v "0.15.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0vr66w0gmyqfyd11dws6yarckis7h18a8i53a52b2hzp1j7bchaw")))

(define-public crate-my-iot-0.16.0 (c (n "my-iot") (v "0.16.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "multiqueue2") (r "^0.1.5") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0wrdr2cykjy8b148f8q4dmc6f4s3n1dipffw5zmlzapzccqy7k2y")))

(define-public crate-my-iot-0.16.1 (c (n "my-iot") (v "0.16.1") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0wl2yfs8vsgrmmxsi38zh0jydvqmil54z5c4fifs8lnjlpjbv3w8")))

(define-public crate-my-iot-0.16.2 (c (n "my-iot") (v "0.16.2") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "18rif4jldh0yk2182r026qwwf7jylqw0acsmvf1i065q9agxha55")))

(define-public crate-my-iot-0.17.0 (c (n "my-iot") (v "0.17.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "00a2dyafpb3gkgibklsbssssk899sb29dgqxxnqchzzvy7sxwnsd")))

(define-public crate-my-iot-0.18.0 (c (n "my-iot") (v "0.18.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "063ykp0f5iadyia2z4gvp199w0l9qq4gyq9f8nk82v8274583p52")))

(define-public crate-my-iot-0.19.0 (c (n "my-iot") (v "0.19.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0vbiizrwxw0razs950w0mgxqkvr07j00n1vga7pv7025ywmfix40")))

(define-public crate-my-iot-0.19.2 (c (n "my-iot") (v "0.19.2") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "1iyw844s09m7lk5n1bigdwy3yxr6h6ylfjji14gqf9n135pxqcjr")))

(define-public crate-my-iot-0.19.3 (c (n "my-iot") (v "0.19.3") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0ig0im0zdscij58148z400kfna3n0yygmrca7njgndxmsdc8alzx")))

(define-public crate-my-iot-0.19.4 (c (n "my-iot") (v "0.19.4") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "1xxivxgx4bhipqd764hh272np2fi939j4a2m3s93gjr930vx0w38")))

(define-public crate-my-iot-0.19.5 (c (n "my-iot") (v "0.19.5") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0bhp2n05f8k0ygwyzdzi4f7dkbh9mq3l8gp0zfkmnsd0qnry93rp")))

(define-public crate-my-iot-0.20.0 (c (n "my-iot") (v "0.20.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0wqz9zvvnpq65ac56ma913ydgb2ljbab85jb4rjn0g2x3v3v9hhq")))

(define-public crate-my-iot-0.21.0 (c (n "my-iot") (v "0.21.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0kzqqjnnw5gbyryz080pjb9j2jds2slyqmb07rxwdvmar1ybm25g")))

(define-public crate-my-iot-0.22.0 (c (n "my-iot") (v "0.22.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "03zp1lnrx44zsbr1qbhkc7mkqr27aj9cx80lsdwqjzz8mkaayw6l")))

(define-public crate-my-iot-0.23.0 (c (n "my-iot") (v "0.23.0") (d (list (d (n "bus") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0lzff45xdvrc520qfizfz4zvkdy08rpwwfyx212rhabb0jcxg7ik")))

(define-public crate-my-iot-0.24.0 (c (n "my-iot") (v "0.24.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "1013cddxcxld9xgi2rqvhqk61wxpzfjqrwxg12s9y58isn3kvmrl")))

(define-public crate-my-iot-0.25.0 (c (n "my-iot") (v "0.25.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "17z4k21fxgkbg2kdbxhd5gidrr1q0ib4wyanzfmw72243pkydqkc")))

(define-public crate-my-iot-0.26.0 (c (n "my-iot") (v "0.26.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "020i5n0apw4shlzx7bq6implsa4bd79b1gp3iqncbj4kcz8rw87x")))

(define-public crate-my-iot-0.27.0 (c (n "my-iot") (v "0.27.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "1b6js7gqg1ra8mgi927wg9mwj6z3sl7cc4qk0bdkzirdif10h39x")))

(define-public crate-my-iot-0.28.0 (c (n "my-iot") (v "0.28.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "1bvnbac18hyvk3n5ddlmsjj5fck10jr9kacy9mhpzvs9i2bykq9n")))

(define-public crate-my-iot-0.29.0 (c (n "my-iot") (v "0.29.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.4.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "08m25c05p1hcvpsp599lz5wzsng5kj2vz8z46bj51msp7bigk3lv")))

(define-public crate-my-iot-0.35.0 (c (n "my-iot") (v "0.35.0") (d (list (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "markup") (r "^0.4.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "0crmvhlwy4qi368yhl35j9rhjg75i1j1zn9jbyglxv67k7nhhmxv")))

(define-public crate-my-iot-0.38.2 (c (n "my-iot") (v "0.38.2") (d (list (d (n "askama") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)))) (h "12nl5fdv2q2fkc82mi0v2ryxk5psdvjl6rh88746p8qykvmqaca7")))

(define-public crate-my-iot-0.39.0 (c (n "my-iot") (v "0.39.0") (d (list (d (n "askama") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.2") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "uom") (r "^0.26.0") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "04swmks0i6x4a3nbhzwflpjsriabkc0gw46lzh2zbgrngbfji934")))

(define-public crate-my-iot-0.39.1 (c (n "my-iot") (v "0.39.1") (d (list (d (n "askama") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.2") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "uom") (r "^0.26.0") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "0yypyxi86mzr3v437b0z9wvd9al659aahnia3x4pvbyj35r2zl15")))

(define-public crate-my-iot-0.39.2 (c (n "my-iot") (v "0.39.2") (d (list (d (n "askama") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.2") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "uom") (r "^0.26.0") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "0amz4anabrm8h98whxw6alrqsrf505i78fw1akvxiwagy0jldvzb")))

(define-public crate-my-iot-0.40.0 (c (n "my-iot") (v "0.40.0") (d (list (d (n "askama") (r "^0.9") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.2") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "uom") (r "^0.26.0") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "1a7fm3xafp20i1fy5akgkrd0hm09sph1f2lcmrr4z203w78ka1qb")))

(define-public crate-my-iot-0.41.0 (c (n "my-iot") (v "0.41.0") (d (list (d (n "askama") (r "^0.9") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "eventsource") (r "^0.4.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.2") (d #t) (k 0)) (d (n "rouille") (r "^3.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5.3") (d #t) (k 0)) (d (n "uom") (r "^0.26.0") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "0z0frv5hnj7zdqp143p0c0mzrzc873rvgk5csmn5rz1d5fclnd7p")))

(define-public crate-my-iot-0.42.0 (c (n "my-iot") (v "0.42.0") (d (list (d (n "askama") (r "^0.9") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "eventsource") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uom") (r "^0.26") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "0l55dd0cdv7yh8829ja7b6qyx7lb8m36yqrj45sbcv1rwgaslm4d")))

(define-public crate-my-iot-0.43.0 (c (n "my-iot") (v "0.43.0") (d (list (d (n "askama") (r "^0.9") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "eventsource") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uom") (r "^0.26") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "037sdv3rii4frblqw4ygavyq4nls9plcfq2sg7ksq60327mfk6cc")))

(define-public crate-my-iot-0.44.0 (c (n "my-iot") (v "0.44.0") (d (list (d (n "askama") (r "^0.9") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "eventsource") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uom") (r "^0.26") (f (quote ("use_serde" "autoconvert" "f64" "si" "std" "try-from"))) (d #t) (k 0)))) (h "04qm7ci3cy6qs7a19fb7dah9zyc43xkkr02qsnr6i67639n5wkig")))

(define-public crate-my-iot-0.71.0 (c (n "my-iot") (v "0.71.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10zwsq6kkcm9irqm7n5dcpcbznjsv5pagyyd1pdny8cwp12qq46l")))

(define-public crate-my-iot-0.71.1 (c (n "my-iot") (v "0.71.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10vgq7x9xp155pmh2gdw69qf2k5j446lpw34j95cg41zlwbxpxzm")))

(define-public crate-my-iot-0.72.0 (c (n "my-iot") (v "0.72.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0lyhv4j4g1scp4cw5655kpk4vzk5zjcvm55w1wpzhnxpks9h5adm")))

(define-public crate-my-iot-0.73.0 (c (n "my-iot") (v "0.73.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1sdy761q4znq2832agwnc8q0wb7h3lhm2i8g8bdjgfa4dlgr8lab")))

(define-public crate-my-iot-0.73.1 (c (n "my-iot") (v "0.73.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0j3pws3mmcc0m3vw1q684kmw7z6vhmwnch64sj9avrqx3rky6h75")))

(define-public crate-my-iot-0.73.2 (c (n "my-iot") (v "0.73.2") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "19f7vfdb7735w7br4y2alklvh9nk23fipknq8nry81mi1nv7yby9")))

(define-public crate-my-iot-0.73.3 (c (n "my-iot") (v "0.73.3") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0yv7j7car28lim3qsh3xc3y2x3fgqs65v1w6a1jwz058xkg3smas")))

(define-public crate-my-iot-0.74.0 (c (n "my-iot") (v "0.74.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1qfk85v6y8zllhyczia64mwfnf1ln2cxlmqfg3aqm0z8pg378nfm")))

(define-public crate-my-iot-0.75.0 (c (n "my-iot") (v "0.75.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "13dacfzzb44z9fmdw2wlnwmkgql5kzqx29d8jjjwa4ci7wl2j64b")))

(define-public crate-my-iot-0.75.1 (c (n "my-iot") (v "0.75.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "070ab5p6j37qv8rmik4nz3fraf3mb47a3b3p5vfb24fbhz5b73dg")))

(define-public crate-my-iot-0.76.0 (c (n "my-iot") (v "0.76.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rlua") (r "^0.17") (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10d2d6mljfa680f0id03kb8b27hyp2hrhvzr775fgfjr22dy0pml")))

(define-public crate-my-iot-0.77.0 (c (n "my-iot") (v "0.77.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "19dk1xw9sw5zlwxl0rd33nkmf1bfvl4p4y31iyvy4mkzsl42gsqf")))

(define-public crate-my-iot-0.77.1 (c (n "my-iot") (v "0.77.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1vk1x1alsr5glkzyc4a7q69hvm2hca12r6syia6jbznplwb3cv9a")))

(define-public crate-my-iot-0.78.0 (c (n "my-iot") (v "0.78.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1n8qkaqsi939p8flrihxbrdcra7c3ag88vs0l7yx247a5llxgan7")))

(define-public crate-my-iot-0.78.1 (c (n "my-iot") (v "0.78.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0jckz8ryyk81v7hg6rhcsc24js3fjp2r6k5jpqzgvqh3a5mfbr92")))

(define-public crate-my-iot-0.78.2 (c (n "my-iot") (v "0.78.2") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1iky8a1wbfm5lbgismhaxswr91a22fymp4jbfz6z2vwq6f3h6rfa")))

(define-public crate-my-iot-0.79.0 (c (n "my-iot") (v "0.79.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "17d6ing88qxd1py3ycr6927n3wm8272hs98d1d8r1p9dck8n05yr")))

(define-public crate-my-iot-0.80.0 (c (n "my-iot") (v "0.80.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "10wwqyzwv17ryvfdfh2a4jy0l075vnv4gdzlh3sgqhm8pb07a6lv")))

(define-public crate-my-iot-0.81.0 (c (n "my-iot") (v "0.81.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1l4g9k0w90lclyq7yvsnc1blihnfyqq96nwpv98cplybaib7kzm0")))

(define-public crate-my-iot-0.81.1 (c (n "my-iot") (v "0.81.1") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1zzvgjkyxywa4ssk32pi8lwkb9jhfqzvgjsj7swiy3icbal90qpk")))

(define-public crate-my-iot-0.82.2 (c (n "my-iot") (v "0.82.2") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0snf8rhjp7c95c7zidqwn56w5aw7842v76bxriys6wd6ghq5a0z1")))

(define-public crate-my-iot-0.82.3 (c (n "my-iot") (v "0.82.3") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1xkm6yk4z9lj3z5iawx8l87bqmhmx8fdcq3xan26gc6i5z5kxz86")))

(define-public crate-my-iot-0.82.5 (c (n "my-iot") (v "0.82.5") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "18al99fpjdw50y8k4p48jrpzadbghfwqmvdg03kf7k9pr6k7n3y5")))

(define-public crate-my-iot-0.82.6 (c (n "my-iot") (v "0.82.6") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (d #t) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (d #t) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1fyqradcz8whb4xf2zrv7hvmn7hnhcd59lcbf498ccra7aw40i3n")))

(define-public crate-my-iot-0.83.0 (c (n "my-iot") (v "0.83.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1pkhm20sgwqa18qjxpsd2ml8vimfzbv5cfynmmp2ir35qf17q04n")))

(define-public crate-my-iot-0.84.0 (c (n "my-iot") (v "0.84.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "16bdrjv3dcain6sywmkgwipkawgwy20rhsd6h3525ql0mz043bk0")))

(define-public crate-my-iot-0.85.0 (c (n "my-iot") (v "0.85.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1sjkyniw2sr0xpi5b5w3618apgsg6hsciggkqh3cip9iidiimv24")))

(define-public crate-my-iot-0.86.0 (c (n "my-iot") (v "0.86.0") (d (list (d (n "askama") (r "^0.10") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.16") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4") (k 0)) (d (n "rocket_contrib") (r "^0.4") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.20") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_regex") (r "^0.4") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "spa") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0s1qqnky03z3frnbpmcm0spp3bbcz4zf5s41np95gl5x8z1078mi")))

(define-public crate-my-iot-0.87.0 (c (n "my-iot") (v "0.87.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0ljcd61j4wfpb8axfaigqz8wa621c0bdc05qssipyxfqijhiszky")))

(define-public crate-my-iot-0.88.0 (c (n "my-iot") (v "0.88.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0gjgmzf6wnm1h9rz92xjgws0rkwjblgfkf73189s0hx8bxyhsns4")))

(define-public crate-my-iot-0.89.0 (c (n "my-iot") (v "0.89.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "12ab4x2rcvc47xyqnpgv5zss1m59801jki25rpdi5hbwa30yykwf")))

(define-public crate-my-iot-0.90.0 (c (n "my-iot") (v "0.90.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "1f1qj15cxwrw6sfa5484knpdx643q3ji9lrzygkh6pn5j65nxa4q")))

(define-public crate-my-iot-0.91.0 (c (n "my-iot") (v "0.91.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0flirxr922r5mawqzhplvvnrvki89iqaaxp7fxn0jnsg12zpb2nf")))

(define-public crate-my-iot-0.92.0 (c (n "my-iot") (v "0.92.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0050rz08qamqqw0pk8mhf4b9pnx20wgbdk7zjvki71w3ddxvlk2s")))

(define-public crate-my-iot-0.93.0 (c (n "my-iot") (v "0.93.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1hnjkqbjabdsfqil6mvgykwcgbpkx9qx45vykyp6iwwwg7a444kg")))

(define-public crate-my-iot-0.94.0 (c (n "my-iot") (v "0.94.0") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1rh8r55g1ji0pc5rrbjajmgfxmscibjyp5y1v4078ccir7rq96pj")))

(define-public crate-my-iot-0.94.2 (c (n "my-iot") (v "0.94.2") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "blocking" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0jgpz6jagwpw4v13n2pv63rgij76gvqd74bh8w79sr0xiax2cj07")))

(define-public crate-my-iot-0.94.3 (c (n "my-iot") (v "0.94.3") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "rusqlite") (r "^0.23.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1snml37nbyw5g9f0x1m1jx67nvfj1vzyfvqrmmibad1babz2yy8f")))

(define-public crate-my-iot-0.94.4 (c (n "my-iot") (v "0.94.4") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("sqlite"))) (d #t) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "129g0smwhwkynfgxmv83ssjlaz644534izn9dapj8blyn3fwmzk9")))

(define-public crate-my-iot-0.94.5 (c (n "my-iot") (v "0.94.5") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "18mbp7vxyirjw1zrgb8hmvm1j3s8g9836ci75y3j39lwmm8h4q84")))

(define-public crate-my-iot-0.94.6 (c (n "my-iot") (v "0.94.6") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1cgw8g7rfhf3rbzya59kszkcfw5fd653nykshsvcmxk664kqzkwf")))

(define-public crate-my-iot-0.94.7 (c (n "my-iot") (v "0.94.7") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0is3vrjs9bnsmfrm89xm44a46vgxk235zcz0z2qgqz4b70nm14wv")))

(define-public crate-my-iot-0.94.8 (c (n "my-iot") (v "0.94.8") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "17s2s5fyfjwkvrlj1pw3h9n4lxah4qhsbdjjq26si85gy7dnr9zr")))

(define-public crate-my-iot-0.94.9 (c (n "my-iot") (v "0.94.9") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes" "tokio02"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "030gyvmqjxlzfk8azr0j4ych526g7v7lrvfkc5gzhsbjavj2kcb1")))

(define-public crate-my-iot-0.94.10 (c (n "my-iot") (v "0.94.10") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes" "tokio02"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.17.0") (f (quote ("sync" "no_module"))) (d #t) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0xcr2qkz1jsjxnmdzlzfdpbl633nhr9ahjkgqcgbzsc39kxjn9kq")))

(define-public crate-my-iot-0.94.11 (c (n "my-iot") (v "0.94.11") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes" "tokio02"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1raisd3j8l74g0hil5pqadyq7zpwspdkg3y0wx4997xm173lswal")))

(define-public crate-my-iot-0.94.12 (c (n "my-iot") (v "0.94.12") (d (list (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes" "tokio02"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("rustls-tls" "gzip" "json"))) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1mv3i3lh0n4yqr3mpcap2xlnf6yawbggh3k6z52knx9abq8nazzf")))

(define-public crate-my-iot-0.94.13 (c (n "my-iot") (v "0.94.13") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "1pfw0as3pk6mr1b4ykcsj7kgrsf98mvk8059nbfz9s80a14m2y9w")))

(define-public crate-my-iot-0.95.0 (c (n "my-iot") (v "0.95.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "failure" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "11wlf29kd0qd2ljmi2c68wzbyla9nj5y7brn9wiq7b72jkxqmf21")))

(define-public crate-my-iot-0.96.0 (c (n "my-iot") (v "0.96.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "failure" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0qp4039qx6ja5bpl090p7s63q10wh76vimrglh7j3mvwj4qrydha")))

(define-public crate-my-iot-0.96.1 (c (n "my-iot") (v "0.96.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "failure" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "18bswr9b99zlzrjan9pl10l2n3g10ddnh5a3dq863m99dah692a6")))

(define-public crate-my-iot-0.96.2 (c (n "my-iot") (v "0.96.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "failure" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "10wjyp3kwj72vzfa9yycf3i6v44kwmr6baq1ykbcalypxigmi9c0")))

(define-public crate-my-iot-0.96.3 (c (n "my-iot") (v "0.96.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "failure" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0grnx0ly40szh3dqa7m2za3km3l1gp71wwngh57g1swj4br1j01l")))

(define-public crate-my-iot-0.96.4 (c (n "my-iot") (v "0.96.4") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0030k2nyw11mr47ipkvwmna5s17jwvr2l9n7yzspxbdgq3bz2zas")))

(define-public crate-my-iot-0.96.5 (c (n "my-iot") (v "0.96.5") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0da470lsk542hph0mk71j8gzhx35v5sjz7kyhlcxrpxq1gq9kq9s")))

(define-public crate-my-iot-0.96.6 (c (n "my-iot") (v "0.96.6") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0sns8pxhni2hqzjksxha6wksf5nmm0f493lvd19hkhs9f95igdyk")))

(define-public crate-my-iot-0.96.8 (c (n "my-iot") (v "0.96.8") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "1v35wvsrwy0hgbzfbh26f3vv2c0hy872g8q534ddvl78a41ahsrm")))

(define-public crate-my-iot-0.96.9 (c (n "my-iot") (v "0.96.9") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.5") (f (quote ("native-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)))) (h "0di71ksvjq2n9b4g4fvvsjylcnflbf09qakh1q9d2fnpdch6gsd9")))

(define-public crate-my-iot-0.96.10 (c (n "my-iot") (v "0.96.10") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.20.1") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.7") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1k8sm2sf66rnhb5ggd2fy4mr62612xj2if9m9xljhqczg8450dsd")))

(define-public crate-my-iot-0.96.11 (c (n "my-iot") (v "0.96.11") (d (list (d (n "anyhow") (r ">=1.0.32, <2.0.0") (d #t) (k 0)) (d (n "askama") (r ">=0.10.2, <0.11.0") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r ">=1.6.2, <2.0.0") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.6, <0.6.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.13, <0.5.0") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r ">=0.5.2, <0.6.0") (f (quote ("serde"))) (k 0)) (d (n "futures") (r ">=0.3.5, <0.4.0") (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r ">=0.20.1, <0.21.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (k 0)) (d (n "mdns") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "openssl-sys") (r ">=0.9.58, <0.10.0") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r ">=1.3.9, <2.0.0") (d #t) (k 0)) (d (n "rhai") (r ">=0.18.3, <0.19.0") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r ">=0.4.5, <0.5.0") (k 0)) (d (n "rocket_contrib") (r ">=0.4.5, <0.5.0") (f (quote ("json"))) (k 0)) (d (n "seahash") (r ">=4.0.1, <5.0.0") (d #t) (k 0)) (d (n "sentry") (r ">=0.20.1, <0.21.0") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r ">=1.0.114, <2.0.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)) (d (n "serde_regex") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "simplelog") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "slug") (r ">=0.1.4, <0.2.0") (d #t) (k 0)) (d (n "spa") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "sqlx") (r ">=0.4.1, <0.5.0") (f (quote ("runtime-async-std-rustls" "sqlite"))) (k 0)) (d (n "statrs") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.15, <0.4.0") (d #t) (k 0)) (d (n "surf") (r ">=2.0.0-alpha.7, <3.0.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "toml") (r ">=0.5.6, <0.6.0") (d #t) (k 0)) (d (n "url") (r ">=2.2.0, <3.0.0") (d #t) (k 0)))) (h "0906mbqlx6skb24w4rhym2x9ny0gyd5dx6wvs2s9vshd64wdva67")))

(define-public crate-my-iot-0.96.12 (c (n "my-iot") (v "0.96.12") (d (list (d (n "anyhow") (r ">=1.0.32, <2.0.0") (d #t) (k 0)) (d (n "askama") (r ">=0.10.2, <0.11.0") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r ">=1.6.2, <2.0.0") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.6, <0.6.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.13, <0.5.0") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r ">=0.5.2, <0.6.0") (f (quote ("serde"))) (k 0)) (d (n "futures") (r ">=0.3.5, <0.4.0") (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r ">=0.20.1, <0.21.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (k 0)) (d (n "mdns") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "openssl-sys") (r ">=0.9.58, <0.10.0") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r ">=1.3.9, <2.0.0") (d #t) (k 0)) (d (n "rhai") (r ">=0.18.3, <0.19.0") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r ">=0.4.5, <0.5.0") (k 0)) (d (n "rocket_contrib") (r ">=0.4.5, <0.5.0") (f (quote ("json"))) (k 0)) (d (n "seahash") (r ">=4.0.1, <5.0.0") (d #t) (k 0)) (d (n "sentry") (r ">=0.20.1, <0.21.0") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r ">=1.0.114, <2.0.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)) (d (n "serde_regex") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "simplelog") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "slug") (r ">=0.1.4, <0.2.0") (d #t) (k 0)) (d (n "spa") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "sqlx") (r ">=0.4.1, <0.5.0") (f (quote ("runtime-async-std-rustls" "sqlite"))) (k 0)) (d (n "statrs") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.15, <0.4.0") (d #t) (k 0)) (d (n "surf") (r ">=2.0.0-alpha.7, <3.0.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "toml") (r ">=0.5.6, <0.6.0") (d #t) (k 0)) (d (n "url") (r ">=2.2.0, <3.0.0") (d #t) (k 0)))) (h "0mnamgnv7fna7j9ndvwnw601aq39jc1mqn7ij3raijb86b2mypwz")))

(define-public crate-my-iot-0.96.13 (c (n "my-iot") (v "0.96.13") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.20.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.21.0") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-rustls" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.7") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1rs1900c1m7qjiffzpy46x3w3hr541ggqmm9hajbh36l1valnbbq")))

(define-public crate-my-iot-0.97.0 (c (n "my-iot") (v "0.97.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "askama") (r "^0.10.2") (f (quote ("serde-json"))) (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("std" "attributes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (f (quote ("serde"))) (k 0)) (d (n "chrono-tz") (r "^0.5.2") (f (quote ("serde"))) (k 0)) (d (n "futures") (r "^0.3.5") (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.20.1") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "mdns") (r "^1.1.0") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.58") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "rhai") (r "^0.18.3") (f (quote ("sync" "no_module"))) (k 0)) (d (n "rocket") (r "^0.4.5") (k 0)) (d (n "rocket_contrib") (r "^0.4.5") (f (quote ("json"))) (k 0)) (d (n "seahash") (r "^4.0.1") (d #t) (k 0)) (d (n "sentry") (r "^0.21.0") (f (quote ("backtrace" "contexts" "panic" "transport" "log" "anyhow"))) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.9.0") (d #t) (k 0)) (d (n "slug") (r "^0.1.4") (d #t) (k 0)) (d (n "spa") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-rustls" "sqlite"))) (k 0)) (d (n "statrs") (r "^0.13.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.15") (d #t) (k 0)) (d (n "surf") (r "^2.0.0-alpha.7") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "115b92m1mqzydc8bmwk790mgak18l9yb8mcnxmpv0gm98d0xxm7f")))

