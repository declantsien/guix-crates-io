(define-module (crates-io my sh mysh) #:use-module (crates-io))

(define-public crate-mysh-0.1.0 (c (n "mysh") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "1sqzrs7w3zd2kl2kr6n2xah0pgng26j00y8ph9y8rab8q86snnq0") (r "1.68")))

(define-public crate-mysh-0.1.1 (c (n "mysh") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0f68vzr6qp79jgkvi9axhi61qkw2hx7kvv9paxrnl6w3zsc31s8l") (r "1.68")))

(define-public crate-mysh-0.1.2 (c (n "mysh") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "1is4wlyn8mljb9b0nzgfs4b5q446yh2mgc2znk8sg562wz0qn88z") (r "1.68")))

(define-public crate-mysh-0.1.3 (c (n "mysh") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0i5cbd8rgz3biv61sy81p5xfd03irzwg0mv62w0zw8lbivhhax4b") (r "1.68")))

(define-public crate-mysh-0.1.4 (c (n "mysh") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0jqjpk1xwjhk1l2bjg1hjxsh02i1dphhaxzc7kgg9by9yins6gbx") (r "1.68")))

(define-public crate-mysh-0.1.5 (c (n "mysh") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "135py6ngnrqgnihrqw342n5qy0mcwf4xprrxs8jwp7zlmak1hwwd") (r "1.68")))

(define-public crate-mysh-0.1.6 (c (n "mysh") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "mysh_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "reedline") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "19mkji69vzz585q3cxygj7b5jww0y6mkry950rhkpcckvg7dc8sy") (r "1.68")))

