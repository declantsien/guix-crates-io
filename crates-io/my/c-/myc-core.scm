(define-module (crates-io my c- myc-core) #:use-module (crates-io))

(define-public crate-myc-core-0.1.0 (c (n "myc-core") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0qj2ry74w4irhyby2nng8as8ik7wk2czgd0w0v2zs6k6qpjfpmzb") (y #t)))

(define-public crate-myc-core-0.2.0 (c (n "myc-core") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1nn3n2v4s06w6vn75sckrdijk20ll5la44jknz3qxn959iv40ijs") (y #t)))

(define-public crate-myc-core-0.3.0 (c (n "myc-core") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0nirrbsi8bn40rc5kfqfl319sij0ws4bydpw4rhqs3sy99r078gg") (y #t)))

(define-public crate-myc-core-0.3.1 (c (n "myc-core") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0p3dab54krll6ngf5sh6pcz05xccpcfq3cql9rgraz4czm9yyr20") (y #t)))

(define-public crate-myc-core-0.4.0 (c (n "myc-core") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1xgkzrln9l384l76wcqnwpmv4qqlrv7khwbi5xsyfbsc7am218mz") (y #t)))

(define-public crate-myc-core-0.4.1 (c (n "myc-core") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1mr51d8nxsmq5yjrjxpnxvy2p240k0r8g7xm9wl5wdk4hxph8r7k") (y #t)))

(define-public crate-myc-core-0.4.2 (c (n "myc-core") (v "0.4.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "00js4hgwy4zgy6ffkv2l8k46lk5n5hsgirzpxmd3mqx29z9ambnn") (y #t)))

(define-public crate-myc-core-0.5.0 (c (n "myc-core") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0iha29j4q49swydapp16k5nj1y1sc8zj9lf160g9akg0nvs3s3jp") (y #t)))

(define-public crate-myc-core-0.7.0 (c (n "myc-core") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1qhyd2galqgnbm7zbmvygpvy663wbvvz11i7rzxjqm9kbv9gxk8j") (y #t)))

(define-public crate-myc-core-0.7.1 (c (n "myc-core") (v "0.7.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1b1j7gwavasqrjivvisc3nfmz9ddqagljp6m9njqkfb3458fv4c0") (y #t)))

(define-public crate-myc-core-0.8.0 (c (n "myc-core") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0yc55pgjk9g10qb3j16944x8wdi9k4m5i8223nm94fnxsdh2p5x1") (y #t)))

(define-public crate-myc-core-0.10.4 (c (n "myc-core") (v "0.10.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clean-base") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^2") (f (quote ("actix_extras" "uuid"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1yyqs0lpy9bxdzcsd03qcymx4580g51q1k641zk3rxzggniy5p1v") (y #t)))

(define-public crate-myc-core-4.15.1 (c (n "myc-core") (v "4.15.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^4.15.1") (d #t) (k 0)) (d (n "mycelium-config") (r "^4.15.1") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1by847y6maa5indxzskc4ahl5lkd9qirchv8aaq3a5vckl3cwz73")))

(define-public crate-myc-core-4.15.3 (c (n "myc-core") (v "4.15.3") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^4.15.3") (d #t) (k 0)) (d (n "mycelium-config") (r "^4.15.3") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "00gicnbvqvjr3w2jwgqh0gw6aw0zh7r6qzgan3d4qbvhk8d5kjv1")))

(define-public crate-myc-core-4.16.0 (c (n "myc-core") (v "4.16.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^4.16.0") (d #t) (k 0)) (d (n "mycelium-config") (r "^4.16.0") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1ybcdmib3nja2wd7ngzg0b8wgqd2qvg00q6xkzb5pjcb5b2s65zq")))

(define-public crate-myc-core-5.0.0 (c (n "myc-core") (v "5.0.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^5.0.0") (d #t) (k 0)) (d (n "mycelium-config") (r "^5.0.0") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "00lcpjgyak7cv2ny587z9p4yp92y7qwsp01p9f87d4hz75xknwk1")))

(define-public crate-myc-core-5.0.1 (c (n "myc-core") (v "5.0.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^5.0.1") (d #t) (k 0)) (d (n "mycelium-config") (r "^5.0.1") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0qn4dgz4laxs53qyc32iw9ssr2sck6j33a0y78wkwmg4ir1s7qg4")))

(define-public crate-myc-core-5.0.2 (c (n "myc-core") (v "5.0.2") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^5.0.2") (d #t) (k 0)) (d (n "mycelium-config") (r "^5.0.2") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "0vw7hd7rbqzxngcdnjggpzv31v6xp510cyvgdkx5ax493hcbdfwc")))

(define-public crate-myc-core-5.0.8 (c (n "myc-core") (v "5.0.8") (d (list (d (n "actix-web") (r "^4") (f (quote ("openssl"))) (d #t) (k 0)) (d (n "actix-web-httpauth") (r "^0.8.0") (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "mycelium-base") (r "^5.0.8") (d #t) (k 0)) (d (n "mycelium-config") (r "^5.0.8") (d #t) (k 0)) (d (n "pasetors") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shaku") (r "^0.6") (d #t) (k 0)) (d (n "shaku_actix") (r "^0.2") (d #t) (k 0)) (d (n "slugify") (r "^0.1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "utoipa") (r "^4") (f (quote ("actix_extras" "uuid" "chrono" "openapi_extensions"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "serde" "fast-rng"))) (d #t) (k 0)))) (h "1jjwalbja4rw3bh4wslv9ya36gv9hndrwkc0j8hjkjcjn3phij4q")))

