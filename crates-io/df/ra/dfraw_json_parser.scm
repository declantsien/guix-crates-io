(define-module (crates-io df ra dfraw_json_parser) #:use-module (crates-io))

(define-public crate-dfraw_json_parser-0.2.0 (c (n "dfraw_json_parser") (v "0.2.0") (d (list (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "126p0hwy1x5nypzix0frrcb39yf67kb4wlagg84yyajgg4zlr6lg")))

(define-public crate-dfraw_json_parser-0.2.1 (c (n "dfraw_json_parser") (v "0.2.1") (d (list (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple_logger") (r "^2.2.0") (d #t) (k 2)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1f55lrh4frdrd5440a178866wiwrgxc5sbbf1qm9ymb499n8cpys")))

(define-public crate-dfraw_json_parser-0.3.0 (c (n "dfraw_json_parser") (v "0.3.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19xj8kgm5zgck8vmgs4p8m2k5anrcr9xgiw3axamm9hdgzqhrbc3")))

(define-public crate-dfraw_json_parser-0.3.1 (c (n "dfraw_json_parser") (v "0.3.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0b3pjbdknnq3wjp2cbj44gp04x9ahl9b6p2i117989h744rcbx5m") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.4.0 (c (n "dfraw_json_parser") (v "0.4.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q0haq0w9invypgxvvzbvh8r9mh7mlmgyvjg9sds6p6rvzxpswvi") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.4.1 (c (n "dfraw_json_parser") (v "0.4.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1w31pmbr95ni60z385gs5psbcqj031mz5gdlabvfz4w2cb8mhsls") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.5.0 (c (n "dfraw_json_parser") (v "0.5.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0yawc2l7xrrc3jlc9hm1rwcsw3rfn75ns8s3az5bvf35xka8xirn") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.6.0 (c (n "dfraw_json_parser") (v "0.6.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0nm8av2rdrpmfl49clcz0a5v827pwggdh7l1jnh71cq4wq622g11") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.0 (c (n "dfraw_json_parser") (v "0.7.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19qjjnn5b8081xi7vls5afa3jb3l6vfcgmby577hqjqdzgq463x2") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.1 (c (n "dfraw_json_parser") (v "0.7.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mcppax370rg737v682wx4709hakai4m9hsixs6pbd48kyq3cm6f") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.2 (c (n "dfraw_json_parser") (v "0.7.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0j00nbha3iyhcg9k886a281ndzh0pc70xl1ngkz46fiz3hv4c8yv") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.3 (c (n "dfraw_json_parser") (v "0.7.3") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0qh2mdrvcys2phhvkvsd8y9j79y1nvmlkvvw7pcpi5snswbmw2hz") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.4 (c (n "dfraw_json_parser") (v "0.7.4") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1xmavlw3yhp8nx5kh3saplmc1yhjhpbvw92ihqk5v2c27zq9ygdw") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.5 (c (n "dfraw_json_parser") (v "0.7.5") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "01xj5n6mqb5v8ksjdzpam56c5xdx79k7zqiv96c1i331vwpx7619") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.6 (c (n "dfraw_json_parser") (v "0.7.6") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0fimhls7dmag8as6sp6j4gv6c33wh501vlp88pi83zfq6qi3jwdj") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.7.7 (c (n "dfraw_json_parser") (v "0.7.7") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0a2z55nl57rpv15p3pb865j7257qqnpzh01qcj4s6mk2rbpisiac") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.8.0 (c (n "dfraw_json_parser") (v "0.8.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1d31src1jrnqhgzkd3d2yhyf2zcrnya26hm9rx0wykkcbcxjj406") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.8.1 (c (n "dfraw_json_parser") (v "0.8.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1h708k1pav1815cvi2nbgknvzi2cjdvilxhnlyl7mz1wv5sbif40") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.9.0 (c (n "dfraw_json_parser") (v "0.9.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zjd5qmicfd1z7szqc8pnl4gxhl25dkh2gk4j7jz7hd8a6n761f4") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.9.1 (c (n "dfraw_json_parser") (v "0.9.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14i46vmpack7hly1kix9wr7mh0wic3ajb8ppg957jrgagjfhgy8a") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.9.2 (c (n "dfraw_json_parser") (v "0.9.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0d4fjsanl2q5nlglw7pflvbyvhq9i99phlzl0n9cla6b5k8bj8dh") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.9.3 (c (n "dfraw_json_parser") (v "0.9.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0m6219842vpqrqga1dx9vvx11g5vzzfm1c71vax4i8x34bq9gfs3") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.9.4 (c (n "dfraw_json_parser") (v "0.9.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0gwfhlr58dxn5hx2yv3idwq0g7r0pmd3sycnhrsknv61wpajgc5r") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.10.0 (c (n "dfraw_json_parser") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "13jnbamkldvh80h6w76garrigd70kpwymqkg604fawpzfn77ai73") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.10.1 (c (n "dfraw_json_parser") (v "0.10.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0hv9bx4y5vn7211zdp34zqgxxhzvp8h799kzr2n03yqfk1cb8xws") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.11.0 (c (n "dfraw_json_parser") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "11dkx1cni5zvb4h6nbxqxwl2mkpwyzzmcjj4dnw5k2c55ni9ja6b") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.12.0 (c (n "dfraw_json_parser") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.1") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1w8vz7v9m9q178wl4rqww7mjqn3ri9b934c8zfr6syr3phpmf453") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.13.0 (c (n "dfraw_json_parser") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (f (quote ("colored"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zpkdjz1ck3nrci7sf2zdnwf3b8kmhpbbpks2xpjmd3nd27mjsyk") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.14.0 (c (n "dfraw_json_parser") (v "0.14.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (f (quote ("colored"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "ts-rs") (r "^7.0") (f (quote ("serde-compat"))) (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14sdi2pln4xx72rkpxdrfc87gwchz6zfiji512msaq4b14b91s0i") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.15.0 (c (n "dfraw_json_parser") (v "0.15.0") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0") (f (quote ("serde-compat"))) (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "1y5k78c44db7yp1xcbgl2i1a4dfnfmryq0al379gima1nd2ddxhw") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.15.1 (c (n "dfraw_json_parser") (v "0.15.1") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0") (f (quote ("serde-compat"))) (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "18irhwxna4h67873m4qbgn0x5cfq358cbxs40i6x1ys4g1x6rdmg") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.16.0 (c (n "dfraw_json_parser") (v "0.16.0") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0") (f (quote ("serde-compat"))) (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "1dnqxdxwxqwjxdj641zhyngn16lmxafk927npf2i9jr5g6sbj2pf") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.0 (c (n "dfraw_json_parser") (v "0.17.0") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "0j2bhdynvs4xbkf9h5qcqms2nhgr29sgpdgb35a03pchc47m6ndb") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.1 (c (n "dfraw_json_parser") (v "0.17.1") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "0slcf8qkw9xc0c5mb0slj3qaq64i9n0p3p013ahk4hsgg6acizkm") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.2 (c (n "dfraw_json_parser") (v "0.17.2") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "04pflqxiawvgxap3lrlzp2zfjczl162h9ja300njl94sp4xb1bfn") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.3 (c (n "dfraw_json_parser") (v "0.17.3") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "18337q0rp9qwvslfzjxxrwrq4nzxymqb7qxwiv2xd4g8rq4p109v") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.4 (c (n "dfraw_json_parser") (v "0.17.4") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "1y6r79w53kl715i1i7wqdczpmy9v1nyr2l66dlgy4pai5j3rmmr8") (s 2) (e (quote (("tauri" "dep:tauri"))))))

(define-public crate-dfraw_json_parser-0.17.5 (c (n "dfraw_json_parser") (v "0.17.5") (d (list (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "specta") (r "^1.0.5") (f (quote ("typescript" "export"))) (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xmlparser") (r "^0.13.6") (d #t) (k 0)))) (h "11zvbr9fpmhwmdb1qj6y057l7z61n2hrp6gsrf7fk9ds3w1x8ifv") (s 2) (e (quote (("tauri" "dep:tauri"))))))

