(define-module (crates-io df _s df_st_parser) #:use-module (crates-io))

(define-public crate-df_st_parser-0.3.0-development-1 (c (n "df_st_parser") (v "0.3.0-development-1") (d (list (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "df_st_core") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_db") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_image_maps") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_image_site_maps") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_legends") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_legends_plus") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_world_history") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_world_sites_and_pops") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "indicatif") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0dlay8xrwbizgi55qvi0n3s7262k6a6n5anji9ffvgxzziisprcl")))

(define-public crate-df_st_parser-0.3.0-development-2 (c (n "df_st_parser") (v "0.3.0-development-2") (d (list (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "df_st_core") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_db") (r "^0.3.0-development-2") (k 0)) (d (n "df_st_image_maps") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_image_site_maps") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_legends") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_legends_plus") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_world_history") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_world_sites_and_pops") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "indicatif") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0wf7ng1h59b5sncdsj3mm7wbqlpvhz4xvccp1rkafs7lf1jdwm4q") (f (quote (("sqlite" "df_st_db/sqlite") ("postgres" "df_st_db/postgres") ("default" "sqlite"))))))

