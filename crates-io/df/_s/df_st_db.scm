(define-module (crates-io df _s df_st_db) #:use-module (crates-io))

(define-public crate-df_st_db-0.3.0-development-1 (c (n "df_st_db") (v "0.3.0-development-1") (d (list (d (n "df_st_core") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "df_st_derive") (r "^0.3.0-development-1") (d #t) (k 0)) (d (n "diesel") (r "^1.4.4") (f (quote ("r2d2"))) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0sxcdnj45dqrvjh7q4jlz2da047k40a2gp0hc87qhhypwdq1266m") (f (quote (("sqlite" "diesel/sqlite") ("postgres" "diesel/postgres") ("default" "sqlite"))))))

(define-public crate-df_st_db-0.3.0-development-2 (c (n "df_st_db") (v "0.3.0-development-2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "df_st_core") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "df_st_derive") (r "^0.3.0-development-2") (d #t) (k 0)) (d (n "diesel") (r "^1.4.4") (f (quote ("r2d2"))) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.18") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0qgd78zqpbcl47q4jlcb41adsb59sdi83mq2kxq2mxpi02bwr4b3") (f (quote (("sqlite" "diesel/sqlite") ("postgres" "diesel/postgres") ("default" "sqlite"))))))

