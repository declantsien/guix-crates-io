(define-module (crates-io mz da mzdata) #:use-module (crates-io))

(define-public crate-mzdata-0.1.0 (c (n "mzdata") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1p58pb7jr6y1i1f7mkx7f1hs48fykmlc13qkr2x8hwmvshcf5xih")))

(define-public crate-mzdata-0.2.0 (c (n "mzdata") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "0gfxn0jyxs850h9m2l5igvxjaplxfs32v4khnv23sprqg82f5fsz")))

(define-public crate-mzdata-0.3.0 (c (n "mzdata") (v "0.3.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0igx486w26iwx01ksfz8y6m36lr8g7l9s6xyda2b72qxda8qsiw0")))

(define-public crate-mzdata-0.4.0 (c (n "mzdata") (v "0.4.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.4.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1srz0hsbgrlsp8sg0b63pwybjn5k0vyswjpihm07c1db82gvj3p5") (f (quote (("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal/openblas") ("netlib" "mzsignal/netlib") ("intel-mkl" "mzsignal/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzdata-0.5.0 (c (n "mzdata") (v "0.5.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.4.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.2.3") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0b91b2h2x81mxmbaljrw77pr1ddp96ynj39fm6m4gia1lzi3lxng") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal/openblas") ("netlib" "mzsignal/netlib") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal/intel-mkl") ("default" "intel-mkl" "parallelism" "zlib"))))))

(define-public crate-mzdata-0.6.0 (c (n "mzdata") (v "0.6.0") (d (list (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.7.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.3.1") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "0bwxdk1drdsznc6qq9mvxs3f2jixvbhsk2bk6khslr6r5d6gyrwg") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal/openblas") ("netlib" "mzsignal/netlib") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal/intel-mkl") ("default" "intel-mkl" "parallelism" "zlib" "plotting") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.7.0 (c (n "mzdata") (v "0.7.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.8.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.7.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "179vsrjqw9pzn0lgj5a58j1k8wllka3vaz13l2ywbismj2shbm13") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.8.0 (c (n "mzdata") (v "0.8.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.8.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "1cyn3z17dh5nh47mrvh4shqhirpr56aivlyl82qi6p7hisc28qzq") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.9.0 (c (n "mzdata") (v "0.9.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.9.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "15a41k1q8krbpcskd49n7ld6s5i6lam7psqg90zvsbs8bvhrbyjg") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.10.0 (c (n "mzdata") (v "0.10.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.9.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "00rfsfybzmq9gk18vjbxsis9bk22xr72vn25czfkvbjf2bf12b72") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.11.0 (c (n "mzdata") (v "0.11.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.9.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "1xl8z4jsphncpyc8g49kxc914g7xsv52zdvw51q190gvwxxz5xlw") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.12.0 (c (n "mzdata") (v "0.12.0") (d (list (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.10.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "1p7g3awk644k6m09bliadiwv7k4svmrr1hbxw0zf732riri4wbn5") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.13.0 (c (n "mzdata") (v "0.13.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.11.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.12.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.1") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "086nxflmihqil6f7qdyjmp3jfnig23hs5ggifz580lmligxzb3lb") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.14.0 (c (n "mzdata") (v "0.14.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.11.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.12.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.3") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "031pcgajd9zxggbpjk5d2gs4ikf02wgvrcbgnxfaf9v5ac2yxcnc") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.15.0 (c (n "mzdata") (v "0.15.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.11.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.12.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.3") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "0jcj9kx9wzagh4sqcrld4l93hdzk9xf06sclpykwyq0lm0wgq9v5") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.16.0 (c (n "mzdata") (v "0.16.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.11.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.12.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.4") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "0sbp3wv4lg0dppwa7frqlk0sxywqz68qpavvl2f3mncwb5b0cyf5") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.17.0 (c (n "mzdata") (v "0.17.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r "^0.13.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.4") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "0kh40s7ncpjz97nrmfkfl5g8qn16ic3qccpi1isg4d9y5ri22z6w") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.18.0 (c (n "mzdata") (v "0.18.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r ">=0.14.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.4") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "1pp33g02cprvcd31p8pzsadnf7n05dg8bmsljcn6qyxdgjgza925") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.19.0 (c (n "mzdata") (v "0.19.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r ">=0.14.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.4") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "16nvk2szqwn5ly7x3alaqh5kkwdrc9wdvsp2aphmaab1f8v5f3rc") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

(define-public crate-mzdata-0.20.0 (c (n "mzdata") (v "0.20.0") (d (list (d (n "base16ct") (r "^0.2.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64-simd") (r "^0.8.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.15.0") (f (quote ("extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "filename") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "hdf5") (r "^0.8.1") (f (quote ("blosc" "lzf"))) (o #t) (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libz-sys") (r "^1.1") (f (quote ("static"))) (o #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r ">=0.14.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpress") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thermorawfilereader") (r "^0.2.5") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "fs" "rt-multi-thread"))) (o #t) (d #t) (k 0)))) (h "1w2l5awr6ljcdrvs3v78k9f8z33zckhv9c1iclkyxfwj5i66x8r5") (f (quote (("zlib-ng-compat" "flate2/zlib-ng-compat") ("zlib" "flate2/zlib") ("thermo" "thermorawfilereader" "thermorawfilereader/net8_0" "thermorawfilereader/nethost-download") ("plotting" "mzsignal" "mzsignal/plotting") ("parallelism" "rayon" "mzsignal/parallelism") ("openblas" "mzsignal" "mzsignal/openblas") ("netlib" "mzsignal" "mzsignal/netlib") ("nalgebra" "mzsignal" "mzsignal/nalgebra") ("mzmlb" "hdf5" "ndarray" "hdf5-sys") ("miniz_oxide" "flate2/rust_backend") ("intel-mkl" "mzsignal" "mzsignal/intel-mkl") ("hdf5_static" "mzmlb" "hdf5-sys/static" "hdf5-sys/zlib" "libz-sys") ("doc-only" "thermorawfilereader/doc-only") ("default" "zlib-ng-compat") ("async" "tokio" "quick-xml/async-tokio"))))))

