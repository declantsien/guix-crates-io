(define-module (crates-io mz de mzdeisotope-map) #:use-module (crates-io))

(define-public crate-mzdeisotope-map-0.1.7 (c (n "mzdeisotope-map") (v "0.1.7") (d (list (d (n "chemical_elements") (r "^0.3.0") (f (quote ("mzpeaks"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "identity-hash") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "mzdata") (r ">=0.20.0") (f (quote ("mzsignal" "nalgebra"))) (k 0)) (d (n "mzdeisotope") (r "^0.1.6") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.14.0, <1.0.0") (d #t) (k 0)) (d (n "mzsignal") (r ">=0.14.0") (f (quote ("nalgebra"))) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.3") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (d #t) (k 2)))) (h "0506vqb4hb6sbzl2sbwahdrcmmw6g8my16i5xs1aidsp5wxw7ywh")))

