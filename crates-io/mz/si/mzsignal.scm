(define-module (crates-io mz si mzsignal) #:use-module (crates-io))

(define-public crate-mzsignal-0.1.0 (c (n "mzsignal") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "00cdxnx39195pjdaxafy604r87rq7vw59hjw0abiaa7s840r642k") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.1.1 (c (n "mzsignal") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "05ljm477zyf1zqvn7fvnxhagpp0m50nz2rwlzx3654h8p8hsn91c") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.2.0 (c (n "mzsignal") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "14vlrabd6cc0chmbg5dp1d3r95ncddsb0ygwf7q05pyaw2lhqyv9") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.2.1 (c (n "mzsignal") (v "0.2.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "03932r1nkzbfdf4jklszlvmrpzsfcnlhrkb3g388dds6isl46xry") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.2.2 (c (n "mzsignal") (v "0.2.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "0ihlhpjffr52xyr2q4abys9l98rs8jy0njp094h5wb2pyl0cxx3g") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.2.3 (c (n "mzsignal") (v "0.2.3") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "0d2r9lv2283b9r159v9736n26zmm4rf8a81byw8rvp8jkz8y9gvr") (f (quote (("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.2.4 (c (n "mzsignal") (v "0.2.4") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "1by7w9mx2vmkm7gs3hqjgfwhnsj1blxlklw28j728a2ppir0h1a0") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl-static") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.3.0 (c (n "mzsignal") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.6.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.10.0") (d #t) (k 2)))) (h "1cd2z40ngggjpl27rmcapdqs4025757zkkkd1ly81khmymjcfk1r") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas-static") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl-static") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.3.1 (c (n "mzsignal") (v "0.3.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.7.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)))) (h "1bi22km4z6fv8mxq5rbpllildg68i4qj5fqvahn4xijackyr4qba") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray-linalg/openblas-static") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl-static") ("default" "intel-mkl" "parallelism"))))))

(define-public crate-mzsignal-0.4.0 (c (n "mzsignal") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.8.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)))) (h "19lgqfkl7j2k8v9afabxs0xzy0saiy91nppdgqyvxbm7xlbqvswp") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.5.0 (c (n "mzsignal") (v "0.5.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.8.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0i0sjmx7q22jvkc6lwj37ivr6lyqg39rzx4i6611fld1j29vq4zp") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.6.0 (c (n "mzsignal") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.8.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1zhvclqwcvqkx345kr3fpmj8c5myj1ax8dran2sx01nc4ci32bih") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.7.0 (c (n "mzsignal") (v "0.7.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.8.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0hr8mf3iqzm18wsv6dch99i7qsjiqgfkpknmnivcs7nhgvlcyz1z") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.8.0 (c (n "mzsignal") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "05jx33jpvmh7y830j3mjbvjbvv4dfxb1g6a50npz3f8flfwkp0ic") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.9.0 (c (n "mzsignal") (v "0.9.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1miq1jk4403r29nr1x7sghkrd7nf4navd79knipvi0fbwc5ijmcx") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.10.0 (c (n "mzsignal") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.9.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1r7zqifm16q6w2wjjafr0ipcwzrh0m0xdmcc5sq3svs6hlknpamq") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.11.0 (c (n "mzsignal") (v "0.11.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mzpeaks") (r "^0.10.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "133mb2w0l0ibzz9h6jfbpdaxchxl5w6r1prl6ir023aw5zdlv189") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.12.0 (c (n "mzsignal") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.20, <1.0.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.11.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r ">=0.15.6, <0.16") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r ">=1.8.0, <2.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r ">=1.0.50") (d #t) (k 0)))) (h "0sv34cz8fafj987m35nyzcspm6c1141j49q4s7114kifsxnbycg2") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.13.0 (c (n "mzsignal") (v "0.13.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.20, <1.0.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r ">=0.15.6, <0.16") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r ">=1.8.0, <2.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r ">=1.0.50") (d #t) (k 0)))) (h "1jcc6y3k42yb3njpzrzh8dry09y5my0isjij4y1q064v1d5sm74j") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

(define-public crate-mzsignal-0.14.0 (c (n "mzsignal") (v "0.14.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.20, <1.0.0") (d #t) (k 0)) (d (n "mzpeaks") (r ">=0.12.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r ">=0.15.6, <0.16") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r ">=1.8.0, <2.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "thiserror") (r ">=1.0.50") (d #t) (k 0)))) (h "19s85a6c5p91nx1cv55awnsf0sav0hf0sgmyidaz2xkw9jk2001z") (f (quote (("plotting" "plotters") ("parallelism" "rayon") ("openblas" "ndarray" "ndarray-linalg" "ndarray-linalg/openblas-static") ("netlib" "ndarray" "ndarray-linalg" "ndarray-linalg/netlib") ("intel-mkl" "ndarray" "ndarray-linalg" "ndarray-linalg/intel-mkl-static") ("default" "nalgebra" "parallelism"))))))

