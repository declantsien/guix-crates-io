(define-module (crates-io i- sl i-slint-backend-gl) #:use-module (crates-io))

(define-public crate-i-slint-backend-gl-0.2.0 (c (n "i-slint-backend-gl") (v "0.2.0") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.7.0") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.2") (d #t) (k 0)) (d (n "font-kit") (r "^0.10") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "fontdb") (r "^0.7.0") (k 0)) (d (n "fontdb") (r "^0.7.0") (f (quote ("memmap"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.0") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.20") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.14.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.3") (d #t) (k 0)) (d (n "usvg") (r "^0.20") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.20") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web_sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "winit") (r "^0.26") (k 0)))) (h "01dpm63irgw0xclkqwkrn3dwxndb6wa28sjr6cs5qyhbnigizg4s") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("default" "svg"))))))

(define-public crate-i-slint-backend-gl-0.2.1 (c (n "i-slint-backend-gl") (v "0.2.1") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.7.0") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dark-light") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.3") (d #t) (k 0)) (d (n "font-kit") (r "^0.10") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "fontdb") (r "^0.9.0") (k 0)) (d (n "fontdb") (r "^0.9.0") (f (quote ("memmap"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.1") (d #t) (k 0)) (d (n "i-slint-core-macros") (r "=0.2.1") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.22") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.4") (d #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web_sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "winit") (r "^0.26") (k 0)))) (h "1wfmd32rh40941pjm7qmwvbml5189w0qb0ma16nzkfghyxkv3icz") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("rtti" "i-slint-core/rtti") ("default" "svg"))))))

(define-public crate-i-slint-backend-gl-0.2.2 (c (n "i-slint-backend-gl") (v "0.2.2") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.7.0") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dark-light") (r "^0.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "dwrote") (r "^0.11.0") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.4") (d #t) (k 0)) (d (n "fontdb") (r "^0.9.0") (k 0)) (d (n "fontdb") (r "^0.9.0") (f (quote ("memmap"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.2") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.2") (d #t) (k 0)) (d (n "i-slint-core-macros") (r "=0.2.2") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.22") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.4") (d #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes" "CanvasRenderingContext2d" "HtmlInputElement" "HtmlCanvasElement" "Window" "Document" "CssStyleDeclaration" "Event" "KeyboardEvent" "InputEvent" "CompositionEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("dwrite"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winit") (r "^0.26") (k 0)))) (h "0khh4qnwwidqwaaqqci54b0j0vgh7n1jvfgb0n7sg8h0faxwdilw") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("rtti" "i-slint-core/rtti") ("default" "svg"))))))

(define-public crate-i-slint-backend-gl-0.2.3 (c (n "i-slint-backend-gl") (v "0.2.3") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.7.0") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dark-light") (r "^0.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "dwrote") (r "^0.11.0") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.4") (d #t) (k 0)) (d (n "fontdb") (r "^0.9.0") (k 0)) (d (n "fontdb") (r "^0.9.0") (f (quote ("memmap" "fontconfig"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.3") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.3") (d #t) (k 0)) (d (n "i-slint-core-macros") (r "=0.2.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.22") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.4") (d #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes" "CanvasRenderingContext2d" "HtmlInputElement" "HtmlCanvasElement" "Window" "Document" "CssStyleDeclaration" "Event" "KeyboardEvent" "InputEvent" "CompositionEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("dwrite"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winit") (r "^0.26") (k 0)))) (h "09sag3xijwk7xzmwzdly8pkxlrlww0q1xkl7kmy3q61wzqs58scj") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("rtti" "i-slint-core/rtti") ("default" "svg"))))))

(define-public crate-i-slint-backend-gl-0.2.4 (c (n "i-slint-backend-gl") (v "0.2.4") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.7.0") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dark-light") (r "^0.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "dwrote") (r "^0.11.0") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.4") (d #t) (k 0)) (d (n "fontdb") (r "^0.9.0") (k 0)) (d (n "fontdb") (r "^0.9.0") (f (quote ("memmap" "fontconfig"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.4") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.4") (d #t) (k 0)) (d (n "i-slint-core-macros") (r "=0.2.4") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.22") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.4") (d #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.22") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes" "CanvasRenderingContext2d" "HtmlInputElement" "HtmlCanvasElement" "Window" "Document" "CssStyleDeclaration" "Event" "KeyboardEvent" "InputEvent" "CompositionEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("dwrite"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winit") (r "^0.26") (k 0)))) (h "105jpbp260k6bxn783pxld5dn9s6p2pj3anjlk14j274qwlzvma1") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("rtti" "i-slint-core/rtti") ("default" "svg"))))))

(define-public crate-i-slint-backend-gl-0.2.5 (c (n "i-slint-backend-gl") (v "0.2.5") (d (list (d (n "by_address") (r "^1.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "const-field-offset") (r "^0.1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8.1") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-text") (r "^19.1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dark-light") (r "^0.2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "dwrote") (r "^0.11.0") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "euclid") (r "^0.22.1") (d #t) (k 0)) (d (n "femtovg") (r "^0.3.5") (d #t) (k 0)) (d (n "fontdb") (r "^0.9.0") (k 0)) (d (n "fontdb") (r "^0.9.0") (f (quote ("memmap" "fontconfig"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin") (r "^0.28") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "i-slint-common") (r "=0.2.5") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.5") (d #t) (k 0)) (d (n "i-slint-core-macros") (r "=0.2.5") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg"))) (k 0)) (d (n "imgref") (r "^1.6.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "lyon_path") (r "^0.17.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "pin-weak") (r "^1") (d #t) (k 0)) (d (n "resvg") (r "^0.23") (o #t) (k 0)) (d (n "rgb") (r "^0.8.27") (d #t) (k 0)) (d (n "scoped-tls-hkt") (r "^0.1") (d #t) (k 0)) (d (n "servo-fontconfig") (r "^0.5") (f (quote ("force_system_lib"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_os = \"macos\", target_os = \"ios\", target_arch = \"wasm32\")))") (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (k 0)) (d (n "ttf-parser") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-script") (r "^0.5.4") (d #t) (k 0)) (d (n "usvg") (r "^0.23") (f (quote ("text"))) (o #t) (k 0)) (d (n "usvg") (r "^0.23") (f (quote ("text" "memmap-fonts"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vtable") (r "^0.1.6") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "WebGlContextAttributes" "CanvasRenderingContext2d" "HtmlInputElement" "HtmlCanvasElement" "Window" "Document" "CssStyleDeclaration" "Event" "KeyboardEvent" "InputEvent" "CompositionEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("dwrite"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winit") (r "^0.26") (k 0)))) (h "1dfb30kfdph5zrvdnn3sb8kvr783jvwvirycp8f44nx7bqhznfhq") (f (quote (("x11" "winit/x11" "glutin/x11" "copypasta/x11") ("wayland" "winit/wayland" "glutin/wayland" "copypasta/wayland") ("svg" "resvg" "usvg" "tiny-skia") ("rtti" "i-slint-core/rtti") ("default" "svg"))))))

