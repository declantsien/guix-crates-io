(define-module (crates-io w2 #{5q}# w25q32jv) #:use-module (crates-io))

(define-public crate-w25q32jv-0.1.0 (c (n "w25q32jv") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.10") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0w4pm0i866iywm22k3fdx95z6d3v8kq115yw3xnmx25qlavz8gpi") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

(define-public crate-w25q32jv-0.2.0 (c (n "w25q32jv") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0-rc.1") (f (quote ("async"))) (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0x2xc9ix59l1lcb83ibzfbs630kghw9rjhxcjvla5nvflf4kcp9v") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

(define-public crate-w25q32jv-0.2.1 (c (n "w25q32jv") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0-rc.1") (f (quote ("async"))) (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0z2h177j7s92yq05gias0ph9arkvfda98aaciycc6dlp5y70nb9j") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

(define-public crate-w25q32jv-0.3.0 (c (n "w25q32jv") (v "0.3.0") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0-rc.1") (f (quote ("async"))) (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1qg2ch10wwgd60zcsdplzv3izr43gc7lz6m1jpad979apcfkg7gl") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

(define-public crate-w25q32jv-0.3.2 (c (n "w25q32jv") (v "0.3.2") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0-rc.1") (f (quote ("async"))) (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0iw891aqd4rag25fv1wz3zh48wdiixdj1awb3lw0j09zp6jj76hy") (f (quote (("readback-check") ("default" "readback-check" "async")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

(define-public crate-w25q32jv-0.4.0 (c (n "w25q32jv") (v "0.4.0") (d (list (d (n "cortex-m") (r "^0.7.7") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0") (f (quote ("async"))) (d #t) (k 2)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1gsz9ahgsrwhdnj0lsgsr4cb5ag5wgwim2dy61md3cjb929gzd1b") (f (quote (("readback-check") ("default" "readback-check" "async")))) (s 2) (e (quote (("defmt" "dep:defmt") ("async" "dep:embedded-hal-async" "dep:embedded-storage-async"))))))

