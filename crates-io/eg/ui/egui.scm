(define-module (crates-io eg ui egui) #:use-module (crates-io))

(define-public crate-egui-0.1.0 (c (n "egui") (v "0.1.0") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0haywzawr7qilrgxszzbcaby1z8jyhq0gk1gn56hf57m6zhvc5h7") (f (quote (("with_serde" "serde"))))))

(define-public crate-egui-0.1.1 (c (n "egui") (v "0.1.1") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0ww0zwq7lin6lhm3jv54s158r4kirn5gk35c9alpqnicdbbcw4fl") (f (quote (("with_serde" "serde"))))))

(define-public crate-egui-0.1.2 (c (n "egui") (v "0.1.2") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0118mihq41xg66gshha1f2l08168kflkqnay8ckvniz1cw1wm9dm") (f (quote (("with_serde" "serde"))))))

(define-public crate-egui-0.1.3 (c (n "egui") (v "0.1.3") (d (list (d (n "ahash") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0idz19lra83lgqhhy01pcvg4rhvj4cr81lh3xry1cc5yxc73w64r")))

(define-public crate-egui-0.1.4 (c (n "egui") (v "0.1.4") (d (list (d (n "ahash") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "18cnnvf9xv13f5zac3c8dxcckkz1azbxpbjwl99l0i08s4gaq90v")))

(define-public crate-egui-0.2.0 (c (n "egui") (v "0.2.0") (d (list (d (n "ahash") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0w7qs1v3a91wap1r5s2kc7hxvzp41ga8cl47gp6bcv0id08fgf6g")))

(define-public crate-egui-0.3.0 (c (n "egui") (v "0.3.0") (d (list (d (n "ahash") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "05hpixzr6zpk70k3yrwg7apzk44pzpd2xf6f5ddpayvyy9dvmyr5")))

(define-public crate-egui-0.4.0 (c (n "egui") (v "0.4.0") (d (list (d (n "ahash") (r "^0.6") (f (quote ("std"))) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "187iw5sgdp3harm75by8iyms87kryxbm6fa2b8i5d445b0zb5mz5")))

(define-public crate-egui-0.5.0 (c (n "egui") (v "0.5.0") (d (list (d (n "ahash") (r "^0.6") (f (quote ("std"))) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0fpv5ry8saf20xrrx6j6d37smkxs89xyfzrzk998z46awmqz7h3d")))

(define-public crate-egui-0.6.0 (c (n "egui") (v "0.6.0") (d (list (d (n "ahash") (r "^0.6") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0ybkfdfsywika27yyw5ra0ickd9z7k4qxwg4dlaahbxm2gqvflrf") (f (quote (("multi_threaded" "parking_lot") ("default_fonts") ("default" "atomic_refcell" "default_fonts"))))))

(define-public crate-egui-0.7.0 (c (n "egui") (v "0.7.0") (d (list (d (n "ahash") (r "^0.6") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0pcynr6qkl2cbq564l19baabplzjf3p4x4yg43ckfp4sixcvlwzh") (f (quote (("multi_threaded" "parking_lot") ("default_fonts") ("default" "atomic_refcell" "default_fonts"))))))

(define-public crate-egui-0.8.0 (c (n "egui") (v "0.8.0") (d (list (d (n "epaint") (r "^0.8.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1d6p085i8b62qzpwnbfjxryr4lla6sp0yhmf5slmwgq2a5zhwmbg") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence") ("multi_threaded" "epaint/multi_threaded") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded"))))))

(define-public crate-egui-0.9.0 (c (n "egui") (v "0.9.0") (d (list (d (n "epaint") (r "^0.9.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1d0qplnq1bh7464k5kiwzdp755wkzrg3qml31g0lpsm8kkc361qf") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence") ("multi_threaded" "epaint/multi_threaded") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded"))))))

(define-public crate-egui-0.10.0 (c (n "egui") (v "0.10.0") (d (list (d (n "epaint") (r "^0.10.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "13zpb0v076p67i0f9sjvvwl1fli1wribhnabs34lpcbh1xm51yh4") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence") ("multi_threaded" "epaint/multi_threaded") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded"))))))

(define-public crate-egui-0.11.0 (c (n "egui") (v "0.11.0") (d (list (d (n "epaint") (r "^0.11.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1kib3yfyysy41ilji1133kvxjv6nab85471clwkqdp7cqcsnaz9d") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence") ("multi_threaded" "epaint/multi_threaded") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded"))))))

(define-public crate-egui-0.12.0 (c (n "egui") (v "0.12.0") (d (list (d (n "epaint") (r "^0.12.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1mv5hd13hva6jxamisn3ri80w6df3k9s6h24sql7vf403n34i0bq") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded"))))))

(define-public crate-egui-0.13.0 (c (n "egui") (v "0.13.0") (d (list (d (n "epaint") (r "^0.13.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1lsyq69r7nbxhfzl0w7l8h73hn6h5zfdmb3pvgyqk5adpdbg2biv") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.13.1 (c (n "egui") (v "0.13.1") (d (list (d (n "epaint") (r "^0.13.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0p7i0ps63v5r13csr1iim8qnj4ca0dqp7ppn635wrh5crjab7ybp") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.14.0 (c (n "egui") (v "0.14.0") (d (list (d (n "epaint") (r "^0.14.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1kbl3s7wkspi6hl4753wxhl03rl4h2zpm4mgvmgbc9r7h0y2zpsn") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.14.1 (c (n "egui") (v "0.14.1") (d (list (d (n "epaint") (r "^0.14.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0vfbrj3xf9rkkhgxz9dz0i6k4g8ywz2z2s2cs045dq96hissr6b8") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.14.2 (c (n "egui") (v "0.14.2") (d (list (d (n "epaint") (r "^0.14.0") (k 0)) (d (n "ron") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1g96kn76wlzilq1k5l1qhxx0xfp37z6z5zcv4xkj4p1bb6fz40xl") (f (quote (("single_threaded" "epaint/single_threaded") ("persistence" "serde" "epaint/persistence" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.15.0 (c (n "egui") (v "0.15.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.15.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1rzswl25w2ryfrkijm7fp7nfzmxl8sx1rfqp9mpzrjs36dm4338w") (f (quote (("single_threaded" "epaint/single_threaded") ("serialize" "serde" "epaint/serialize") ("persistence" "serde" "epaint/serialize" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("convert_bytemuck" "epaint/convert_bytemuck") ("cint" "epaint/cint"))))))

(define-public crate-egui-0.16.0 (c (n "egui") (v "0.16.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.16.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "01r6lwils9vpggv5nka8fr72w27r019v5x5k26s95hmz2j00xs42") (f (quote (("single_threaded" "epaint/single_threaded") ("serialize" "serde" "epaint/serialize") ("persistence" "serde" "epaint/serialize" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("convert_bytemuck" "epaint/convert_bytemuck") ("cint" "epaint/cint")))) (r "1.56")))

(define-public crate-egui-0.16.1 (c (n "egui") (v "0.16.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.16.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0cx395rbr1ajj91jql10j5frqs7ax400qdywxvykj4azxdb36wvw") (f (quote (("single_threaded" "epaint/single_threaded") ("serialize" "serde" "epaint/serialize") ("persistence" "serde" "epaint/serialize" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("convert_bytemuck" "epaint/convert_bytemuck") ("cint" "epaint/cint")))) (r "1.56")))

(define-public crate-egui-0.17.0 (c (n "egui") (v "0.17.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.17.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xzd9ak913r7z6rr1yp0li9acfip5ri42ljr29ws3xqjgvad2g0a") (f (quote (("single_threaded" "epaint/single_threaded") ("serialize" "serde" "epaint/serialize") ("persistence" "serde" "epaint/serialize" "ron") ("multi_threaded" "epaint/multi_threaded") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts" "single_threaded") ("convert_bytemuck" "epaint/convert_bytemuck") ("cint" "epaint/cint")))) (r "1.56")))

(define-public crate-egui-0.18.0 (c (n "egui") (v "0.18.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.18.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "11mfhlzy9l7m5hw3vsgp8frcrpf3yab8xbqcvgksss5qqnmyajvc") (f (quote (("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde")))) (r "1.60")))

(define-public crate-egui-0.18.1 (c (n "egui") (v "0.18.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "epaint") (r "^0.18.1") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "18nrkaf0x41ww0w15agllcw9a1ggzkgpcrqby3w7z6zbky5ml2gb") (f (quote (("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde")))) (r "1.60")))

(define-public crate-egui-0.19.0 (c (n "egui") (v "0.19.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.19.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)))) (h "1r4l18k60clry16ix1sikjvkim8rhfa1v2h015cszaix7hwwv7zw") (f (quote (("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde")))) (r "1.61")))

(define-public crate-egui-0.20.0 (c (n "egui") (v "0.20.0") (d (list (d (n "accesskit") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.20.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)))) (h "1ymdh2hwn0xamcmqbbfzznihdxcj7nq4kw4jmlq4xzbvh36swk9a") (f (quote (("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde")))) (r "1.65")))

(define-public crate-egui-0.20.1 (c (n "egui") (v "0.20.1") (d (list (d (n "accesskit") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.20.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)))) (h "1aafvvy87swzy953kcrakh84i75cpk7ywl3ljxk3ir8nlf1yi9b5") (f (quote (("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde")))) (r "1.65")))

(define-public crate-egui-0.21.0 (c (n "egui") (v "0.21.0") (d (list (d (n "accesskit") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.21.0") (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)))) (h "1gnzfqpz0ync8zks89n0cf7giqdmhsxvni7vywc0jz6y1cga44k4") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde")))) (r "1.65")))

(define-public crate-egui-0.22.0 (c (n "egui") (v "0.22.0") (d (list (d (n "accesskit") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.22.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1rr32780ib6j8k41c09saj7w5f6m4yzna30p83rp5dz17bngibm3") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("log" "dep:log" "epaint/log")))) (r "1.65")))

(define-public crate-egui-0.23.0 (c (n "egui") (v "0.23.0") (d (list (d (n "accesskit") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.23.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1dxqdvg1vmy4y1g11nr5lqbixdlkc7m80kmj4n1bnkygbznrzmlb") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.70")))

(define-public crate-egui-0.24.0 (c (n "egui") (v "0.24.0") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.24.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "19bjh489ai3kzhhmk4bmby5c3c51sbyhwm1kaynrwfs9pdvxyiif") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.24.1 (c (n "egui") (v "0.24.1") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.24.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0szfj7r2vvipcq91bb9q0wjplrap8y9bhf2sa64vhkkn9f3cnny5") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.25.0 (c (n "egui") (v "0.25.0") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.25.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1qy928q9adyy9d4sck787r28dj09rjx763ghxca3vgzksw769gz0") (f (quote (("unity" "epaint/unity") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.26.0-alpha.1 (c (n "egui") (v "0.26.0-alpha.1") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.26.0-alpha.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "10lak3qyj88knm027k9zclzil7x3mn5qvxwgyybv83mz7lzvmpcc") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.26.0-alpha.2 (c (n "egui") (v "0.26.0-alpha.2") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.26.0-alpha.2") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "09qr0idv079vwq4r35i2ir2jw0d3wh0ay6yl0zn0vn6zqpxrhsv4") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.26.0 (c (n "egui") (v "0.26.0") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.26.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1b395xak6xipy6znh8j2bwwlq25w2d5k1bj5mnshcgm35if6i4sl") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.26.1 (c (n "egui") (v "0.26.1") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.26.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0ljc91bwyjxc3qqrfl4w24kgb3i7r6hrh05arrpi2mp5xnbd7v5b") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.26.2 (c (n "egui") (v "0.26.2") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.26.2") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1l4pa86xck0afi07nq3jxb7qd6r4alwyzbvldgy1bdm569a5j3qq") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.27.0 (c (n "egui") (v "0.27.0") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.27.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1k0fdvbxchhl43g9ikvsmldg4920pjicidbyh77hinnkwm0hbqpq") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.27.1 (c (n "egui") (v "0.27.1") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.27.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1ws5p4dw445p7l7rgaj0ivz7zxcli8ng2khjpnk0l9hb9g0qq6vd") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

(define-public crate-egui-0.27.2 (c (n "egui") (v "0.27.2") (d (list (d (n "accesskit") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "epaint") (r "^0.27.2") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "16p2gwngk1qij01y3411agmiy6my5liay8rki9vjayx6z4dmsk2q") (f (quote (("unity" "epaint/unity") ("rayon" "epaint/rayon") ("persistence" "serde" "epaint/serde" "ron") ("mint" "epaint/mint") ("extra_debug_asserts" "epaint/extra_debug_asserts") ("extra_asserts" "epaint/extra_asserts") ("default_fonts" "epaint/default_fonts") ("default" "default_fonts") ("deadlock_detection" "epaint/deadlock_detection") ("color-hex" "epaint/color-hex") ("cint" "epaint/cint") ("bytemuck" "epaint/bytemuck")))) (s 2) (e (quote (("serde" "dep:serde" "epaint/serde" "accesskit?/serde") ("puffin" "dep:puffin" "epaint/puffin") ("log" "dep:log" "epaint/log") ("callstack" "dep:backtrace") ("accesskit" "dep:accesskit")))) (r "1.72")))

