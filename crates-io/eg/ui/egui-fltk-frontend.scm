(define-module (crates-io eg ui egui-fltk-frontend) #:use-module (crates-io))

(define-public crate-egui-fltk-frontend-0.1.0 (c (n "egui-fltk-frontend") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.14") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0qik04argsz9ffbbl8d5mddcaf97i5m3l531n3fy2k6m9ffiws6p") (f (quote (("fltk-bundled" "fltk/fltk-bundled"))))))

(define-public crate-egui-fltk-frontend-0.1.1 (c (n "egui-fltk-frontend") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.14") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0ly7x1pz4dpixqp9wk7zqkymxq68vwwr995gsa20waq6kj4198w6") (f (quote (("fltk-bundled" "fltk/fltk-bundled"))))))

(define-public crate-egui-fltk-frontend-0.1.2 (c (n "egui-fltk-frontend") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.14") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0m8fb5n83kls5z6ar981cb7zk16m73byj63j0nwxg02gdvqdb5z3") (f (quote (("fltk-bundled" "fltk/fltk-bundled"))))))

(define-public crate-egui-fltk-frontend-0.2.0 (c (n "egui-fltk-frontend") (v "0.2.0") (d (list (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0x0s3ym5jv807r04fqjp6dfarqka4c6qjs2xn8nfw175z03s93y6") (f (quote (("fltk-bundled" "fltk/fltk-bundled")))) (y #t)))

(define-public crate-egui-fltk-frontend-0.3.0 (c (n "egui-fltk-frontend") (v "0.3.0") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "01l0kv1pkbawfa84x0nrd7vhlblxqp00krj1asrndk2h5b00p1zd") (f (quote (("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11" "clipboard-wayland") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.3.1 (c (n "egui-fltk-frontend") (v "0.3.1") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0qslh0z9wzr8nfs6cg62qr8imyrx3lckyik4y1471yydv4nnpprh") (f (quote (("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11" "clipboard-wayland") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.3.2 (c (n "egui-fltk-frontend") (v "0.3.2") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "1alhv2lrw8fxsx5rarzmq3rqibi0l0b526vm9b65zhjwlpmbxwvc") (f (quote (("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.3.3 (c (n "egui-fltk-frontend") (v "0.3.3") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "resvg") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "usvg") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0qrv00gcsyrhxswq1iphw4v9kh984wrrw3sghfbsa58jzvmcm7hp") (f (quote (("svg" "resvg" "usvg" "tiny-skia") ("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta")))) (y #t)))

(define-public crate-egui-fltk-frontend-0.3.4 (c (n "egui-fltk-frontend") (v "0.3.4") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "resvg") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "usvg") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0sg2vif5z23jz0zdqhgs4w48czgf1d7685qf1znnrl258vg43ih1") (f (quote (("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("svg" "resvg" "usvg" "tiny-skia") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.3.5 (c (n "egui-fltk-frontend") (v "0.3.5") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "resvg") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "usvg") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1jvr0h2xsngk3zr0jwjvhcrdmjzx1iah94y4cjghmrls9lxj7kzd") (f (quote (("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("svg" "resvg" "usvg" "tiny-skia") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.15.0 (c (n "egui-fltk-frontend") (v "0.15.0") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.15") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "resvg") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "usvg") (r "^0.19") (o #t) (d #t) (k 0)))) (h "06b9zy7gmw0sh5l6d4ldz412l9b3ygsyrd3na4vwcs9wr66kxkxy") (f (quote (("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("svg" "resvg" "usvg" "tiny-skia") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta")))) (y #t)))

(define-public crate-egui-fltk-frontend-0.15.1 (c (n "egui-fltk-frontend") (v "0.15.1") (d (list (d (n "copypasta") (r "^0.7") (o #t) (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.15") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.15") (d #t) (k 0)) (d (n "fltk") (r "^1.2") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "resvg") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "usvg") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1vwbc2vff8kmwjgrfy2pvy0k7kl2mv2k2g12bh2rbyjdqz4ymrll") (f (quote (("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("svg" "resvg" "usvg" "tiny-skia") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "clipboard-x11") ("clipboard-x11" "clipboard" "copypasta/x11") ("clipboard-wayland" "clipboard" "copypasta/wayland") ("clipboard" "copypasta"))))))

(define-public crate-egui-fltk-frontend-0.17.0 (c (n "egui-fltk-frontend") (v "0.17.0") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui_demo_lib") (r "^0.17") (d #t) (k 2)) (d (n "egui_extras") (r "^0.17") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.17") (d #t) (k 0)) (d (n "epi") (r "^0.17") (d #t) (k 0)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0k0h9kzljmzjl323zwil2nfks23lhy054p0wmw29ixqmmid96j7j") (f (quote (("x11" "copypasta/x11") ("wayland" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t)))

(define-public crate-egui-fltk-frontend-0.17.1 (c (n "egui-fltk-frontend") (v "0.17.1") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.17") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.17") (d #t) (k 2)) (d (n "egui_extras") (r "^0.17") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.17") (d #t) (k 0)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "0qbhprfikdggmrilwpg9bzlj9sz7f308403n3k7shr1fy8s2c4i4") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t)))

(define-public crate-egui-fltk-frontend-0.17.2 (c (n "egui-fltk-frontend") (v "0.17.2") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.17") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.17") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.17") (d #t) (k 0)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)) (d (n "usync") (r "^0.1") (d #t) (k 0)))) (h "0a515wflkz3irabcmd2n0wsh1pl8k4gx7p8ihijf30wrx2s4bhf8") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t) (r "1.59.0")))

(define-public crate-egui-fltk-frontend-0.17.9 (c (n "egui-fltk-frontend") (v "0.17.9") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.17") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.17") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.17") (d #t) (k 0)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "119xvhgd4v3bm4999br01bxmcpgrf05k88crbyd9wzcaibzq9bfm") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.56.0")))

(define-public crate-egui-fltk-frontend-0.17.10 (c (n "egui-fltk-frontend") (v "0.17.10") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.17") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.17") (d #t) (k 2)) (d (n "egui_wgpu_backend") (r "^0.17") (d #t) (k 0)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 2)))) (h "120bjm3i6finpxnj5szzzpgzqvykr53z3mkrqh8d1dilzg73p1j8") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.56.0")))

(define-public crate-egui-fltk-frontend-0.18.0 (c (n "egui-fltk-frontend") (v "0.18.0") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.18") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)))) (h "0lilc4rzd8nf7rimvh070bw6fcvip77zqs2ipbs174jnla4wdwzn") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.18.1 (c (n "egui-fltk-frontend") (v "0.18.1") (d (list (d (n "copypasta") (r "^0.7") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.18") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)))) (h "0ki6vrj6hxjndj1knwq1fq1drp50yx5lfp3s145p2v37hjqx00a4") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.18.2 (c (n "egui-fltk-frontend") (v "0.18.2") (d (list (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.18") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)))) (h "0k3ldc7h9mawjb4alm5cnyf78hix6vk30g4xawlwwvfmzmpsffm7") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.18.3 (c (n "egui-fltk-frontend") (v "0.18.3") (d (list (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.18") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)))) (h "1lqzz5vpav6g33p92gxvz5nwdxp5vzg72vq4hblpfbmfs70baxic") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.18.4 (c (n "egui-fltk-frontend") (v "0.18.4") (d (list (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.18") (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)))) (h "1nvwwk0inac5g9il8dd3v6d84i1cdcr0n6yw5r9b0lvd0yglqifs") (f (quote (("x11" "copypasta/x11") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.19.0 (c (n "egui-fltk-frontend") (v "0.19.0") (d (list (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "1sf5ysqxfqhc67781453rplgb3xi7l871sy45wnin7z5m1w1g43q") (f (quote (("x11" "copypasta/x11") ("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (y #t) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.19.1 (c (n "egui-fltk-frontend") (v "0.19.1") (d (list (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "0lld8a3ybm3vz8k9qpj0iqz29kcbkb9n33yzmxdrn2aj9z64gbwi") (f (quote (("x11" "copypasta/x11") ("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.19.6 (c (n "egui-fltk-frontend") (v "0.19.6") (d (list (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "smaa") (r "^0.7") (d #t) (k 2)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "02sj25x5wsi6q8hwmsal75i67d3jvpw9dcfx8mfqyhaxghcm5gz9") (f (quote (("x11" "copypasta/x11") ("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.19.7 (c (n "egui-fltk-frontend") (v "0.19.7") (d (list (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.18") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.18") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "smaa") (r "^0.7") (d #t) (k 2)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "15pjwjpsjfiwnzas5g8f6p0xa72k64zxlc7qn3jypdlrhhq9msr9") (f (quote (("x11" "copypasta/x11") ("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11") ("debug")))) (r "1.60.0")))

(define-public crate-egui-fltk-frontend-0.20.0 (c (n "egui-fltk-frontend") (v "0.20.0") (d (list (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "copypasta") (r "^0.8") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "copypasta") (r "^0.8") (d #t) (t "cfg(windows)") (k 0)) (d (n "egui") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.19") (d #t) (k 2)) (d (n "fltk") (r "^1.3") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "smaa") (r "^0.7") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "1dqzvkalci9zzdv9hg8kil05kpfr7qkjqr9v8blvyk7m8kp5q77z") (f (quote (("x11" "copypasta/x11") ("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "x11" "copypasta/wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default" "x11") ("debug")))) (r "1.61.0")))

(define-public crate-egui-fltk-frontend-0.21.0 (c (n "egui-fltk-frontend") (v "0.21.0") (d (list (d (n "arboard") (r "^2") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "arboard") (r "^2") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "arboard") (r "^2") (d #t) (t "cfg(windows)") (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "egui") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.19") (d #t) (k 2)) (d (n "fltk") (r ">=1.3.14, <2.0.0") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pollster") (r "^0.2") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "smaa") (r "^0.7") (d #t) (k 2)) (d (n "type-map") (r "^0.5") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "0xxfg2rylglc5zwyccix1l7j9zi1kid1gympnlfg3c7mmclabdh2") (f (quote (("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-enable-glwindow" "fltk/enable-glwindow") ("fltk-bundled" "fltk/fltk-bundled") ("default") ("debug")))) (r "1.61.0")))

(define-public crate-egui-fltk-frontend-0.22.0 (c (n "egui-fltk-frontend") (v "0.22.0") (d (list (d (n "arboard") (r "^2.0.0") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "arboard") (r "^2.0.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "arboard") (r "^2.0.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "bytemuck") (r "^1.0.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.19.0") (d #t) (k 2)) (d (n "fltk") (r ">=1.3.15, <2.0.0") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.0") (d #t) (k 0)) (d (n "pollster") (r "^0.2.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "smaa") (r "^0.7.0") (d #t) (k 2)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "00gv9qza7cgbxc949ysvd82plakdjjn0vfn253kc097d663lrvng") (f (quote (("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("enable-glwindow" "fltk/enable-glwindow") ("default" "enable-glwindow") ("debug")))) (r "1.61.0")))

(define-public crate-egui-fltk-frontend-0.22.1 (c (n "egui-fltk-frontend") (v "0.22.1") (d (list (d (n "arboard") (r "^2.0.0") (t "cfg(all(unix, any(target_os = \"linux\", target_os = \"freebsd\")))") (k 0)) (d (n "arboard") (r "^2.0.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"linux\", target_os = \"freebsd\"))))") (k 0)) (d (n "arboard") (r "^2.0.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "bytemuck") (r "^1.0.0") (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui_demo_lib") (r "^0.19.0") (d #t) (k 2)) (d (n "fltk") (r ">=1.3.15, <2.0.0") (f (quote ("raw-window-handle"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.0") (d #t) (k 0)) (d (n "pollster") (r "^0.2.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "smaa") (r "^0.7.0") (d #t) (k 2)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.13") (d #t) (k 0)))) (h "1w0z5340vg3m3gafks84pwga8krfk70d51niz424myzbq4snwmhn") (f (quote (("wgpu-vulkan-portability" "wgpu/vulkan-portability") ("wgpu-trace" "wgpu/trace") ("wgpu-spirv" "wgpu/spirv") ("wgpu-replay" "wgpu/replay") ("wgpu-glsl" "wgpu/glsl") ("wgpu-angle" "wgpu/angle") ("wayland" "fltk/use-wayland") ("system-zlib" "fltk/system-zlib") ("system-libpng" "fltk/system-libpng") ("system-libjpeg" "fltk/system-libjpeg") ("system-fltk" "fltk/system-fltk") ("fltk-single-threaded" "fltk/single-threaded") ("fltk-shared" "fltk/fltk-shared") ("fltk-no-pango" "fltk/no-pango") ("fltk-no-gdiplus" "fltk/no-gdiplus") ("fltk-bundled" "fltk/fltk-bundled") ("enable-glwindow" "fltk/enable-glwindow") ("default" "enable-glwindow")))) (r "1.61.0")))

