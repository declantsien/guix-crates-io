(define-module (crates-io eg ob egobox-gp) #:use-module (crates-io))

(define-public crate-egobox-gp-0.2.0 (c (n "egobox-gp") (v "0.2.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.2.0") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1pmm689kgrhl6wrdpyipqd5ywl26r99vibf6028xzjrfdb0c2src") (f (quote (("default"))))))

(define-public crate-egobox-gp-0.2.1 (c (n "egobox-gp") (v "0.2.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.2.1") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1r282y14bf759g7wlwh94wkq380x482zg47m9fl246fyf3fy33wp") (f (quote (("default"))))))

(define-public crate-egobox-gp-0.3.0 (c (n "egobox-gp") (v "0.3.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.3.0") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1g0dnrwrpwbr4g326lg8ndn3wzcl8x1xdw9bc6y2287pmac4iglm") (f (quote (("serializable" "serde" "linfa/serde") ("default"))))))

(define-public crate-egobox-gp-0.4.0 (c (n "egobox-gp") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.4.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0xcxrg2c18czv5k6dgpfp48j7c9v1fm5m7712vcprmzdw8199a7x") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.5.0 (c (n "egobox-gp") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.5.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0p1qdpvnxinh0g1ny1bnwvssmh6jx35zjlr5z73yykg0af8j756x") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.6.0 (c (n "egobox-gp") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0b1cmmnljkpssk957ly8wmqjixpzy5k7lmj7h73k68f8xmybkl00") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.7.0 (c (n "egobox-gp") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ppnvgi4d88n95jjiiwnagv2a27rdpqvg4d28k69ba9zk8fwm84s") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.8.0 (c (n "egobox-gp") (v "0.8.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.8.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0grsri7cb9l0zgyzypm73bhl9i7iznrjy3kp71dsdzf10ks988bj") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.8.1 (c (n "egobox-gp") (v "0.8.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.8.1") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "07cv3nc0yk5vb67ns1322zixx91pb1ikac8rm5vrc2xz9pd84h1s") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.9.0 (c (n "egobox-gp") (v "0.9.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.9.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0laiw23giq0n01jlijilnvavmdv9jlmkzmrwissbsr29adr3rxqz") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.10.0 (c (n "egobox-gp") (v "0.10.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.10.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0fwkv624k3wfcaknbps63h80cahc7qlh6nppbdngzp4xgcyvl0pp") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.10.1 (c (n "egobox-gp") (v "0.10.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.10.1") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19hdwgj0hs71dpgli9yrkga49f0hwxyjlsi6b71lqahpkyaqz7sl") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.11.0 (c (n "egobox-gp") (v "0.11.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.11.0") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0zp5xhqgqwr5339va97zb3l124yhyxkgbzz133gcrb2961rqci6p") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.12.0 (c (n "egobox-gp") (v "0.12.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.12.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "11gcmwvma2jg4pyvpiw71dnsvbay6y7rkcm1ncxcsjhh15awr3al") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.13.0 (c (n "egobox-gp") (v "0.13.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.13.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "18qvhl8yhgpxhbcnzdihqbymyy923ix8rrdhi053fais4d45xpxa") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.14.0 (c (n "egobox-gp") (v "0.14.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.14.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0qvraj871fk8pqjjf2gvd0lgmalfbab7ss8794dbnywyzbf1s530") (f (quote (("serializable" "serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.15.0 (c (n "egobox-gp") (v "0.15.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.15.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1j7laz57wq9lx95b90cpbxmjdk486pxd142p3prmiwayxg72yz15") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.15.1 (c (n "egobox-gp") (v "0.15.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.15.1") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0fww9327kchnidfscp7n4jah362ni0wy9hqby5iaiq7rni7q39bs") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.15.2 (c (n "egobox-gp") (v "0.15.2") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.15.2") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0y00qdm0j7ls9gwzln7r23wfx1an1dq9ls1xd6gdn7f6hc7djjlw") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.15.3 (c (n "egobox-gp") (v "0.15.3") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.15.3") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1g6nadcn4v34vx7awpvz32z7m3xcli7gd11k99sqa3dgfanb2vvf") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.16.0 (c (n "egobox-gp") (v "0.16.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.16.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0pk59f01acz6999wv1zjssax4z8hsq1h8pqq8mbzd8dnv1hlfzry") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.17.0 (c (n "egobox-gp") (v "0.17.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.17.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0yqr6f4xpzd3r90dvywlfrlm88q7iimkl45ay6lai7w02m9kiy52") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.18.0 (c (n "egobox-gp") (v "0.18.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.18.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1zja3f13r0wcj080mn492y47lnfzj9ywz3mxxv493c2gpmnqs8nb") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.18.1 (c (n "egobox-gp") (v "0.18.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.18.1") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (k 0)))) (h "19j5w6cd0byvi40rzw43byf5prlvn62x6rv9pv6zl4h2sgdx0ljn") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-gp-0.19.0 (c (n "egobox-gp") (v "0.19.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.2") (d #t) (k 2)) (d (n "cobyla") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.19.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "ndarray_einsum_beta") (r "^0.7") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (o #t) (d #t) (k 0)))) (h "02swngp90mqb0pa34wk9b2rpg8ywa4n0izj6y8ic111jljqcz45j") (f (quote (("serializable" "serde" "typetag" "linfa/serde") ("persistent" "serializable" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

