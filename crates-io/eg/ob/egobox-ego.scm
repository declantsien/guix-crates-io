(define-module (crates-io eg ob egobox-ego) #:use-module (crates-io))

(define-public crate-egobox-ego-0.2.0 (c (n "egobox-ego") (v "0.2.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.2.0") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.2.0") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx" "blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0x2hk4wrnhybjvh6yxnsd5hascmdqi7382hw6iygqwa1p522zq1m")))

(define-public crate-egobox-ego-0.2.1 (c (n "egobox-ego") (v "0.2.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.2.1") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.2.1") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx" "blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0gmb6sw414az178bch1ci07560w6mksdvsgd2p8na3zdrvx3crzz")))

(define-public crate-egobox-ego-0.3.0 (c (n "egobox-ego") (v "0.3.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.3.0") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.3.0") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-pls") (r "^0.5.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx" "blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1mm3z5g94vqw2sp4nv4d9gjrnlqs0h1m54l3iljvqjchwcna72rl") (f (quote (("persistent" "serde" "typetag" "egobox-moe/persistent" "serde_json") ("default"))))))

(define-public crate-egobox-ego-0.4.0 (c (n "egobox-ego") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.4.0") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.4.0") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "01b336l0xf2s8jdymrzm8n2fdx4hnk2clj60yla13k1bffkwbxdj") (f (quote (("persistent" "serde" "typetag" "egobox-moe/persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.5.0 (c (n "egobox-ego") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.5.0") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.5.0") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.5.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0vahrg980sz3v6yiaq32k4jsq1npxfdnsqinwav2ilrqplafdvw9") (f (quote (("persistent" "serde" "typetag" "egobox-moe/persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.6.0 (c (n "egobox-ego") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.6.0") (d #t) (k 0)) (d (n "egobox-gp") (r "^0.6.0") (d #t) (k 0)) (d (n "egobox-moe") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)))) (h "00ffqmkbnplnzx6gxhj69p9kzqs0sjqaiz1j180ibzgybfhwq42w") (f (quote (("persistent" "serde" "typetag" "egobox-moe/persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.7.0 (c (n "egobox-ego") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.7.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.7.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.7.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.7.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "0a6zxf2lwnjka1wqvaq9qw8kwpi7lbmqlqp03yllxg5zj9f2vbkf") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.8.0 (c (n "egobox-ego") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.8.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.8.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.8.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "17hyhpdrawb7nh78zw8kvb9zc5z87ax077cc068rlykzz1pvgqw1") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.8.1 (c (n "egobox-ego") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "13vrlc45qfm8aj5xrr0r2b64vavkl6bvzi72fb48vzhg6yvlycwm") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.8.2 (c (n "egobox-ego") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "egobox-doe") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.8.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "086h5lyf9hdgk187qgk1xwik5a6zjck19s0nk50v64kabgh3r4fj") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.9.0 (c (n "egobox-ego") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.9.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.9.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.9.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "0hfqvvdyhcdaqv7drrab7nmsmg27zj81nn4gx7hs5z4kjyg9ka6h") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.10.0 (c (n "egobox-ego") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.10.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.10.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.10.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "144nv528z3vdajz5vb5f46lzgr63jhlhnncyhh974aj1i3givgfg") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.10.1 (c (n "egobox-ego") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.10.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.10.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.10.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "160b90jbk9l8dxkdrnjpa072fypg2hf35wqxdwnnm34zwj09gzay") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.11.0 (c (n "egobox-ego") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.11.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.11.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.11.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "18bp31ivrqb24bxxdf6kpdbrr3ilk2hri6izmq77ii2j7vb5dzr0") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.12.0 (c (n "egobox-ego") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.12.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.12.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.12.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "0bz505zdqixn764ac0n4y31nvwzhakjpz276nv7yxz7qpbyhi2pk") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.13.0 (c (n "egobox-ego") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.13.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.13.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.13.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "0bccxybddfv41143x39is77fz1r8pvdc2kn69slpr6bircg6s987") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.14.0 (c (n "egobox-ego") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.14.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.14.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.14.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "1cqlq9g99z4aagii8mxxvsrfj74bh2x8m2nlfgcgn29pwkg06kgy") (f (quote (("persistent" "serde_json") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.15.0 (c (n "egobox-ego") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.15.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.15.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.15.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "1wg99h2vwly2aq7f80xrdb9967p2qh1qfim2fvm0br9qlr87r60p") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.15.1 (c (n "egobox-ego") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.15.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.15.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.15.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "119cb15vzaxxr28k7k04jxly72vnd0kkafjcjf3bmi3zqrk1izjy") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.15.2 (c (n "egobox-ego") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "<4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.15.2") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.15.2") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.15.2") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "1bcxrkcc218rdmdrmvd10y0z028kma11l8nvyaq024vz5li1ilg3") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.15.3 (c (n "egobox-ego") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "<4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.15.3") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.15.3") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.15.3") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "068yqm0gbsnkmbr4yxk0xkqpw4559wmskpbi8jhw5kpy6s1mrqyk") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.16.0 (c (n "egobox-ego") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.16.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.16.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.16.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "13as0sjn12dhy132ah19f09mpcd33byyyg5j8w020cr3jhm2z1hd") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.17.0 (c (n "egobox-ego") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.17.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.17.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.17.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)))) (h "0gvz11v8krjwq3qqfrjlrmvky9qjqassn2amf08106h71b2n7jkm") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.18.0 (c (n "egobox-ego") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.18.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.18.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.18.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)))) (h "0dbkzcx9q9picm9zy3qxzak1hz8x6r76bk0cqqqyy6bdy1izqhs3") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.18.1 (c (n "egobox-ego") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.8.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.18.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.18.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.18.1") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)))) (h "0ma0a2cqf27ggikpdnz92ag0v01bxz6m3cgd7n2bn6q0ii93mbzy") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

(define-public crate-egobox-ego-0.19.0 (c (n "egobox-ego") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "argmin") (r "^0.10.0") (f (quote ("serde1" "ctrlc"))) (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.2") (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cobyla") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "egobox-doe") (r "^0.19.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-gp") (r "^0.19.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "egobox-moe") (r "^0.19.0") (f (quote ("serializable"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "finitediff") (r "^0.1") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (d #t) (k 0)) (d (n "linfa") (r "^0.7") (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "linfa-pls") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "nlopt") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serial_test") (r "^3.1.0") (d #t) (k 2)) (d (n "slsqp") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.2") (d #t) (k 0)))) (h "1p216xs64x19r2d1fwa0n6x2zn6i96yy2fy6jrk4ghiwz47p19yk") (f (quote (("persistent" "egobox-moe/persistent") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg" "linfa-pls/blas"))))))

