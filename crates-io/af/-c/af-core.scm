(define-module (crates-io af -c af-core) #:use-module (crates-io))

(define-public crate-af-core-0.1.0 (c (n "af-core") (v "0.1.0") (d (list (d (n "af-macros") (r "^0.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (d #t) (k 0)) (d (n "async-global-executor") (r "^2") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-io") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "event-listener") (r "^2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parse_duration") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (f (quote ("with-chrono-0_4" "with-uuid-0_8"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)))) (h "0yxfnq14l624faxvl015hc44vicza2gpwq2azm1a42gnbhpnxwdd") (f (quote (("tokio" "async-global-executor/tokio") ("test-runner" "console" "indicatif" "logger") ("postgres" "postgres-types") ("logger" "af-macros/logger" "console" "dashmap") ("default" "logger"))))))

(define-public crate-af-core-0.1.4 (c (n "af-core") (v "0.1.4") (d (list (d (n "af-macros") (r "^0.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (d #t) (k 0)) (d (n "async-global-executor") (r "^2") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-io") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (k 0)) (d (n "console") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "event-listener") (r "^2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parse_duration") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (f (quote ("with-chrono-0_4" "with-uuid-0_8"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)))) (h "1z09802k3a9h669xyxg1551crdj05c61gasv5f16vva82lzlhalr") (f (quote (("tokio" "async-global-executor/tokio") ("test-runner" "console" "indicatif" "logger") ("postgres" "postgres-types") ("logger" "af-macros/logger" "console" "dashmap") ("default" "logger"))))))

(define-public crate-af-core-0.1.6 (c (n "af-core") (v "0.1.6") (d (list (d (n "af-core-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (d #t) (k 0)) (d (n "async-global-executor") (r "^2") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-io") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (k 0)) (d (n "console") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "event-listener") (r "^2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parse_duration") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (f (quote ("with-chrono-0_4" "with-uuid-0_8"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)))) (h "0hl56r8y1gwlaqh0g22wb78r8glqzy7mlcmyyix3pmvc3cni9vs3") (f (quote (("tokio" "async-global-executor/tokio") ("test-runner" "console" "indicatif" "logger") ("postgres" "postgres-types") ("logger" "af-core-macros/logger" "console" "dashmap") ("default" "logger"))))))

(define-public crate-af-core-0.1.7 (c (n "af-core") (v "0.1.7") (d (list (d (n "af-core-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (d #t) (k 0)) (d (n "async-global-executor") (r "^2") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-io") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (k 0)) (d (n "console") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "event-listener") (r "^2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parse_duration") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (f (quote ("with-chrono-0_4" "with-uuid-0_8"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)))) (h "1icshvrifj4jxn1q13ly8ka4ibbg6p7y3ih6xrrghdf40zgmcibg") (f (quote (("tokio" "async-global-executor/tokio") ("test-runner" "console" "indicatif" "logger") ("postgres" "postgres-types") ("logger" "af-core-macros/logger" "console" "dashmap") ("default" "logger"))))))

(define-public crate-af-core-0.1.8 (c (n "af-core") (v "0.1.8") (d (list (d (n "af-core-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (d #t) (k 0)) (d (n "async-global-executor") (r "^2") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-io") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (k 0)) (d (n "console") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "event-listener") (r "^2") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parse_duration") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (f (quote ("with-chrono-0_4" "with-uuid-0_8"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)))) (h "1dfh3y1vxfxwkx99bgcs0hcha78zz160hyxs92ynnjhgbf711vml") (f (quote (("tokio" "async-global-executor/tokio") ("test-runner" "console" "indicatif" "logger") ("postgres" "postgres-types") ("logger" "af-core-macros/logger" "console" "dashmap") ("default" "logger"))))))

