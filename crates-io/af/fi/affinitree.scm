(define-module (crates-io af fi affinitree) #:use-module (crates-io))

(define-public crate-affinitree-0.20.0 (c (n "affinitree") (v "0.20.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "assertables") (r "^7.0.1") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "fast_log") (r "^1.5.54") (d #t) (k 2)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "minilp") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)))) (h "1f7ygy7brhr7dggapwzdzpklpdsrcxzfvp64bg9hljzyc26w7mi5") (r "1.64")))

(define-public crate-affinitree-0.20.1 (c (n "affinitree") (v "0.20.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "assertables") (r "^7.0.1") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "fast_log") (r "^1.5.54") (d #t) (k 2)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "minilp") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)))) (h "088cs5ch7b9gibg2g47krp3jpv8kj32kn3rr61sy6rcjc6jy70w9") (r "1.64")))

(define-public crate-affinitree-0.21.0 (c (n "affinitree") (v "0.21.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "assertables") (r "^7.0.1") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 2)) (d (n "fast_log") (r "^1.5.54") (d #t) (k 2)) (d (n "highs") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "ieee754") (r "^0.2.6") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "minilp") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)))) (h "0b52nhjmk11bgpff13pwkhwcxmrmlzpa45c6n2ycdmnn3z5km9yl") (f (quote (("default" "minilp")))) (s 2) (e (quote (("minilp" "dep:minilp") ("highs" "dep:highs")))) (r "1.64")))

(define-public crate-affinitree-0.21.1 (c (n "affinitree") (v "0.21.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "assertables") (r "^7.0.1") (d #t) (k 2)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 2)) (d (n "highs") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "minilp") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)))) (h "17j29x9k068jvmkxib5hmgwr0h9acq9g1bdnixli5f51zpmydg38") (f (quote (("default" "minilp")))) (s 2) (e (quote (("minilp" "dep:minilp") ("highs" "dep:highs")))) (r "1.64")))

