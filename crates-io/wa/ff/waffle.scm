(define-module (crates-io wa ff waffle) #:use-module (crates-io))

(define-public crate-waffle-0.0.0 (c (n "waffle") (v "0.0.0") (h "1q5d4pcw3iqi1kmg71g2mvahlzf72sjs9ygn933zk28dr7l45bcg")))

(define-public crate-waffle-0.0.1 (c (n "waffle") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1l2c4w9lg4ja2jlr45cmjlk8h885mdxk52vpbcwh655r874a8yrk")))

(define-public crate-waffle-0.0.2 (c (n "waffle") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1dj2d38y4pdkr5h16ng27n283a9nmys7wmc9b5d0g9a2f5p1dlj9")))

(define-public crate-waffle-0.0.3 (c (n "waffle") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "13gz4ijibnadqyrx2qxdk4rfxn20ykirvwr9nfmn0qkcxzvxqc5p")))

(define-public crate-waffle-0.0.4 (c (n "waffle") (v "0.0.4") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1q8dni0f31l1535kdbm12hgrrcz8iwh3g9vsbjb74zlh2aigkgzf")))

(define-public crate-waffle-0.0.5 (c (n "waffle") (v "0.0.5") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1i5g53nqixyqbwn7bpkgmmbmvm4sl4kfpg970l07af9g3d6qfflv")))

(define-public crate-waffle-0.0.6 (c (n "waffle") (v "0.0.6") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0ajqimh5jq7v7bdx75ddq50f57gfq0idxmk5h4jb2n0hs3zjp5fb")))

(define-public crate-waffle-0.0.7 (c (n "waffle") (v "0.0.7") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "19010zs56axhl6yij2aslh4rjvc9zzkanhnfvbcp5w3hyffilbgc") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.8 (c (n "waffle") (v "0.0.8") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "10843gdw0h4vnvfzj302fn455apbh5q6v75phlz75jkzklmwi6sd") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.9 (c (n "waffle") (v "0.0.9") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0b52q84i29mc3908vynbhks3jj4k6i4izady00hhnmynhi5y77mv") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.10 (c (n "waffle") (v "0.0.10") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1m1rrpjnczadm4q2wkrh52nlb9nb8lcv62v6caxpxd6zakqsmfa1") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.11 (c (n "waffle") (v "0.0.11") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1qpxsc5nml73nyrk8id2l8z0dk1161grzr47jxadpajsmar0jai5") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.12 (c (n "waffle") (v "0.0.12") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0dnvg3kvivr8ixpspafkd09l6z0dayigdfi12qrxbdr54llys140") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.13 (c (n "waffle") (v "0.0.13") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0rm5ihnwpkdb554qzmysvv5a7pkjdbgjmvc8bf5khxmn2av5d9nz") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.14 (c (n "waffle") (v "0.0.14") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0crh43swmrslvyl8sr84psij3fmr563lh0dgg4dz8g2fsfzla7ab") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.15 (c (n "waffle") (v "0.0.15") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "06477yhpsmkg5mczb4rwfrq5xhahswnf6m4qzis6ldl7mncb8lqb") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.16 (c (n "waffle") (v "0.0.16") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0klc9i765hbndymiyxwkxi8xvi01vpwsn1i7aiy5a8ng1pw314fs") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.17 (c (n "waffle") (v "0.0.17") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0p1800nwwg04f4mvrwg8jnijc5qj9fd8x9bbgyyyv0ydal9bjfwn") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.18 (c (n "waffle") (v "0.0.18") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1a57g4bnzkd33va65adfbr4s46jqri3198qvassy3n7r72vjfhl8") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.19 (c (n "waffle") (v "0.0.19") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1nvr0xkcqmjk3cycyjgdf6a07zmmq439yk7fbmkiqw0vq95r8869") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.20 (c (n "waffle") (v "0.0.20") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "16pkv7bgy6hpv23hz6i0p2nangx1j1gcp28dsrndkq1lw4iai5xw") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.21 (c (n "waffle") (v "0.0.21") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0ifpfwy3d7gd4rppmgib9djx8g5f6x2rrwnn4rd4d9plrdhrlbbb") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.22 (c (n "waffle") (v "0.0.22") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "1s1cs86ahkx70vjjaiwgnpp8sxx1h105mr49fiaj38aj5y9bwskw") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.23 (c (n "waffle") (v "0.0.23") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0wxygdqbxvmkhgm0vp8q2h7h3a8bmw275knscway3m93xa93q808") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.24 (c (n "waffle") (v "0.0.24") (d (list (d (n "addr2line") (r "^0.19") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.95") (d #t) (k 0)))) (h "0v9arp34w8p5d3xs3qcqmy6n5kry8ficixss3w7r2by2pdmznq6m") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.25 (c (n "waffle") (v "0.0.25") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "0s9dzmwba3r9irycgk2pnz2q1dis1ys5f4imjwi1m0k005k3ghdx") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.26 (c (n "waffle") (v "0.0.26") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1awl1jaf70c8vfydfiz9n57c6vkywvrq7svrygs30gvpmyril98k") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.27 (c (n "waffle") (v "0.0.27") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "0hxzyy3cn547c7jciw15wxjpkcx6kmsgv39302d5jr68p011x47g") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.28 (c (n "waffle") (v "0.0.28") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "0vwkjry6cjhlqi3lv0igxfcc3158gd52avbpxwi2f3pwhggpj2sz") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.29 (c (n "waffle") (v "0.0.29") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1rrf2z8kyhw6rirvzh6yvgcwi3i6n22f4cjy95w9rrh7m2n91l96") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.30 (c (n "waffle") (v "0.0.30") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1nc77z6xfz41h17i9sxnllbsxkq75z979iamqybsa7f69838z5db") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.31 (c (n "waffle") (v "0.0.31") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1zidxlg0f9gl5ifxp6bq3s654rb3gbfh4i0vkd6xp9v8g81hvx1g") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.32 (c (n "waffle") (v "0.0.32") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1i0lnj9fs2p1drm7cg8vy9j3zp35afzprnqhfjldk5a44g4x1vni") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.33 (c (n "waffle") (v "0.0.33") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "0wxhkg8i40qaxbmrpsbf927zg96ca3h5fxjjksrp6iidbgjz7i6q") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.34 (c (n "waffle") (v "0.0.34") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "1y97mif1836lyfn9jvdv3rxcxsr7glinc7rz1plybxnlx6ymmm51") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.35 (c (n "waffle") (v "0.0.35") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "14z1c8kfljlxc00mjz7vghvmx8zj2br4c4h779plk2fddfydxwxq") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

(define-public crate-waffle-0.0.36 (c (n "waffle") (v "0.0.36") (d (list (d (n "addr2line") (r "^0.21") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.202") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202") (d #t) (k 0)))) (h "0mjp4aqdn2r8hhgrckf0b1b7qby6ca8lfrrp3ml39dlzg4dfsy75") (f (quote (("fuzzing" "libfuzzer-sys" "wasm-smith") ("default"))))))

