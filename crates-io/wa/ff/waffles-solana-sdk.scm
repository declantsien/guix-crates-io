(define-module (crates-io wa ff waffles-solana-sdk) #:use-module (crates-io))

(define-public crate-waffles-solana-sdk-1.14.11 (c (n "waffles-solana-sdk") (v "1.14.11") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-logger") (r "=1.14.11") (o #t) (d #t) (k 0)) (d (n "solana-program") (r "=1.14.11") (d #t) (k 0)) (d (n "solana-sdk-macro") (r "=1.14.11") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1raai80a4k064g90ff0zq68c7f24nmr8pvns0y538mkriazdapcg") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.15.0 (c (n "waffles-solana-sdk") (v "1.15.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "waffles-solana-frozen-abi") (r "=1.15.0") (d #t) (k 0)) (d (n "waffles-solana-frozen-abi-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "waffles-solana-logger") (r "=1.15.0") (o #t) (d #t) (k 0)) (d (n "waffles-solana-program") (r "=1.15.0") (d #t) (k 0)) (d (n "waffles-solana-sdk-macro") (r "=1.15.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1aaab2j775abjrf4k46vsgdl81jwq6iziyk9s8zvg6dvx7hpjp8a") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "waffles-solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.15.0-1 (c (n "waffles-solana-sdk") (v "1.15.0-1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.0") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.15.0") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.15.0") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.15.0") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.15.0") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0l66z76xflg5abhi28kskn32w4fd91xpwlxj2mm4l2f8nq3q7xgq") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.15.0-2 (c (n "waffles-solana-sdk") (v "1.15.0-2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.15.0-2") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.15.0-2") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.15.0-2") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.15.0-2") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.15.0-2") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0l8cai91i1pqz958n55h2azvbzyviqkdbfqkvnm2aj7h1857zch9") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0 (c (n "waffles-solana-sdk") (v "1.16.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "00dc14bcifrvz45rk57mz6whjspdnahbrni624jw60l0n9m7xsq6") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha-1 (c (n "waffles-solana-sdk") (v "1.16.0-alpha-1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha-1") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha-1") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha-1") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha-1") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha-1") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "08gyp2y0k9li2zhxii9f87061n0r5q3qjmn246k5kqn7ab2m78qj") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.1 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.1") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.1") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.1") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.1") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.1") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0bjqlbv9kvq9k85w4dpnmfgmjkg75ii7kz9g9d6qihp53nb89cqr") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.2 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.2") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1sdl6cpf1inlb4a5qczqfjj8b6270ypfxqn4h0f2qj81vvhrdyyk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.3 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.2") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.2") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1agl1xaq4862858grx1s6ii4z7f2x2ag2c22l0zp28g0n2p77lbk") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.4 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.4") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.4") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.4") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.4") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.4") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1vy2sf30z74fgp40rggrjan3gqy3x1vyjj8i4vc730wvqdclj8zj") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.5 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.5") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.5") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.5") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.5") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.5") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "140mfqf7wp9wvl5717fcjnhmbc7pixpbyipdz0ls9bpy7bi036kd") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.6 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.6") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.6") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.6") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.6") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.6") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "05y9ga5aa4aicrvm5vygm9ihld8iss8m7iphnxnlcj7xdaff3kvn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.7 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.7") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.7") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.7") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.7") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.7") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0q34y0r6if3sal4q8hww59q1c0w5hf971ad414h2vlx9gg3c99zn") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.8 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.8") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.8") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.8") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.8") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.8") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0sw8ib9rsjz5rvjhgfcl73hhwp6bnq904bpyj1pk5gqnybxqn4w7") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.9 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.9") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.9") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.9") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.9") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.9") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.9") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0j6wagbdxwpsnam9l038h917y5s084sna0w4mrdvm22q6z4jz7i1") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.10 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.10") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "06g5mmhqxis029cp1pmf26dv5r7fn16mqlinpk01klxg0pzdrxrv") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

(define-public crate-waffles-solana-sdk-1.16.0-alpha.11 (c (n "waffles-solana-sdk") (v "1.16.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.3") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (k 2)) (d (n "derivation-path") (r "^0.2.0") (k 0)) (d (n "digest") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek-bip32") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde" "more_lengths"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "qstring") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (f (quote ("macros"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-frozen-abi")) (d (n "solana-frozen-abi-macro") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-frozen-abi-macro")) (d (n "solana-logger") (r "=1.16.0-alpha.10") (o #t) (d #t) (k 0) (p "waffles-solana-logger")) (d (n "solana-program") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-program")) (d (n "solana-sdk-macro") (r "=1.16.0-alpha.10") (d #t) (k 0) (p "waffles-solana-sdk-macro")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (k 2)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13917xy7dxm9vdhjpmxwf188dpfy1zqng2vvfccn2pr26y1ipxfz") (f (quote (("program") ("full" "assert_matches" "byteorder" "chrono" "generic-array" "memmap2" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "ed25519-dalek-bip32" "solana-logger" "libsecp256k1" "sha3" "digest") ("default" "full"))))))

