(define-module (crates-io wa sm wasmer-compiler-singlepass) #:use-module (crates-io))

(define-public crate-wasmer-compiler-singlepass-1.0.0-alpha01.0 (c (n "wasmer-compiler-singlepass") (v "1.0.0-alpha01.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha01.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha01.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha01.0") (d #t) (k 0)))) (h "1y9hbm37ira1agw5dl5hl4xsvac0slm5hcs0fvybcsp5y4jih4a2") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-alpha02.0 (c (n "wasmer-compiler-singlepass") (v "1.0.0-alpha02.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha02.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha02.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha02.0") (d #t) (k 0)))) (h "1d8npifx1pzr347sbisjmzrr19vq4c911lbhs7hvm05s5kcn136i") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-alpha3 (c (n "wasmer-compiler-singlepass") (v "1.0.0-alpha3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha3") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha3") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha3") (d #t) (k 0)))) (h "067nz1hrnfn7dyl866ynrb7vhp4wk6frqm36cll8lxhb6xhax5nq") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-alpha4 (c (n "wasmer-compiler-singlepass") (v "1.0.0-alpha4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha4") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha4") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha4") (d #t) (k 0)))) (h "02azz70x6mpxs5kbvq0xy0dq6cxhjfc897hywai1ahmw002fzr31") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-alpha5 (c (n "wasmer-compiler-singlepass") (v "1.0.0-alpha5") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha5") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha5") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha5") (d #t) (k 0)))) (h "1x9nmznlb94ppcz5krlzf1skh7y8wi2h5y2ryyv0dkpbhc8mm2mb") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-beta1 (c (n "wasmer-compiler-singlepass") (v "1.0.0-beta1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta1") (d #t) (k 0)))) (h "1jpr4xxld2n15ksqjrrc4461fnaiy3ci6y28x9b8afnf6kc03jxx") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-beta2 (c (n "wasmer-compiler-singlepass") (v "1.0.0-beta2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "wasmer-compiler") (r "^1.0.0-beta2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta2") (d #t) (k 0)))) (h "1aj1v70a3sqg5pllp4g3aws9p2ciry3q2g4gg1z08nk4xqpm3h4z") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0-rc1 (c (n "wasmer-compiler-singlepass") (v "1.0.0-rc1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "wasmer-compiler") (r "^1.0.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-rc1") (d #t) (k 0)))) (h "1d221awsljd6w36k3z16chpwmh82w643gyzshh71lq1pm4m6vp2k") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.0 (c (n "wasmer-compiler-singlepass") (v "1.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "wasmer-compiler") (r "^1.0.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0") (d #t) (k 0)))) (h "198f6vgpra64zik1ja4q0k0b9yl2zgv597yx3xrzqghif6a1ryc1") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.1 (c (n "wasmer-compiler-singlepass") (v "1.0.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "wasmer-compiler") (r "^1.0.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.1") (d #t) (k 0)))) (h "0m5bxhhk2rfsnl36vr2x70ar01iwlir5mc3gaylpm9vfi7c2akk8") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-1.0.2 (c (n "wasmer-compiler-singlepass") (v "1.0.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "wasmer-compiler") (r "^1.0.2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.2") (d #t) (k 0)))) (h "01sxwylvk071xx6ncypv9d8igqi0ypv2wghga4ashv301zpycsj2") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde") ("core" "hashbrown"))))))

(define-public crate-wasmer-compiler-singlepass-2.0.0-rc1 (c (n "wasmer-compiler-singlepass") (v "2.0.0-rc1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "wasmer-compiler") (r "^2.0.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc1") (d #t) (k 0)))) (h "0mc11ww0c0qs1nynij7sfknjw0axy2dkflr07sk56yix8w1r7yym") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.0.0-rc2 (c (n "wasmer-compiler-singlepass") (v "2.0.0-rc2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "wasmer-compiler") (r "^2.0.0-rc2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc2") (d #t) (k 0)))) (h "0znrd9gxc8l0ifr9w6s0qi26b370xbxdc7ngz6dw03c4v7wy1c6g") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.0.0 (c (n "wasmer-compiler-singlepass") (v "2.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "wasmer-compiler") (r "^2.0.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (d #t) (k 0)))) (h "051h9jl8w71mrjhx8l15d7xj7zr9f2fg11qpbf2jsn4cf3vvjacl") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.1.0 (c (n "wasmer-compiler-singlepass") (v "2.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.0") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "^2.1.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.0") (d #t) (k 0)))) (h "10gz8hq2w5pl2my3vx5fj1xwaii2zbm71hdrpcb2ks8v7i9pviaq") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.1.1 (c (n "wasmer-compiler-singlepass") (v "2.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "^2.1.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.1") (d #t) (k 0)))) (h "1i6axhx8bnv52zwww2val5pqnn6jjsx48fgwz6rqn6jx9ji3s797") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.2.0-rc1 (c (n "wasmer-compiler-singlepass") (v "2.2.0-rc1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.1") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=2.2.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc1") (d #t) (k 0)))) (h "0i3k48warxwhqr3vbh3d7qfn6x137swpcb4607ilgq0pr7l09iwm") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.2.0-rc2 (c (n "wasmer-compiler-singlepass") (v "2.2.0-rc2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.1") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=2.2.0-rc2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc2") (d #t) (k 0)))) (h "1vjixy9fi1qmi7ifm8ss1h1b26fpphgrf0yg7yh7pai83m0l0q70") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "rayon") ("core" "hashbrown" "wasmer-types/core"))))))

(define-public crate-wasmer-compiler-singlepass-2.2.0 (c (n "wasmer-compiler-singlepass") (v "2.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.1") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=2.2.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0") (d #t) (k 0)))) (h "1yj0plsbdq6b6z8pfby58icis51lbk1wmgxfxl4hwjzvix9w2qsb") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-2.2.1 (c (n "wasmer-compiler-singlepass") (v "2.2.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.1") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=2.2.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.1") (d #t) (k 0)))) (h "0q58qkcp9d4f3gcnnw5lg6ai4yjflvpckj6xfml8xnqchj9yjcjl") (f (quote (("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-2.3.0 (c (n "wasmer-compiler-singlepass") (v "2.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=2.3.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (f (quote ("std"))) (k 0)))) (h "17kj3limifkh6xw8l6w01c3vi3cs4nn7mg32a2lfz2sd40sjmji9") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-alpha (c (n "wasmer-compiler-singlepass") (v "3.0.0-alpha") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-alpha") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha") (f (quote ("std"))) (k 0)))) (h "0fkhbnx4j6r5h30lw9a0dqmkz14yn2fy1jz6plrcbvj6j0sc5gbx") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-alpha.1 (c (n "wasmer-compiler-singlepass") (v "3.0.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "0lwxbhz6wqb2gjkh00x50h0zs6ljwzaw28l7nc42c86rsbzfwyvf") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-alpha.2 (c (n "wasmer-compiler-singlepass") (v "3.0.0-alpha.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.2") (f (quote ("std"))) (k 0)))) (h "1iw5vqrp0w52hjdwa08v52ncj7q4kjjvx7qpm4k0firqnkqc8l82") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-alpha.3 (c (n "wasmer-compiler-singlepass") (v "3.0.0-alpha.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.3") (f (quote ("std"))) (k 0)))) (h "1p6x77pzn9llghvmccrzdm7lg4q541vr6j81xxm7zrh6bpyjckjg") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-alpha.4 (c (n "wasmer-compiler-singlepass") (v "3.0.0-alpha.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.4") (f (quote ("std"))) (k 0)))) (h "04da5cv9bfqmwz8pynakf0jw1c5rmsjkawg6c4iv2zxcha9dldzz") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-beta (c (n "wasmer-compiler-singlepass") (v "3.0.0-beta") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-beta") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta") (f (quote ("std"))) (k 0)))) (h "1rp53gj3s1mi3bjnb0pgnwjzq0z0wzamjjh8vqs51qisahr7b0x1") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-beta.2 (c (n "wasmer-compiler-singlepass") (v "3.0.0-beta.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta.2") (f (quote ("std"))) (k 0)))) (h "0vvy0fx0qv855ml1kg41f5wj0234kvqynx2l2bjbhykanfphpbi0") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-rc.1 (c (n "wasmer-compiler-singlepass") (v "3.0.0-rc.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-rc.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.1") (f (quote ("std"))) (k 0)))) (h "0n49rzww894m3ad1b4vvb6w9ajprmkb7hvs688hmd07j076hx4m2") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-rc.2 (c (n "wasmer-compiler-singlepass") (v "3.0.0-rc.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-rc.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.2") (f (quote ("std"))) (k 0)))) (h "0qmmmz73wl7x6sldmdcrdg66qm25apxlgm32y2qi7arqxxjy645g") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-rc.3 (c (n "wasmer-compiler-singlepass") (v "3.0.0-rc.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-rc.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.3") (f (quote ("std"))) (k 0)))) (h "0xnx450x7jr8gh52vcmkhqi2vhp459a14x83pcckbklnpjfjcby9") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0-rc.4 (c (n "wasmer-compiler-singlepass") (v "3.0.0-rc.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0-rc.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.4") (f (quote ("std"))) (k 0)))) (h "1bx2jsawlnszz8dr1d87pgyw84spic4m7w5sq3s50fv07wa2admi") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.0 (c (n "wasmer-compiler-singlepass") (v "3.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0") (f (quote ("std"))) (k 0)))) (h "18ggc5ab8r9f5chnn1mkr3ydma176kghkdwxl3mrc85hjy47wi4p") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.1 (c (n "wasmer-compiler-singlepass") (v "3.0.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.1") (f (quote ("std"))) (k 0)))) (h "0kvh20lx87kg2m1z6r0qb4jr1qq6lqvwalvwg3kmdd4nmp1gyy4y") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.2 (c (n "wasmer-compiler-singlepass") (v "3.0.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.2") (f (quote ("std"))) (k 0)))) (h "1a1n4rfwcr1fj2jp79xmz08j74yb5rpcyf0x1yw7yrgpbqbghs1h") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.1.0 (c (n "wasmer-compiler-singlepass") (v "3.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.1.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.1.0") (f (quote ("std"))) (k 0)))) (h "0rfh41k5swq3kddjamsvfbmjls0ihh9k9z3q85b50w5ql3lslsqw") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.2.0-alpha.1 (c (n "wasmer-compiler-singlepass") (v "3.2.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.2.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "1z62qv8vgn4dbgxix1l5qffpq1ka6m8qb38lakm39vv4pk61grfj") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.0.3 (c (n "wasmer-compiler-singlepass") (v "3.0.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.0.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.3") (f (quote ("std"))) (k 0)))) (h "12xx1n9y0nnx6aba152qbaka7f7l5mh8ki0zr1wysjp7kmc6rn9f") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.1.1 (c (n "wasmer-compiler-singlepass") (v "3.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.1.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.1.1") (f (quote ("std"))) (k 0)))) (h "0p15imhw2bi3s9wxkc7iq7mzxp20h3s319788y8z7mcjq763bqh7") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.2.0-beta.1 (c (n "wasmer-compiler-singlepass") (v "3.2.0-beta.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.2.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-beta.1") (f (quote ("std"))) (k 0)))) (h "0zwj96clxjv0l26k7mrr2v8crxggimvj7d9qhhc4a2z4aqhmal1g") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.2.0-beta.2 (c (n "wasmer-compiler-singlepass") (v "3.2.0-beta.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.2.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-beta.2") (f (quote ("std"))) (k 0)))) (h "1zlsnl4qa5lbdrg0ynq8mnzknhychc57saarmgs162i93qzb340k") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.2.0 (c (n "wasmer-compiler-singlepass") (v "3.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.2.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0") (f (quote ("std"))) (k 0)))) (h "0wx5p4y29nzc102zb7yh2rscng36bci5hcaqvmlb57x7b45pq1cd") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.2.1 (c (n "wasmer-compiler-singlepass") (v "3.2.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.2.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.1") (f (quote ("std"))) (k 0)))) (h "0i9ml0rkxlwa3ng33fwygxs9k9yyg0243q2f77j8ihj5wgr29y7r") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-3.3.0 (c (n "wasmer-compiler-singlepass") (v "3.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=3.3.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.3.0") (f (quote ("std"))) (k 0)))) (h "15ybads0p9kxpx5lvdb5sr4f53i6xj6g0gxgq0aj2ibgvrbqklyl") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-4.0.0-alpha.1 (c (n "wasmer-compiler-singlepass") (v "4.0.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.0.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "08qj0xrqqnxgagc8a20558my5wgfsd9278hbsh9gvf0pqixqmfcf") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx"))))))

(define-public crate-wasmer-compiler-singlepass-4.0.0-beta.1 (c (n "wasmer-compiler-singlepass") (v "4.0.0-beta.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.0.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.1") (f (quote ("std"))) (k 0)))) (h "0cnihyz0mq05xa60952g8y3q4racldxipkni8apnihdgcj9wamk0") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.0.0-beta.2 (c (n "wasmer-compiler-singlepass") (v "4.0.0-beta.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.0.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.2") (f (quote ("std"))) (k 0)))) (h "1x6jms8kv0289m434srq89vdzpld99a2w7y7r238kgm13hbwlc1r") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.0.0-beta.3 (c (n "wasmer-compiler-singlepass") (v "4.0.0-beta.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.0.0-beta.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.3") (f (quote ("std"))) (k 0)))) (h "0n71j61bzis67rfc6v6k8w968xaqg4jdmrkl1ngdg8qn8w2ib14d") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.0.0 (c (n "wasmer-compiler-singlepass") (v "4.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.0.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0") (f (quote ("std"))) (k 0)))) (h "1pi868mbd9fadzlr4s0k6ax7kcqlfn014dgh3xazq0p3nym9ll02") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.1.0 (c (n "wasmer-compiler-singlepass") (v "4.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.1.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.0") (f (quote ("std"))) (k 0)))) (h "1mi2z3mcydkxkzk8hbyx6pzsx98w7pdy8cvqlxfx3fvkf5xramp8") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.1.1 (c (n "wasmer-compiler-singlepass") (v "4.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.1.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.1") (f (quote ("std"))) (k 0)))) (h "1cii8vf6vhpaaj9ldfimaybv6f1mnsj1kk6mpqkxx0m44xyf4l0m") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.1.2 (c (n "wasmer-compiler-singlepass") (v "4.1.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.1.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.2") (f (quote ("std"))) (k 0)))) (h "1b0ai4n4n0lf9vd4rkl3s4b98p0l76svk38xzfhgw6cbm6d03zgb") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.2.0 (c (n "wasmer-compiler-singlepass") (v "4.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.0") (f (quote ("std"))) (k 0)))) (h "1y71ddj55qws9yrnjhi178z1dvbchpdappqzlmsmsqcfns17i9q9") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.67")))

(define-public crate-wasmer-compiler-singlepass-4.2.1 (c (n "wasmer-compiler-singlepass") (v "4.2.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.1") (f (quote ("std"))) (k 0)))) (h "1nxskff2xn4fi7rfji3sl2gq1855ccin29d271mx2in1ym64962g") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.70")))

(define-public crate-wasmer-compiler-singlepass-4.2.2 (c (n "wasmer-compiler-singlepass") (v "4.2.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.2") (f (quote ("std"))) (k 0)))) (h "1kawnpcn5f3r9d35pmgbv8jqq95562czxffs0cdkbczz81dqdapb") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.70")))

(define-public crate-wasmer-compiler-singlepass-4.2.3 (c (n "wasmer-compiler-singlepass") (v "4.2.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.3") (f (quote ("std"))) (k 0)))) (h "0km2sp60nx28qjbhfbgjlp1s9k1kasd4hc62ja281n4akxc0i45l") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.70")))

(define-public crate-wasmer-compiler-singlepass-4.2.4 (c (n "wasmer-compiler-singlepass") (v "4.2.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.4") (f (quote ("std"))) (k 0)))) (h "1a86l2vmhy69bfp1wprspgss16dqngw189wiaw56q7d9a2147p25") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.70")))

(define-public crate-wasmer-compiler-singlepass-4.2.5 (c (n "wasmer-compiler-singlepass") (v "4.2.5") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.5") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.5") (f (quote ("std"))) (k 0)))) (h "0h700s3r27z238d14lib2bgjp27hyfqgqj3dqbxcx2vasrcn6kcg") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.70")))

(define-public crate-wasmer-compiler-singlepass-4.2.6 (c (n "wasmer-compiler-singlepass") (v "4.2.6") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.6") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.6") (f (quote ("std"))) (k 0)))) (h "0pl59bnnp23m9ff01q3kq6ymy28c5qvskxqj5p3xl21mk6dxnw90") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.73")))

(define-public crate-wasmer-compiler-singlepass-4.2.8 (c (n "wasmer-compiler-singlepass") (v "4.2.8") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.2.8") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.8") (f (quote ("std"))) (k 0)))) (h "08c2inm0984n3i47bnsmyfmfdnj05yy5kpkcpp1xkn33lajgvr5i") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.73")))

(define-public crate-wasmer-compiler-singlepass-4.3.0-alpha.1 (c (n "wasmer-compiler-singlepass") (v "4.3.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.3.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "05f90cwgy83r00lrqy172zh93sqv6gf3qa3l5383kj0qhvvswlk8") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.73")))

(define-public crate-wasmer-compiler-singlepass-4.3.0-beta.1 (c (n "wasmer-compiler-singlepass") (v "4.3.0-beta.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.3.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0-beta.1") (f (quote ("std"))) (k 0)))) (h "19pw0hl3d5h2hl6wlv8av10c99x71yy8hz7z8zzznla2v3634c97") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.73")))

(define-public crate-wasmer-compiler-singlepass-4.3.0 (c (n "wasmer-compiler-singlepass") (v "4.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.3.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0") (f (quote ("std"))) (k 0)))) (h "1mhvkj69mp5f4w1ggyvwrmp71c323ca7xv71chdqnwr5ldvwxz4g") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.74")))

(define-public crate-wasmer-compiler-singlepass-4.3.1 (c (n "wasmer-compiler-singlepass") (v "4.3.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "dynasm") (r "^1.2.3") (d #t) (k 0)) (d (n "dynasmrt") (r "^1.2.3") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 2)) (d (n "wasmer-compiler") (r "=4.3.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.1") (f (quote ("std"))) (k 0)))) (h "1caiwa4i5nn5swi4js70xhh03v2v1n7vhxp1b7c8mrrwprcqvmq0") (f (quote (("wasm" "std" "unwind" "avx") ("unwind" "gimli") ("std" "wasmer-compiler/std" "wasmer-types/std") ("sse") ("default" "std" "rayon" "unwind" "avx") ("core" "hashbrown" "wasmer-types/core") ("avx")))) (r "1.74")))

