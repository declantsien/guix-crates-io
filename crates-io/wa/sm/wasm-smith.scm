(define-module (crates-io wa sm wasm-smith) #:use-module (crates-io))

(define-public crate-wasm-smith-0.1.0 (c (n "wasm-smith") (v "0.1.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "19qfifa6cry9bpj64yzv5l7s49nz814j9847kjddl1a05lyhcpng")))

(define-public crate-wasm-smith-0.1.1 (c (n "wasm-smith") (v "0.1.1") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1pbf69by656rrjhvcvbslm5jnx6vkkpix7754z4bqnn14hjjmicf")))

(define-public crate-wasm-smith-0.1.2 (c (n "wasm-smith") (v "0.1.2") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1ps2wqqzvp2i6v97kayc0m54mpx60v2z0nf9y6m0w1v7z5fkh29f")))

(define-public crate-wasm-smith-0.1.3 (c (n "wasm-smith") (v "0.1.3") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "0csprwkv3zjg09cy568qvvbr9d0fjlis7fvkyhxnc373yri62b18")))

(define-public crate-wasm-smith-0.1.4 (c (n "wasm-smith") (v "0.1.4") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "17j60hvzdkwf3szw6k8s4sv81y34s4vz96jqygcvsx8z8kwl7p2h")))

(define-public crate-wasm-smith-0.1.5 (c (n "wasm-smith") (v "0.1.5") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1b8dlw5yc5gychzngafs0chwx55dnd6w624pj1m2vxmdwjxrdy2z")))

(define-public crate-wasm-smith-0.1.6 (c (n "wasm-smith") (v "0.1.6") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1kfh1jnxhs65d5p76z7nn85zz9b3yq3hpabfvyhcqnnpdksr25bv")))

(define-public crate-wasm-smith-0.1.7 (c (n "wasm-smith") (v "0.1.7") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "05j6w9fs9hxvqas2gfnhjl7z74l8lqxxkr1v3v1c1s5vwl842mcw")))

(define-public crate-wasm-smith-0.1.8 (c (n "wasm-smith") (v "0.1.8") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "0148zb8x6jn7x7ykrmzqnnf9j3apx9f34g4z36fla5appzygw3ph")))

(define-public crate-wasm-smith-0.1.9 (c (n "wasm-smith") (v "0.1.9") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1dsrhlpm90863x7mih221xlb7pfgh3ii82xa6z9blny7zivwfwpk")))

(define-public crate-wasm-smith-0.1.10 (c (n "wasm-smith") (v "0.1.10") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "0c4rmzp15v2m5iyzgy9v0bp6zfx4vz4rs4qpm535xp24pch4fpmx")))

(define-public crate-wasm-smith-0.1.11 (c (n "wasm-smith") (v "0.1.11") (d (list (d (n "arbitrary") (r ">=0.4.6, <0.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r ">=0.3.3, <0.4.0") (d #t) (k 2)) (d (n "leb128") (r ">=0.2.4, <0.3.0") (d #t) (k 0)) (d (n "libfuzzer-sys") (r ">=0.3.4, <0.4.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.3, <0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r ">=0.3.16, <0.4.0") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r ">=0.1.0, <0.2.0") (d #t) (k 0)))) (h "0yagcfyp268c44xfq732ivzj795p037p3drd98zpmx78gn1i7y1h")))

(define-public crate-wasm-smith-0.1.12 (c (n "wasm-smith") (v "0.1.12") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.1.0") (d #t) (k 0)))) (h "0065wn6prwjqq22rhyl1rbp7ghxanlimnzizzs7hvp1gpb4zizf7")))

(define-public crate-wasm-smith-0.2.0 (c (n "wasm-smith") (v "0.2.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.2.0") (d #t) (k 0)))) (h "119ahjv3j0jwhj0gda5r93r5rf5s7ha254f2s3s4fhzldkj85lyd")))

(define-public crate-wasm-smith-0.3.0 (c (n "wasm-smith") (v "0.3.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.2.0") (d #t) (k 0)))) (h "1l4qq9lmfcrfyfqd9pbyd4qkjvfxaqv7rwm37319lrf4qkch96ah")))

(define-public crate-wasm-smith-0.3.1 (c (n "wasm-smith") (v "0.3.1") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.0") (d #t) (k 0)))) (h "0kl6yb6cva8lb86qxkkflqb9r9f91ipns4rvaaq5xnplddwrp6qb")))

(define-public crate-wasm-smith-0.3.2 (c (n "wasm-smith") (v "0.3.2") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.3.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.0") (d #t) (k 0)))) (h "04s2iyslmgyn4prp5nhnqi5li8jb600pnwmp2b21nnsi2w7xgw2s")))

(define-public crate-wasm-smith-0.4.0 (c (n "wasm-smith") (v "0.4.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.0") (d #t) (k 0)))) (h "1yhvsqfr90d58fcyyawia0j0k9rary3136jdk16rgzg0al2w99gr")))

(define-public crate-wasm-smith-0.4.1 (c (n "wasm-smith") (v "0.4.1") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.1") (d #t) (k 0)))) (h "014c6bwgycasfl401kgqm94diw5gz34sambcpfdk8aklywg757r4")))

(define-public crate-wasm-smith-0.4.2 (c (n "wasm-smith") (v "0.4.2") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.1") (d #t) (k 0)))) (h "0xmf45anc5fprcj9dq8mmz76kavymbyc2nkvbj8q3si6slb8c6x0")))

(define-public crate-wasm-smith-0.4.3 (c (n "wasm-smith") (v "0.4.3") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.1") (d #t) (k 0)))) (h "05mzxiv41gn21j8gqahrbv7v1rzl0fc07r495k9qjw33zbk6809h")))

(define-public crate-wasm-smith-0.4.4 (c (n "wasm-smith") (v "0.4.4") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.1") (d #t) (k 0)))) (h "1s6y5a94syzdjf1fyqlkfnfp7kh61wslflplqxx3017p363l10m9")))

(define-public crate-wasm-smith-0.4.5 (c (n "wasm-smith") (v "0.4.5") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "structopt") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.4.1") (d #t) (k 0)))) (h "16q417p7vvmwfmy43plr5vzmfkvxyb6cgzafskzfzb8nxpg5zsgp")))

(define-public crate-wasm-smith-0.5.0 (c (n "wasm-smith") (v "0.5.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.5.0") (d #t) (k 0)))) (h "086ipcwn4m4h6i9kiiqiradls7mvnwnz313jahlia88nqvrkpdy0")))

(define-public crate-wasm-smith-0.6.0 (c (n "wasm-smith") (v "0.6.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.6.0") (d #t) (k 0)))) (h "1d1nmq9q45v3gzav7wqsd1rb31ymda0qjp0qki26ixffsj734fzr")))

(define-public crate-wasm-smith-0.7.0 (c (n "wasm-smith") (v "0.7.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.6.0") (d #t) (k 0)))) (h "0xj3v563mbfcnhl4vyhd82qp9pxg3p0b95676fz58ilnacw222p1")))

(define-public crate-wasm-smith-0.7.1 (c (n "wasm-smith") (v "0.7.1") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.6.0") (d #t) (k 0)))) (h "1m4ai9mpkrkdi0h44da9jfix2dzs2mvhb3prlwi8am326n62c2mb")))

(define-public crate-wasm-smith-0.7.2 (c (n "wasm-smith") (v "0.7.2") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.6.0") (d #t) (k 0)))) (h "1jb69z47fihqamf8wmiy08i43bdq6rkzbqsrjqni2hlhzs3gn19b")))

(define-public crate-wasm-smith-0.8.0 (c (n "wasm-smith") (v "0.8.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "wasm-encoder") (r "^0.7.0") (d #t) (k 0)))) (h "1dpjfs47f90shj7sh2bqb66p5m13ivjqwdpkbbl329zfa3h5h124")))

(define-public crate-wasm-smith-0.9.0 (c (n "wasm-smith") (v "0.9.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.9.0") (d #t) (k 0)))) (h "0sgaf7lrnvr6mn03wic2p1ypd6kq789igx5iyvxn5rdhjn32yivw") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.9.1 (c (n "wasm-smith") (v "0.9.1") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.10.0") (d #t) (k 0)))) (h "14vc7gg9pgjbkbz8by4vwp9lyi5jvs92rnkg6a12spwrgnpg3w8v") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.10.0 (c (n "wasm-smith") (v "0.10.0") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.84") (d #t) (k 0)))) (h "1xwfrcacpl20cqilpg8syx1vp8iyilxfmknkvclmx5wg2f617d2h") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.10.1 (c (n "wasm-smith") (v "0.10.1") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.85.0") (d #t) (k 0)))) (h "1g3x3f9666l3492ln2i2flxx9z4disk2hnj0i1nq7662h6f5d1xv") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.0 (c (n "wasm-smith") (v "0.11.0") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.86.0") (d #t) (k 0)))) (h "1va052qqvi906cy8xj199y6pq9sfhzrghmz5g30s7pfc4rpdh3jg") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.1 (c (n "wasm-smith") (v "0.11.1") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.86.0") (d #t) (k 0)))) (h "1fv5hrw3ni71ia9mr929ch24g0vnnlp6dd0nc8sldb2sx1dz4p68") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.2 (c (n "wasm-smith") (v "0.11.2") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.87.0") (d #t) (k 0)))) (h "082mrx59gzsjinvv0jrq4kbha444c7bwfnc5nxky9l213vk50cmp") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.3 (c (n "wasm-smith") (v "0.11.3") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.88.0") (d #t) (k 0)))) (h "016xssb7z4xh2a7p48lla23qsqfqgy7knkgg65w88dn0i7fp4kym") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.4 (c (n "wasm-smith") (v "0.11.4") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.89.0") (d #t) (k 0)))) (h "1ql7r0cvgfppab2gngzwbw8821qxkrhdv4mf7s3y2cb76x181brx") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.5 (c (n "wasm-smith") (v "0.11.5") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.91.0") (d #t) (k 0)))) (h "0y48rm1vh04n73yp1w5rha457z7kjykpgd8a7d2zj3dvkz4sjfkv") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.6 (c (n "wasm-smith") (v "0.11.6") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.92.0") (d #t) (k 0)))) (h "1fpychwmba7mvx583xncar1xnkvfaxqbyv2jgn0yaskn0v8qmy0n") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.7 (c (n "wasm-smith") (v "0.11.7") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.93.0") (d #t) (k 0)))) (h "1mgwwrilp00d8iwz70kgrbhj470vmisnr44yzh04s8b7s5h6d77q") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.8 (c (n "wasm-smith") (v "0.11.8") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.19.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (d #t) (k 0)))) (h "10b8f16lqicg4lxkzh3gl72ab6z04dsgvqmlrqdk22j6i20vnlgk") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.9 (c (n "wasm-smith") (v "0.11.9") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (d #t) (k 0)))) (h "1kzidq21qvy30scvlaighxajfbv113qjcpyny4qazlrl1938yj6a") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.10 (c (n "wasm-smith") (v "0.11.10") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.20.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.96.0") (d #t) (k 0)))) (h "1zac29n230xzsw4qikwdwjzyrs3j14rxysmc54cpg4dn4id3zjp6") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.11 (c (n "wasm-smith") (v "0.11.11") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.21.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.97.0") (d #t) (k 0)))) (h "1zwvsksj4jc7m3nv0800lr9iwnjq0an01byr136zs42xmni6rrq0") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.11.12 (c (n "wasm-smith") (v "0.11.12") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.21.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.98.0") (d #t) (k 0)))) (h "0hym7fpm4x63v7zgx1rgvw7r4lxygjx38rbmcnix014h0xx991pa") (f (quote (("_internal_cli" "serde" "flagset/serde")))) (y #t)))

(define-public crate-wasm-smith-0.11.13 (c (n "wasm-smith") (v "0.11.13") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.98.1") (d #t) (k 0)))) (h "03a1d3vb28gxd0xrmyrpv3awgrm344j43r0qrpqxln7g6sb1za75") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.0 (c (n "wasm-smith") (v "0.12.0") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)))) (h "11mrkcjq5hyhrws4w7g19z9szyyryh5lfngml53dfrgrrzkx18gg") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.1 (c (n "wasm-smith") (v "0.12.1") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.22.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.99.0") (d #t) (k 0)))) (h "09kglxp2x1hyg70kjpqmmw362kmn9j00ms0pzhc1y8yvbajpfqnw") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.2 (c (n "wasm-smith") (v "0.12.2") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.23.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.100.0") (d #t) (k 0)))) (h "013vx49ssqj1vy50hk0x1af1y99qh1bnsv9s58jpl1l9ivp7h4j1") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.3 (c (n "wasm-smith") (v "0.12.3") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.24.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.101.0") (d #t) (k 0)))) (h "0b4n9kr7kb94mxif9lai9x27gl6r0cld6rb4d2yg7afyvsz0h05j") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.4 (c (n "wasm-smith") (v "0.12.4") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.24.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.101.1") (d #t) (k 0)))) (h "0gc9xys0dw933ih7wa837adry2lvrwipssncgwjsfy51b7bihcnb") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.5 (c (n "wasm-smith") (v "0.12.5") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (d #t) (k 0)))) (h "19l5fij1f25snqzfjixqgw98kadndhrp2a208rksshvgwj5vg72l") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.6 (c (n "wasm-smith") (v "0.12.6") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.25.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.103.0") (d #t) (k 0)))) (h "1c78c9js1dvinh9sl8xp5dvypc6i8isj8sla2xynkgkq7z76aj4d") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.7 (c (n "wasm-smith") (v "0.12.7") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.26.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.104.0") (d #t) (k 0)))) (h "1j47jfdaffjx280fbzdjnl5xvmx9c0zpvkmmw99v8pgf8kqlg534") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.8 (c (n "wasm-smith") (v "0.12.8") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.105.0") (d #t) (k 0)))) (h "16alq28pgrqlyvx5qa11q27lcjxhavq4xafqagwz4kvgbxs1rh8k") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.9 (c (n "wasm-smith") (v "0.12.9") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.28.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.106.0") (d #t) (k 0)))) (h "188pcrkqggzhxs6kgr38rwjsibxar8gyd834kx1i6ablg74fw8cf") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.10 (c (n "wasm-smith") (v "0.12.10") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.29.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.107.0") (d #t) (k 0)))) (h "0xkyy7skflci2qf6mmsxjysxsdmia01080lf7g25cpfdf32c2zh2") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.11 (c (n "wasm-smith") (v "0.12.11") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.30.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.108.0") (d #t) (k 0)))) (h "0rq32md4p9xfnpbscpjh7bqy1gfa2vqs04gpkdgd7i091dqq79h9") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.12 (c (n "wasm-smith") (v "0.12.12") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.31.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.109.0") (d #t) (k 0)))) (h "00s16cxmh68n17ab2cndf9xqbd9nam447ls7j7m8gwhazg3c4vvh") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.13 (c (n "wasm-smith") (v "0.12.13") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.31.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.110.0") (d #t) (k 0)))) (h "13i343aymc251nj7crdvrbk49qlfcxvidiziy90hi4yg2hn0k1na") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.14 (c (n "wasm-smith") (v "0.12.14") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.31.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.111.0") (d #t) (k 0)))) (h "0zjm9qsj0la24ah7xsv4ksqk0pf4prmgnzwqhpbvdjlkd1rsza07") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.15 (c (n "wasm-smith") (v "0.12.15") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.32.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.112.0") (d #t) (k 0)))) (h "14wz2c3c0gsxp98y6s3qsrr74fxgpvrshjqib53wmqf37m3q93md") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.16 (c (n "wasm-smith") (v "0.12.16") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.32.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.0") (d #t) (k 0)))) (h "1rk5yd44myqz5h8az19iddd6aaay4shsaj4rz516j5x97y0bs12i") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.17 (c (n "wasm-smith") (v "0.12.17") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.1") (d #t) (k 0)))) (h "1srrfmsdwxp3dc8xaxr0fmzpd0s5140fi4p1fc3mqzpip4nbhjqm") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.18 (c (n "wasm-smith") (v "0.12.18") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (d #t) (k 0)))) (h "16yfx7dqh6yx7vsd9vs2zbv40l0yvzyin33jq468skjvj1p4d6bl") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.19 (c (n "wasm-smith") (v "0.12.19") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.33.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.3") (d #t) (k 0)))) (h "1d13bfbybx2sd96p0kbc89z1v669b6lwnyskc6cfsq82kdzwr2f4") (f (quote (("_internal_cli" "serde" "flagset/serde"))))))

(define-public crate-wasm-smith-0.12.20 (c (n "wasm-smith") (v "0.12.20") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.34.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.114.0") (d #t) (k 0)))) (h "1zfl7bjb2nvaxzrz3wb0n9wldnalfslxqq686v7lavv5xh28ldkw") (f (quote (("_internal_cli" "serde" "serde_derive"))))))

(define-public crate-wasm-smith-0.12.21 (c (n "wasm-smith") (v "0.12.21") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.35.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.115.0") (d #t) (k 0)))) (h "1d34a09y9486gp6b079arinpq14q1fsjqg1k0fglvw5v8g17kxzy") (f (quote (("_internal_cli" "serde" "serde_derive"))))))

(define-public crate-wasm-smith-0.12.22 (c (n "wasm-smith") (v "0.12.22") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.36.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.0") (d #t) (k 0)))) (h "01jbajka1di0hf7qgy6vxvmyf6kgwy9ggfx555dala4k8py7w89r") (f (quote (("_internal_cli" "serde" "serde_derive"))))))

(define-public crate-wasm-smith-0.12.23 (c (n "wasm-smith") (v "0.12.23") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.36.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.116.1") (d #t) (k 0)))) (h "11mxrxvf4hpribcr69mdczk2h24cljqmgncj0h17n4ni6zn5aqj2") (f (quote (("_internal_cli" "serde" "serde_derive"))))))

(define-public crate-wasm-smith-0.12.24 (c (n "wasm-smith") (v "0.12.24") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.37.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.117.0") (d #t) (k 0)))) (h "0wqynnw63k12bjyk2qhlzixa0w24yg83cw14i8i9iad858m696jd") (f (quote (("_internal_cli" "serde" "serde_derive"))))))

(define-public crate-wasm-smith-0.13.0 (c (n "wasm-smith") (v "0.13.0") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.38.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.0") (d #t) (k 2)))) (h "1hp8yap7vz4aiify6qqdpjmmqbzyhzjyrs3v2f32ikb5h5b8bq4f") (f (quote (("_internal_cli" "serde" "serde_derive" "wasmparser"))))))

(define-public crate-wasm-smith-0.13.1 (c (n "wasm-smith") (v "0.13.1") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.38.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.1") (d #t) (k 2)))) (h "17g8b84g1kyhmw1snbsagrv5my91pl2kmq8ikdva30hcjxb3f9sq") (f (quote (("_internal_cli" "serde" "serde_derive" "wasmparser"))))))

(define-public crate-wasm-smith-0.14.0 (c (n "wasm-smith") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.39.0") (f (quote ("wasmparser"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.119.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.119.0") (d #t) (k 2)) (d (n "wat") (r "^1.0.83") (o #t) (d #t) (k 0)))) (h "0nggw0p4cv79fz25kz4vkvm1b4pbmvyp8sr58hbxfnjznyxbn6d4") (f (quote (("_internal_cli" "anyhow" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat"))))))

(define-public crate-wasm-smith-0.15.0 (c (n "wasm-smith") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.40.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.120.0") (d #t) (k 2)) (d (n "wat") (r "^1.0.84") (o #t) (d #t) (k 0)))) (h "19r8149if7adnyg414zr0c9gyi2qhpwq3xwn2zn96bz864n3x02i") (f (quote (("_internal_cli" "anyhow" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.15.1 (c (n "wasm-smith") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.0") (d #t) (k 2)) (d (n "wat") (r "^1.0.85") (o #t) (d #t) (k 0)))) (h "0vbgb5nwa6dkf63yvz02ibjyqv1rmns03k0c26d2jn294gsf992f") (f (quote (("_internal_cli" "anyhow" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.15.2 (c (n "wasm-smith") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0.58") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.1") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.1") (d #t) (k 2)) (d (n "wat") (r "^1.0.86") (o #t) (d #t) (k 0)))) (h "03vqrm3qfz6ppqssxalgw9jfpjx1sbn1sxg3c7q3jnsx86r6pnni") (f (quote (("_internal_cli" "anyhow" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.16.0 (c (n "wasm-smith") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (d #t) (k 2)) (d (n "wat") (r "^1.0.87") (o #t) (d #t) (k 0)))) (h "1i047fp0l95rkp2y5vqk38ybvisajqb6clx1zrjfk2nr73xb7rnn") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.16.1 (c (n "wasm-smith") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.41.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.121.2") (d #t) (k 2)) (d (n "wat") (r "^1.0.88") (o #t) (d #t) (k 0)))) (h "16055465dxxp9b1958ggv47c5s74adjmss1i5gn5dwy3swm7j4cl") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.200.0 (c (n "wasm-smith") (v "0.200.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.200.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.200.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.200.0") (d #t) (k 2)) (d (n "wat") (r "^1.200.0") (o #t) (d #t) (k 0)))) (h "0mczs00g947a2rrbaj6p1xhnlmkk9zr9afxps32jgilk8qnzg52c") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.201.0 (c (n "wasm-smith") (v "0.201.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.201.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.201.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.201.0") (d #t) (k 2)) (d (n "wat") (r "^1.201.0") (o #t) (d #t) (k 0)))) (h "06ixj7hlwrlz6yqjcfy2rmxiwigiacaxnk7p1m5ifgw59ajm7zv1") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.202.0 (c (n "wasm-smith") (v "0.202.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (d #t) (k 2)) (d (n "wat") (r "^1.202.0") (o #t) (d #t) (k 0)))) (h "0qqibmfk6j3ck54m6ybkhh0pmnv3wvq8r0dhv864rvvdqkj8zxac") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.203.0 (c (n "wasm-smith") (v "0.203.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.203.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.203.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.203.0") (d #t) (k 2)) (d (n "wat") (r "^1.203.0") (o #t) (d #t) (k 0)))) (h "1ib78h1acjxicf0wz12zf9b5hfzqlkqi98d8hpb7nqzw5ilsdlnj") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.204.0 (c (n "wasm-smith") (v "0.204.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.204.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.204.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.204.0") (d #t) (k 2)) (d (n "wat") (r "^1.204.0") (o #t) (d #t) (k 0)))) (h "0a53b41gy0z7n3hch813cdmyy76as5vcys96bkqfn54abd1ivzp1") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.205.0 (c (n "wasm-smith") (v "0.205.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.205.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.205.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.205.0") (d #t) (k 2)) (d (n "wat") (r "^1.205.0") (o #t) (d #t) (k 0)))) (h "06jx67q3704kvjpwphyb7v1lcjql6d346rs4qpv16ykg4y9z660j") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.206.0 (c (n "wasm-smith") (v "0.206.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.206.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.206.0") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.206.0") (d #t) (k 2)) (d (n "wat") (r "^1.206.0") (o #t) (d #t) (k 0)))) (h "0kd2sa7vzngl29pp7w98k693b07nn1ykna6w48649kn8x29i4zbr") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.207.0 (c (n "wasm-smith") (v "0.207.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.207.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.207.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wasmparser") (r "^0.207.0") (f (quote ("std"))) (k 2)) (d (n "wat") (r "^1.207.0") (o #t) (d #t) (k 0)))) (h "1bdizl9p8rd4g6xabbnnyzrwgy998h3vmky5hfvxzj85l3c90jv0") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser"))))))

(define-public crate-wasm-smith-0.208.0 (c (n "wasm-smith") (v "0.208.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.208.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wasmparser") (r "^0.208.0") (f (quote ("std"))) (k 2)) (d (n "wat") (r "^1.208.0") (o #t) (d #t) (k 0)))) (h "0b7pyn4bzf54kjvh5j6fi1f8dg6gp2kjsg7wdnyi07rbfzmv9ay9") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser")))) (r "1.76.0")))

(define-public crate-wasm-smith-0.208.1 (c (n "wasm-smith") (v "0.208.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.208.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.208.1") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wasmparser") (r "^0.208.1") (f (quote ("std"))) (k 2)) (d (n "wat") (r "^1.208.1") (o #t) (d #t) (k 0)))) (h "1sgnjj36cjks4ia9ibh0gv3al1bihlf44h8dsr5b7hx1sgksi54c") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser")))) (r "1.76.0")))

(define-public crate-wasm-smith-0.209.0 (c (n "wasm-smith") (v "0.209.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.209.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.0") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wasmparser") (r "^0.209.0") (f (quote ("std"))) (k 2)) (d (n "wat") (r "^1.209.0") (o #t) (d #t) (k 0)))) (h "1n7q0pjhz8zbfvq124jkfp2fqidr4nhaz9zvwi4kalbii6q202bd") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser")))) (r "1.76.0")))

(define-public crate-wasm-smith-0.209.1 (c (n "wasm-smith") (v "0.209.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (k 0)) (d (n "leb128") (r "^0.2.4") (d #t) (k 0)) (d (n "libfuzzer-sys") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.166") (o #t) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.209.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.209.1") (f (quote ("std" "validate"))) (o #t) (k 0)) (d (n "wasmparser") (r "^0.209.1") (f (quote ("std"))) (k 2)) (d (n "wat") (r "^1.209.1") (o #t) (d #t) (k 0)))) (h "1s22dpqmhq0rm8dc4vq2y51qdpy1wp80k0hni9dpp7rhrsv2nj1q") (f (quote (("_internal_cli" "clap" "flagset/serde" "serde" "serde_derive" "wasmparser" "wat")))) (s 2) (e (quote (("wasmparser" "dep:wasmparser" "wasm-encoder/wasmparser")))) (r "1.76.0")))

