(define-module (crates-io wa sm wasmflow-component) #:use-module (crates-io))

(define-public crate-wasmflow-component-0.10.0-beta.4 (c (n "wasmflow-component") (v "0.10.0-beta.4") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmflow-boundary") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-codec") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-invocation") (r "^0.10.0-beta.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmflow-packet") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-streams") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-transport") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "yielding-executor") (r "^0.10.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vi5fndzssa25vqryxrf223vmk9yx61xinc12r8dd9vl78bq0gar") (f (quote (("v1" "wasmflow-boundary/v1") ("guest") ("default"))))))

(define-public crate-wasmflow-component-0.10.0 (c (n "wasmflow-component") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmflow-boundary") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-codec") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-invocation") (r "^0.10.0-beta.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmflow-packet") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-streams") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "wasmflow-transport") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "yielding-executor") (r "^0.10.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1d7d4m6wmild4wiwsn9i22mp9zffzsphh0gwpfgc0a4fx9j9qsh4") (f (quote (("v1" "wasmflow-boundary/v1") ("guest") ("default"))))))

