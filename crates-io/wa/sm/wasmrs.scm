(define-module (crates-io wa sm wasmrs) #:use-module (crates-io))

(define-public crate-wasmrs-0.1.0 (c (n "wasmrs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.1.0") (d #t) (k 0)))) (h "1ahrvmzfv042d5cig630cv2jdcg2gimys6jyy7i4m0shi8wji22j")))

(define-public crate-wasmrs-0.2.0 (c (n "wasmrs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.2.0") (d #t) (k 0)))) (h "1fm279g1503h6qqr5w24k05jgp5lbqxhh8piyifjl69w9a1z4kfx")))

(define-public crate-wasmrs-0.2.1 (c (n "wasmrs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.2.1") (d #t) (k 0)))) (h "0q2v3xb5bkb6lyyx4wiqb134ck2521sk3pkki5z5q85h4favjs4j")))

(define-public crate-wasmrs-0.3.0 (c (n "wasmrs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.3.0") (d #t) (k 0)))) (h "1r33h8gcsamys4dk5yz2drdfs7fycjm83fd71czjm9q37d5z9wpj") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.4.0 (c (n "wasmrs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.4.0") (d #t) (k 0)))) (h "1jvcj64mplcx0l12vm05n1iazz6f6shl6m8gxdl9b8gjj10933r0") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.5.0 (c (n "wasmrs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.5.0") (d #t) (k 0)))) (h "1j1swp7fq3frf6kxwiwdl4qm8q6slrvp40jqb0916fixaiqvqzd8") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.6.0 (c (n "wasmrs") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.6.0") (d #t) (k 0)))) (h "0h5ki3c6k8f14gbb7mnx929z1fcm4ff42sv6hm03wj83qnnrmfbx") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.7.0 (c (n "wasmrs") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.7.0") (d #t) (k 0)))) (h "19bz3bk84zlxcpfy63nkmlxb8ni37dnf34126wv8ll9mbgh3yimx") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.8.0 (c (n "wasmrs") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.8.0") (d #t) (k 0)))) (h "12028xq979m0i5qwxavnhnwa51jklwh6x2lac7qlqdvs67pw5vk3") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.9.0 (c (n "wasmrs") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.9.0") (d #t) (k 0)))) (h "1hm15179rnr05nn2nlzhb083cd1zd9bbxfh02vm68570j94lmx06") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.10.0 (c (n "wasmrs") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.10.0") (d #t) (k 0)))) (h "1lyfw3p7ylkcs7h3655nrm99v7s3v5ha4f971q6jzhvi8jbvb2ns") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.11.0 (c (n "wasmrs") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.11.0") (d #t) (k 0)))) (h "0a492v4nxsw2yfjbjbjkynlkjghysv7k3idngm0zncklxq461vqm") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.12.0 (c (n "wasmrs") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.0") (d #t) (k 0)))) (h "1pvs8giaj6hb9bv5c0hjivqdh07k94d7dlaz0hydb55kca25aff8") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.12.1 (c (n "wasmrs") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.1") (d #t) (k 0)))) (h "0a97v91px210xfy1i5sv2wp81z54wq0gbkp3pkxvp6mjgs4y7y1w") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.13.0 (c (n "wasmrs") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.13.0") (d #t) (k 0)))) (h "10jm3hgsrkp3hs5x8zz5yq67j11ziyyazxhjyxxmx0qrm1rz1sll") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.14.0 (c (n "wasmrs") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.14.0") (d #t) (k 0)))) (h "1aqirwqxj0rb9sa94ag249dfv612vmjkhi3pxm3f9vzg3z53krnr") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.15.0 (c (n "wasmrs") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.15.0") (d #t) (k 0)))) (h "11rf5wwasr83hj33r9h7zkg1wkcsisiviyxd8nis1yk3z0qhwgfd") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.16.0 (c (n "wasmrs") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.0") (d #t) (k 0)))) (h "0xnlmm1g7g85hy25acym4a29phdnbhxdfn93zkgq38spxii7x89d") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.16.1 (c (n "wasmrs") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.1") (d #t) (k 0)))) (h "1z35dk7k43vd04fylk8l8iw1j5cijmz7vv7lw0hqi1fa69mwlblk") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

(define-public crate-wasmrs-0.17.0 (c (n "wasmrs") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "once_cell") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "time" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasmrs-codec") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.17.0") (d #t) (k 0)))) (h "0ld9qf5dhv5wya3kiirv18d328pdr7x36ggzqsma62mpk647idsm") (f (quote (("record-frames" "serde" "wasmrs-frames/serde" "base64" "serde_json" "once_cell") ("print-frames" "record-frames") ("dump-frames" "record-frames") ("default"))))))

