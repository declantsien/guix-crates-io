(define-module (crates-io wa sm wasmrs-guest) #:use-module (crates-io))

(define-public crate-wasmrs-guest-0.1.0 (c (n "wasmrs-guest") (v "0.1.0") (d (list (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.1.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.1.0") (d #t) (k 0)))) (h "1v0l5pavjpf6bqi1qgfg8xf16mlapvl7ddjri73ijc8rj5m98icl")))

(define-public crate-wasmrs-guest-0.2.0 (c (n "wasmrs-guest") (v "0.2.0") (d (list (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.2.0") (d #t) (k 0)))) (h "17sz1x7gig525ya5jn1k21hirjc2d0dmbiz8xwl422lyfv8hvk88")))

(define-public crate-wasmrs-guest-0.2.1 (c (n "wasmrs-guest") (v "0.2.1") (d (list (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.2.1") (d #t) (k 0)))) (h "19xxg5v9jbgav7cjq6apjzl05spkkgc7pbcylyd652qg5y36f8vs")))

(define-public crate-wasmrs-guest-0.3.0 (c (n "wasmrs-guest") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.3.0") (d #t) (k 0)))) (h "08nx580zakdyj6xdyjg7bpg7szfyczg458wbx4p5wyawggn6y201") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.4.0 (c (n "wasmrs-guest") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.4.0") (d #t) (k 0)))) (h "0hq94zc2pn0p9rz5l0hbzw4d7wlbrarq17pp9lb9wawvmkbgaa1n") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.5.0 (c (n "wasmrs-guest") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log" "release_max_level_off"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.5.0") (d #t) (k 0)))) (h "10ayi8g190x1sppv0z8ccb1rn25j09nvzrrrr839rpf52l0g5gyi") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.6.0 (c (n "wasmrs-guest") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.6.0") (d #t) (k 0)))) (h "0ca3rn6xb90cpr859n9rrqafflai4q1y3cpgjpyz9i83ic6csysx") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.7.0 (c (n "wasmrs-guest") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.7.0") (d #t) (k 0)))) (h "09i24164y6vabghpkxfsjsr0b8lclrbgsr7k4n907zk7wj655i21") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.8.0 (c (n "wasmrs-guest") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.8.0") (d #t) (k 0)))) (h "0b0wkqnrd6z3z4c37d0rx9j66s8px6vf0raiqqn0nwyvll590syq") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.9.0 (c (n "wasmrs-guest") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.9.0") (d #t) (k 0)))) (h "0afwa0574xmzav51y5b57kqryjikad4jd8qxn8z2ggq4l0dkrkky") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.10.0 (c (n "wasmrs-guest") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.10.0") (d #t) (k 0)))) (h "19dv6fvbxb9w6p7hfml3i7zhyna6184d9f4cdi7c10bi4nn3gybw") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log") ("default"))))))

(define-public crate-wasmrs-guest-0.11.0 (c (n "wasmrs-guest") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.11.0") (d #t) (k 0)))) (h "1vcspg6p3ak6y9hd0mvn39h8r756fc6am8wjrf85aayb4mpg0g3z") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.12.0 (c (n "wasmrs-guest") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.0") (d #t) (k 0)))) (h "1wsc27ids70634wmn85mn7wp87fdriihmi9600xdjlb2x6xja45y") (f (quote (("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.12.1 (c (n "wasmrs-guest") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.1") (d #t) (k 0)))) (h "1762ar20c7bfhvx482idvxvr98kmv5mr01jn87gw9ny8gb9asqyg") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.13.0 (c (n "wasmrs-guest") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.13.0") (d #t) (k 0)))) (h "1kgck7bgac2rmg80n4hw1xx1k32b99kia3hc8h8rnwrwlw7cj2ym") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.14.0 (c (n "wasmrs-guest") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.14.0") (d #t) (k 0)))) (h "05ln276jl3lgrgy1v0d76byayja5s75zysy9wfgg2n5pjrxfh3y8") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.15.0 (c (n "wasmrs-guest") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.15.0") (d #t) (k 0)))) (h "0k404nli7whwkm4nrki82nlljqr5iyci1b4yqnqdqjnnjv9dxvd0") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.16.0 (c (n "wasmrs-guest") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.0") (d #t) (k 0)))) (h "1gfan0gx1m791ffwrl5xhj7a2zk3vhjm48nbhs7gv87qy3lk64mc") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.16.1 (c (n "wasmrs-guest") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.1") (d #t) (k 0)))) (h "043pqpchn00n7v00h6yd78065qq1a7zxqd852y3b9l1r1b8870jg") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

(define-public crate-wasmrs-guest-0.17.0 (c (n "wasmrs-guest") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (k 2)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (k 0)) (d (n "wasmrs") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-frames") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-runtime") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.17.0") (d #t) (k 0)))) (h "1yf4lx8ch8ph2h92346x5n779dbgdf4byrznqwcg3794hlwpw7h4") (f (quote (("std" "wasmrs-codec/std") ("record-frames" "wasmrs/record-frames") ("logging" "env_logger" "log" "wasmrs-runtime/logging") ("default"))))))

