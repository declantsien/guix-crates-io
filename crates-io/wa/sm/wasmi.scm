(define-module (crates-io wa sm wasmi) #:use-module (crates-io))

(define-public crate-wasmi-0.0.0 (c (n "wasmi") (v "0.0.0") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.20") (d #t) (k 0)) (d (n "wabt") (r "^0.1.2") (d #t) (k 2)))) (h "0b0idc50dmahcdczqlwl24bs6j1d07j5jg0s8w3kqs59pl30pc3m")))

(define-public crate-wasmi-0.1.0 (c (n "wasmi") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.27") (d #t) (k 0)) (d (n "wabt") (r "~0.2.2") (d #t) (k 2)))) (h "14jrsmnszfrsydhxy1zps71flzi25x7s8s4y54i32rasr7qdw1ms") (f (quote (("opt-in-32bit"))))))

(define-public crate-wasmi-0.1.1 (c (n "wasmi") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.27") (d #t) (k 0)) (d (n "wabt") (r "~0.2.2") (d #t) (k 2)))) (h "1iz8hzs1wmkiyaxrhaz78379kbnmv5i5gl1fn4hij7mspx6gpv8d") (f (quote (("opt-in-32bit"))))))

(define-public crate-wasmi-0.1.2 (c (n "wasmi") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.27") (d #t) (k 0)) (d (n "wabt") (r "~0.2.2") (d #t) (k 2)))) (h "0dbw0r2frns9mpbk5xraxb374j76ngi96b2xg9ch9vnanyz0vci6") (f (quote (("opt-in-32bit"))))))

(define-public crate-wasmi-0.1.3 (c (n "wasmi") (v "0.1.3") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.27") (d #t) (k 0)) (d (n "wabt") (r "~0.2.2") (d #t) (k 2)))) (h "1nxvjn6lf9l064l3spfpcqk92ff77ixkb67msmd96iwjnl8ab7fi") (f (quote (("opt-in-32bit"))))))

(define-public crate-wasmi-0.2.0 (c (n "wasmi") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "nan-preserving-float") (r "^0.1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.27") (d #t) (k 0)) (d (n "wabt") (r "^0.2.3") (d #t) (k 2)))) (h "0j7kgki2c4iq1rb06yx181a2870wm10garsn1mcqzk987iwpdps6")))

(define-public crate-wasmi-0.2.1 (c (n "wasmi") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "nan-preserving-float") (r "^0.1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (d #t) (k 0)) (d (n "wabt") (r "^0.3") (d #t) (k 2)))) (h "0jlbpjy55bp4h5w8cwv0fy35hrljhrjsxhciq49nyil2wipznv87")))

(define-public crate-wasmi-0.3.0 (c (n "wasmi") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "nan-preserving-float") (r "^0.1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (d #t) (k 0)) (d (n "wabt") (r "^0.3") (d #t) (k 2)))) (h "1qy13rmz5f6zcccl3v6q674wg18w93r8fnicynqv2clkkqvnsjlv")))

(define-public crate-wasmi-0.4.0 (c (n "wasmi") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "nan-preserving-float") (r "^0.1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (d #t) (k 0)) (d (n "wabt") (r "^0.4") (d #t) (k 2)))) (h "1a25aap1i86q847v1z18xcn9hbngn76qrkfxsmfg4mjaskyy6bsj")))

(define-public crate-wasmi-0.4.1 (c (n "wasmi") (v "0.4.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "nan-preserving-float") (r "^0.1.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (d #t) (k 0)) (d (n "wabt") (r "^0.4") (d #t) (k 2)))) (h "0lwln6fgm8j25d9274xglxpbbp0lfcckrmzqfipk2c0z12vw916i")))

(define-public crate-wasmi-0.4.2 (c (n "wasmi") (v "0.4.2") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)))) (h "06jgx0jqdj79822cij5d1xs80ql0d3b0s821xlkpqazzii8bjq4a") (f (quote (("std" "parity-wasm/std" "byteorder/std") ("default" "std") ("core" "hashmap_core" "libm"))))))

(define-public crate-wasmi-0.4.3 (c (n "wasmi") (v "0.4.3") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)))) (h "07bxnivlqbc74kw4k78fqfjjsa16iiwphg31rxld87nz25x4ivr1") (f (quote (("std" "parity-wasm/std" "byteorder/std") ("default" "std") ("core" "hashmap_core" "libm"))))))

(define-public crate-wasmi-0.4.4 (c (n "wasmi") (v "0.4.4") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)))) (h "0n47d8a0wj5xvgrr7l78wp99rvqif82lmj3cnrpzksbrbjs93a7n") (f (quote (("std" "parity-wasm/std") ("default" "std") ("core" "hashbrown/nightly" "libm"))))))

(define-public crate-wasmi-0.4.5 (c (n "wasmi") (v "0.4.5") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.1") (k 0)))) (h "12z78w2bicl2m6f75zwh1swb39sd0agw9j27bix1a3c4f3saxfxf") (f (quote (("std" "parity-wasm/std" "wasmi-validation/std") ("default" "std") ("core" "wasmi-validation/core" "hashbrown/nightly" "libm"))))))

(define-public crate-wasmi-0.4.6 (c (n "wasmi") (v "0.4.6") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.1") (k 0)))) (h "0i5x0ap7f89hi51s81bx14hzz06zc808li0fjwsfn13ikcsvn38c") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "wasmi-validation/core" "libm")))) (y #t)))

(define-public crate-wasmi-0.5.0 (c (n "wasmi") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.31") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.1") (k 0)))) (h "1akgnlzi4rnads33w08i8jhddf15r3d6flqcqn9sb9j0dm97qhs8") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "wasmi-validation/core" "libm"))))))

(define-public crate-wasmi-0.5.1 (c (n "wasmi") (v "0.5.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.40.1") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.6") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.2") (k 0)))) (h "04w3aad8zj8kbq1qkfimjysfl16n7v7fs86lzrn7x8yrnbg2c7gk") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "vec_memory" "wasmi-validation/core" "libm"))))))

(define-public crate-wasmi-0.6.0 (c (n "wasmi") (v "0.6.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.3") (k 0)))) (h "1gs6dpw8fy8sli6vmk8l5nmgzkl7v9xpj2xi77jvmv4s8ghfzfsq") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "vec_memory" "wasmi-validation/core" "libm"))))))

(define-public crate-wasmi-0.6.1 (c (n "wasmi") (v "0.6.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "errno") (r "^0.2.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.3") (k 0)))) (h "1rd61kn9915z6fwkyv6s7wdfinq93rw60yq0avvv2c11p19xpyyw") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "vec_memory" "wasmi-validation/core" "libm"))))))

(define-public crate-wasmi-0.6.2 (c (n "wasmi") (v "0.6.2") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmi-validation") (r "^0.3") (k 0)))) (h "1zrar5hmrj6hq18f0mvdhxn0chd5mbvjjmblma3kbbr59n37sqdz") (f (quote (("vec_memory") ("std" "parity-wasm/std" "wasmi-validation/std" "num-rational/std" "num-traits/std") ("default" "std") ("core" "vec_memory" "wasmi-validation/core" "libm"))))))

(define-public crate-wasmi-0.7.0 (c (n "wasmi") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "validation") (r "^0.3") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "1i46zkdb8dxn32bc6fizf4cqfmlv9gcc5d5di5bi0ir1kdfq5djb") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

(define-public crate-wasmi-0.8.0 (c (n "wasmi") (v "0.8.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "validation") (r "^0.3") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "0hi3d7ndfsyxyhxdvqm49djgv8fj5wzfypjr7ski041y2mjy5mss") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

(define-public crate-wasmi-0.9.0 (c (n "wasmi") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.42.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "validation") (r "^0.4") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "0nksvpnvg3v780dw6qwanp9294zgl90kk2br41jr9nfilfxhbvnj") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

(define-public crate-wasmi-0.9.1 (c (n "wasmi") (v "0.9.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.42.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "validation") (r "^0.4") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "0pbrxg8fzac6pgwv74ycr7i6qmhyqfzfv8613v4qx6iighaca06a") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

(define-public crate-wasmi-0.10.0 (c (n "wasmi") (v "0.10.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("num-bigint"))) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.42.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "region") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "validation") (r "^0.4") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "1cdddhjsjs3ghx032zrh80y3kml310vppi0iqkh5il3fp759z483") (f (quote (("virtual_memory" "region" "std") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" "downcast-rs/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std"))))))

(define-public crate-wasmi-0.11.0 (c (n "wasmi") (v "0.11.0") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("num-bigint"))) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.42.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "region") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "validation") (r "^0.4") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "1gqna8x5ga3qglmnr2xvvwlbkl125w0ckhhqmx2ckmp4k27vag0a") (f (quote (("virtual_memory" "region" "std") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" "downcast-rs/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std"))))))

(define-public crate-wasmi-0.12.0 (c (n "wasmi") (v "0.12.0") (d (list (d (n "parity-wasm") (r "^0.45.0") (k 0)) (d (n "validation") (r "^0.4.2") (k 0) (p "wasmi-validation")) (d (n "wasmi_core") (r "^0.2") (k 0)))) (h "0rpjm6xxdarpy3ynv4s66sln0217v8k4jlnasp0446x90lz9m22i") (f (quote (("virtual_memory" "wasmi_core/virtual_memory" "std") ("std" "wasmi_core/std" "parity-wasm/std" "validation/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.13.0 (c (n "wasmi") (v "0.13.0") (d (list (d (n "parity-wasm") (r "^0.45.0") (k 0)) (d (n "validation") (r "^0.5.0") (k 0) (p "wasmi-validation")) (d (n "wasmi_core") (r "^0.2") (k 0)))) (h "11w7sfl5bz369mxkbg3100pg07c5i46xhl4iqppaz6na371b64zw") (f (quote (("virtual_memory" "wasmi_core/virtual_memory" "std") ("std" "wasmi_core/std" "parity-wasm/std" "validation/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std"))))))

(define-public crate-wasmi-0.14.0 (c (n "wasmi") (v "0.14.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_core") (r "^0.2") (k 0)) (d (n "wasmparser") (r "^0.83") (k 0) (p "wasmparser-nostd")))) (h "132j8l9x41bap5ar5k3lwv88hxabaxkqqj84rcq4zj855kfg0wxf") (f (quote (("virtual_memory" "wasmi_core/virtual_memory" "std") ("std" "wasmi_core/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.15.0 (c (n "wasmi") (v "0.15.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_core") (r "^0.3") (k 0)) (d (n "wasmparser") (r "^0.83") (k 0) (p "wasmparser-nostd")))) (h "1kcwc1f4z94bb5c4bwagm3nvqyy2srh1lhw2n2c251452xzw9ac1") (f (quote (("std" "wasmi_core/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.16.0 (c (n "wasmi") (v "0.16.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_core") (r "^0.3") (k 0)) (d (n "wasmparser") (r "^0.90") (k 0) (p "wasmparser-nostd")))) (h "1qwlana2d85pqp5bdpz11zbpr24grc79z9fh4x25wfm6yjlw8i4j") (f (quote (("std" "wasmi_core/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.13.1 (c (n "wasmi") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.45.0") (k 0)) (d (n "validation") (r "^0.5.0") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmi_core") (r "^0.2") (k 0)) (d (n "wast") (r "^44.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0lnq1ji623gw2x5f2wldprns4kdwl2ca5xxyx5hxg88g6jhk14ik") (f (quote (("virtual_memory" "wasmi_core/virtual_memory" "std") ("std" "wasmi_core/std" "parity-wasm/std" "validation/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.13.2 (c (n "wasmi") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.45.0") (k 0)) (d (n "validation") (r "^0.5.0") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmi_core") (r "^0.2.1") (k 0)) (d (n "wast") (r "^44.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "08llcvbb8w3hfdaqn6ys17qlqx9iba92q6in12b431mz7z4jdhq6") (f (quote (("virtual_memory" "wasmi_core/virtual_memory" "std") ("std" "wasmi_core/std" "parity-wasm/std" "validation/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std"))))))

(define-public crate-wasmi-0.17.0 (c (n "wasmi") (v "0.17.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_core") (r "^0.4") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "1bgmaxnfjmk5y31llgx918zy6sgv7zz84p93abb6ibjs8wvncg7i") (f (quote (("std" "wasmi_core/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.18.0 (c (n "wasmi") (v "0.18.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_core") (r "^0.4") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "1qg7rh52n4iqh3g79xyi3map5w302yybh4y2vp4023da1pkl07b9") (f (quote (("std" "wasmi_core/std" "wasmparser/std" "spin/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.18.1 (c (n "wasmi") (v "0.18.1") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_arena") (r "^0.1") (k 0)) (d (n "wasmi_core") (r "^0.4") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "0psb21v4g3lzr4mcrlrnibdd6vqdgh963hx3vzkyvyj3xgpwspvm") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.19.0 (c (n "wasmi") (v "0.19.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_arena") (r "^0.1") (k 0)) (d (n "wasmi_core") (r "^0.4") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "06i2213ggm0wkfmmlxbwn20r78ml2i06gb91jbxazlqr3qvfha3l") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.20.0 (c (n "wasmi") (v "0.20.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex"))) (k 0)) (d (n "wasmi_arena") (r "^0.1") (k 0)) (d (n "wasmi_core") (r "^0.5") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "0a8pj21aadwpniifhmlcs7ick9i6bv0z6ysslwm957ganbnm1gq1") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.21.0 (c (n "wasmi") (v "0.21.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.2") (k 0)) (d (n "wasmi_core") (r "^0.6") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "0mvmd14kpvr7m7gxx560gnf7p3aasz2g0jljhff8zfaf5bhha5pa") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.22.0 (c (n "wasmi") (v "0.22.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.3") (k 0)) (d (n "wasmi_core") (r "^0.7") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "05h4c270aiazcamjpq7ch3n245k553xf87gbh29ss05f61xwklg8") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.23.0 (c (n "wasmi") (v "0.23.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.3") (k 0)) (d (n "wasmi_core") (r "^0.8") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "109vi2g6cizzk715hcc8gdzhrpdqx8qd10j6c8rz0p38kb3xjh6r") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.24.0 (c (n "wasmi") (v "0.24.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.9") (k 0)) (d (n "wasmparser") (r "^0.91") (k 0) (p "wasmparser-nostd")))) (h "0bj3rj04h5cm3f8phd3hjglmg98hh758h5mqp7sqxpb0h7ydy30a") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.25.0 (c (n "wasmi") (v "0.25.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.10") (k 0)) (d (n "wasmparser") (r "^0.99") (k 0) (p "wasmparser-nostd")))) (h "1zkin4cdy0b5wx4jigmh0i30bcf5k4n4jqn260hzl4x3jz7hqwv7") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.26.0 (c (n "wasmi") (v "0.26.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.11") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "0cww302k56ayyqpsly678cj2r2zk3yykg7hwl2sn3xfcnpnikbf8") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.26.1 (c (n "wasmi") (v "0.26.1") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.11") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "1n1jwk06hk6anr30prr1cppgskid9i7s6grh7xc25k7ahagkwr9m") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.27.0 (c (n "wasmi") (v "0.27.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.11") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "0z2lqr9p1z05z352am4az1wky94m09lzgx0d0x6ql64c24pdsgzx") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.28.0 (c (n "wasmi") (v "0.28.0") (d (list (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.12") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "0njnp6xjzj1igy1b47q6h3g51cx1bjnzvp78pgv29pqgdc0afqcf") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.29.0 (c (n "wasmi") (v "0.29.0") (d (list (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.12") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "0a08dxa4yl4b0lc3mrla69pi4xvp8p3aydqivbdbm0b82sqn0wb7") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.30.0 (c (n "wasmi") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "intx") (r "^0.1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.12") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^52.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1d373msszbh79z372r7d77na6k37y8yqdfzmmdc13rwk373ba7z5") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.31.0 (c (n "wasmi") (v "0.31.0") (d (list (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.13") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")))) (h "0ic9x94h140i71f0im27lcb8fyahzkpcns34mva42482h3diwd0z") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.31.1 (c (n "wasmi") (v "0.31.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.13") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^62.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0xmzp3bcbcf918zf4rrmwb3z6ivji0jmjc8a0wnm7jin98w1xz5c") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.0 (c (n "wasmi") (v "0.32.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.14") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0zdxns2i34whngcy0ndk4h8w319by7kzqxlzvmgm5y366f451y42") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.1 (c (n "wasmi") (v "0.32.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "17m970sbs921q2iasp6mgl27bbhxm3avqlwy0fmy9npb58rdkanh") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.2 (c (n "wasmi") (v "0.32.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1gbyfzjibwn34dw5sn52d85izc0aal417r7g8xgj5pfsnkshdass") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.3 (c (n "wasmi") (v "0.32.0-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1v2k0z4arpjywxhslqh6sayby9nfrnm7lh787sl8hbh0mv0rckbg") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.4 (c (n "wasmi") (v "0.32.0-beta.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0hjdnaybw5zc062gidsqwl069nnllzfyiqbka08bk3bg4l0dds9q") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.5 (c (n "wasmi") (v "0.32.0-beta.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^64.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1c3q0fa3si1yki4x2x4yc5ir16kzf9pz006sn4awx1y33i9jx5kb") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.31.2 (c (n "wasmi") (v "0.31.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4.1") (k 0)) (d (n "wasmi_core") (r "^0.13") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^62.0") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1isnchb3vd6cndfrjfiql6nhq9qcvnfzlgkaqxady3363lfjia3p") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std") ("default" "std"))))))

(define-public crate-wasmi-0.32.0-beta.6 (c (n "wasmi") (v "0.32.0-beta.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.4") (k 0)) (d (n "wasmi_core") (r "^0.15") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0nbp8schn9wmg47488a6vhpcisa5hwim4zimc4jm990pr4kh6c7y") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.7 (c (n "wasmi") (v "0.32.0-beta.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "slice-group-by") (r "^0.3") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5") (k 0)) (d (n "wasmi_core") (r "^0.16") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1w2y8c8c0fqa0chqysbzj2hl19g8kx03p7y35r0wgprv6xd25bi0") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "slice-group-by/std" "arrayvec/std") ("default" "std")))) (y #t)))

(define-public crate-wasmi-0.32.0-beta.8 (c (n "wasmi") (v "0.32.0-beta.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5.0") (k 0)) (d (n "wasmi_core") (r "^0.17.0") (k 0)) (d (n "wasmparser") (r "^0.100.1") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1cgjbzv7f30x3v82hcd436djr4iq2fy1n1wgvdcpmj3hjmgjmir5") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.9 (c (n "wasmi") (v "0.32.0-beta.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5.0") (k 0)) (d (n "wasmi_core") (r "^0.18.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0l5yx8ppdvqk0cl3qfd2mps19d5bzg2l5fp7zz1b2v13xgzp9x8w") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.10 (c (n "wasmi") (v "0.32.0-beta.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5.0") (k 0)) (d (n "wasmi_core") (r "^0.19.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1fxrzs57h0hrd8qvkrrbidp33r9fd7ni76z96gn16v2l2ywp3kmz") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.11 (c (n "wasmi") (v "0.32.0-beta.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5.0") (k 0)) (d (n "wasmi_core") (r "^0.19.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "036bcihd3x358zpfqg64cgdwz966d0v7dd0gnrkhxy122c9fjhyb") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.12 (c (n "wasmi") (v "0.32.0-beta.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_arena") (r "^0.5.0") (k 0)) (d (n "wasmi_core") (r "^0.19.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0vl94ykcp6dih8l7hwdrb1174amxizg2s6sbww401slx8xhbpfqp") (f (quote (("std" "wasmi_core/std" "wasmi_arena/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.13 (c (n "wasmi") (v "0.32.0-beta.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.1.0") (k 0)) (d (n "wasmi_core") (r "^0.20.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1rnpsxfq049g7s0mby7j6zvr14y1acmd902iigr42w5sqc9f3x0a") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.14 (c (n "wasmi") (v "0.32.0-beta.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0-beta.14") (k 0)) (d (n "wasmi_core") (r "^0.32.0-beta.14") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0a4andzpsilz5wn6qfjs4k1blzcj413jcb07sf7vi5mddgwarsf4") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.15 (c (n "wasmi") (v "0.32.0-beta.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0-beta.15") (k 0)) (d (n "wasmi_core") (r "^0.32.0-beta.15") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1aqmv9b1299xfr6sblnmqgi11agxnpm40vj26j13ibvcahg1aw5n") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.16 (c (n "wasmi") (v "0.32.0-beta.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0-beta.16") (k 0)) (d (n "wasmi_core") (r "^0.32.0-beta.16") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "12zdkdyb6kgi9fpqalin3qxh56kh8c7ng6vpax59ayzm9xi7q6c9") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.17 (c (n "wasmi") (v "0.32.0-beta.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0-beta.17") (k 0)) (d (n "wasmi_core") (r "^0.32.0-beta.17") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "05hmhjxaqc177qd5hkk6232liy2q1w6l6bp5l0b63f441nr36mz9") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0-beta.18 (c (n "wasmi") (v "0.32.0-beta.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0-beta.18") (k 0)) (d (n "wasmi_core") (r "^0.32.0-beta.18") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0q0c8yzxl2f6h559aydgxgy3wawnpjd54qsrqwql4zr7v2pghsqg") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (y #t) (r "1.77")))

(define-public crate-wasmi-0.32.0 (c (n "wasmi") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "multi-stash") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "smallvec") (r "^1.13.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "spin") (r "^0.9") (f (quote ("mutex" "spin_mutex" "rwlock"))) (k 0)) (d (n "wasmi_collections") (r "^0.32.0") (k 0)) (d (n "wasmi_core") (r "^0.32.0") (k 0)) (d (n "wasmparser") (r "^0.100.2") (k 0) (p "wasmparser-nostd")) (d (n "wast") (r "^70.0.2") (d #t) (k 2)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0xi4dq2a6ajqxy60mz0pfai8svw5bv63n1fjhczz45sxyrr9p6cb") (f (quote (("std" "wasmi_core/std" "wasmi_collections/std" "wasmparser/std" "spin/std" "num-traits/std" "arrayvec/std") ("no-hash-maps" "wasmi_collections/no-hash-maps") ("default" "std")))) (r "1.77")))

