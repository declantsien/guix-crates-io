(define-module (crates-io wa sm wasmrs-wasmtime) #:use-module (crates-io))

(define-public crate-wasmrs-wasmtime-0.1.0 (c (n "wasmrs-wasmtime") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.1.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.1.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.1.0") (d #t) (k 0)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "09jsq69klwl2n8w7s604l69hdlvnv5h3d78b7vfh7qmfxmslavx0") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.2.0 (c (n "wasmrs-wasmtime") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "0dpici29g6vsqvryyj7rcl8a0rfkcwyh48g7hv7dcp6kbq11y2fp") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.2.1 (c (n "wasmrs-wasmtime") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.2.1") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.2.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.2.1") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1a2r9iivy6splyfgyv6wp9i5y5jhajq90vwb78ap5y316dz4lzxv") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.3.0 (c (n "wasmrs-wasmtime") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.3.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "09hadbzfagr2f82q0rl41d7hg6rqc6nj839xs6x56jhqrw936sda") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.4.0 (c (n "wasmrs-wasmtime") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.4.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.4.0") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "0ialblmnwpccji8laa4481b5b9m17n0jwanavn06wmm2rvc7k854") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.5.0 (c (n "wasmrs-wasmtime") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.5.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.5.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.5.0") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^4.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "0kizavwf6ifvhx9nlgf1nly2vib1snsczq2ij43j53i3b459pv79") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.7.0 (c (n "wasmrs-wasmtime") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.7.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.7.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1919glhnyid1vav0zr8y139s3ympj72g0k8cgha9153q1rdd41xd") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.8.0 (c (n "wasmrs-wasmtime") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.8.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.8.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1ks8l3zapizq4gjkyl18s659f086bjm2m2n300jihws3iqrmb76s") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.9.0 (c (n "wasmrs-wasmtime") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.9.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.9.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1pjzzj7qx5qrfi2gdi6lvby6fvflgy2pn8ckhzgnydgq5wv076pv") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.10.0 (c (n "wasmrs-wasmtime") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.10.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.10.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1njgg51ny1jsybxi5vaham9l95xk7aq7ww81ypa4nbslahlv41k2") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.11.0 (c (n "wasmrs-wasmtime") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.11.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.11.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1d7qw9ghy7snhij3dz4msc0mk7b76a6w8599gsk342pds1cy0kb7") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.12.0 (c (n "wasmrs-wasmtime") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.12.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.0") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "06qvgak2v8m0nwnajgshd8gwzwd2b8hmbw94k3ivfw4vkdxmrgyr") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.12.1 (c (n "wasmrs-wasmtime") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.12.1") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.12.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.12.1") (d #t) (k 2)) (d (n "wasmtime") (r "^7.0.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^7.0.0") (f (quote ("sync"))) (d #t) (k 0)))) (h "1nx9wcwvyv1krydad11aca75pbmdnzaw4lwy956ikm4q1sss3j95") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.13.0 (c (n "wasmrs-wasmtime") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^10.0.1") (d #t) (k 0)) (d (n "wasmrs") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.13.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.13.0") (d #t) (k 2)) (d (n "wasmtime") (r "^10.0.1") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^10.0.1") (f (quote ("sync"))) (d #t) (k 0)))) (h "1jgzb0gwg5138sxc56sh30xw1z61bs0j6lx7a5g0g38mi0rqfdvf") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.14.0 (c (n "wasmrs-wasmtime") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^11.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.14.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.14.0") (d #t) (k 2)) (d (n "wasmtime") (r "^11.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^11.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "0zfic6kmsdvxji1yxkqn4ws3zbcqvgkfk1dpldrr56nx0g7rmgfa") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.14.1 (c (n "wasmrs-wasmtime") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^11.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.14.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.14.0") (d #t) (k 2)) (d (n "wasmtime") (r "^11.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^11.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "1x9a84m8l3kn63waghrs59fpq9rs2rk6lm831h46m5sny0ldax4z") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.15.0 (c (n "wasmrs-wasmtime") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^11.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.15.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.15.0") (d #t) (k 2)) (d (n "wasmtime") (r "^11.0") (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^11.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "0bvblwx3833npmyg9g4zji9prcbam0n6m9s0l59g6476gx2zg6k1") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.16.0 (c (n "wasmrs-wasmtime") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^13.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.16.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.0") (d #t) (k 2)) (d (n "wasmtime") (r "^13.0") (f (quote ("async" "async"))) (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^13.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "1wpn2a23g6y0rrl3kdf9aymjalliwf9gzwrqfrqdzms4fmjh3wgw") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.16.1 (c (n "wasmrs-wasmtime") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^13.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.16.1") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.16.1") (d #t) (k 2)) (d (n "wasmtime") (r "^13.0") (f (quote ("async" "async"))) (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^13.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "09z5kcnjfcpz7iklvxg00w1dsbh4njri69hfla1yp2fc6cw52h81") (f (quote (("profiler") ("default"))))))

(define-public crate-wasmrs-wasmtime-0.17.0 (c (n "wasmrs-wasmtime") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.2") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "serde") (r "^1") (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wasi-common") (r "^13.0") (d #t) (k 0)) (d (n "wasmrs") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.17.0") (d #t) (k 2)) (d (n "wasmrs-host") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.17.0") (d #t) (k 2)) (d (n "wasmtime") (r "^13.0") (f (quote ("async" "async"))) (d #t) (k 0)) (d (n "wasmtime-wasi") (r "^13.0") (f (quote ("sync" "sync"))) (d #t) (k 0)))) (h "16yi2a67ixas1jrk67fbpxwbx6995ccfsnrgh2ql303d1aprwgfr") (f (quote (("profiler") ("default"))))))

