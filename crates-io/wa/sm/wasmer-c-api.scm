(define-module (crates-io wa sm wasmer-c-api) #:use-module (crates-io))

(define-public crate-wasmer-c-api-1.0.0-alpha3 (c (n "wasmer-c-api") (v "1.0.0-alpha3") (d (list (d (n "cbindgen") (r "^0.14.3") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (k 0)) (d (n "libffi") (r "^0.9") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-alpha3") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha3") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-alpha3") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha3") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-alpha3") (o #t) (d #t) (k 0)))) (h "0x818plj4h0lw0hgi0vm8lav3bp2zrr78b19pjgvhls06jv3zv35") (f (quote (("wasi" "wasmer-wasi" "typetag" "serde") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("ignore-wasm-c-api") ("engine") ("default" "cranelift" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0-alpha4 (c (n "wasmer-c-api") (v "1.0.0-alpha4") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (k 0)) (d (n "libffi") (r "^0.9") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-alpha4") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha4") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-alpha4") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha4") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-alpha4") (o #t) (d #t) (k 0)))) (h "0894dgvshwmzryc6acr2jnimyvz0lg5j9vfrcdiz6in1hag56jhg") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("default" "wat" "cranelift" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0-alpha5 (c (n "wasmer-c-api") (v "1.0.0-alpha5") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^0.9") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-alpha5") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha5") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-alpha5") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha5") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-alpha5") (o #t) (d #t) (k 0)))) (h "1yqg5riv5wds2lpcqjdwpc2bswhinqvvslqq715vizljiaiaa3fx") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("default" "wat" "cranelift" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0-beta1 (c (n "wasmer-c-api") (v "1.0.0-beta1") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-beta1") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-beta1") (o #t) (d #t) (k 0)))) (h "1dwbybgydyfshr965sds797qyzdsn2zh7xm87q0d448gaqb26xxa") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0-beta2 (c (n "wasmer-c-api") (v "1.0.0-beta2") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-beta2") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-beta2") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-beta2") (o #t) (d #t) (k 0)))) (h "1dmxdwjqb23m8qra9pvhjcdyb26i2ac8scw3vql67dsrllkr31y9") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0-rc1 (c (n "wasmer-c-api") (v "1.0.0-rc1") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0-rc1") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0-rc1") (o #t) (d #t) (k 0)))) (h "1br4i53xbfaprqvs8wjyqvjyq15hp7g36xh7hpibsn7iirichs42") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "jit" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.0 (c (n "wasmer-c-api") (v "1.0.0") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.0") (k 0)) (d (n "wasmer-compiler") (r "^1.0.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.0") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "0xgk7qg0r3wlk3f9ygf8vz5896qikq9157zjni0qjr3iawv7cgr7") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "jit" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.1 (c (n "wasmer-c-api") (v "1.0.1") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.1") (k 0)) (d (n "wasmer-compiler") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.1") (o #t) (d #t) (k 0)))) (h "1zajf74xsbk4mkazkhnrz1qqgc0w9pra0izs4m7ailxj1b5x7ycz") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "jit" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-1.0.2 (c (n "wasmer-c-api") (v "1.0.2") (d (list (d (n "cbindgen") (r "^0.15") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "inline-c") (r "^0.1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "libffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^1.0.2") (k 0)) (d (n "wasmer-compiler") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "08z4j4cbj2ymwq0s5cc2fyd7cy7c7f482wpajsy4ppxxv8pmfl8y") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("system-libffi" "libffi/system") ("singlepass-backend" "singlepass") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm-backend" "llvm") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated" "libffi") ("default" "deprecated" "wat" "cranelift" "jit" "wasi") ("cranelift-backend" "cranelift") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler"))))))

(define-public crate-wasmer-c-api-2.0.0-rc1 (c (n "wasmer-c-api") (v "2.0.0-rc1") (d (list (d (n "cbindgen") (r "^0.18") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^2.0.0-rc1") (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.0.0-rc1") (o #t) (d #t) (k 0)))) (h "0d5ypbiwkv11hawz4kh911rwsh1lg1ckz75d20ds1zh1vclbza1x") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.0.0-rc2 (c (n "wasmer-c-api") (v "2.0.0-rc2") (d (list (d (n "cbindgen") (r "^0.18") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^2.0.0-rc2") (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.0.0-rc2") (o #t) (d #t) (k 0)))) (h "0bcp6bl30bgkvlvy7d7fv7pm3vglnhmg59pw4sfv1gnz3aszfc26") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.0.0 (c (n "wasmer-c-api") (v "2.0.0") (d (list (d (n "cbindgen") (r "^0.18") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "^2.0.0") (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.0.0") (o #t) (d #t) (k 0)))) (h "149hq0pn5a5p9xwv1d8pz0m3cdm6q76rfxfrlxvpnbg9mxjxj5j4") (f (quote (("wat" "wasmer/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.1.0 (c (n "wasmer-c-api") (v "2.1.0") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "^2.1.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.1.0") (o #t) (d #t) (k 0)))) (h "1gnzsd6mf1rwlr6crrnxg1qpvkp8l7797rhr2b2vpdgg7hj7pkpx") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi" "typetag" "serde") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.1.1 (c (n "wasmer-c-api") (v "2.1.1") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "^2.1.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.1.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "0mliniwgcskgynxjwrkp76fgwclarzbx38kwvhcmfpgqpms7drq5") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.2.0-rc1 (c (n "wasmer-c-api") (v "2.2.0-rc1") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=2.2.0-rc1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0-rc1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "0nidcy2x0yhy9iqaffj5snz4sd09vi383sm2gdm0zj3hj05fq71p") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.2.0-rc2 (c (n "wasmer-c-api") (v "2.2.0-rc2") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=2.2.0-rc2") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0-rc2") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "0yc7iz0hcgv6vyhy60f081wh65a9ljhfy3kzx7nzv5agvg0ar52c") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.2.0 (c (n "wasmer-c-api") (v "2.2.0") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=2.2.0") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "11hm1w4hhayvzwa2im1bjhl9v41gs9v689k9avy4aw52gpiq7i48") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.2.1 (c (n "wasmer-c-api") (v "2.2.1") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=2.2.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "07in4h3al8prdpsnhbayfaf0dgg7d3nq2ypwah6c0rlv67sq2wpj") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-2.3.0 (c (n "wasmer-c-api") (v "2.3.0") (d (list (d (n "cbindgen") (r "^0.19") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=2.3.0") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler-cranelift") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.3.0") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "07pli43vndpm4mhh0f0glmhml8ywfkssrrh4bl9cg3lhwnw7agkr") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default" "wat" "cranelift" "universal" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-api/compiler" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-alpha.4 (c (n "wasmer-c-api") (v "3.0.0-alpha.4") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-alpha.4") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-alpha.4") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.4") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-alpha.4") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "14g3inpsh3n05iswyhg1j571yzdq4dq301l733v5m49h53j4hb0j") (f (quote (("wat" "wasmer-api/wat") ("wasi" "wasmer-wasi") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-beta (c (n "wasmer-c-api") (v "3.0.0-beta") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-beta") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-beta") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-beta") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "0azbgfhc0vgpc7dkczkaly4dq3bphckdqzchlfsyrrwsavmm8i10") (f (quote (("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-beta.2 (c (n "wasmer-c-api") (v "3.0.0-beta.2") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-beta.2") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-beta.2") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "07f1jf4p7arvj06syw0yzm0i21b2mi7g29f019y7j69zanyi0xly") (f (quote (("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-rc.1 (c (n "wasmer-c-api") (v "3.0.0-rc.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-rc.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)))) (h "0irx77ncw9vbv5hgkifw8xgzrq4kyi0cl1k4qgj0ai4nrx9va0ks") (f (quote (("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-rc.2 (c (n "wasmer-c-api") (v "3.0.0-rc.2") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-rc.2") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.2") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.2") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1z2qlxfpxfc9ym378r3r6bbfn9qhl8ssvz9n1vzzz5l7sfjdm4h4") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-rc.3 (c (n "wasmer-c-api") (v "3.0.0-rc.3") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-rc.3") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.3") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.3") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1xdhz1kfwimyiiw30mvvz004amxlyi8vlra2lvsznz8mkzvg8i68") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0-rc.4 (c (n "wasmer-c-api") (v "3.0.0-rc.4") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0-rc.4") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.4") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.4") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1xbl4cslzgsk2hiwxlh2d17y7b68fqdflcgdz6mvbp7xmhk6j720") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.0 (c (n "wasmer-c-api") (v "3.0.0") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.0") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "15s1hxpdb6q89qfiwsn8wzqxvdx3gacyn7lxg851s9wy3sl4vpkd") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.1 (c (n "wasmer-c-api") (v "3.0.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.1") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0ag432rf5qna0m1wxaly0gag8i4flp6sl4dgppqakq36c54zq3v9") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.2 (c (n "wasmer-c-api") (v "3.0.2") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.2") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.2") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.2") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1rdgmd120qxw1ia1594nxbcw8hqidgn35i6fil2kqiv5zjwgf1li") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.1.0 (c (n "wasmer-c-api") (v "3.1.0") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.1.0") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.1.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.1.0") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0g0x7drsg7isjh2gyawkdxw7hkdqvivfp1xz09qvwh48g6icscg0") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.2.0-alpha.1 (c (n "wasmer-c-api") (v "3.2.0-alpha.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.2.0-alpha.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.2.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.2.0-alpha.1") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.2.0-alpha.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^4.0.0") (o #t) (d #t) (k 0)))) (h "0cavlhh3yw60167k18xd300w0ykv519s091rsq82bvjkfaa2dcpf") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.1.1 (c (n "wasmer-c-api") (v "3.1.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.1.1") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.1.1") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.1.1") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0p9m6jcnvd700x8vpc4qwqyx1xn8hq7a7137vlybx6nmj7bcajxk") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.0.3 (c (n "wasmer-c-api") (v "3.0.3") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-api") (r "=3.0.3") (f (quote ("sys"))) (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.3") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.3") (f (quote ("host-fs" "sys"))) (o #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0x6cm6rpqmbplwnhk5wfkxmf7g69kpl0kbhiyk2ksm795as2rhk7") (f (quote (("webc_runner" "wasmer-wasi/webc_runner" "wasmer-vfs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasi") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.2.0-beta.2 (c (n "wasmer-c-api") (v "3.2.0-beta.2") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.1.1") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=3.2.0-beta.2") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0-beta.2") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.2.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "=5.0.0-rc.5") (o #t) (d #t) (k 0)))) (h "1jmjgv1byxdh5cykcwwd5dvrbl16wcha97cfpx1s6vvgxbdhvnxb") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys" "wasmer-api/sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "sys" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.2.0 (c (n "wasmer-c-api") (v "3.2.0") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=3.2.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.3.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "1svly81vjixan43saakkp58nbm5fzxgs58ggaxfwzlcf7a3ppn8g") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys" "wasmer-api/sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "sys" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.2.1 (c (n "wasmer-c-api") (v "3.2.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=3.2.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.3.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "1psf082d4zhh2jmd8gingx98r0a8zz5rpnwp6lkcxh7wcdphx31p") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys" "wasmer-api/sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "sys" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-3.3.0 (c (n "wasmer-c-api") (v "3.3.0") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=3.3.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.3.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.4.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "05863gbq351z2kv1rq4zbrdjv5gm3gwi2avbcclbpj6nd8b7qdkp") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-4.0.0-alpha.1 (c (n "wasmer-c-api") (v "4.0.0-alpha.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.3.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.0.0-alpha.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.5.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "1plfvlrykjiiy83g1s7sxjd3njbs2fmq6zyys50jhncifx7lbw8g") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler"))))))

(define-public crate-wasmer-c-api-4.0.0-beta.1 (c (n "wasmer-c-api") (v "4.0.0-beta.1") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.4.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.0.0-beta.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.6.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0600858vn6ax1hbqampl1w3kzbylkqnk98a6s7zk7pvrx8jcz5xs") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.0.0-beta.2 (c (n "wasmer-c-api") (v "4.0.0-beta.2") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.5.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.0.0-beta.2") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.7.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0sl2vzdr9karshrqp5ld6vzj9f0ny8v8dxy6p4bn1x3w7fgxlqkg") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.0.0-beta.3 (c (n "wasmer-c-api") (v "4.0.0-beta.3") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.6.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.0.0-beta.3") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.3") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.8.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "07lad68nlrn5ibha6kmblq5588sks6rqxng6fzcjfzapsxkp7m9y") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.0.0 (c (n "wasmer-c-api") (v "4.0.0") (d (list (d (n "cbindgen") (r "^0.24") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.6.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.0.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.9.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0aydm7qqdfkgl95jlcdzjpridmax78znza93s5c5w39xyxdmjqi5") (f (quote (("webc_runner" "wasmer-wasix/webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.1.0 (c (n "wasmer-c-api") (v "4.1.0") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.7.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.1.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.1.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.10.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "018s28c3rcmjbzbmnljp1v0kc69zdalkp3c98rzry2d2xjvkcav8") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.1.1 (c (n "wasmer-c-api") (v "4.1.1") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.8.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.1.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.1.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.11.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "02jd0c72z9v6yhv5s4fc329a0jrgvyalwshklli9qdjc3csjcxjc") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.1.2 (c (n "wasmer-c-api") (v "4.1.2") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.8.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.1.2") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.1.2") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.12.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "00x3v03qlvgv2rfl65dibh5ydnl546al4a6iqvj3xr000p7yqak4") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.2.0 (c (n "wasmer-c-api") (v "4.2.0") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.8.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.13.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0cq61zvc4py2mj72nccya6hc9zzh89h0swfmkl98jidndmhn48wd") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.67")))

(define-public crate-wasmer-c-api-4.2.1 (c (n "wasmer-c-api") (v "4.2.1") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.14.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0b9cikyk3xbp75pb4kvwvzkcvv4gcrvcl41qa99fzi5cdyac4npl") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.70")))

(define-public crate-wasmer-c-api-4.2.2 (c (n "wasmer-c-api") (v "4.2.2") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.2") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.15.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0cbny6ydzkz638pb7hk7cgpbbcpvvqcily9f7by1ymvg7fj2ry4p") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.70")))

(define-public crate-wasmer-c-api-4.2.3 (c (n "wasmer-c-api") (v "4.2.3") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.3") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.3") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.16.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "0klkc3xcxpdzvx5mh6c4654bzc1fn9z3bgjj8fvls06d0s197miv") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.70")))

(define-public crate-wasmer-c-api-4.2.5 (c (n "wasmer-c-api") (v "4.2.5") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.5") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.5") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "1vwmsc2491jb2nalgwi8zklfspgn95fpsrp8bp264460immfjkkk") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.70")))

(define-public crate-wasmer-c-api-4.2.8 (c (n "wasmer-c-api") (v "4.2.8") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.2") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.2.8") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.3") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (o #t) (d #t) (k 0)))) (h "1jhh8cafkrf5fv9psq2v1bjq2afg54x9bdxrjzckk5zscrqcbx13") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.73")))

(define-public crate-wasmer-c-api-4.3.0-alpha.1 (c (n "wasmer-c-api") (v "4.3.0-alpha.1") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.3") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.3.0-alpha.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.4") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha3") (f (quote ("package"))) (o #t) (k 0)))) (h "1xgbfmrg2yvkl9xpsgymh2kak1kqnhifd7i4dyrmnh6hpijiisw1") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.73")))

(define-public crate-wasmer-c-api-4.3.0-beta.1 (c (n "wasmer-c-api") (v "4.3.0-beta.1") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.4") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.3.0-beta.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0-beta.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.19.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha8") (f (quote ("package"))) (o #t) (k 0)))) (h "1kcm5j8k7cdy4v60pf4znn6v3v58b1iapynf613pf27bcpci99p1") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.73")))

(define-public crate-wasmer-c-api-4.3.0 (c (n "wasmer-c-api") (v "4.3.0") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.4") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.3.0") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.20.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha8") (f (quote ("package"))) (o #t) (k 0)))) (h "1jnjd3wdw05kb5d36fw7wrxj7gxlnbqsdvpg6qnhm9326cfzj7zz") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.74")))

(define-public crate-wasmer-c-api-4.3.1 (c (n "wasmer-c-api") (v "4.3.1") (d (list (d (n "cbindgen") (r "^0.24") (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "field-offset") (r "^0.3.3") (d #t) (k 2)) (d (n "inline-c") (r "^0.1.7") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "io-util" "sync" "macros"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.12.0") (f (quote ("static-fs"))) (o #t) (k 0)) (d (n "wasmer-api") (r "=4.3.1") (k 0) (p "wasmer")) (d (n "wasmer-compiler") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-inline-c") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "wasmer-middlewares") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.21.0") (f (quote ("host-fs" "host-vnet"))) (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha9") (f (quote ("package"))) (o #t) (k 0)))) (h "1yiqhr974zgp3lbqiblw89b5gx3jbai02q4bkl4rfmjhk3xsmg16") (f (quote (("webc_runner" "virtual-fs" "webc") ("wat" "wasmer-api/wat") ("wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-create") ("wasi" "wasmer-wasix") ("sys") ("static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "wasmer-compiler/static-artifact-create") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("middlewares" "compiler" "wasmer-middlewares") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "wasmer-api/jsc" "wasmer-api/std") ("jit" "compiler") ("default" "wat" "cranelift" "compiler" "wasi" "middlewares") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler-headless" "wasmer-artifact-load" "static-artifact-load" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("compiler" "wasmer-compiler" "wasmer-api/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler")))) (r "1.74")))

