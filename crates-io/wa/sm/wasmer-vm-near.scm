(define-module (crates-io wa sm wasmer-vm-near) #:use-module (crates-io))

(define-public crate-wasmer-vm-near-1.0.1 (c (n "wasmer-vm-near") (v "1.0.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12bwzb1vrcqlqbb0vn7zqkp11dhr430mfjxcbrqsxmda572wrzsg")))

(define-public crate-wasmer-vm-near-2.0.0 (c (n "wasmer-vm-near") (v "2.0.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0w8a5b59y4rz5vlxcsvka16j7n0fcb2g64hhqfps2wkk7x03ljxi") (f (quote (("enable-rkyv" "rkyv") ("default"))))))

(define-public crate-wasmer-vm-near-2.0.1 (c (n "wasmer-vm-near") (v "2.0.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.1") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0irqwdjhs3lyy8r88bfsbb23lvbj8fgvxm2x32lk7d5cw9cw4qp8") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.0.2 (c (n "wasmer-vm-near") (v "2.0.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.2") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13814n4mnfa443hyv9k8y34n1jka5h5v4jizb1vn33wimj8mhkfv") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.0.3 (c (n "wasmer-vm-near") (v "2.0.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.3") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hkc2yg1s0xy5pmvflf4kgf5zdsi0cviipsaad14b4397p7vhm8x") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.1.0 (c (n "wasmer-vm-near") (v "2.1.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.1.0") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rk28q4046j7ynf7n2d7pxb9ag10381k7rwjn4264r9zf9fnz0aa") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.1.1 (c (n "wasmer-vm-near") (v "2.1.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.1.1") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04drwysrqq0bdnrvlx5avdl0sabp1fgnb2j2176pbix6sv948q7b") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.1.2 (c (n "wasmer-vm-near") (v "2.1.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.1.2") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0myjjlwalaxqh28bnkjjh9pfaghnqws9l2gr2h9q5ilcbih4hs4d") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.2.0 (c (n "wasmer-vm-near") (v "2.2.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1iv037s3wqwskgnpbj5ywa0bz0mnmysz2dsj0w600i89wb4f01nv") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.2.1 (c (n "wasmer-vm-near") (v "2.2.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dsv0cmw3pmcmg3448lrxlyr02pqpxg875b28k1c8wvzwbf0zkq8") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.2.2 (c (n "wasmer-vm-near") (v "2.2.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.2") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15d98bvznawirfgwldlnybgp4kp6qjpn6qjc4affagq60p2qpmbb") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.3.0 (c (n "wasmer-vm-near") (v "2.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13yq54xfjij143kwyhvycfil543lcdqhqpj13pxq721kz8g8fzar") (f (quote (("default"))))))

(define-public crate-wasmer-vm-near-2.2.3 (c (n "wasmer-vm-near") (v "2.2.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.3") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1j9c172mq0gyd4y7xd8rrq9ycfiv86j36f92ss2h89fcd6dcxsg4") (f (quote (("enable-rkyv" "rkyv") ("default") ("avoid-tls-signals"))))))

(define-public crate-wasmer-vm-near-2.4.0 (c (n "wasmer-vm-near") (v "2.4.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.4.0") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0x3k9nknkch3hhcqflz4pvzrpr7116qah0dsifip8aa1bhyz2isa") (f (quote (("default"))))))

(define-public crate-wasmer-vm-near-2.4.1 (c (n "wasmer-vm-near") (v "2.4.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "region") (r "^3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.4.1") (d #t) (k 0) (p "wasmer-types-near")) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "memoryapi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0jk0yz30iw9fbgxsx48izcv6fqjirsp49sbdc1fr3sgnjrami9bh") (f (quote (("default"))))))

