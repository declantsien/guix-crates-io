(define-module (crates-io wa sm wasm-bridge) #:use-module (crates-io))

(define-public crate-wasm-bridge-0.1.0 (c (n "wasm-bridge") (v "0.1.0") (d (list (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtime") (r "^10.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wat") (r "^1.0.66") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09s423r002k1abjmnn2hqnlk3wsrh7frlczhxy5d91parsjhhafh")))

(define-public crate-wasm-bridge-0.1.1 (c (n "wasm-bridge") (v "0.1.1") (d (list (d (n "wasm-bridge-js") (r "^0.1.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtime") (r "^10.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "092ziv7ir3si2i6582mdal6k4rlijczzfli5b5z36b3d8da9hpsh") (f (quote (("component-model" "wasmtime/component-model" "wasm-bridge-js/component-model"))))))

(define-public crate-wasm-bridge-0.1.2 (c (n "wasm-bridge") (v "0.1.2") (d (list (d (n "wasm-bridge-js") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^10.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jfbsyi1rq7h4s7rny812gwmrn26vny74wii3l1vma2297qq062n") (f (quote (("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model"))))))

(define-public crate-wasm-bridge-0.1.3 (c (n "wasm-bridge") (v "0.1.3") (d (list (d (n "wasm-bridge-js") (r "^0.1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^10.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1acssl50gx9gw6dy90q2iyljws4dqq8pmbil2055fi0d5687frwi") (f (quote (("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model"))))))

(define-public crate-wasm-bridge-0.1.4 (c (n "wasm-bridge") (v "0.1.4") (d (list (d (n "wasm-bridge-js") (r "^0.1.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.1.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^10.0.1") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "13gv4hwc5lnwlxcqgxls2cr7dww0fawqd5cdbz65w2z6gih4zcda") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("default" "wat") ("component-model-no-universal" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("component-model" "component-model-no-universal" "zip"))))))

(define-public crate-wasm-bridge-0.1.5 (c (n "wasm-bridge") (v "0.1.5") (d (list (d (n "wasm-bridge-js") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^10.0.1") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1y6hvsp25y3v7szzkldldhjs6s9ah3zqms173lla3n55qlb08kx8") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("default" "wat") ("component-model-no-universal" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("component-model" "component-model-no-universal" "zip"))))))

(define-public crate-wasm-bridge-0.1.6 (c (n "wasm-bridge") (v "0.1.6") (d (list (d (n "wasm-bridge-js") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.1.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^10.0.1") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0adm831ys0n89k138xrnzd5c08rp35saxp48dpcykrc0lax9hcy9") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("error-logging" "wasm-bridge-js/error-logging") ("default" "wat" "error-logging") ("component-model-no-universal" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("component-model" "component-model-no-universal" "zip"))))))

(define-public crate-wasm-bridge-0.2.0 (c (n "wasm-bridge") (v "0.2.0") (d (list (d (n "wasm-bridge-js") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^11.0.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "06gfncm0nnhighqx1wi0nlh34n1pwsq49p1jc5c4jhjkbdz62s91") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("error-logging" "wasm-bridge-js/error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model"))))))

(define-public crate-wasm-bridge-0.2.1 (c (n "wasm-bridge") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1.72") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bridge-js") (r "^0.2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^11.0.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime-wasi") (r "^11.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00i6kd71b37v6bj5d6qjgivb7zkrcvh0qsbq7zwlidi3pa0a1g9p") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("wasi" "wasmtime-wasi" "wasm-bridge-js/wasi" "async") ("error-logging" "wasm-bridge-js/error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("async" "wasmtime/async" "async-trait" "wasm-bridge-macros/async" "wasm-bridge-js/async"))))))

(define-public crate-wasm-bridge-0.2.2 (c (n "wasm-bridge") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.72") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bridge-js") (r "^0.2.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^11.0.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime-wasi") (r "^11.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1653f480xf6yspp84swl4683z1i9d4chjhgyh0kzp6fyzc4ky6zv") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("wasi" "wasmtime-wasi" "wasm-bridge-js/wasi" "async") ("error-logging" "wasm-bridge-js/error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("async" "wasmtime/async" "async-trait" "wasm-bridge-macros/async" "wasm-bridge-js/async"))))))

(define-public crate-wasm-bridge-0.3.0 (c (n "wasm-bridge") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bridge-js") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bridge-macros") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmtime") (r "^15.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "196ciayq6q1hrcv7d7a41pdvpcin11bf57h3k72wyplna65gbnvr") (f (quote (("wat" "wasmtime/wat" "wasm-bridge-js/wat") ("error-logging" "wasm-bridge-js/error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "wasm-bridge-js/component-model") ("async" "wasmtime/async" "async-trait" "wasm-bridge-js/async" "wasm-bridge-macros/async"))))))

(define-public crate-wasm-bridge-0.3.1 (c (n "wasm-bridge") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-component-bindgen") (r "^0.14") (f (quote ("transpile-bindgen"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bridge-macros") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bridge-macros") (r "^0.3.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtime") (r "^15.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wat") (r "^1.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hqwi865qn09rzr3ymgnmw0nnh38sqzscz0wivl23l8bss1h6pnm") (f (quote (("error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "js-component-bindgen") ("async" "wasmtime/async" "async-trait" "wasm-bridge-macros/async")))) (s 2) (e (quote (("wat" "dep:wat" "wasmtime/wat"))))))

(define-public crate-wasm-bridge-0.3.2 (c (n "wasm-bridge") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "atomic_refcell") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-component-bindgen") (r "^0.14") (f (quote ("transpile-bindgen"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "try-lock") (r "^0.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bridge-macros") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bridge-macros") (r "^0.3.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtime") (r "^15.0") (f (quote ("cranelift"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wat") (r "^1.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "011f12qvg44zzc4m3h2y1avca0bywam23amih51knfl9ifnk9wdr") (f (quote (("error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "js-component-bindgen") ("async" "wasmtime/async" "async-trait" "wasm-bridge-macros/async")))) (s 2) (e (quote (("wat" "dep:wat" "wasmtime/wat"))))))

(define-public crate-wasm-bridge-0.4.0 (c (n "wasm-bridge") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-component-bindgen") (r "^1.0") (f (quote ("transpile-bindgen"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "try-lock") (r "^0.2") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bridge-macros") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "wasmtime") (r "^19.0") (f (quote ("cranelift" "runtime"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wat") (r "^1.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0885ppxb9lzysr73zjj370gx3pwxvivbnv0n3kjzgzb7psz783ps") (f (quote (("error-logging") ("default" "wat" "error-logging") ("component-model" "wasmtime/component-model" "wasm-bridge-macros" "js-component-bindgen") ("async" "wasmtime/async" "async-trait" "wasm-bridge-macros/async")))) (s 2) (e (quote (("wat" "dep:wat" "wasmtime/wat"))))))

