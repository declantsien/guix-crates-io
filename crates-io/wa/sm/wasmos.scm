(define-module (crates-io wa sm wasmos) #:use-module (crates-io))

(define-public crate-wasmos-0.0.1 (c (n "wasmos") (v "0.0.1") (d (list (d (n "async-graphql") (r "^5.0") (f (quote ("dynamic-schema"))) (d #t) (k 0)) (d (n "async-graphql-poem") (r "^5.0") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "opendal") (r "^0.30") (d #t) (k 0)) (d (n "poem") (r "^1.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer") (r "^2.3") (f (quote ("llvm" "cranelift" "singlepass" "universal"))) (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.3") (d #t) (k 0)))) (h "11aayzjc9d3mzaq1kcjf9r264jkdjbv1km0h2n5lmx1f5sp9ch8c")))

(define-public crate-wasmos-0.0.2 (c (n "wasmos") (v "0.0.2") (d (list (d (n "async-graphql") (r "^5.0") (f (quote ("dynamic-schema"))) (d #t) (k 0)) (d (n "async-graphql-poem") (r "^5.0") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "opendal") (r "^0.30") (d #t) (k 0)) (d (n "poem") (r "^1.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasmer") (r "^2.3") (f (quote ("llvm" "cranelift" "singlepass" "universal"))) (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.3") (d #t) (k 0)))) (h "1g5k0plrfknk9m3v6hwvw43myw6v6j070cd5wizqq3i3k2f1drpc")))

(define-public crate-wasmos-0.1.0 (c (n "wasmos") (v "0.1.0") (d (list (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (k 0)) (d (n "wasmos-macro") (r "^0.0.1") (d #t) (k 0)))) (h "0szrvv5qxrvgvz4zcj546mrr9m2ap5np745k18afjgb62q4c937j")))

