(define-module (crates-io wa sm wasm2spirv) #:use-module (crates-io))

(define-public crate-wasm2spirv-0.1.0 (c (n "wasm2spirv") (v "0.1.0") (d (list (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "clap") (r "^4.3.16") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rspirv") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "spirv") (r "^0.2.0") (f (quote ("serde" "serialize" "deserialize"))) (d #t) (k 0)) (d (n "spirv-tools") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23.1") (f (quote ("glsl" "hlsl" "msl"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)) (d (n "vector_mapp") (r "^0.3.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.108.0") (d #t) (k 0)) (d (n "wat") (r "^1.0.67") (d #t) (k 0)))) (h "1gjq7xbk59vv0ikxbazqwvi8161fbgfma15r6pr3xdld97lkhk7c")))

