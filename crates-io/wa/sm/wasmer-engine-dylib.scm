(define-module (crates-io wa sm wasmer-engine-dylib) #:use-module (crates-io))

(define-public crate-wasmer-engine-dylib-2.0.0-rc1 (c (n "wasmer-engine-dylib") (v "2.0.0-rc1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-object") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc1") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "118jb7d7cx2192cwhdinn6v7p84dg9dqq5grhbszspkzhj2jzlhp") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.0.0-rc2 (c (n "wasmer-engine-dylib") (v "2.0.0-rc2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-object") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc2") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "1wl07cskc8zd6f9q9mawshib97997080rdh7iz889f6q4zkrhbhn") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.0.0 (c (n "wasmer-engine-dylib") (v "2.0.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-object") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0dc13q0irznh4c7h1j033mk1k0y1ziin17y32m9kvqpb4g8r18va") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.1.0 (c (n "wasmer-engine-dylib") (v "2.1.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-object") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.1.0") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0p0avz98n9kgkw3zpr7namnn3i6cmzph163g8zpj11r7lhdahcyn") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.1.1 (c (n "wasmer-engine-dylib") (v "2.1.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-object") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.1.1") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "1skmzyps3jn6h761gkkj57qq4v11f9gzza0hmz6drq9i8ykvgmcd") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.2.0-rc1 (c (n "wasmer-engine-dylib") (v "2.2.0-rc1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "object") (r "^0.28.3") (f (quote ("write"))) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-object") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc1") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "00p8ksf187h38mbdq8zl0j4nnycpm8n3cypk85hs4wf5hmwcz7ld") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.2.0-rc2 (c (n "wasmer-engine-dylib") (v "2.2.0-rc2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "object") (r "^0.28.3") (f (quote ("write"))) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-object") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc2") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "133wbxwgaxvvcf6n5xkp2kh5j5641d0idyba7lmd3wnaxapndnvm") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.2.0 (c (n "wasmer-engine-dylib") (v "2.2.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "object") (r "^0.28.3") (f (quote ("write"))) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0qhiad7z8r618sph32rl2ih4b7ycq9xggjmfib41rhva6prq65jr") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.2.1 (c (n "wasmer-engine-dylib") (v "2.2.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "object") (r "^0.28.3") (f (quote ("write"))) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.1") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "1p7qkq9ijw0bq5wy5rq72h2q6iqk3al7hgwvhif7jai51v3gvmyc") (f (quote (("compiler" "wasmer-compiler/translator"))))))

(define-public crate-wasmer-engine-dylib-2.3.0 (c (n "wasmer-engine-dylib") (v "2.3.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "object") (r "^0.28.3") (f (quote ("write"))) (k 0)) (d (n "rkyv") (r "^0.7.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "wasmer-artifact") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.3.0") (f (quote ("enable-rkyv"))) (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0lvy5dkpiqv5s607hrgnp2ndjj2nh19ma5rifxc28iqmkjpmh0xd") (f (quote (("compiler" "wasmer-compiler/translator"))))))

