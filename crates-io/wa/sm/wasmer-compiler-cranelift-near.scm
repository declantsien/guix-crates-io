(define-module (crates-io wa sm wasmer-compiler-cranelift-near) #:use-module (crates-io))

(define-public crate-wasmer-compiler-cranelift-near-1.0.1 (c (n "wasmer-compiler-cranelift-near") (v "1.0.1") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.1") (f (quote ("translator"))) (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-types") (r "^1.0.1") (f (quote ("std"))) (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "^1.0.1") (d #t) (k 0) (p "wasmer-vm-near")))) (h "05p00davs46c0159wb6qwxxqw29vx0myipz0fy3k3piymmbvdrld") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

