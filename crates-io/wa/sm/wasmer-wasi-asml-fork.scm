(define-module (crates-io wa sm wasmer-wasi-asml-fork) #:use-module (crates-io))

(define-public crate-wasmer-wasi-asml-fork-1.0.2 (c (n "wasmer-wasi-asml-fork") (v "1.0.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "wasmer") (r "^1.0.2") (k 0) (p "wasmer-asml-fork")) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)))) (h "0kbbli36kpd5nzs7vqqdv66b4rrz9jb2vsdys77mf66pimiz0z7q") (f (quote (("logging" "tracing/log") ("disable-all-logging" "tracing/release_max_level_off" "tracing/max_level_off") ("default" "logging"))))))

(define-public crate-wasmer-wasi-asml-fork-2.0.0 (c (n "wasmer-wasi-asml-fork") (v "2.0.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "wasmer") (r "^2.0.0") (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-wasi-types") (r "^2.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)))) (h "10a50cimmn19gg41w6lpl2ffb342pgv1lsa5879jqv655l7jh9sm") (f (quote (("logging" "tracing/log") ("disable-all-logging" "tracing/release_max_level_off" "tracing/max_level_off") ("default" "logging"))))))

