(define-module (crates-io wa sm wasmer-asml-fork) #:use-module (crates-io))

(define-public crate-wasmer-asml-fork-0.0.0 (c (n "wasmer-asml-fork") (v "0.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-derive") (r "^0.0.0") (d #t) (k 0) (p "wasmer-derive-asml-fork")) (d (n "wasmer-engine") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.2") (d #t) (k 0)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0jcx5bnjmr2scgh9pi7a044w2zphwvlimx89xc9y0kknq73ba8bl") (f (quote (("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "wasmer-engine-native" "engine") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated") ("default-singlepass" "singlepass" "default-compiler") ("default-native" "native" "default-engine") ("default-llvm" "llvm" "default-compiler") ("default-jit" "jit" "default-engine") ("default-engine") ("default-cranelift" "cranelift" "default-compiler") ("default-compiler") ("default" "wat" "default-cranelift" "default-jit") ("cranelift-experimental-x64" "cranelift" "wasmer-compiler-cranelift/experimental-x64") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler"))))))

(define-public crate-wasmer-asml-fork-1.0.2 (c (n "wasmer-asml-fork") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-derive") (r "^1.0.2") (d #t) (k 0) (p "wasmer-derive-asml-fork")) (d (n "wasmer-engine") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.2") (d #t) (k 0)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hkn416i7w2r2h350j9dnk3ql1ghcv5wsiicv0b7r402v883j24a") (f (quote (("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "wasmer-engine-native" "engine") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("engine") ("deprecated") ("default-singlepass" "singlepass" "default-compiler") ("default-native" "native" "default-engine") ("default-llvm" "llvm" "default-compiler") ("default-jit" "jit" "default-engine") ("default-engine") ("default-cranelift" "cranelift" "default-compiler") ("default-compiler") ("default" "wat" "default-cranelift" "default-jit") ("cranelift-experimental-x64" "cranelift" "wasmer-compiler-cranelift/experimental-x64") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler"))))))

(define-public crate-wasmer-asml-fork-2.0.0 (c (n "wasmer-asml-fork") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-derive") (r "^2.0.0") (d #t) (k 0) (p "wasmer-derive-asml-fork")) (d (n "wasmer-engine") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (d #t) (k 0)) (d (n "wat") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "185zfky9ziq0j11shb0vrb3ccvayf202vnpm7hc1piil207n2fhl") (f (quote (("universal" "wasmer-engine-universal" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("experimental-reference-types-extern-ref" "wasmer-types/experimental-reference-types-extern-ref") ("engine") ("dylib" "wasmer-engine-dylib" "engine") ("default-universal" "universal" "default-engine") ("default-singlepass" "singlepass" "default-compiler") ("default-llvm" "llvm" "default-compiler") ("default-engine") ("default-dylib" "dylib" "default-engine") ("default-cranelift" "cranelift" "default-compiler") ("default-compiler") ("default" "wat" "default-cranelift" "default-universal") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler"))))))

