(define-module (crates-io wa sm wasm-framework) #:use-module (crates-io))

(define-public crate-wasm-framework-0.5.1 (c (n "wasm-framework") (v "0.5.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "service-logging") (r "^0.4") (o #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("console"))) (d #t) (k 0)))) (h "1n6dmr8chxizz96wnl0gzmy65mssmypg0fw78nivx05zza3bq0nj") (f (quote (("std" "serde_json/std" "serde/std" "service-logging/std") ("default" "alloc") ("alloc" "serde_json/alloc" "serde/alloc" "service-logging/alloc"))))))

