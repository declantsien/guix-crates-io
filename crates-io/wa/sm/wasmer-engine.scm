(define-module (crates-io wa sm wasmer-engine) #:use-module (crates-io))

(define-public crate-wasmer-engine-1.0.0-alpha01.0 (c (n "wasmer-engine") (v "1.0.0-alpha01.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha01.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha01.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha01.0") (d #t) (k 0)))) (h "0pl4qv8s13mybaiygv5gfszvry6s2nd6vdcfrcqzkc40xlbm2msf")))

(define-public crate-wasmer-engine-1.0.0-alpha02.0 (c (n "wasmer-engine") (v "1.0.0-alpha02.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha02.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha02.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha02.0") (d #t) (k 0)))) (h "1ijljdxx0srddajfj6liv8jiw8z9h3q4wnz31dd9d880wzpqmlhv")))

(define-public crate-wasmer-engine-1.0.0-alpha3 (c (n "wasmer-engine") (v "1.0.0-alpha3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha3") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha3") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha3") (d #t) (k 0)))) (h "1bb46qia7586hhakvyfs7yfgl97hqfsc0f8xkx432x03vnxhq2b3")))

(define-public crate-wasmer-engine-1.0.0-alpha4 (c (n "wasmer-engine") (v "1.0.0-alpha4") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha4") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha4") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha4") (d #t) (k 0)))) (h "00f7g74cv6a9bmlldrlkylx2n79gy703lr35dcy9s3i6fay95lnw")))

(define-public crate-wasmer-engine-1.0.0-alpha5 (c (n "wasmer-engine") (v "1.0.0-alpha5") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha5") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha5") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha5") (d #t) (k 0)))) (h "00ybpqls5d4lx9gxvq6nb5wkikzy56incc981hjbir6201pxnrxj")))

(define-public crate-wasmer-engine-1.0.0-beta1 (c (n "wasmer-engine") (v "1.0.0-beta1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta1") (d #t) (k 0)))) (h "09x21dgc7lb3lr5md0zn1q6bbmhjycx97ai7xl3n7rwbfg1wv798")))

(define-public crate-wasmer-engine-1.0.0-beta2 (c (n "wasmer-engine") (v "1.0.0-beta2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.1.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta2") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta2") (d #t) (k 0)))) (h "066f86z7cam81ryxdx6vpx37rr66qp85qsbd1z89bma7fjx5527q")))

(define-public crate-wasmer-engine-1.0.0-rc1 (c (n "wasmer-engine") (v "1.0.0-rc1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-rc1") (d #t) (k 0)))) (h "0ys5w5m30gz4wdnji3jbxarxy6995pj0bwfwr30k5bdm8a7gp1z7")))

(define-public crate-wasmer-engine-1.0.0 (c (n "wasmer-engine") (v "1.0.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.0") (d #t) (k 0)))) (h "0sx8rjd3a59hg6gpj6im1yimrd4ivw7x9q9lyj93v0d96rjd27nr")))

(define-public crate-wasmer-engine-1.0.1 (c (n "wasmer-engine") (v "1.0.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.1") (d #t) (k 0)))) (h "0fcwifp6gadjfgd72105f43c5pidlk809637sllrvl1j7021kdqz")))

(define-public crate-wasmer-engine-1.0.2 (c (n "wasmer-engine") (v "1.0.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.2") (d #t) (k 0)))) (h "1dbizlc88bl36c7khkjbbd0rg9lz6yln6ah6x1mg526qddyndr7g")))

(define-public crate-wasmer-engine-2.0.0-rc1 (c (n "wasmer-engine") (v "2.0.0-rc1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc1") (d #t) (k 0)))) (h "06bnbvxqdivrc6dblpqjg0hrpk55bhpvslydbh206c4g43gw6j9x")))

(define-public crate-wasmer-engine-2.0.0-rc2 (c (n "wasmer-engine") (v "2.0.0-rc2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc2") (d #t) (k 0)))) (h "0rwqbfmq5yarxz6crw4rnn8jlba0wnv6vn111p161zmfidg3zplr")))

(define-public crate-wasmer-engine-2.0.0 (c (n "wasmer-engine") (v "2.0.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.2.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (d #t) (k 0)))) (h "1hwzas11cjk6adg9pdxhdbmcwvvpyzxv96nxdnipn0d4439ylm44")))

(define-public crate-wasmer-engine-2.1.0 (c (n "wasmer-engine") (v "2.1.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.1.0") (d #t) (k 0)))) (h "0kdfarmxyix48kdg6fbiy71q3af1lzfn4f6k6adavkrkffkh54mf")))

(define-public crate-wasmer-engine-2.1.1 (c (n "wasmer-engine") (v "2.1.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.1.1") (d #t) (k 0)))) (h "06lpi02nvj0xgl965wlgrp0rkws53857whb6qwmw3qjg6lf3285b")))

(define-public crate-wasmer-engine-2.2.0-rc1 (c (n "wasmer-engine") (v "2.2.0-rc1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc1") (d #t) (k 0)))) (h "0zxk76vngk271sd1dq70whn9p358dc0jmn9zsmidbpasn6b17nay")))

(define-public crate-wasmer-engine-2.2.0-rc2 (c (n "wasmer-engine") (v "2.2.0-rc2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc2") (d #t) (k 0)))) (h "10ix9h8pvw9digsf93ihb37r64b2qjbxmhjiw6q7qw3m4wy9a8q8")))

(define-public crate-wasmer-engine-2.2.0 (c (n "wasmer-engine") (v "2.2.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.0") (d #t) (k 0)))) (h "0h2nnlcggpw1kahfavwb547cjvhcz6mxbkr0hgd0qqchvz20mns1")))

(define-public crate-wasmer-engine-2.2.1 (c (n "wasmer-engine") (v "2.2.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.2.1") (d #t) (k 0)))) (h "1fak2855j778lk7l2v5qliaq99wnx6d76zsd04abpsrps2k07mkf")))

(define-public crate-wasmer-engine-2.3.0 (c (n "wasmer-engine") (v "2.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memmap2") (r "^0.5") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-artifact") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "=2.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0icfaiihg4iaix7k6hr3hah7xpv10smsx4mk66s4s94cjw8g161z")))

