(define-module (crates-io wa sm wasmer-cli) #:use-module (crates-io))

(define-public crate-wasmer-cli-1.0.1 (c (n "wasmer-cli") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "wasmer") (r "^1.0.1") (k 0)) (d (n "wasmer-cache") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-object-file") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-vm") (r "^1.0.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^1.0.1") (o #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "^1.0.1") (o #t) (d #t) (k 0)))) (h "1yjiyjfq3w8xa2x9dw458p6r5lm5gb3ziinplkhypl5rhfb77958") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("object-file" "wasmer-engine-object-file" "engine") ("native" "wasmer-engine-native" "engine") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "wasmer-engine-jit" "engine") ("headless-minimal" "headless" "disable-all-logging" "wasi" "native" "jit") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "jit" "native" "object-file" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift-experimental-x64" "cranelift" "wasmer-compiler-cranelift/experimental-x64") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-jit/compiler" "wasmer-engine-native/compiler" "wasmer-engine-object-file/compiler") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.0.0 (c (n "wasmer-cli") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "wasmer") (r "^2.0.0") (k 0)) (d (n "wasmer-cache") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.0.0") (o #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "^2.0.0") (o #t) (d #t) (k 0)))) (h "0k1jms0plwsapf120admy755m1m9sj00wglxmyc1in6lvbbp64rg") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.1.0 (c (n "wasmer-cli") (v "2.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.0") (k 0)) (d (n "wasmer-cache") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "^2.1.0") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "^2.1.0") (o #t) (d #t) (k 0)))) (h "1c07svmx2ky62pmz90x6m48j0z5lk3q55jcqs4lcdpwpc6amwc84") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.1.1 (c (n "wasmer-cli") (v "2.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (k 0)) (d (n "wasmer-cache") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "^2.1.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "16937addian6rv87hxhyg76mcc5kgrnvkqjk795lskf1zgsd8zws") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.2.0-rc1 (c (n "wasmer-cli") (v "2.2.0-rc1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=2.2.0-rc1") (k 0)) (d (n "wasmer-cache") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=2.2.0-rc1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=2.2.0-rc1") (o #t) (d #t) (k 0)))) (h "19sbx1vk8mhr0wrys8vnjyk02h9l36wh7ajhwsnvdkmbgyldns3y") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.2.0-rc2 (c (n "wasmer-cli") (v "2.2.0-rc2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=2.2.0-rc2") (k 0)) (d (n "wasmer-cache") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=2.2.0-rc2") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=2.2.0-rc2") (o #t) (d #t) (k 0)))) (h "0a4zlpik7rn5dgci3cns90cci1514zdkwx3dzwfqx6lli6r3f4j3") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.2.0 (c (n "wasmer-cli") (v "2.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=2.2.0") (k 0)) (d (n "wasmer-cache") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=2.2.0") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=2.2.0") (o #t) (d #t) (k 0)))) (h "136zr6g35n55jr7iv4xbwch0pgq71z6azg50czb7ybwialnb579q") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten" "experimental-io-devices") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.2.1 (c (n "wasmer-cli") (v "2.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=2.2.1") (k 0)) (d (n "wasmer-cache") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=2.2.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=2.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=2.2.1") (o #t) (d #t) (k 0)))) (h "16b4xdb76fmz0jf0nzh5mxzgah8m0f0h74lbv6lki68bz2iifgd8") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten" "experimental-io-devices") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-2.3.0 (c (n "wasmer-cli") (v "2.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=2.3.0") (k 0)) (d (n "wasmer-cache") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-engine-dylib") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-staticlib") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=2.3.0") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=2.3.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=2.3.0") (o #t) (d #t) (k 0)))) (h "0v13yx0w3si8pv9w6pmnnzpisw5hkiafh55sk3nf6n2z2sd6vw0c") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("universal" "wasmer-engine-universal" "engine") ("staticlib" "wasmer-engine-staticlib" "engine") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("native" "dylib") ("llvm" "wasmer-compiler-llvm" "compiler") ("jit" "universal") ("headless-minimal" "headless" "disable-all-logging" "wasi" "dylib" "universal") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("engine") ("emscripten" "wasmer-emscripten") ("dylib" "wasmer-engine-dylib" "engine") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "universal" "dylib" "staticlib" "cache" "wasi" "emscripten") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" "wasmer-engine-staticlib/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-alpha.4 (c (n "wasmer-cli") (v "3.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=3.0.0-alpha.4") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.4") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.4") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-alpha.4") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-alpha.4") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-alpha.4") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-alpha.4") (o #t) (d #t) (k 0)))) (h "0hj03sa48wqyy07097z01jq7kv9w13m7byihzg8qjvr2z5dvnasw") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasi" "wasmer-wasi") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "cache" "wasi" "emscripten" "compiler") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-beta (c (n "wasmer-cli") (v "3.0.0-beta") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=3.0.0-beta") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-beta") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-beta") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-beta") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-beta") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-beta") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-beta") (o #t) (d #t) (k 0)))) (h "1fx3lfpk4qid7ar68wi8sxrvx1ayhb8wsx207gx1slswygx5vs9c") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "dirs" "serde_json") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-beta.2 (c (n "wasmer-cli") (v "3.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "wasmer") (r "=3.0.0-beta.2") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-beta.2") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-beta.2") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-beta.2") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)))) (h "17csmrg9df7y86cya7bgr18kqjp1bxppkl17gvwi9ghaln39a22x") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "dirs" "serde_json") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-rc.1 (c (n "wasmer-cli") (v "3.0.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.0-rc.1") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-rc.1") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-rc.1") (o #t) (d #t) (k 0)))) (h "18flnxf5aqvi7wrkhbm0vb5iv07ziawr94a4fmh1kkjfcziw2b4b") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "dirs" "serde_json") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-rc.2 (c (n "wasmer-cli") (v "3.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.0-rc.2") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.2") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.2") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-rc.2") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1p79jynkhykd2a5afp72120ky2366300ma64k6p23pzvqmm2s3kd") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-rc.3 (c (n "wasmer-cli") (v "3.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.0-rc.3") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.3") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.3") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-rc.3") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "08b8y1ibig68483fbv23x6g7ds3pk5vrvbj8j3cdh4hw2zj9qdih") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0-rc.4 (c (n "wasmer-cli") (v "3.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.0-rc.4") (k 0)) (d (n "wasmer-cache") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.4") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0-rc.4") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0-rc.4") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0-rc.4") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1qzqfjnr9qnvasvl02aizd0y8sfqccrgq1n9jbf7xh4kx42b0dkp") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.0 (c (n "wasmer-cli") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.0") (k 0)) (d (n "wasmer-cache") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.0") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0yblmbgksnjmyf1x43wfihpng8v6k7ssyfbgzpgkn7cylxk6xwjm") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.1 (c (n "wasmer-cli") (v "3.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinner") (r "^0.5.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.1") (k 0)) (d (n "wasmer-cache") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.1") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "18asb315s9012wqdx2zl86263qb566vqh4z5zjnh4yzk8kliq1ni") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.2 (c (n "wasmer-cli") (v "3.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.2") (k 0)) (d (n "wasmer-cache") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.2") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.2") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.2") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.2") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "0vf8d0681666vpgnscn19hspsi45nq250fzdzmfz5a52p08dwynr") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.1.0 (c (n "wasmer-cli") (v "3.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.1.0") (k 0)) (d (n "wasmer-cache") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.1.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.1.0") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.1.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "10mkmnq6b2hd6vryj9haijyqdzdcis492bpfd758bl01yicb1a1w") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.2.0-alpha.1 (c (n "wasmer-cli") (v "3.2.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "minisign") (r "^0.7.2") (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (k 0)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("parsing" "std" "formatting"))) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasmer") (r "=3.2.0-alpha.1") (k 0)) (d (n "wasmer-cache") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0-alpha.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=4.0.0") (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0-alpha.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.2.0-alpha.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.2.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.2.0-alpha.1") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wasm-interface") (r "^3.2.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmparser") (r "^0.51.4") (d #t) (k 0)) (d (n "webc") (r "^4.0.0") (o #t) (d #t) (k 0)))) (h "1mb6gkfj6nrnf0kbqmdz10k6g77i2491m23jxqdp925dzafrfj3a") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug" "fern" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.1.1 (c (n "wasmer-cli") (v "3.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.1.1") (k 0)) (d (n "wasmer-cache") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.1.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.1.1") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.1.1") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.1.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "08j3dnjkfylsh9p6f8wh6p85pyisg514hxnz219339g9fn1fmnjf") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.0.3 (c (n "wasmer-cli") (v "3.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (o #t) (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (o #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "nuke-dir") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-toml") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer") (r "=3.0.3") (k 0)) (d (n "wasmer-cache") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.3") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-object") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-vfs") (r "=3.0.3") (f (quote ("host-fs"))) (k 0)) (d (n "wasmer-vm") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-wasi") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "wasmer-wasi-experimental-io-devices") (r "=3.0.3") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.0.3") (o #t) (d #t) (k 0)) (d (n "webc") (r "^3.0.1") (o #t) (d #t) (k 0)))) (h "1qhsq5fhybcsa3d8g38b64y6vl7yhv3v97n09g61z0xv8m8rv6gf") (f (quote (("webc_runner" "wasi" "wasmer-wasi/webc_runner" "wasmer-wasi/webc_runner_rt_wasi" "wasmer-wasi/webc_runner_rt_emscripten" "nuke-dir" "webc") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi" "wasmer-wasi") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("http" "http_req" "reqwest" "dirs" "serde_json" "serde") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasi-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde" "wasmer-wasi/enable-serde") ("emscripten" "wasmer-emscripten") ("disable-all-logging" "wasmer-wasi/disable-all-logging") ("default" "wat" "wast" "http" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create") ("debug" "fern" "log" "wasmer-wasi/logging") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure" "wasmer-cache/blake3-pure") ("cache" "wasmer-cache"))))))

(define-public crate-wasmer-cli-3.2.0 (c (n "wasmer-cli") (v "3.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("native-tls"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.2.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (d #t) (k 0)) (d (n "wasmer") (r "=3.2.0") (k 0)) (d (n "wasmer-cache") (r "=3.2.0") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^4.4.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=3.2.0") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.3.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.3.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (d #t) (k 0)))) (h "0ni162c4p0dayabz1b8rjq4wn3mvqpannsh69saysxq4535n1l44") (f (quote (("webc_runner") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi") ("sys" "wasmer/sys") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("emscripten") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler" "wasmer-wasix/compiler") ("cache-blake3-pure") ("cache"))))))

(define-public crate-wasmer-cli-3.2.1 (c (n "wasmer-cli") (v "3.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("native-tls"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.2.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (d #t) (k 0)) (d (n "wasmer") (r "=3.2.1") (k 0)) (d (n "wasmer-cache") (r "=3.2.1") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.1") (f (quote ("compiler"))) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.2.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^4.4.1") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=3.2.1") (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.3.1") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.3.1") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.2.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (d #t) (k 0)))) (h "0zk9yincp553i3rkzccssjdnmg05qb4cfvhx4a6m9235981255bd") (f (quote (("webc_runner") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi") ("sys" "wasmer/sys") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("emscripten") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("compiler" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler" "wasmer-wasix/compiler") ("cache-blake3-pure") ("cache"))))))

(define-public crate-wasmer-cli-3.3.0 (c (n "wasmer-cli") (v "3.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^3.2.22") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("rust-tls"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "http_req") (r "^0.8") (f (quote ("native-tls"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.2.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.2.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=3.3.0") (k 0)) (d (n "wasmer-cache") (r "=3.3.0") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.3.0") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=3.3.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^4.5.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.3.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.4.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.4.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (d #t) (k 0)))) (h "051j4d20ja7p03m9fnvvzcs9zllcbjn1shpq3szi6xhz9s82dfza") (f (quote (("webc_runner") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("emscripten") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure") ("cache") ("backend"))))))

(define-public crate-wasmer-cli-4.0.0-alpha.1 (c (n "wasmer-cli") (v "4.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "clap-verbosity-flag") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.3.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.2.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.2.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.0.0-alpha.1") (k 0)) (d (n "wasmer-cache") (r "=4.0.0-alpha.1") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-alpha.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "^0.1.9") (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^4.6.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-alpha.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.5.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.5.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (d #t) (k 0)))) (h "1bpdx17ssa3znw6cd1adhc0rm3f1lbmnpzmx4ik6yd9y3dbyb7q9") (f (quote (("webc_runner") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("emscripten") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure") ("cache") ("backend"))))))

(define-public crate-wasmer-cli-4.0.0-beta.1 (c (n "wasmer-cli") (v "4.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "clap-verbosity-flag") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.4.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.2.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.0.0-beta.1") (k 0)) (d (n "wasmer-cache") (r "=4.0.0-beta.1") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "^0.1.9") (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^4.7.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.6.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.6.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0") (d #t) (k 0)))) (h "0mvpl24mv7hpc1y4f1viiy46plcsmf820ca9v59f618d3q4xymql") (f (quote (("webc_runner") ("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("wasi") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging" "wasi") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices" "wasi") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("emscripten") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "cache" "wasi" "emscripten" "compiler" "wasmer-artifact-create" "static-artifact-create" "webc_runner") ("debug") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("cache-blake3-pure") ("cache") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.0.0-beta.2 (c (n "wasmer-cli") (v "4.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "clap-verbosity-flag") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.5.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.3.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.0.0-beta.2") (k 0)) (d (n "wasmer-cache") (r "=4.0.0-beta.2") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.2") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "^0.1.13") (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.0.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.2") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.7.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.7.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0.4") (k 0)))) (h "0b506cwhxs1658xlczq3m8krsp2sfjcni5nxhlwzhzlkyy53y38z") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.0.0-beta.3 (c (n "wasmer-cli") (v "4.0.0-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "clap-verbosity-flag") (r "^2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.6.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.3.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.0.0-beta.3") (k 0)) (d (n "wasmer-cache") (r "=4.0.0-beta.3") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.3") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "^0.1.15") (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0-beta.3") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.1.0") (f (quote ("build-package"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.3") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.8.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.8.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0.4") (k 0)))) (h "0kc7jhn2gkpy2qq7byji2shicy7knvryx53p2wjbx1cgjpbyp1xw") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.0.0 (c (n "wasmer-cli") (v "4.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "isatty") (r "^0.1.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.6.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.3.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wapm-targz-to-pirita") (r "^0.3.1") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.0.0") (k 0)) (d (n "wasmer-cache") (r "=4.0.0") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "^0.1.16") (k 0)) (d (n "wasmer-emscripten") (r "=4.0.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.2.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.0.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.9.0") (f (quote ("logging" "webc_runner" "webc_runner_rt_wcgi" "webc_runner_rt_wasi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.9.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.0.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.0.4") (k 0)))) (h "0xdwhrkhn2gcjvwpbs7awqs9dzbgn2lhni5kcxlqw7m55p2jw09c") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.1.0 (c (n "wasmer-cli") (v "4.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.7.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.4.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.1.0") (k 0)) (d (n "wasmer-cache") (r "=4.1.0") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.1.0") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.17") (k 0)) (d (n "wasmer-emscripten") (r "=4.1.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.3.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.1.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.10.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.10.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.1.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.2.0") (f (quote ("package"))) (k 0)))) (h "063kwl1l6b7yndp5i52k449syvs64d5k2lmvqh8l01is7fr08kc8") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.1.2 (c (n "wasmer-cli") (v "4.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.8.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.5.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.1.2") (k 0)) (d (n "wasmer-cache") (r "=4.1.2") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.1.2") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.23") (k 0)) (d (n "wasmer-emscripten") (r "=4.1.2") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.5.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.1.2") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.12.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.12.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.1.2") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.2.0") (f (quote ("package"))) (k 0)))) (h "1bpljg6asfvd0xlgncalv76qdc7xx323pgzmb61han1vq7ylaw5x") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.2.0 (c (n "wasmer-cli") (v "4.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.8.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.5.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.0") (k 0)) (d (n "wasmer-cache") (r "=4.2.0") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.0") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.25") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.6.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.13.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.13.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.2.0") (f (quote ("package"))) (k 0)))) (h "1qdmb41l2yckjrxh5pb4q2skla6591vxnd2pq3jclr8j32gyq0yl") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.67")))

(define-public crate-wasmer-cli-4.2.1 (c (n "wasmer-cli") (v "4.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.6.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.1") (k 0)) (d (n "wasmer-cache") (r "=4.2.1") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.25") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.7.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.14.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.14.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.5.1") (f (quote ("package"))) (k 0)))) (h "1hvgksd3085cqv0jvzvhbnlns0l43ddqwamc03dqk3zz2vn8b53c") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.70")))

(define-public crate-wasmer-cli-4.2.2 (c (n "wasmer-cli") (v "4.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.6.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (k 0)) (d (n "wasmer-cache") (r "=4.2.2") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.2") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.29") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.8.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.2") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.15.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.15.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.2") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.5.1") (f (quote ("package"))) (k 0)))) (h "0hgv7v60l7w3hs2lsfjjy8095d4wcxl5kpy3m9zz9sfdv8d3ngc9") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.70")))

(define-public crate-wasmer-cli-4.2.3 (c (n "wasmer-cli") (v "4.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.9.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.6.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.3") (k 0)) (d (n "wasmer-cache") (r "=4.2.3") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.3") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-deploy-cli") (r "=0.1.29") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.3") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.9.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.3") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.16.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.16.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.3") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.5.1") (f (quote ("package"))) (k 0)))) (h "0yfvfnkwhm0vwl3xb4ga70z618034kwk3v9bmafnk3ajy8hxp4ga") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.70")))

(define-public crate-wasmer-cli-4.2.4 (c (n "wasmer-cli") (v "4.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.10.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.6.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (k 0)) (d (n "wasmer-cache") (r "=4.2.4") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.4") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "wasmer-edge-cli") (r "=0.1.2") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.10.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.9.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.4") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.17.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.17.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.4") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.8.0") (f (quote ("package"))) (k 0)))) (h "0vbia4fg887hm1shaawjmf0qxi6rm5yyssddj2hcy94s74dra59j") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.70")))

(define-public crate-wasmer-cli-4.2.5 (c (n "wasmer-cli") (v "4.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dialoguer") (r "^0.10.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "distance") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "object") (r "^0.30.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "spinoff") (r "^0.5.4") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-net") (r "^0.6.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.5") (k 0)) (d (n "wasmer-cache") (r "=4.2.5") (f (quote ("blake3-pure"))) (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.5") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-edge-cli") (r "=0.1.4") (k 0)) (d (n "wasmer-emscripten") (r "=4.2.5") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.10.1") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.9.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.5") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wasix-experimental-io-devices") (r "^0.18.0") (f (quote ("link_external_libs"))) (o #t) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.5") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.8.0") (f (quote ("package"))) (k 0)))) (h "1dlkny3hk1qddm6x66nqfhnz5zjhybxcdbr8zwg017xfm5my5nrn") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("experimental-io-devices" "wasmer-wasix-experimental-io-devices") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (r "1.70")))

(define-public crate-wasmer-cli-4.2.6 (c (n "wasmer-cli") (v "4.2.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.0.2") (d #t) (k 0)) (d (n "edge-util") (r "=0.0.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.1") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.0") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.3") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.6") (k 0)) (d (n "wasmer-api") (r "=0.0.24") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.6") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.6") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.10.2") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.9.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.6") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.1") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.6") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.8.0") (f (quote ("package"))) (k 0)))) (h "0mm0qnhsyn3dmgac34jzclqb52y03qk3jfr5yv4ngasj68321yfp") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "futures-util" "mac_address" "dep:interfaces")))) (r "1.73")))

(define-public crate-wasmer-cli-4.2.8 (c (n "wasmer-cli") (v "4.2.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.2.8") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.2.8") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.1.0") (d #t) (k 0)) (d (n "edge-util") (r "=0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "normpath") (r "=1.1.1") (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shared-buffer") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "time01") (r "^0.1.45") (o #t) (d #t) (k 0) (p "time")) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.2") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.1") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.4") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (k 0)) (d (n "wasmer-api") (r "=0.0.25") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.8") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.10.4") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-toml") (r "^0.9.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=4.2.8") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.3") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_dproxy" "webc_runner_rt_emscripten" "host-fs"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.2.8") (o #t) (d #t) (k 0)) (d (n "webc") (r "^5.8.0") (f (quote ("package"))) (k 0)))) (h "02d948qfh48ymmlnarb80aslp5gs5llvlvh4s15d6rfxxr5zirs6") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "futures-util" "mac_address" "dep:interfaces") ("fuse" "dep:fuse" "dep:time01" "dep:shared-buffer" "dep:rkyv")))) (r "1.73")))

(define-public crate-wasmer-cli-4.3.0-alpha.1 (c (n "wasmer-cli") (v "4.3.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.3.0-alpha.1") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.3.0-alpha.1") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.1.0") (d #t) (k 0)) (d (n "edge-util") (r "=0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "normpath") (r "=1.1.1") (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shared-buffer") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "time01") (r "^0.1.45") (o #t) (d #t) (k 0) (p "time")) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.3") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.1") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.3.0-alpha.1") (k 0)) (d (n "wasmer-api") (r "=0.0.26") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0-alpha.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-config") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.11.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0-alpha.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "^0.18.4") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_dproxy" "webc_runner_rt_emscripten" "host-fs" "ctrlc"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.3.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha3") (f (quote ("package"))) (k 0)))) (h "0fqkrm8nl66d4k0can8l9vjyf17lv8ff5fgq5069mik57q1mmgcm") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "futures-util" "mac_address" "dep:interfaces") ("fuse" "dep:fuse" "dep:time01" "dep:shared-buffer" "dep:rkyv")))) (r "1.73")))

(define-public crate-wasmer-cli-4.3.0-beta.1 (c (n "wasmer-cli") (v "4.3.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.3.0-beta.1") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.3.0-beta.1") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.1.0") (d #t) (k 0)) (d (n "edge-util") (r "=0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "normpath") (r "=1.1.1") (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shared-buffer") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "time01") (r "^0.1.45") (o #t) (d #t) (k 0) (p "time")) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.4") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.1") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.3.0-beta.1") (k 0)) (d (n "wasmer-api") (r "=0.0.27") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0-beta.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-config") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0-beta.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.12.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0-beta.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.19.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_dproxy" "webc_runner_rt_emscripten" "host-fs" "ctrlc"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.3.0-beta.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha8") (f (quote ("package"))) (k 0)))) (h "1wsayppg1wc31w5ipyarsr0916p3l2mscghp9qvj2rgcqg6c6bvs") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "mac_address" "dep:interfaces") ("fuse" "dep:fuse" "dep:time01" "dep:shared-buffer" "dep:rkyv")))) (r "1.73")))

(define-public crate-wasmer-cli-4.3.0 (c (n "wasmer-cli") (v "4.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.1.0") (d #t) (k 0)) (d (n "edge-util") (r "=0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "normpath") (r "=1.1.1") (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shared-buffer") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "time01") (r "^0.1.45") (o #t) (d #t) (k 0) (p "time")) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.11.4") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.1") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.3.0") (k 0)) (d (n "wasmer-api") (r "=0.0.27") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-config") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.0") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.13.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.0") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.20.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_dproxy" "webc_runner_rt_emscripten" "host-fs" "ctrlc"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.3.0") (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha8") (f (quote ("package"))) (k 0)))) (h "1n0ab0487wcmmaglc2jrkvc88hwmi8mnckikyy4vg51qfm2z3bfl") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "mac_address" "dep:interfaces") ("fuse" "dep:fuse" "dep:time01" "dep:shared-buffer" "dep:rkyv")))) (r "1.74")))

(define-public crate-wasmer-cli-4.3.1 (c (n "wasmer-cli") (v "4.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 1)) (d (n "clap") (r "^4.3.1") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive" "env"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "clap") (r "^4.3.1") (f (quote ("derive" "env"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "clap_complete") (r "^4.5.2") (d #t) (k 0)) (d (n "clap_mangen") (r "^0.2.20") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "comfy-table") (r "^7.0.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "edge-schema") (r "=0.1.0") (d #t) (k 0)) (d (n "edge-util") (r "=0.1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "interfaces") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mac_address") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "mio") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "normpath") (r "=1.1.1") (d #t) (k 0)) (d (n "object") (r "^0.32.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opener") (r "^0.6.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "multipart" "gzip"))) (t "cfg(not(target_arch = \"riscv64\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls" "json" "multipart"))) (t "cfg(target_arch = \"riscv64\")") (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shared-buffer") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("macros"))) (d #t) (k 0)) (d (n "time01") (r "^0.1.45") (o #t) (d #t) (k 0) (p "time")) (d (n "tldextract") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (d #t) (k 0)) (d (n "tun-tap") (r "^0.1.3") (f (quote ("tokio"))) (o #t) (d #t) (k 0)) (d (n "unix_mode") (r "^0.1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "virtual-fs") (r "^0.12.0") (f (quote ("host-fs"))) (k 0)) (d (n "virtual-mio") (r "^0.3.1") (d #t) (k 0)) (d (n "virtual-net") (r "^0.6.7") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-coredump-builder") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "wasmer") (r "=4.3.1") (k 0)) (d (n "wasmer-api") (r "=0.0.28") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.1") (f (quote ("compiler"))) (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-llvm") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-config") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-emscripten") (r "=4.3.1") (d #t) (k 0)) (d (n "wasmer-object") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-registry") (r "^5.13.0") (f (quote ("build-package" "clap"))) (d #t) (k 0)) (d (n "wasmer-types") (r "=4.3.1") (f (quote ("enable-serde"))) (d #t) (k 0)) (d (n "wasmer-vm") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "wasmer-wasix") (r "=0.21.0") (f (quote ("logging" "webc_runner_rt_wcgi" "webc_runner_rt_dcgi" "webc_runner_rt_dproxy" "webc_runner_rt_emscripten" "host-fs" "ctrlc"))) (d #t) (k 0)) (d (n "wasmer-wast") (r "=4.3.1") (o #t) (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha9") (f (quote ("package"))) (k 0)) (d (n "zip") (r "^1.2.3") (f (quote ("deflate"))) (k 0)))) (h "01fxyys12mzp992lafb5s7224kx7w7pfqiiykhh1s9j6nhgq4a8z") (f (quote (("wat" "wasmer/wat") ("wast" "wasmer-wast") ("wasmer-artifact-load" "compiler" "wasmer/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-load") ("wasmer-artifact-create" "compiler" "wasmer/wasmer-artifact-load" "wasmer/wasmer-artifact-create" "wasmer-compiler/wasmer-artifact-load" "wasmer-compiler/wasmer-artifact-create" "wasmer-object") ("sys" "compiler" "wasmer-vm") ("static-artifact-load" "compiler" "wasmer/static-artifact-load" "wasmer-compiler/static-artifact-load") ("static-artifact-create" "compiler" "wasmer/static-artifact-load" "wasmer/static-artifact-create" "wasmer-compiler/static-artifact-load" "wasmer-compiler/static-artifact-create" "wasmer-object") ("singlepass" "wasmer-compiler-singlepass" "compiler") ("llvm" "wasmer-compiler-llvm" "compiler") ("jsc" "backend" "wasmer/jsc" "wasmer/std") ("journal" "wasmer-wasix/journal") ("host-net" "virtual-net/host-net") ("headless-minimal" "headless" "disable-all-logging") ("headless") ("enable-serde" "wasmer/enable-serde" "wasmer-vm/enable-serde" "wasmer-compiler/enable-serde" "wasmer-wasix/enable-serde") ("disable-all-logging" "wasmer-wasix/disable-all-logging" "log/release_max_level_off") ("default" "sys" "wat" "wast" "compiler" "journal" "wasmer-artifact-create" "static-artifact-create") ("cranelift" "wasmer-compiler-cranelift" "compiler") ("coredump" "wasm-coredump-builder") ("compiler" "backend" "wasmer/compiler" "wasmer-compiler/translator" "wasmer-compiler/compiler") ("backend")))) (s 2) (e (quote (("tun-tap" "dep:tun-tap" "virtual-net/tokio-tungstenite" "tokio-tungstenite" "mio" "mac_address" "dep:interfaces") ("fuse" "dep:fuse" "dep:time01" "dep:shared-buffer" "dep:rkyv")))) (r "1.74")))

