(define-module (crates-io wa sm wasmer-compiler-cranelift) #:use-module (crates-io))

(define-public crate-wasmer-compiler-cranelift-1.0.0-alpha01.0 (c (n "wasmer-compiler-cranelift") (v "1.0.0-alpha01.0") (d (list (d (n "cranelift-codegen") (r "^0.65") (k 0)) (d (n "cranelift-codegen") (r "^0.65") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.65") (k 0)) (d (n "gimli") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha01.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha01.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha01.0") (d #t) (k 0)))) (h "1jmcc9a4g5qy4vn7imv7hy93ph0ndhfpjaaw8rh336xsfpvc78mp") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "cranelift-codegen/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-alpha02.0 (c (n "wasmer-compiler-cranelift") (v "1.0.0-alpha02.0") (d (list (d (n "cranelift-codegen") (r "^0.65") (k 0)) (d (n "cranelift-codegen") (r "^0.65") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.65") (k 0)) (d (n "gimli") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha02.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha02.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha02.0") (d #t) (k 0)))) (h "07n2202m4pq8hsz7pd7d82a27nc0a1whncizxrvpilv4819zvsm5") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "cranelift-codegen/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-alpha3 (c (n "wasmer-compiler-cranelift") (v "1.0.0-alpha3") (d (list (d (n "cranelift-codegen") (r "^0.65") (k 0)) (d (n "cranelift-codegen") (r "^0.65") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.65") (k 0)) (d (n "gimli") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha3") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha3") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha3") (d #t) (k 0)))) (h "0inbp4g65mbd4825im4hf17lb45yndklx1i7iafkpb7p2mpv9zd3") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "cranelift-codegen/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-alpha4 (c (n "wasmer-compiler-cranelift") (v "1.0.0-alpha4") (d (list (d (n "cranelift-codegen") (r "^0.65") (k 0)) (d (n "cranelift-codegen") (r "^0.65") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.65") (k 0)) (d (n "gimli") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha4") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha4") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha4") (d #t) (k 0)))) (h "0czs0k8vjad5npghfnc2kssd9fv42vqad3hj51s5k65j601x876s") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "cranelift-codegen/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-alpha5 (c (n "wasmer-compiler-cranelift") (v "1.0.0-alpha5") (d (list (d (n "cranelift-codegen") (r "^0.67") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.67") (k 0)) (d (n "gimli") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-alpha5") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-alpha5") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-alpha5") (d #t) (k 0)))) (h "032zmdcaf62y3yijhqhl013mllklg3l8plah5z5qzx7qafabfmnd") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-beta1 (c (n "wasmer-compiler-cranelift") (v "1.0.0-beta1") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta1") (d #t) (k 0)))) (h "11vr5d615xq4nn035mkbnv94niqqmbc2pklsb282n1kjnscvji4a") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-beta2 (c (n "wasmer-compiler-cranelift") (v "1.0.0-beta2") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-beta2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-beta2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-beta2") (d #t) (k 0)))) (h "1bxwayd7rgk1g32b47nik9f3zyzldqwry7ajl57mgk2xzj35fa9z") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0-rc1 (c (n "wasmer-compiler-cranelift") (v "1.0.0-rc1") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0-rc1") (d #t) (k 0)))) (h "08yzr3lb6mi9fwiyfhsfga9kpdwsp7r6c6lya7agd7h1jrkwi04f") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.0 (c (n "wasmer-compiler-cranelift") (v "1.0.0") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.0") (d #t) (k 0)))) (h "1l3dmj4ajjhjk0z7cb650jfxji09arq00s0vj0j8g45ybnq8zmk0") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.1 (c (n "wasmer-compiler-cranelift") (v "1.0.1") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.1") (d #t) (k 0)))) (h "0psc8v1n5jmc63isdyvf0iwwxw8pvf07mp1mx3kj82xlk2p4b4im") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-1.0.2 (c (n "wasmer-compiler-cranelift") (v "1.0.2") (d (list (d (n "cranelift-codegen") (r "^0.68") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.67") (f (quote ("enable-serde" "all-arch"))) (d #t) (k 2)) (d (n "cranelift-frontend") (r "^0.68") (k 0)) (d (n "gimli") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^1.0.2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^1.0.2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^1.0.2") (d #t) (k 0)))) (h "1nzxyn204ql5sndd4w7qim745nscxlqf7igl6haxiqcly2ar7js8") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("experimental-x64" "cranelift-codegen/x64") ("enable-serde" "wasmer-compiler/enable-serde" "wasmer-types/enable-serde") ("default" "std" "enable-serde" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.0.0-rc1 (c (n "wasmer-compiler-cranelift") (v "2.0.0-rc1") (d (list (d (n "cranelift-codegen") (r "^0.74") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.74") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.74") (k 0)) (d (n "cranelift-frontend") (r "^0.74") (k 0)) (d (n "gimli") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc1") (d #t) (k 0)))) (h "131hd1yi2dhijkczmkjkbxgnsi3nib9qx2llf6phwss5g0hi7paw") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.0.0-rc2 (c (n "wasmer-compiler-cranelift") (v "2.0.0-rc2") (d (list (d (n "cranelift-codegen") (r "^0.74") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.74") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.74") (k 0)) (d (n "cranelift-frontend") (r "^0.74") (k 0)) (d (n "gimli") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0-rc2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0-rc2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0-rc2") (d #t) (k 0)))) (h "0v4qw4myk94xphq1wcax4vn60grjwbbq52nzg6ip04878djsbl58") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.0.0 (c (n "wasmer-compiler-cranelift") (v "2.0.0") (d (list (d (n "cranelift-codegen") (r "^0.74") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.74") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.74") (k 0)) (d (n "cranelift-frontend") (r "^0.74") (k 0)) (d (n "gimli") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.0.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.0.0") (d #t) (k 0)))) (h "1xjw04ih0yrvmj7lw423h0hdpprl7abmfcymw9wl2hzcrd30fmqs") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.1.0 (c (n "wasmer-compiler-cranelift") (v "2.1.0") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.0") (d #t) (k 0)))) (h "1k8dnm0lk3fc6zkk2mjc4rjyng1ag49wsvwlz8ww7dw2myay3n94") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.1.1 (c (n "wasmer-compiler-cranelift") (v "2.1.1") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "^2.1.1") (d #t) (k 0)))) (h "1wlkcyqmlaqw0x5iij5g9776d2wqrpwn0zqjs8l12kiv68z1ws89") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.2.0-rc1 (c (n "wasmer-compiler-cranelift") (v "2.2.0-rc1") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc1") (d #t) (k 0)))) (h "0ba9b4q8cf0abf60jbsj8mafypcf6fr1hd7976n9d466dqqbc8dx") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.2.0-rc2 (c (n "wasmer-compiler-cranelift") (v "2.2.0-rc2") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0-rc2") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0-rc2") (d #t) (k 0)))) (h "1z626vzkah6dmy3w6yzfrv7faphvcq8pbhva1aph6rq1h7ay3bxj") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.2.0 (c (n "wasmer-compiler-cranelift") (v "2.2.0") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.0") (d #t) (k 0)))) (h "1ar3jfi1b7bga23h54460k3vw1fqr8k28i0bgsd16qxijvsa293n") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.2.1 (c (n "wasmer-compiler-cranelift") (v "2.2.1") (d (list (d (n "cranelift-codegen") (r "^0.76") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.76") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.76") (k 0)) (d (n "cranelift-frontend") (r "^0.76") (k 0)) (d (n "gimli") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.2.1") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (f (quote ("std"))) (k 0)) (d (n "wasmer-vm") (r "=2.2.1") (d #t) (k 0)))) (h "082zrrp1zxszri5gc1k83n5r3nwk25zwp71b7a7nckp4pirk5j24") (f (quote (("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-2.3.0 (c (n "wasmer-compiler-cranelift") (v "2.3.0") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=2.3.0") (f (quote ("translator"))) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (f (quote ("std"))) (k 0)))) (h "1q6s4ffsj14mgx2s2jk5bapry4dyrfi4dfgqwi4qdw4mcjgjzgj8") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-alpha (c (n "wasmer-compiler-cranelift") (v "3.0.0-alpha") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha") (f (quote ("std"))) (k 0)))) (h "14ba8bkcnjg0zsbsspxqnjgm1d0w3i647dwznjra2mcbkxjsk9jb") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-alpha.1 (c (n "wasmer-compiler-cranelift") (v "3.0.0-alpha.1") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "1ghd6r7x0dvppq4h9lxf9wk27003gizakl0k9m69z1vd22qdkam8") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-alpha.2 (c (n "wasmer-compiler-cranelift") (v "3.0.0-alpha.2") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.2") (f (quote ("std"))) (k 0)))) (h "0yaa5jfvsa21471c2fyd8s1n4gyfhr3vbxrn0ig6pgg0avcgdwc3") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-alpha.3 (c (n "wasmer-compiler-cranelift") (v "3.0.0-alpha.3") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.3") (f (quote ("std"))) (k 0)))) (h "06j512rig2bvhjlnyr2njd82jjqfwd0xqb8381vdaz7pm4z3xmr1") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-alpha.4 (c (n "wasmer-compiler-cranelift") (v "3.0.0-alpha.4") (d (list (d (n "cranelift-codegen") (r "^0.82") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.82") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.82") (k 0)) (d (n "cranelift-frontend") (r "^0.82") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-alpha.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.4") (f (quote ("std"))) (k 0)))) (h "0jpg2rwawm2z5g5gl3kd5xazm5y21hmk8h6zh96c7x5rywk7cjlq") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-beta (c (n "wasmer-compiler-cranelift") (v "3.0.0-beta") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-beta") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta") (f (quote ("std"))) (k 0)))) (h "1iv4bw49g7bfp0pyznqxzvakryci75470nbbfn1mv5c5bj4s94j4") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-beta.2 (c (n "wasmer-compiler-cranelift") (v "3.0.0-beta.2") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta.2") (f (quote ("std"))) (k 0)))) (h "0sa13cbsyfbxm6fl8q6f48a84bkdy00n1gr8gwalzp6kwlhw7yph") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-rc.1 (c (n "wasmer-compiler-cranelift") (v "3.0.0-rc.1") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.1") (f (quote ("std"))) (k 0)))) (h "0kmmp8qpmpr86z3s4wx5yyp7dadf7v1jmgfgmfg14m479wwb0c29") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-rc.2 (c (n "wasmer-compiler-cranelift") (v "3.0.0-rc.2") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.2") (f (quote ("std"))) (k 0)))) (h "1qk2db0v56429g819fvmiwxj2f3h047baralcxfpal0ch0fffpy4") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-rc.3 (c (n "wasmer-compiler-cranelift") (v "3.0.0-rc.3") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.3") (f (quote ("std"))) (k 0)))) (h "03wpjb1xln42sglwxjm489ychxiw8xcmc1kn0xp4n340hr25w3h5") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0-rc.4 (c (n "wasmer-compiler-cranelift") (v "3.0.0-rc.4") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0-rc.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.4") (f (quote ("std"))) (k 0)))) (h "1dpxbk620lqjibmbi6c55sr2b25vk7slgalqh5cpirhiyxmbhk8l") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.0 (c (n "wasmer-compiler-cranelift") (v "3.0.0") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.0") (f (quote ("std"))) (k 0)))) (h "1h5nh4gm4bk1qfz38mknxasgrv27h1qafj55r0cdxjcbpq6cpxfa") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.1 (c (n "wasmer-compiler-cranelift") (v "3.0.1") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.1") (f (quote ("std"))) (k 0)))) (h "0dz0rafc0z785v8dkflsgl31nrbayhhx4jyfa2sa3q33pjd8v31i") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.2 (c (n "wasmer-compiler-cranelift") (v "3.0.2") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.2") (f (quote ("std"))) (k 0)))) (h "1rbnmg607ra0l7hir0zk6rjz288ajj9n5la9h8wpypkfrfr1k4h0") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.1.0 (c (n "wasmer-compiler-cranelift") (v "3.1.0") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.1.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.1.0") (f (quote ("std"))) (k 0)))) (h "1gg9cwy2y7vma7736vlv0wkmqf251143vny9xwrv03p4gim8ax19") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.2.0-alpha.1 (c (n "wasmer-compiler-cranelift") (v "3.2.0-alpha.1") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "0nhj495rqf489fmx3jdr3gcrz1wlk3krnvfpzwc87addg9miwyxp") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.0.3 (c (n "wasmer-compiler-cranelift") (v "3.0.3") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.0.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.0.3") (f (quote ("std"))) (k 0)))) (h "1y6knczsashfcrxjl38qdmb9p70bqy8ziyh3zajawabbncmm8ps3") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.1.1 (c (n "wasmer-compiler-cranelift") (v "3.1.1") (d (list (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("x86" "arm64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.86.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.86.1") (k 0)) (d (n "cranelift-frontend") (r "^0.86.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.1.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.1.1") (f (quote ("std"))) (k 0)))) (h "13z5d1ifkns9djqpblnjkzd96jsjzbbnns611ma8jj68kxifyph1") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.2.0-beta.1 (c (n "wasmer-compiler-cranelift") (v "3.2.0-beta.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-beta.1") (f (quote ("std"))) (k 0)))) (h "0ahwk6w4z4j71yi5cpg24cc4aawwpc8vfj094if64zvy24nm579c") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.2.0-beta.2 (c (n "wasmer-compiler-cranelift") (v "3.2.0-beta.2") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0-beta.2") (f (quote ("std"))) (k 0)))) (h "1vbylj059a91ivff4mhd0krpvx2hz1gvni3blwxxwihzc3fiq1bv") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.2.0 (c (n "wasmer-compiler-cranelift") (v "3.2.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.0") (f (quote ("std"))) (k 0)))) (h "1388mdkaqdyxdk5gc03p4gc6yss2fpddm9dc24r814spv5gwg800") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.2.1 (c (n "wasmer-compiler-cranelift") (v "3.2.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.2.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.2.1") (f (quote ("std"))) (k 0)))) (h "1gaiiyhsnnk5hkridxj0afscq8vzp2qx85qdi4n35n50mivh2965") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-3.3.0 (c (n "wasmer-compiler-cranelift") (v "3.3.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=3.3.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=3.3.0") (f (quote ("std"))) (k 0)))) (h "15bcclp2s48p82szjv75j0fa36xjqycrfgyzpcz5cwpkj0zn7rd1") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-4.0.0-alpha.1 (c (n "wasmer-compiler-cranelift") (v "4.0.0-alpha.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "0ad1sx58gdrh3v93c34kqfrv3l9h0fn9p68w90a28k7ywcjfqfsv") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core"))))))

(define-public crate-wasmer-compiler-cranelift-4.0.0-beta.1 (c (n "wasmer-compiler-cranelift") (v "4.0.0-beta.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.1") (f (quote ("std"))) (k 0)))) (h "1kvwq911x4ldf7bl4hms5wkdiyp77x339c60hf1jn9lan0wv8vvf") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.0.0-beta.2 (c (n "wasmer-compiler-cranelift") (v "4.0.0-beta.2") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.2") (f (quote ("std"))) (k 0)))) (h "1gw01lqhy4gh9bsawmkcpjlmbapiyllzx64s60nxllgc1h5vv6r1") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.0.0-beta.3 (c (n "wasmer-compiler-cranelift") (v "4.0.0-beta.3") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0-beta.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0-beta.3") (f (quote ("std"))) (k 0)))) (h "1khch22sq2xfy89w0xdk9d3mf9z52ii3s1shs4s0xiy8ivj3dknd") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.0.0 (c (n "wasmer-compiler-cranelift") (v "4.0.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.0.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.0.0") (f (quote ("std"))) (k 0)))) (h "1nw3vpclzkik6mm1qjl8fhhi6wicj2ilskp1xf4qf5971mkv29rv") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.1.0 (c (n "wasmer-compiler-cranelift") (v "4.1.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.1.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.0") (f (quote ("std"))) (k 0)))) (h "1vzlysw89igbsjqf02n98hjshjlvx5wk58nxaidhyb43qsiivq55") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.1.1 (c (n "wasmer-compiler-cranelift") (v "4.1.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.1.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.1") (f (quote ("std"))) (k 0)))) (h "1ibibq8bdn8dja8sn421l1a1jrcw9s278r3wz0yfbznis2hicv7l") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.1.2 (c (n "wasmer-compiler-cranelift") (v "4.1.2") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.1.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.1.2") (f (quote ("std"))) (k 0)))) (h "1gg34w9rp9z2yyjpiqy2lm14g7a6kkfagsadspz08fji6ppz5bjj") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.2.0 (c (n "wasmer-compiler-cranelift") (v "4.2.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.0") (f (quote ("std"))) (k 0)))) (h "0j4nknkh4rvrvbgs35a2pzbp3r61a99xjz1w54kby1zhf30xqylm") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.67")))

(define-public crate-wasmer-compiler-cranelift-4.2.1 (c (n "wasmer-compiler-cranelift") (v "4.2.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.1") (f (quote ("std"))) (k 0)))) (h "03ghgr15qxv5kbw7risvivhwsb8mndnvsyf84bc2xrd8hhw4kp0v") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.70")))

(define-public crate-wasmer-compiler-cranelift-4.2.2 (c (n "wasmer-compiler-cranelift") (v "4.2.2") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.2") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.2") (f (quote ("std"))) (k 0)))) (h "1d20394kcmh3jbrkvvxn4kjpvsj7ksslj9zwvi79annizbkbr5ix") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.70")))

(define-public crate-wasmer-compiler-cranelift-4.2.3 (c (n "wasmer-compiler-cranelift") (v "4.2.3") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.3") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.3") (f (quote ("std"))) (k 0)))) (h "01vdq8ak9yjywa0qwras7lrvzryjr1n1azzy69i7a8n1hq8mykrl") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.70")))

(define-public crate-wasmer-compiler-cranelift-4.2.4 (c (n "wasmer-compiler-cranelift") (v "4.2.4") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.4") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.4") (f (quote ("std"))) (k 0)))) (h "12f8ikn56ij7y3pc9qsmrncjz2vzzd46c78wg6fi8jmliqsh5kij") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.70")))

(define-public crate-wasmer-compiler-cranelift-4.2.5 (c (n "wasmer-compiler-cranelift") (v "4.2.5") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.5") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.5") (f (quote ("std"))) (k 0)))) (h "1hd5vsxw1fdsssggpzn23xvvmnmx6mckrplqsxh3kn4hi43r7gsl") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.70")))

(define-public crate-wasmer-compiler-cranelift-4.2.6 (c (n "wasmer-compiler-cranelift") (v "4.2.6") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.6") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.6") (f (quote ("std"))) (k 0)))) (h "11j3jkywxnapryvwqb94gyrgz5v7l8ppwxi581f4jsdcmidjqbhh") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.73")))

(define-public crate-wasmer-compiler-cranelift-4.2.8 (c (n "wasmer-compiler-cranelift") (v "4.2.8") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.2.8") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.2.8") (f (quote ("std"))) (k 0)))) (h "04ixq0iynhapwfvy29kbw54z2rnpbncqm8s5fwsrakvmpizc904j") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.73")))

(define-public crate-wasmer-compiler-cranelift-4.3.0-alpha.1 (c (n "wasmer-compiler-cranelift") (v "4.3.0-alpha.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0-alpha.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0-alpha.1") (f (quote ("std"))) (k 0)))) (h "1s2gbmssw1200dz84s8978l51plvg73p7486zqzhzcvd4pyr5c0p") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.73")))

(define-public crate-wasmer-compiler-cranelift-4.3.0-beta.1 (c (n "wasmer-compiler-cranelift") (v "4.3.0-beta.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0-beta.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0-beta.1") (f (quote ("std"))) (k 0)))) (h "0qz6cmyic47v14crf8yglf0vkrafxb93276azg7r0i51lpxh4r24") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.73")))

(define-public crate-wasmer-compiler-cranelift-4.3.0 (c (n "wasmer-compiler-cranelift") (v "4.3.0") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.0") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.0") (f (quote ("std"))) (k 0)))) (h "15bprckghbb01y9cp8svx8zlk3pdb3mj12mhr4cr9nkvivg7p1j2") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.74")))

(define-public crate-wasmer-compiler-cranelift-4.3.1 (c (n "wasmer-compiler-cranelift") (v "4.3.1") (d (list (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("x86" "arm64" "riscv64"))) (k 0)) (d (n "cranelift-codegen") (r "^0.91.1") (f (quote ("all-arch"))) (d #t) (k 2)) (d (n "cranelift-entity") (r "^0.91.1") (k 0)) (d (n "cranelift-frontend") (r "^0.91.1") (k 0)) (d (n "gimli") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "=4.3.1") (f (quote ("translator" "compiler"))) (k 0)) (d (n "wasmer-types") (r "=4.3.1") (f (quote ("std"))) (k 0)))) (h "1jak2axa9m6k5dfmhmg6nyk53fab1ngyycsp462z9m9sjxwpna4m") (f (quote (("wasm" "std" "unwind") ("unwind" "cranelift-codegen/unwind" "gimli") ("std" "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std") ("default" "std" "unwind" "rayon") ("core" "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core")))) (r "1.74")))

