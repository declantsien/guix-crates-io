(define-module (crates-io wa sm wasmbus-rpc) #:use-module (crates-io))

(define-public crate-wasmbus-rpc-0.1.1 (c (n "wasmbus-rpc") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.9.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "1pq64hn1vripn72k1vkrfk4vbb342hgm23d67rk90i2appw4qpcf") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.1.2 (c (n "wasmbus-rpc") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.9.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0p309s3f0jl2db6n0fhb9v9p6pxbj3k8m0yhdwambycw4kn4vw7d") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.1.3 (c (n "wasmbus-rpc") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.9.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "1s102kwlnzm09avszzxx4xrq0abs9kg47bq210chsb7hwa5alf5m") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.1.4 (c (n "wasmbus-rpc") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.9.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "03grgym71j7r1bp38xd4ml59mnqx9ldixlnq9jg6hrad4hrwr0kb") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.1.5 (c (n "wasmbus-rpc") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "1dckkx54jsjd01siqpbxhvyx2fzjpdy8c6b1jfnn7qg66dsy206l") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.2.0 (c (n "wasmbus-rpc") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0fw8jjbm62spgz13wrw30j1sddqw1y64s01v3iwr2qbv1k6lh210") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.2.1 (c (n "wasmbus-rpc") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0rlyh20xm6azli1am1jxghfh69cg4ykc8lwd46kilbp7a92f6ls5") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.2.2 (c (n "wasmbus-rpc") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0i914x8hfz9l2ch70an3mqjcjqbm2r43hgyq0zsg3ml77lynixy2") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.2.4 (c (n "wasmbus-rpc") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "1wj9gc5m0s59dx9jps05l3c7kz26cxa6rcc5hm3ii9zn43sdy7xd") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.0 (c (n "wasmbus-rpc") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0fm0m7lz6dfxj82hc355c2n3yr11y9092dah11vwb8yggia3bixk") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.1 (c (n "wasmbus-rpc") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "1pnjh85zrw3b2kvl89v3q2yidxkv3gymjlr4j662wj8g9fx4day5") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.2 (c (n "wasmbus-rpc") (v "0.3.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0f1rzkp76cbl54c0zmd3my2g4n1hi522h315m36f466qx89i5pji") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.3 (c (n "wasmbus-rpc") (v "0.3.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "00ls8b88h3490laaxxln0z6lpljj1vzc99blb0w5vjmpsdm20l5f") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.4 (c (n "wasmbus-rpc") (v "0.3.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0i5zi81nddaba7pqcphz3cybmplb6nkbyh8r7n1y3yxmyh10bhzb") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.5 (c (n "wasmbus-rpc") (v "0.3.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "0fbcckj8kr2lsbkgawy2ic1144p663kw827lmsax4hlkl28linvm") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.6 (c (n "wasmbus-rpc") (v "0.3.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "109zbkd4yqjw9agayih12i14hpn3rsbzwxm56dwa2ahaydv8kyw0") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.7 (c (n "wasmbus-rpc") (v "0.3.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "16h45xzkx42xl029nji9df19sa4i1fqv0g6n44p8w0hx31bxsyb2") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.8 (c (n "wasmbus-rpc") (v "0.3.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "07d08hfvbi78rarih9afn1vprgkc0wi73qbfqr5967i6rcds841x") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.9 (c (n "wasmbus-rpc") (v "0.3.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1") (d #t) (k 1)))) (h "01h2ylrrbl2ak8p105hsnnfkzcpyb786i3lhsq6s18d2hn7f9ysf") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.10 (c (n "wasmbus-rpc") (v "0.3.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "1kj639qxvgc4pqrzvyzjqfk6q4fxzdzl420c32i4a2bmmafv8pzx") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.11 (c (n "wasmbus-rpc") (v "0.3.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "043vvywmcq0haf2a9c1l9kzs3lq1z3iafwm3v16ghryx2mp2ixfw") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.3.12 (c (n "wasmbus-rpc") (v "0.3.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "02scz522mhm5mici22x726jvqq48vwzvyz7a85zg92s6dwqvm3j9") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.4.0 (c (n "wasmbus-rpc") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "07js98761fi55g9b5ik16f4c3xgrzr7izdwnriy3271vv4c2hlll") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.4.1 (c (n "wasmbus-rpc") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "1b0qymp9jfha2iif5jj3r939bgfbagyj50i467gp1llq48189rm8") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.4.2 (c (n "wasmbus-rpc") (v "0.4.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "0xhx29dk198ppd99d0baf540dsy9hcldv4gxr963h3zsg58m1x8k") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.4.3 (c (n "wasmbus-rpc") (v "0.4.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.17") (d #t) (k 1)))) (h "0vjc8sra2akds39ngih2rfi4qrw3w273s1ymf9q4mxgaihig1l4c") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.4.4 (c (n "wasmbus-rpc") (v "0.4.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.1.18") (d #t) (k 1)))) (h "1nhqap33h37j722xdmmfhf2nqd1dyn26npv9vssr7yv2isf1ahij") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.1 (c (n "wasmbus-rpc") (v "0.5.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2") (d #t) (k 1)))) (h "0rnrz2bhk1d1lg8x16ss05gsq7blpv2nqjraykx187cg7wdd4f36") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.2 (c (n "wasmbus-rpc") (v "0.5.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "09259sbl32bng8xyq6criwlipbafa9qaarnwm6h7a6vs3igg8xc8") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.3 (c (n "wasmbus-rpc") (v "0.5.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "053b6iq8m3mma7g17596jdlh7aq4a808ypj65gnv2dflxcyijf6j") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.4 (c (n "wasmbus-rpc") (v "0.5.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "04j7n6sjlsj8j9ga7f8zfkxpgf7cr27xwlaslljpbvfgj2klg1g8") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.5 (c (n "wasmbus-rpc") (v "0.5.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "0v641apjc01i5y03avir2l4nxnckbkc6z8gv5kaf0ddc2m0x3ghw") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.5.6 (c (n "wasmbus-rpc") (v "0.5.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.11") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "0jc32mpb9qnc92mccsszn6cdn1q823qp31wnpbfwkq8kznfvniq6") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.6.0 (c (n "wasmbus-rpc") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.12") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "19cbrl9gg3bvb6nq6pwrjaj0l9n45bsxzqkfw3pdq8fg9hla12j0") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (y #t)))

(define-public crate-wasmbus-rpc-0.6.1 (c (n "wasmbus-rpc") (v "0.6.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.12") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ratsio") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "ratsio_fork_040")) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "1cn2by6wdaiyngvq04b64mvhdfz3jl4bk7z9zfykdzapqzzyn28y") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.0-alpha.1 (c (n "wasmbus-rpc") (v "0.7.0-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.12") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.103") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "17q1r7vwiqfd49kdwg86vmvym333a5si5v7123kal5d1ilj1zli4") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.0-alpha.2 (c (n "wasmbus-rpc") (v "0.7.0-alpha.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.12") (f (quote ("derive" "std" "half"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.103") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.2.3") (d #t) (k 1)))) (h "0ri2schlbpiq2wsgjqfpcfj7nzc80lypn0g7p17y7jmhchq6bprf") (f (quote (("ser_msgpack" "rmp-serde") ("ser_json") ("default" "ser_msgpack") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.0 (c (n "wasmbus-rpc") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.103") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.0") (d #t) (k 1)))) (h "15d219lwnwqphcpvms7l1sz0hgbbf3fqsylb3m94dvvh03gz58l3") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (y #t)))

(define-public crate-wasmbus-rpc-0.7.1 (c (n "wasmbus-rpc") (v "0.7.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.103") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.0") (d #t) (k 1)))) (h "1y4c3cfzdl07c65mskfz6iwag154a9f8rlq2kkwgapwxiji8c7n1") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.2 (c (n "wasmbus-rpc") (v "0.7.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.6") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.0") (d #t) (k 1)))) (h "0cdb9rirqkgrjxllvwm3nas0sj7gzqlnw8ir38pfkadw352qzgda") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.3 (c (n "wasmbus-rpc") (v "0.7.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.7") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.0") (d #t) (k 1)))) (h "1yhrd58mfbl5d850m63gyfsnvcffpkb1h0z8jr963mkrrmd87xxj") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.7.4 (c (n "wasmbus-rpc") (v "0.7.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.7") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.3") (d #t) (k 1)))) (h "02k8fhkg75qkq83gf7pzds1cl1k1c3zzbl6s6bkp4v1xgcp8ds15") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (y #t)))

(define-public crate-wasmbus-rpc-0.7.5 (c (n "wasmbus-rpc") (v "0.7.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.7") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.3.3") (d #t) (k 1)))) (h "00lgry54z9jwz8z06f6fcp1zdlmg5pna3bwsdyd3pbmbdg1xznww") (f (quote (("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.8.0 (c (n "wasmbus-rpc") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.0") (d #t) (k 1)))) (h "1y0nydj7hckm95w77yzh5axzjbzhwxhs57zac2pr2pqlgwi4hr68") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (y #t)))

(define-public crate-wasmbus-rpc-0.8.1 (c (n "wasmbus-rpc") (v "0.8.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.1") (d #t) (k 1)))) (h "0rw8bzvfbqb5bj2gn07pgwhf65dylsmr9hc06wqdlcxh04mjq0yn") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (y #t)))

(define-public crate-wasmbus-rpc-0.8.2 (c (n "wasmbus-rpc") (v "0.8.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.1") (d #t) (k 1)))) (h "0b7kzi2flygb9z22bm00z2mrabbz52f7360zcdqaqgdzg1p7dkxf") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.8.3 (c (n "wasmbus-rpc") (v "0.8.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.1") (d #t) (k 1)))) (h "0i7lyw56ciflsmjn382yvllhb5bsd5fg1gcpbbbwy8pwxnlr5cyw") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.8.4 (c (n "wasmbus-rpc") (v "0.8.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.3") (d #t) (k 1)))) (h "1sblyjsn4al0v2nq5zgv75pybxh84d455yfj1hmrxdscvrjarmvy") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.8.5 (c (n "wasmbus-rpc") (v "0.8.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.13") (f (quote ("std" "partial-skip-support"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nats-aflowt") (r "^0.16.104") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^0.15.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.3") (d #t) (k 1)))) (h "1hd12sbhnc21qc6m8h7kr9yf6dqw983hvxhf852mjz8z4ycblzja") (f (quote (("default" "chunkify") ("chunkify" "nats") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal"))))))

(define-public crate-wasmbus-rpc-0.9.0 (c (n "wasmbus-rpc") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.20.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.6") (d #t) (k 1)))) (h "089x12zb19pcliqprci3kf1iklbjh67bfivicn204h8iivpn9xid") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (s 2) (e (quote (("prometheus" "dep:prometheus"))))))

(define-public crate-wasmbus-rpc-0.9.1 (c (n "wasmbus-rpc") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.20.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.6") (d #t) (k 1)))) (h "1rr9h3nr21h7fa1bdnvdpcxnkkc5v0rjyd57zsl3g0cfcjsn13ml") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (s 2) (e (quote (("prometheus" "dep:prometheus"))))))

(define-public crate-wasmbus-rpc-0.9.2 (c (n "wasmbus-rpc") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.6") (d #t) (k 1)))) (h "0pk88rz8465in24phdp9ch9rqrv6yq810ml70s5lc8b0079h14bv") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (s 2) (e (quote (("prometheus" "dep:prometheus"))))))

(define-public crate-wasmbus-rpc-0.9.3 (c (n "wasmbus-rpc") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.10") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.4.6") (d #t) (k 1)))) (h "09siy74jalll4vpl39qzknkf1w3bi901j95xgqsws4kxv7bjrc49") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (s 2) (e (quote (("prometheus" "dep:prometheus"))))))

(define-public crate-wasmbus-rpc-0.10.0 (c (n "wasmbus-rpc") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.13") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.5.0") (d #t) (k 1)))) (h "06ll0gsxiyic4llk5hgckgdzq3zcmxrdkfnazp0r8i740wlspqr5") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.58.1")))

(define-public crate-wasmbus-rpc-0.10.1 (c (n "wasmbus-rpc") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-nats") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.13") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.5.0") (d #t) (k 1)))) (h "1bzgqa4frv3zf1nzc4iabmbknskk27dbyjmx5f0daglvs5m4y9l4") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.58.1")))

(define-public crate-wasmbus-rpc-0.11.0-alpha.1 (c (n "wasmbus-rpc") (v "0.11.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.11") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.6.0") (d #t) (k 1)))) (h "0d5cpca09d8z89jadhj5l05i022pyf2yfm7aggfjnifsf90g126j") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.11.0 (c (n "wasmbus-rpc") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.11") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.6.0") (d #t) (k 1)))) (h "0i19p3r7fnvx6c89xdscgdn5p0blzrcflpaj7y1v3a8wzm80bxl8") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.11.1 (c (n "wasmbus-rpc") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.6.0") (d #t) (k 1)))) (h "1c47b0shhyyzpkqg9kzx2rwr2x27qlwvwnl1bfy0f0wy65b7rh8b") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.11.2 (c (n "wasmbus-rpc") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.23.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.6.0") (d #t) (k 1)))) (h "0k2ccn9nixgpddgbi7rrz0815z44rlvb19x3vl4sfr04y9q1cx20") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.12.0 (c (n "wasmbus-rpc") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.27.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 1)))) (h "0dki6rnnzhqy0jv7c0f60crd0ybrngdq5dqzjmixwq06m7h6n7z6") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.13.0 (c (n "wasmbus-rpc") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 1)))) (h "14sxkillkh5f9svi6lppg2n5079sb0nbfl16kca505inp1hjx9rb") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.14.0 (c (n "wasmbus-rpc") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.30") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 1)))) (h "0ddr9bfr0l908v817gxvqv4lwp296g911dcvdvsmmqg9k1bf591d") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

(define-public crate-wasmbus-rpc-0.15.0 (c (n "wasmbus-rpc") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 2)) (d (n "async-nats") (r "^0.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.22") (f (quote ("derive"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "minicbor-ser") (r "^0.1.2") (d #t) (k 0)) (d (n "nkeys") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (f (quote ("http-proto" "reqwest-client"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wascap") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmbus-macros") (r "^0.1.11") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 1)))) (h "0nph63cl7w0xx7xwnzpv4mvaj1170v0grp9ibaa3m9492221fx6i") (f (quote (("otel" "opentelemetry" "tracing-opentelemetry" "opentelemetry-otlp") ("metrics" "prometheus") ("default") ("BigInteger" "num-bigint") ("BigDecimal" "bigdecimal")))) (r "1.64")))

