(define-module (crates-io wa sm wasmer-wasi-types) #:use-module (crates-io))

(define-public crate-wasmer-wasi-types-2.0.0 (c (n "wasmer-wasi-types") (v "2.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.0.0") (d #t) (k 0)))) (h "0a8wzq8kwpisn0pq4g237rjcqmasa346nnzjcag5zxlh07gpb8jm")))

(define-public crate-wasmer-wasi-types-2.1.0 (c (n "wasmer-wasi-types") (v "2.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.0") (d #t) (k 0)))) (h "1mxxdw6fpzhdb9n5nag29y7f6gdk39rsf27fvns691shbw7wwbjd") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.1.1 (c (n "wasmer-wasi-types") (v "2.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "^2.1.1") (d #t) (k 0)))) (h "165gn4v6b4gc67y8d47lh2hd2s6zvn8k1dxy2hs64dp518628cbp") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.2.0-rc1 (c (n "wasmer-wasi-types") (v "2.2.0-rc1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc1") (d #t) (k 0)))) (h "11a1r93k40c55qps1qvymkpnv10q6bhms7wvvsmpg6axh9p9mx23") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.2.0-rc2 (c (n "wasmer-wasi-types") (v "2.2.0-rc2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0-rc2") (d #t) (k 0)))) (h "0zgjhhzmz737siw6gg7mip5q4lq8914y0x8f3mrfdb6y4972dapk") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.2.0 (c (n "wasmer-wasi-types") (v "2.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.0") (d #t) (k 0)))) (h "1i097d43cvj17fibjpl3cz4r8803mv5yfwvgr1g1mwk7na5iqlrj") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.2.1 (c (n "wasmer-wasi-types") (v "2.2.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.2.1") (d #t) (k 0)))) (h "0fndzdbl3362m6vhskwlbk3dnwizdv3m40hyigxikkc91n6vvbb9") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-2.3.0 (c (n "wasmer-wasi-types") (v "2.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=2.3.0") (d #t) (k 0)))) (h "0s44g847lvkp2rdcd9gj7id28krp0pqvc711wf6ki5yzvfm87p12") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-alpha (c (n "wasmer-wasi-types") (v "3.0.0-alpha") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-alpha") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha") (d #t) (k 0)))) (h "07gawjq3jmzqarqggm3gq58q1vxcx6w1cl7bw0g7mwsa770nby56") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-alpha.1 (c (n "wasmer-wasi-types") (v "3.0.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.1") (d #t) (k 0)))) (h "18c7m8c91d6a9is1gjckddxcil9yspfv2dzmd15008vwiikx6yg7") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-alpha.2 (c (n "wasmer-wasi-types") (v "3.0.0-alpha.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-alpha.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.2") (d #t) (k 0)))) (h "1fby8dbsr2fr4g6qy5mbr74xay1nldqb99qmqmq1wflk2fwnbi2p") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-alpha.3 (c (n "wasmer-wasi-types") (v "3.0.0-alpha.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-alpha.3") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.3") (d #t) (k 0)))) (h "1w55whis367bmbbxjz8p2858h03xrbhkjv82gyyxr6pwsvs58vc1") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-alpha.4 (c (n "wasmer-wasi-types") (v "3.0.0-alpha.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-alpha.4") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-alpha.4") (d #t) (k 0)))) (h "1nflc2ay05r58ii9bj2hmfaqi127g3rpb9crbnfds64n53n0a1hv") (f (quote (("enable-serde" "serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-beta (c (n "wasmer-wasi-types") (v "3.0.0-beta") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-beta") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta") (d #t) (k 0)))) (h "183xykfima1xkqdm3lfa8s78rp85n6xmcawj6s7az8b217d2v0hf") (f (quote (("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-beta.2 (c (n "wasmer-wasi-types") (v "3.0.0-beta.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-beta.2") (d #t) (k 0)))) (h "0v1nlvbvjmz5wpxhanl9i1qrvg3w4n0km3sia3kn7hwazjksgbd5") (f (quote (("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-rc.1 (c (n "wasmer-wasi-types") (v "3.0.0-rc.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (k 0)) (d (n "wasmer-derive") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.1") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "16rgcnknp8pclci8ipci5prdk5zqq3i5scdww3i7z6dsiqdh4xq7") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde") ("default" "sys"))))))

(define-public crate-wasmer-wasi-types-3.0.0-rc.2 (c (n "wasmer-wasi-types") (v "3.0.0-rc.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.2") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "0z910rblrwvmz1cibv7mnpyjnvzmih3si6mcj7vdrrpz3jcj07y9") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-rc.3 (c (n "wasmer-wasi-types") (v "3.0.0-rc.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.3") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "0gv0v7h32sn3sz9maswaj4b537xs8nf7pb9m2ig8dvx9rb2djl12") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0-rc.4 (c (n "wasmer-wasi-types") (v "3.0.0-rc.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0-rc.4") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "105y16vkkq586i81i9wcdsk378by3vdgq2a356vwp7x61izzpjhq") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.0 (c (n "wasmer-wasi-types") (v "3.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.0") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "0i85r3hcwghk4q9z2gjpyd554jzmrn60mk7ia7lgdq0860hhfl0w") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.1 (c (n "wasmer-wasi-types") (v "3.0.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.1") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "1x4fxy4sv9pn969abl0k9v3asvb72brg3gn0bav38zzmqfyii4is") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.2 (c (n "wasmer-wasi-types") (v "3.0.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.0.2") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.2") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "1knjqkn5m2a6s9g8ly25hrybhhb7mqc4jpbn7s5rjppvsxavx6b2") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.1.0 (c (n "wasmer-wasi-types") (v "3.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer-derive") (r "=3.1.0") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.0") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")))) (h "0k5v834wxhj5a9j6p09jgh6gjkk0qhf75486sdbqcqr0ghzy02y9") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.2.0-alpha.1 (c (n "wasmer-wasi-types") (v "3.2.0-alpha.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer") (r "=3.2.0-alpha.1") (k 0)) (d (n "wasmer-derive") (r "=3.2.0-alpha.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.2.0-alpha.1") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)))) (h "0cjk18qknr8lqz4agbd2swp4jkza0a5l1vbd0rc3k0x7kvi5dgn9") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.0.3 (c (n "wasmer-wasi-types") (v "3.0.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.0.3") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.0.3") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jv1z413fxwq8mpkrvnd484jrqnjjq9plsgvmc4klxa6xys6acda") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

(define-public crate-wasmer-wasi-types-3.1.1 (c (n "wasmer-wasi-types") (v "3.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wasmer-derive") (r "=3.1.1") (d #t) (k 0)) (d (n "wasmer-types") (r "=3.1.1") (d #t) (k 0)) (d (n "wit-bindgen-core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-core")) (d (n "wit-bindgen-rust") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-rust")) (d (n "wit-bindgen-rust-wasm") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-bindgen-gen-rust-wasm")) (d (n "wit-parser") (r "^0.1.1") (d #t) (k 0) (p "wasmer-wit-parser")) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasmer") (r "^3.0.0-beta") (f (quote ("js"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m3121d096lik4rj32kjzlr86w4gl1idd0qb27vjplk27k4dxbz1") (f (quote (("sys" "wasmer/sys") ("js" "wasmer/js") ("enable-serde" "serde" "wasmer-types/serde"))))))

