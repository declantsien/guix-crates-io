(define-module (crates-io wa sm wasmer-clif-backend) #:use-module (crates-io))

(define-public crate-wasmer-clif-backend-0.1.0 (c (n "wasmer-clif-backend") (v "0.1.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.26.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.1.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)))) (h "132k3bqv83a09a723wr4b1wc7240jn4w752dqnzbs89x5nz6dfsj")))

(define-public crate-wasmer-clif-backend-0.1.1 (c (n "wasmer-clif-backend") (v "0.1.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.26.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)))) (h "1yp7x9k8gizyb5412ixcrg829dlimgmqwn9fnpp1l57yq13i4gqs")))

(define-public crate-wasmer-clif-backend-0.1.2 (c (n "wasmer-clif-backend") (v "0.1.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.26.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.1.2") (d #t) (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)))) (h "1yx4j94is287j0i2k0xhr8vr5cfq1mbp4lx607rrvmlqx2cjm6n1")))

(define-public crate-wasmer-clif-backend-0.2.0 (c (n "wasmer-clif-backend") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.26.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.26.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.2.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0i3vmd0bxbbgg05az5c8xzni94hf1iafcrkkrzlykkxahqq8qgnm") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.3.0 (c (n "wasmer-clif-backend") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.30.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.3.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06p937z5mrcmnsg8cl7iphhaxgrrgknvwvk8qydfb5rq7gccpyha") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.4.0 (c (n "wasmer-clif-backend") (v "0.4.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.30.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.23.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ga45l92c0ln2x4929gqzh4g2kg9fnfqnrbkv97wvq67f2bhsmd3") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.4.1 (c (n "wasmer-clif-backend") (v "0.4.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.30.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.4.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.4.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.29.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bjf4v0lp65hmnnqr3p86i66izc754yz7x4zamjg8lpavihmg4db") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.4.2 (c (n "wasmer-clif-backend") (v "0.4.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-native") (r "^0.30.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.30.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.3.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.4.2") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.29.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xqfc1k5ynpr2h1q8i8py4pgpi2vg4k9mmr7wj526w097c406swg") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.5.5 (c (n "wasmer-clif-backend") (v "0.5.5") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.5.5") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.5.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.32.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1q9z7pk3k8x3h6qagn421lhipzqcq6cqp03vg26m9lmrv23kvln9") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.5.6 (c (n "wasmer-clif-backend") (v "0.5.6") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.14.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.5.6") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.32.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cykdcfd63kady841v3qs7s1dxylqw5g8mlcwgznw0c9yhfnxawn") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.5.7 (c (n "wasmer-clif-backend") (v "0.5.7") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.31") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.14.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.5.7") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.5.7") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.32.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ckmh7366ihlcl4nm2lz2kwfmacsbd1zc0s3ahmvsxy79bszs2qp") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.6.0 (c (n "wasmer-clif-backend") (v "0.6.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.33") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.33") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "hashbrown") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "nix") (r "^0.14.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.6.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.6.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.35.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05cfjhhlndv214f8g05q671pnwkmmf541lgkl0x94nifwv14441x") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.7.0 (c (n "wasmer-clif-backend") (v "0.7.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.33") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.31") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.33") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.98") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.7.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.7.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.35.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gz70fnr62mxhn63cqjghcv0zddsm7c6mgdm4jrs4giaj7c0znig") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.8.0 (c (n "wasmer-clif-backend") (v "0.8.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.8.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.8.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0k4l66qbaa26pz54zlw5jq4s38y5bqy1yvwycfs9li7hmx3sgrv7") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.9.0 (c (n "wasmer-clif-backend") (v "0.9.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.9.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.9.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1fx20y99agczqhx8zr7sh6gbcj8nbsb9zw3brj2gm4qfihkk7ff9") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.10.0 (c (n "wasmer-clif-backend") (v "0.10.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.10.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.10.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0lcnsbpglcjr40wgrba781r6qjjcqx6n0fa970ipssk0yfp1japj") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.10.1 (c (n "wasmer-clif-backend") (v "0.10.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.10.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.10.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1wr4vrmhbnhkzwyk12hjggc12m21dklabsx51qwkb5l2mziqsy0d") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.10.2 (c (n "wasmer-clif-backend") (v "0.10.2") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.10.2") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.10.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0kp9nz1c6f2s5cr5k1z3zzk2b448ycjnafxzh5zx09g5g069q7r3") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.11.0 (c (n "wasmer-clif-backend") (v "0.11.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.11.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.11.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1f0wj78v0a2wv4phb8xdqa3i9qschxb9kcjis9hsp55dgbyr88rm") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.12.0 (c (n "wasmer-clif-backend") (v "0.12.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.44.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.12.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.39.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01k0a3q62bbhzh63ax9j0y1lp1ilrxzhc8wyrc06xb8bd0l6spmg") (f (quote (("debug" "wasmer-runtime-core/debug"))))))

(define-public crate-wasmer-clif-backend-0.13.0 (c (n "wasmer-clif-backend") (v "0.13.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.13.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.45.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0sxnlbyggm19388scil9a5s1rwaa94q20bgbn2sgf47pmi05z64c")))

(define-public crate-wasmer-clif-backend-0.13.1 (c (n "wasmer-clif-backend") (v "0.13.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.13.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.45.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0d70jj7jakz5wsp5n85n77bdf2csvg1q6q4mw8n4vmivhqkap1f7")))

(define-public crate-wasmer-clif-backend-0.14.0 (c (n "wasmer-clif-backend") (v "0.14.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.14.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.14.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.45.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "09j53hgcfxskg9khkc05j1rrg988c5ahm6zljsfbc7144bxk0v4p")))

(define-public crate-wasmer-clif-backend-0.14.1 (c (n "wasmer-clif-backend") (v "0.14.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.52.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.14.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.14.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.45.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "168kw62f63qkdcs15l18cyvpm436rqkvyxxxnhnwrzwbyxcvcx7a")))

(define-public crate-wasmer-clif-backend-0.15.0 (c (n "wasmer-clif-backend") (v "0.15.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.15.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1q68k07173nrsv8l7q6insz6p9p2g2h3ld0glzc5nhz50jqha416") (f (quote (("generate-debug-information" "wasm-debug"))))))

(define-public crate-wasmer-clif-backend-0.16.0 (c (n "wasmer-clif-backend") (v "0.16.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.16.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0agscs25f99pfv0qx965yihnclp7b9dp3vhkbn5zmi9xf730295y") (f (quote (("generate-debug-information" "wasm-debug"))))))

(define-public crate-wasmer-clif-backend-0.16.1 (c (n "wasmer-clif-backend") (v "0.16.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.16.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.16.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06b7580w8p3ifp1hbzwk4lls8j26kzi0c5sj8xcy7k9v7d5g5i57") (f (quote (("generate-debug-information" "wasm-debug"))))))

(define-public crate-wasmer-clif-backend-0.16.2 (c (n "wasmer-clif-backend") (v "0.16.2") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.16.2") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.16.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15ykaqjbynblvra2gi1kccg0fq8ngrahs05qrwzi1nkb3lfdrk75") (f (quote (("generate-debug-information" "wasm-debug"))))))

(define-public crate-wasmer-clif-backend-0.17.0 (c (n "wasmer-clif-backend") (v "0.17.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.17.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06xim11ajqm2ja4nza92pdkl6vwk97qdnri0f880lm1dclis67k9") (f (quote (("generate-debug-information" "wasm-debug"))))))

(define-public crate-wasmer-clif-backend-0.17.1 (c (n "wasmer-clif-backend") (v "0.17.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-frontend") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-frontend")) (d (n "cranelift-native") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0) (p "wasmer-clif-fork-wasm")) (d (n "libc") (r "^0.2.60") (d #t) (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-bench") (r "^0.0.7") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "wasm-debug") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.17.1") (d #t) (k 0)) (d (n "wasmer-win-exception-handler") (r "^0.17.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "wasmparser") (r "^0.51.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("errhandlingapi" "minwindef" "minwinbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1acp03n3dw7glk2pgi14g6azhg585hykyx6nr8b96hn7n5lswbss") (f (quote (("generate-debug-information" "wasm-debug"))))))

