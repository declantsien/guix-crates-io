(define-module (crates-io wa sm wasmer-types) #:use-module (crates-io))

(define-public crate-wasmer-types-1.0.0-alpha01.0 (c (n "wasmer-types") (v "1.0.0-alpha01.0") (d (list (d (n "cranelift-entity") (r "^0.65") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0lax58bkqmgl8jx5zdjpyq86jpzpbixl9m19bzxczbg0cv734ijx") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-alpha02.0 (c (n "wasmer-types") (v "1.0.0-alpha02.0") (d (list (d (n "cranelift-entity") (r "^0.65") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "13gysbg0355xgh26an96hq9cvwrs4zc32d3h8ccibapwdyffqf8p") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-alpha3 (c (n "wasmer-types") (v "1.0.0-alpha3") (d (list (d (n "cranelift-entity") (r "^0.65") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "197an6xp17qrr1ddd1f7r2f838d8z5bgk95v10rb94dxwcflmdji") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-alpha4 (c (n "wasmer-types") (v "1.0.0-alpha4") (d (list (d (n "cranelift-entity") (r "^0.65") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "1kw48gnwzdfkm7125110r66d33zdfhh47wswpph30hl5a52j19nj") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-alpha5 (c (n "wasmer-types") (v "1.0.0-alpha5") (d (list (d (n "cranelift-entity") (r "^0.67") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0pl2lyalpang50hpf6r787ardn3zbn0z3106qnqr7yd7n817vlny") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-beta1 (c (n "wasmer-types") (v "1.0.0-beta1") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "06p4g9v4arxs6biwxbv5zr5vdwnfngqpmkx7vd7kpy463103k6jq") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-beta2 (c (n "wasmer-types") (v "1.0.0-beta2") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15s7xn3jiyrs5n0msg0fh9kr8xr41wa87j5x9mkjidrx47bh7yg9") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0-rc1 (c (n "wasmer-types") (v "1.0.0-rc1") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cb8ifyr8vq2db2mmxyk6i16wzf9ikwnqpz4kkrvm1nv6nqsaglc") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.0 (c (n "wasmer-types") (v "1.0.0") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ilzsp5dwdkwaa65p8a52r7264ijziwrj1s3m86v8qfvbslsgfrd") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.1 (c (n "wasmer-types") (v "1.0.1") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0554pikqrn5vdirzflbrwvrcgwm3w4rw7jqk1mfia9lv206sa5xz") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-1.0.2 (c (n "wasmer-types") (v "1.0.2") (d (list (d (n "cranelift-entity") (r "^0.68") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "064259nf7mxxn6snpkzmf2qhdv93llyz0cl3q69df74mq8larx67") (f (quote (("std" "serde/std") ("enable-serde" "serde" "cranelift-entity/enable-serde") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-2.0.0-rc1 (c (n "wasmer-types") (v "2.0.0-rc1") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ys3p8wnya57cpqhnliyx09lx13w3wm2scbx7fppwwkrmw7jbzfh") (f (quote (("std" "serde/std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.0.0-rc2 (c (n "wasmer-types") (v "2.0.0-rc2") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0wlrixpf565hsh5516mnqygnpgxsqpdx5xj2r71n50l0w381n5j6") (f (quote (("std" "serde/std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.0.0 (c (n "wasmer-types") (v "2.0.0") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lbbgklr50a05wjs41xw7hj20hlpzhj9dx4gh66iz2qzqg9pa7y9") (f (quote (("std" "serde/std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.1.0 (c (n "wasmer-types") (v "2.1.0") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mzxc3lrqmvvim6dwr3hnl3s65q7gikqn7gspl5njd8n1cda270r") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.1.1 (c (n "wasmer-types") (v "2.1.1") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bgf9855zswzx0xsi2vyy1h846c6brysmclhrbn782nsfw0iqkj3") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.2.0-rc1 (c (n "wasmer-types") (v "2.2.0-rc1") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "052qhcqghqiwx1yc0ns6ymqc0k5jjvacvjnf4b0ldfb53fjwirbq") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.2.0-rc2 (c (n "wasmer-types") (v "2.2.0-rc2") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dmx9zfsygk6ks9pbca0d2991jvasdsh29hbq69bqmwhadlgrgrh") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.2.0 (c (n "wasmer-types") (v "2.2.0") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ghfjnmq0bf1p6q0ddl76vd6b715gma42g42b5msfrc22x7qbssd") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.2.1 (c (n "wasmer-types") (v "2.2.1") (d (list (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "094f8jdrsasm78jgiq6pwjqz01vvcp3whjpzvqq2dxkndkfs77v5") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-2.3.0 (c (n "wasmer-types") (v "2.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "loupe") (r "^0.1") (f (quote ("enable-indexmap"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zv6nb84wmna5v80pfbvbarm67jj075wfm70cymrn2nw0pm03prr") (f (quote (("std") ("experimental-reference-types-extern-ref") ("enable-serde" "serde" "serde/std") ("enable-rkyv" "rkyv") ("default" "std" "enable-serde" "enable-rkyv") ("core"))))))

(define-public crate-wasmer-types-3.0.0-alpha (c (n "wasmer-types") (v "3.0.0-alpha") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17nd5fsh8vcysl9ashrbnv4xihw2zia6jryz49rny4bglflcajcl") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-3.0.0-alpha.1 (c (n "wasmer-types") (v "3.0.0-alpha.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03a9hg5zhxzql1mwqjsd3gqp54qf7rwpqgnln0hxlj8dcihcd6fp") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-3.0.0-alpha.2 (c (n "wasmer-types") (v "3.0.0-alpha.2") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16s24msla8pnn37g9ygzancf9h5a8lnkg1r5jjzp877vmmw63scy") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-3.0.0-alpha.3 (c (n "wasmer-types") (v "3.0.0-alpha.3") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1l0xgxff1iihjdvx5jw9ip564h2913a3r9aw90vk6xw72z4kwcfz") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-3.0.0-alpha.4 (c (n "wasmer-types") (v "3.0.0-alpha.4") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y4d50wpjcdak32dwkm14kd8safrn6rrv4b160pjdlcisya5qrsx") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes") ("default" "std" "enable-serde") ("core"))))))

(define-public crate-wasmer-types-3.0.0-beta (c (n "wasmer-types") (v "3.0.0-beta") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nq2qrgrkcq7l0516fwjdg3j6kcz9h35m9klnk121s1afzcwl3w1") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0-beta.2 (c (n "wasmer-types") (v "3.0.0-beta.2") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l2jf9nzm9jzpm5vf11qfglirvbhhrvx94w3ss9nd5cwja3znivx") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0-rc.1 (c (n "wasmer-types") (v "3.0.0-rc.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b2szsd3ir5hfzlag4z6j4s9gxzm3n4as44jsrvr5paqc9isqr80") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0-rc.2 (c (n "wasmer-types") (v "3.0.0-rc.2") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1i4drwv17wa7m1hmhb2rgpyk6s8mqb2aidckbwk9nafa17v6r05m") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0-rc.3 (c (n "wasmer-types") (v "3.0.0-rc.3") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1pcq11701g06cy5gzfnq23jiaszsji8lyimq56k5hxgxi4fixby4") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0-rc.4 (c (n "wasmer-types") (v "3.0.0-rc.4") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qwajgn3fqq7zdy5s87gn5ihnlssh5zfw4df88k0yi72a62jf0xk") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.0 (c (n "wasmer-types") (v "3.0.0") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15kk7jmvnxmkqb82g0cipzyvl9i2wkjz350sfvdg9i4l3fh2nr4h") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.1 (c (n "wasmer-types") (v "3.0.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "05zi4v4ipj6azc9z8mflywns9kridfknpipla6qkcsaj31l4wc24") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.2 (c (n "wasmer-types") (v "3.0.2") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1d32a9q8kpcag20f124jsni3bcfwkbp3n0ljpkqpvv4davaiiyiv") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.1.0 (c (n "wasmer-types") (v "3.1.0") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0sw44ackn8z12sg2g1866na0c0y1i08i67s9zw0xjfrd5mxcviiv") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.2.0-alpha.1 (c (n "wasmer-types") (v "3.2.0-alpha.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xvha8xgqzk92pgw79lrmaf8v94awxfiqf5khcsdwxyzz34p0gdd") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.0.3 (c (n "wasmer-types") (v "3.0.3") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "137vv4pz6n54yligav54z6200cn0g78wvlpm588gc1rnv8lqgg2x") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.1.1 (c (n "wasmer-types") (v "3.1.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.38") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0wy4n4y0c1mccbiirl522n2ciwniwxh4a2hbpvivlslnvbwh15lb") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.2.0-beta.1 (c (n "wasmer-types") (v "3.2.0-beta.1") (d (list (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ld43dhf090a9366mmpsqvdr7q223z4pzby94s1ixm2gvyi4zz1w") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.2.0-beta.2 (c (n "wasmer-types") (v "3.2.0-beta.2") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0m6c5ca6hc6984g1277hg09nn61hwyrks9vn086i3w3xj3dc0sgs") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.2.0 (c (n "wasmer-types") (v "3.2.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c74c0khsj970w2s4f8ga69vb5wxbrxr1s0y3c4rx5jz6c9gnqdv") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.2.1 (c (n "wasmer-types") (v "3.2.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dfywckhc5y91ajbh3bmr1xl88i5f4yvr563wqdv5faz6gilacyq") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-3.3.0 (c (n "wasmer-types") (v "3.3.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16v5bmrrsm0mvagwfl9bhspz66cfcl7cvpg4a2am0qagky1z5wb7") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-4.0.0-alpha.1 (c (n "wasmer-types") (v "4.0.0-alpha.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kmladdx8y4ygw34jbz5nh0arwl3mlnwas81ahcb2fzma3vl5f5r") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core"))))))

(define-public crate-wasmer-types-4.0.0-beta.1 (c (n "wasmer-types") (v "4.0.0-beta.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02yihjhc3fx8rlp54zqmqvq28ngh4mjd9vkhll7kqs6phcw7qg38") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.0.0-beta.2 (c (n "wasmer-types") (v "4.0.0-beta.2") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08pkhspwqnvr4vnxlv339n0bwk8c6nx50f19v85xypbqdq5n0b73") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.0.0-beta.3 (c (n "wasmer-types") (v "4.0.0-beta.3") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qn7p2rd9spp8n0nfd7m4iajf9bkbkrj7kg6avz4xkv66awl90wi") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.0.0 (c (n "wasmer-types") (v "4.0.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jr4knlj3lch8jijv66h5kql0bz9vqhkzqvbq205maganl5jz3ci") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.1.0 (c (n "wasmer-types") (v "4.1.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "19f55wmcfpbw4wcwqf1y79n2zmzn3950vyg9r9zyfcfrnjr788jb") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.1.1 (c (n "wasmer-types") (v "4.1.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zvy597jp7k02sxxnknijpr88ybmrcia7y84z7xbywl8i7qhpx7c") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.1.2 (c (n "wasmer-types") (v "4.1.2") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0w7am5imrgc2h3nw5rqq1h7pm186h3mdj5cnrab0v37sk7bjxqyp") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.2.0 (c (n "wasmer-types") (v "4.2.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dap74kh307mhh9wmz3niyd31j1mm1nmsv293xb7skhqk9fa6g6r") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.67")))

(define-public crate-wasmer-types-4.2.1 (c (n "wasmer-types") (v "4.2.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0p54n5ss4xmz9kcx6v80zra8pzxrd188ii4z79wkd351d4qj4iqp") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.70")))

(define-public crate-wasmer-types-4.2.2 (c (n "wasmer-types") (v "4.2.2") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gaxknrmms1b9yfmymgrys3hbhzmjxb0wcdl7xw1dd7hh8l8jb5f") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.70")))

(define-public crate-wasmer-types-4.2.3 (c (n "wasmer-types") (v "4.2.3") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1rycks9zz90ywq9zppvnw8d21na2kl7srgfzsi4962lc46zyqmss") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.70")))

(define-public crate-wasmer-types-4.2.4 (c (n "wasmer-types") (v "4.2.4") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mv15lbkrrcanzcvk3clz58a18gb3imi0g3crv89zfvl9l6yh2gx") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.70")))

(define-public crate-wasmer-types-4.2.5 (c (n "wasmer-types") (v "4.2.5") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1avvm3kmh6pm905jqq9rfhpjinmyw5wa487rx6lanlkvjf3irbqc") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.70")))

(define-public crate-wasmer-types-4.2.6 (c (n "wasmer-types") (v "4.2.6") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ybk0yczg6qspz7rm2lfhhhg27gqbx785wk5qrzz1c4iw8892s5h") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.73")))

(define-public crate-wasmer-types-4.2.7 (c (n "wasmer-types") (v "4.2.7") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0db4did3xhlzh2riss1m85xrv9xbj7jnspl8p6qzplz4wyi53m1n") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.73")))

(define-public crate-wasmer-types-4.2.8 (c (n "wasmer-types") (v "4.2.8") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lj55lly1k9kxfy3lbqjqh596r0y726pyzjvzsxjyaqg2yv194kl") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.73")))

(define-public crate-wasmer-types-4.3.0-alpha.1 (c (n "wasmer-types") (v "4.3.0-alpha.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jvpxdw8hw7jil2qdw0gwlp67a29njqspb9mjjay5cw64miiidv0") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.73")))

(define-public crate-wasmer-types-4.3.0-beta.1 (c (n "wasmer-types") (v "4.3.0-beta.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1p6fkqf5yw8izspjkvwg9x3l98yqcfz26bb6gh98ijsif7cw0xcy") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.73")))

(define-public crate-wasmer-types-4.3.0 (c (n "wasmer-types") (v "4.3.0") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.15") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha8") (f (quote ("package"))) (k 0)) (d (n "xxhash-rust") (r "^0.8.8") (f (quote ("xxh64"))) (d #t) (k 0)))) (h "06n3kj200ragjyiz7qssfh7v52daw9famhfzbhbcbqlalajy30lp") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.74")))

(define-public crate-wasmer-types-4.3.1 (c (n "wasmer-types") (v "4.3.1") (d (list (d (n "bytecheck") (r "^0.6.8") (d #t) (k 0)) (d (n "enum-iterator") (r "^0.7.0") (d #t) (k 0)) (d (n "enumset") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 2)) (d (n "more-asserts") (r "^0.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.40") (f (quote ("indexmap" "validation" "strict"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webc") (r "^6.0.0-alpha9") (f (quote ("package"))) (k 0)) (d (n "xxhash-rust") (r "^0.8.8") (f (quote ("xxh64"))) (d #t) (k 0)))) (h "14chiczsmrm14c2784fpwblkz70psk08sm4d59x7b100nav9gjw3") (f (quote (("std") ("enable-serde" "serde" "serde/std" "serde_bytes" "indexmap/serde-1") ("default" "std") ("core")))) (r "1.74")))

