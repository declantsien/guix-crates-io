(define-module (crates-io wa c- wac-cli) #:use-module (crates-io))

(define-public crate-wac-cli-0.0.0 (c (n "wac-cli") (v "0.0.0") (h "1lgpbsqhc5wqhx1hhwmmkngdhyb5aqix92dzj8gqd35l6qy2bjxr")))

(define-public crate-wac-cli-0.1.0 (c (n "wac-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "wac-graph") (r "^0.1.0") (d #t) (k 0)) (d (n "wac-parser") (r "^0.1.0") (k 0)) (d (n "wac-resolver") (r "^0.1.0") (k 0)) (d (n "wac-types") (r "^0.1.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (d #t) (k 0)))) (h "1nip2326v4zcn8gmp1nd5swclqlg808vddrcmhq5026r0j44xjjl") (f (quote (("wit" "wac-resolver/wit") ("wat" "wac-resolver/wat") ("registry" "wac-resolver/registry" "indicatif") ("default" "wit"))))))

(define-public crate-wac-cli-0.2.0 (c (n "wac-cli") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "wac-graph") (r "^0.2.0") (d #t) (k 0)) (d (n "wac-parser") (r "^0.2.0") (k 0)) (d (n "wac-resolver") (r "^0.2.0") (k 0)) (d (n "wac-types") (r "^0.2.0") (d #t) (k 0)) (d (n "warg-client") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "warg-protocol") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (d #t) (k 0)))) (h "09fc87mhp57p6b6q64lf33n9a8rawvx1n5hg69qgnkf9mh9fi4ql") (f (quote (("wit" "wac-resolver/wit") ("wat" "wac-resolver/wat") ("default" "wit" "registry")))) (s 2) (e (quote (("registry" "wac-resolver/registry" "dep:indicatif" "dep:warg-client" "dep:warg-protocol") ("native-tls-vendored" "warg-client?/native-tls-vendored"))))))

(define-public crate-wac-cli-0.3.0 (c (n "wac-cli") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "wac-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "wac-parser") (r "^0.3.0") (k 0)) (d (n "wac-resolver") (r "^0.3.0") (k 0)) (d (n "wac-types") (r "^0.3.0") (d #t) (k 0)) (d (n "warg-client") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "warg-protocol") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 0)) (d (n "wat") (r "^1.202.0") (d #t) (k 0)))) (h "1s66l5x4dq5zxl6k27ca419ncpw2f3j3v3lwb2kf9gvwx9hg6iw2") (f (quote (("wit" "wac-resolver/wit") ("wat" "wac-resolver/wat") ("default" "wit" "registry")))) (s 2) (e (quote (("registry" "wac-resolver/registry" "dep:indicatif" "dep:warg-client" "dep:warg-protocol") ("native-tls-vendored" "warg-client?/native-tls-vendored"))))))

