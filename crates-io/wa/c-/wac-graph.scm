(define-module (crates-io wa c- wac-graph) #:use-module (crates-io))

(define-public crate-wac-graph-0.0.0 (c (n "wac-graph") (v "0.0.0") (h "0rr08s8gqkkq8ah1v6mdjspkf68v2yd9w4lyhdc1c4sd41lsnd75")))

(define-public crate-wac-graph-0.1.0 (c (n "wac-graph") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "id-arena") (r "^2.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "wac-types") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 2)) (d (n "wat") (r "^1.202.0") (d #t) (k 2)) (d (n "wit-component") (r "^0.202.0") (f (quote ("dummy-module"))) (d #t) (k 2)) (d (n "wit-parser") (r "^0.202.0") (d #t) (k 2)))) (h "1y25w1q8g19kz7amnxwlj03cdbk3a99a3rw4k3hxgj9di6bvk405") (s 2) (e (quote (("serde" "dep:serde" "wac-types/serde"))))))

(define-public crate-wac-graph-0.2.0 (c (n "wac-graph") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "id-arena") (r "^2.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "wac-types") (r "^0.2.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 2)) (d (n "wat") (r "^1.202.0") (d #t) (k 2)) (d (n "wit-component") (r "^0.202.0") (f (quote ("dummy-module"))) (d #t) (k 2)) (d (n "wit-parser") (r "^0.202.0") (d #t) (k 2)))) (h "1b74viplhfi8kq4qpbacd204c2mdj8ig2xbc6j9a3yf88c9ggcjr") (s 2) (e (quote (("serde" "dep:serde" "wac-types/serde"))))))

(define-public crate-wac-graph-0.3.0 (c (n "wac-graph") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "id-arena") (r "^2.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "wac-types") (r "^0.3.0") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (d #t) (k 0)) (d (n "wasm-metadata") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.202.0") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.202.0") (d #t) (k 2)) (d (n "wat") (r "^1.202.0") (d #t) (k 2)) (d (n "wit-component") (r "^0.202.0") (f (quote ("dummy-module"))) (d #t) (k 2)) (d (n "wit-parser") (r "^0.202.0") (d #t) (k 2)))) (h "1awm17apw5j6igs5d51x0zxf6jnflx0191f32w7c3d3sb8ms49np") (s 2) (e (quote (("serde" "dep:serde" "wac-types/serde"))))))

