(define-module (crates-io wa se wasefire-scheduler) #:use-module (crates-io))

(define-public crate-wasefire-scheduler-0.1.0 (c (n "wasefire-scheduler") (v "0.1.0") (d (list (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.1.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.0") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.0") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.1.0") (d #t) (k 0)))) (h "17ivly76i7pimzx1nszgwn1dq0a7v0f17hjdw15ml3z4lgisn83g") (f (quote (("std" "wasefire-store/std") ("log" "wasefire-logger/log")))) (s 2) (e (quote (("defmt" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.1.1 (c (n "wasefire-scheduler") (v "0.1.1") (d (list (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.2") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.1.2") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.0") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.1") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.1.1") (d #t) (k 0)))) (h "1681jmcs36ibyx59cmpmhxz0cbvf5p3hcwpmlfg8irr5jc3wi81r") (f (quote (("std" "wasefire-store/std") ("log" "wasefire-logger/log")))) (s 2) (e (quote (("defmt" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.1.2 (c (n "wasefire-scheduler") (v "0.1.2") (d (list (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.2.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.2.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.2") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.2") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.2.0") (d #t) (k 0)))) (h "122yshp3dpjq7008qj9nvk577q0p1a22siyq73pvkf9hc5hbz18f") (f (quote (("std" "wasefire-store/std") ("log" "wasefire-logger/log")))) (s 2) (e (quote (("defmt" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.2.0 (c (n "wasefire-scheduler") (v "0.2.0") (d (list (d (n "defmt") (r "^0.3.4") (o #t) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "typenum") (r "^1.16.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.3.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.3.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.2") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.2") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.2.0") (d #t) (k 0)))) (h "0ap810hbmb70dlvzb9qx8qaprzapavalj6g8p0j2yr5m5byyaply") (f (quote (("std" "wasefire-store/std") ("log" "wasefire-logger/log")))) (s 2) (e (quote (("defmt" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.2.1 (c (n "wasefire-scheduler") (v "0.2.1") (d (list (d (n "bytemuck") (r "^1.14.0") (k 0)) (d (n "defmt") (r "^0.3.5") (o #t) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.4.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.4.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.3") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.2.1") (d #t) (k 0)))) (h "01qkdc0y9r56ysjmslb86jk48n6vhvzpv52v6cw46l474gckb8ra") (f (quote (("unsafe-skip-validation") ("std" "wasefire-board-api/std" "wasefire-store/std") ("log" "debug" "wasefire-board-api/log" "wasefire-logger/log") ("debug")))) (s 2) (e (quote (("defmt" "debug" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.2.2 (c (n "wasefire-scheduler") (v "0.2.2") (d (list (d (n "bytemuck") (r "^1.14.0") (k 0)) (d (n "defmt") (r "^0.3.5") (o #t) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.5.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.5.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.1.4") (f (quote ("toctou"))) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.3") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.2.2") (d #t) (k 0)))) (h "0i77acvkibwpz88lwrnfrzj81naqxrp6ls86f9xcy2y759hs9z6z") (f (quote (("unsafe-skip-validation") ("std" "wasefire-board-api/std" "wasefire-store/std") ("log" "debug" "wasefire-board-api/log" "wasefire-logger/log") ("debug")))) (s 2) (e (quote (("defmt" "debug" "dep:defmt" "wasefire-board-api/defmt" "wasefire-logger/defmt"))))))

(define-public crate-wasefire-scheduler-0.3.0 (c (n "wasefire-scheduler") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1.14.0") (k 0)) (d (n "critical-section") (r "^1.1.2") (k 0)) (d (n "defmt") (r "^0.3.5") (o #t) (k 0)) (d (n "derivative") (r "^2.2.0") (f (quote ("use_core"))) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "portable-atomic") (r "^1.6.0") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.6.0") (f (quote ("host"))) (d #t) (k 0)) (d (n "wasefire-board-api") (r "^0.6.0") (d #t) (k 0)) (d (n "wasefire-error") (r "^0.1.0") (d #t) (k 0)) (d (n "wasefire-interpreter") (r "^0.2.0") (f (quote ("toctou"))) (o #t) (d #t) (k 0)) (d (n "wasefire-logger") (r "^0.1.4") (d #t) (k 0)) (d (n "wasefire-store") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "wasefire-sync") (r "^0.1.0") (d #t) (k 0)))) (h "1if1w5hyfnnjd4z9bv8zi4w2w8rxzry8j70y43cfjmlfjmr29mvb") (f (quote (("unsafe-skip-validation") ("software-crypto-sha384" "board-api-crypto-sha384" "wasefire-board-api/software-crypto-sha384") ("software-crypto-sha256" "board-api-crypto-sha256" "wasefire-board-api/software-crypto-sha256") ("software-crypto-p384" "board-api-crypto-p384" "wasefire-board-api/software-crypto-p384") ("software-crypto-p256" "board-api-crypto-p256" "wasefire-board-api/software-crypto-p256") ("software-crypto-hmac-sha384" "board-api-crypto-hmac-sha384" "wasefire-board-api/software-crypto-hmac-sha384") ("software-crypto-hmac-sha256" "board-api-crypto-hmac-sha256" "wasefire-board-api/software-crypto-hmac-sha256") ("software-crypto-aes256-gcm" "board-api-crypto-aes256-gcm" "wasefire-board-api/software-crypto-aes256-gcm") ("software-crypto-aes128-ccm" "board-api-crypto-aes128-ccm" "wasefire-board-api/software-crypto-aes128-ccm") ("native") ("log" "internal-debug" "wasefire-board-api/log" "wasefire-logger/log") ("internal-hash-context") ("internal-debug") ("internal-board-api-usb") ("internal-board-api-radio") ("internal-board-api-crypto-ecc") ("internal-applet-api-usb") ("internal-applet-api-store") ("internal-applet-api-radio") ("internal-applet-api-platform") ("internal-applet-api-crypto-hash" "internal-applet-api-crypto") ("internal-applet-api-crypto") ("full-board-api" "board-api-button" "board-api-crypto-aes128-ccm" "board-api-crypto-aes256-gcm" "board-api-crypto-hmac-sha256" "board-api-crypto-hmac-sha384" "board-api-crypto-p256" "board-api-crypto-p384" "board-api-crypto-sha256" "board-api-crypto-sha384" "board-api-gpio" "board-api-led" "board-api-platform" "board-api-platform-update" "board-api-radio-ble" "board-api-rng" "board-api-storage" "board-api-timer" "board-api-uart" "board-api-usb-serial") ("full-applet-api" "applet-api-button" "applet-api-crypto-ccm" "applet-api-crypto-ec" "applet-api-crypto-gcm" "applet-api-crypto-hash" "applet-api-crypto-hkdf" "applet-api-crypto-hmac" "applet-api-gpio" "applet-api-led" "applet-api-platform" "applet-api-platform-update" "applet-api-radio-ble" "applet-api-rng" "applet-api-store" "applet-api-store-fragment" "applet-api-timer" "applet-api-uart" "applet-api-usb-serial") ("full-api" "full-applet-api" "full-board-api") ("board-api-usb-serial" "applet-api-usb-serial" "internal-board-api-usb" "wasefire-board-api/api-usb-serial") ("board-api-uart" "applet-api-uart" "wasefire-board-api/api-uart") ("board-api-timer" "applet-api-timer" "wasefire-board-api/api-timer") ("board-api-rng" "applet-api-rng" "wasefire-board-api/api-rng") ("board-api-radio-ble" "applet-api-radio-ble" "internal-board-api-radio" "wasefire-board-api/api-radio-ble") ("board-api-platform-update" "applet-api-platform-update" "wasefire-board-api/api-platform-update") ("board-api-platform" "applet-api-platform" "wasefire-board-api/api-platform") ("board-api-led" "applet-api-led" "wasefire-board-api/api-led") ("board-api-gpio" "applet-api-gpio" "wasefire-board-api/api-gpio") ("board-api-crypto-sha384" "applet-api-crypto-hash" "wasefire-board-api/api-crypto-sha384") ("board-api-crypto-sha256" "applet-api-crypto-hash" "wasefire-board-api/api-crypto-sha256") ("board-api-crypto-p384" "applet-api-crypto-ec" "internal-board-api-crypto-ecc" "wasefire-board-api/api-crypto-p384") ("board-api-crypto-p256" "applet-api-crypto-ec" "internal-board-api-crypto-ecc" "wasefire-board-api/api-crypto-p256") ("board-api-crypto-hmac-sha384" "applet-api-crypto-hkdf" "applet-api-crypto-hmac" "wasefire-board-api/api-crypto-hmac-sha384") ("board-api-crypto-hmac-sha256" "applet-api-crypto-hkdf" "applet-api-crypto-hmac" "wasefire-board-api/api-crypto-hmac-sha256") ("board-api-crypto-aes256-gcm" "applet-api-crypto-gcm" "wasefire-board-api/api-crypto-aes256-gcm") ("board-api-crypto-aes128-ccm" "applet-api-crypto-ccm" "wasefire-board-api/api-crypto-aes128-ccm") ("board-api-button" "applet-api-button" "wasefire-board-api/api-button") ("applet-api-usb-serial" "internal-applet-api-usb" "wasefire-applet-api/api-usb-serial") ("applet-api-uart" "wasefire-applet-api/api-uart") ("applet-api-timer" "wasefire-applet-api/api-timer") ("applet-api-store-fragment" "internal-applet-api-store" "wasefire-applet-api/api-store-fragment") ("applet-api-store" "internal-applet-api-store" "wasefire-applet-api/api-store") ("applet-api-rng" "wasefire-applet-api/api-rng") ("applet-api-radio-ble" "internal-applet-api-radio" "wasefire-applet-api/api-radio-ble") ("applet-api-platform-update" "internal-applet-api-platform" "wasefire-applet-api/api-platform-update") ("applet-api-platform" "internal-applet-api-platform" "wasefire-applet-api/api-platform") ("applet-api-led" "wasefire-applet-api/api-led") ("applet-api-gpio" "wasefire-applet-api/api-gpio") ("applet-api-crypto-hmac" "internal-applet-api-crypto-hash" "internal-hash-context" "wasefire-applet-api/api-crypto-hmac") ("applet-api-crypto-hkdf" "internal-applet-api-crypto-hash" "wasefire-applet-api/api-crypto-hkdf") ("applet-api-crypto-hash" "internal-applet-api-crypto-hash" "internal-hash-context" "wasefire-applet-api/api-crypto-hash") ("applet-api-crypto-gcm" "internal-applet-api-crypto" "wasefire-applet-api/api-crypto-gcm") ("applet-api-crypto-ec" "internal-applet-api-crypto" "wasefire-applet-api/api-crypto-ec") ("applet-api-crypto-ccm" "internal-applet-api-crypto" "wasefire-applet-api/api-crypto-ccm") ("applet-api-button" "wasefire-applet-api/api-button")))) (s 2) (e (quote (("wasm" "dep:wasefire-interpreter") ("std" "wasefire-board-api/std" "wasefire-store?/std") ("defmt" "dep:defmt" "internal-debug" "wasefire-board-api/defmt" "wasefire-error/defmt" "wasefire-logger/defmt") ("board-api-storage" "applet-api-store" "applet-api-store-fragment" "dep:wasefire-store" "wasefire-board-api/api-storage"))))))

