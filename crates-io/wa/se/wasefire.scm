(define-module (crates-io wa se wasefire) #:use-module (crates-io))

(define-public crate-wasefire-0.1.0 (c (n "wasefire") (v "0.1.0") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.0") (f (quote ("wasm"))) (d #t) (k 0)))) (h "0b0wyikayfx6150c0c1y3nr755b5wkfxswnc48021d65vv5yhrkk") (f (quote (("multivalue" "wasefire-applet-api/multivalue"))))))

(define-public crate-wasefire-0.1.1 (c (n "wasefire") (v "0.1.1") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.2") (f (quote ("wasm"))) (d #t) (k 0)))) (h "11w6f2wzi4fvkhwls51512zxari9r79qq297lf9zibw62xklgxzj") (f (quote (("test" "wasefire-applet-api/test") ("multivalue" "wasefire-applet-api/multivalue"))))))

(define-public crate-wasefire-0.1.2 (c (n "wasefire") (v "0.1.2") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.2") (f (quote ("wasm"))) (d #t) (k 0)))) (h "0k72kpv8f2zh30lfjh4dxmnnqhd4vanc9qdvf9x7j2mr12avisjg") (f (quote (("test" "wasefire-applet-api/test") ("multivalue" "wasefire-applet-api/multivalue"))))))

(define-public crate-wasefire-0.1.3 (c (n "wasefire") (v "0.1.3") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.1.2") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1xdr8d8ris6hximnszwjq3qgh0xfg949i742dy1vly6xnv31wmpi") (f (quote (("test" "wasefire-applet-api/test") ("multivalue" "wasefire-applet-api/multivalue"))))))

(define-public crate-wasefire-0.1.4 (c (n "wasefire") (v "0.1.4") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 0)) (d (n "wasefire-applet-api") (r "^0.2.0") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1sy8byhy73qyzj3v30z1xsm2fgynn3ww9y7335ld8ba2vsiy168p") (f (quote (("test" "wasefire-applet-api/test") ("multivalue" "wasefire-applet-api/multivalue"))))))

(define-public crate-wasefire-0.2.0 (c (n "wasefire") (v "0.2.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "const-default") (r "^1.0.0") (k 0)) (d (n "crypto-common") (r "^0.1.6") (o #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (o #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "portable-atomic") (r "^1.3.3") (k 0)) (d (n "rlsf") (r "^0.2.1") (k 0)) (d (n "sealed") (r "^0.5.0") (k 0)) (d (n "typenum") (r "^1.16.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.3.0") (f (quote ("wasm"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0i71sj4adl5qww8vj1npvmgrl8bqg15j3y59j44cms35pd19c1j3") (f (quote (("native" "wasefire-applet-api/native") ("multivalue" "wasefire-applet-api/multivalue")))) (s 2) (e (quote (("rust-crypto" "dep:aead" "dep:crypto-common" "dep:digest" "dep:zeroize"))))))

(define-public crate-wasefire-0.3.0 (c (n "wasefire") (v "0.3.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "const-default") (r "^1.0.0") (k 0)) (d (n "crypto-common") (r "^0.1.6") (o #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (o #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "portable-atomic") (r "^1.4.3") (k 0)) (d (n "rlsf") (r "^0.2.1") (k 0)) (d (n "sealed") (r "^0.5.0") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.4.0") (f (quote ("wasm"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "135fa54gndsx8bqcasfv88ivbrfl1k4w6siwrgmpcwkps0k5b089") (f (quote (("native" "wasefire-applet-api/native") ("multivalue" "wasefire-applet-api/multivalue")))) (s 2) (e (quote (("rust-crypto" "dep:aead" "dep:crypto-common" "dep:digest" "dep:zeroize"))))))

(define-public crate-wasefire-0.4.0 (c (n "wasefire") (v "0.4.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "const-default") (r "^1.0.0") (k 0)) (d (n "crypto-common") (r "^0.1.6") (o #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (o #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "portable-atomic") (r "^1.4.3") (k 0)) (d (n "rlsf") (r "^0.2.1") (k 0)) (d (n "sealed") (r "^0.5.0") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.5.0") (f (quote ("wasm"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "00fxjdlqrzfzfnyf89jz76wcdxl9gbwi0rdynmrkb9c2av8yd8mn") (f (quote (("native" "wasefire-applet-api/native") ("multivalue" "wasefire-applet-api/multivalue")))) (s 2) (e (quote (("rust-crypto" "dep:aead" "dep:crypto-common" "dep:digest" "dep:zeroize"))))))

(define-public crate-wasefire-0.5.0 (c (n "wasefire") (v "0.5.0") (d (list (d (n "aead") (r "^0.5.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (k 0)) (d (n "const-default") (r "^1.0.0") (k 0)) (d (n "crypto-common") (r "^0.1.6") (o #t) (k 0)) (d (n "digest") (r "^0.10.7") (f (quote ("mac"))) (o #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "rlsf") (r "^0.2.1") (k 0)) (d (n "sealed") (r "^0.5.0") (k 0)) (d (n "typenum") (r "^1.17.0") (k 0)) (d (n "wasefire-applet-api") (r "^0.6.0") (f (quote ("wasm"))) (d #t) (k 0)) (d (n "wasefire-error") (r "^0.1.0") (d #t) (k 0)) (d (n "wasefire-sync") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "0lz8lx1i5sha6b5i2al1yfav74v1812hn1sn4yik8v5mab10hlfd") (f (quote (("unsafe-assume-single-core" "wasefire-sync/unsafe-assume-single-core") ("test") ("native" "wasefire-applet-api/native") ("internal-serial") ("internal-api-usb") ("internal-api-store") ("internal-api-radio") ("internal-api-platform") ("internal-api-crypto-hash" "internal-api-crypto") ("internal-api-crypto") ("full-api" "api-button" "api-crypto-ccm" "api-crypto-ec" "api-crypto-gcm" "api-crypto-hash" "api-crypto-hkdf" "api-crypto-hmac" "api-gpio" "api-led" "api-platform" "api-platform-update" "api-radio-ble" "api-rng" "api-store" "api-store-fragment" "api-timer" "api-uart" "api-usb-serial") ("default" "full-api") ("api-usb-serial" "internal-api-usb" "internal-serial" "wasefire-applet-api/api-usb-serial") ("api-uart" "internal-serial" "wasefire-applet-api/api-uart") ("api-timer" "wasefire-applet-api/api-timer") ("api-store-fragment" "internal-api-store" "wasefire-applet-api/api-store-fragment") ("api-store" "internal-api-store" "wasefire-applet-api/api-store") ("api-rng" "wasefire-applet-api/api-rng") ("api-radio-ble" "internal-api-radio" "wasefire-applet-api/api-radio-ble") ("api-platform-update" "internal-api-platform" "wasefire-applet-api/api-platform-update") ("api-platform" "internal-api-platform" "wasefire-applet-api/api-platform") ("api-led" "wasefire-applet-api/api-led") ("api-gpio" "wasefire-applet-api/api-gpio") ("api-crypto-hmac" "internal-api-crypto-hash" "wasefire-applet-api/api-crypto-hmac") ("api-crypto-hkdf" "api-crypto-hmac" "wasefire-applet-api/api-crypto-hkdf") ("api-crypto-hash" "internal-api-crypto-hash" "wasefire-applet-api/api-crypto-hash") ("api-crypto-gcm" "internal-api-crypto" "wasefire-applet-api/api-crypto-gcm") ("api-crypto-ec" "internal-api-crypto" "wasefire-applet-api/api-crypto-ec") ("api-crypto-ccm" "internal-api-crypto" "wasefire-applet-api/api-crypto-ccm") ("api-button" "wasefire-applet-api/api-button")))) (s 2) (e (quote (("rust-crypto" "dep:aead" "dep:crypto-common" "dep:digest" "dep:zeroize"))))))

