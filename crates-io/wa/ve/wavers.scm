(define-module (crates-io wa ve wavers) #:use-module (crates-io))

(define-public crate-wavers-0.1.0 (c (n "wavers") (v "0.1.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numpy") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)))) (h "1lhxp4mlp4vzvx14pya6jwlm5dvkwng6m5iq065maxrnk9aryy2n")))

(define-public crate-wavers-0.1.1 (c (n "wavers") (v "0.1.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numpy") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)))) (h "115gy2i3qkw2v1lwyjd1q0a9fml1md2j14bsj4205zzsc1v10gd0")))

(define-public crate-wavers-0.2.0 (c (n "wavers") (v "0.2.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numpy") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "0jhy584j4pv509asryxj07hy1f51ggs8jns6q37n7vq23gyb73h9") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-0.3.0 (c (n "wavers") (v "0.3.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4" "fast-rng"))) (d #t) (k 2)))) (h "194frdn52s85bd2f0w8x90vgsqy1fds0aidmjs3akjwp8sq7yj2y") (s 2) (e (quote (("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.0.0 (c (n "wavers") (v "1.0.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "17s5xlmll0y3dnq7av21brh4wwxivb6ak6zm0vwy8hpn7kha1n2v") (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.0.1 (c (n "wavers") (v "1.0.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.2") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1bkyvij3rr32gc6p0qx1xa7g9i3vav64hnicm0fsw04vvvmpvmyy") (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.1.0 (c (n "wavers") (v "1.1.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0c088gv4vvmkfwafr1ffkczcllz8y7yczqk81rc2fhg5xchbaxwh") (f (quote (("simd")))) (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.1.1 (c (n "wavers") (v "1.1.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0b5yawpycm7vva9xrblmshwvvqbd9y9sfig8yfvglaj3s5sp9ack") (f (quote (("simd")))) (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.2.0 (c (n "wavers") (v "1.2.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "09ya3wwqypwbr0ynh4x5xjbsmpqfxbscsdap7la6iq3jw5wshj6p") (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.2.1 (c (n "wavers") (v "1.2.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0ia4k0qhar4rvsmh4ldfjmjzlliyw56akzy451jdki0561hncsdb") (s 2) (e (quote (("pyo3" "dep:pyo3") ("ndarray" "dep:ndarray"))))))

(define-public crate-wavers-1.3.0 (c (n "wavers") (v "1.3.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "numpy") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1znpj7zg1jsfbbyc7fjqlfclacccb9di7y0sm7y5gxxqrv5mdcsm") (s 2) (e (quote (("pyo3" "dep:pyo3" "dep:numpy") ("ndarray" "dep:ndarray") ("colored" "dep:colored"))))))

(define-public crate-wavers-1.3.1 (c (n "wavers") (v "1.3.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "numpy") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0x6s4vyp97lxj7n1wigsmfdidfgl0rk2j7il94fz1kb9rdwx67m5") (s 2) (e (quote (("pyo3" "dep:pyo3" "dep:numpy") ("ndarray" "dep:ndarray") ("colored" "dep:colored"))))))

(define-public crate-wavers-1.4.0 (c (n "wavers") (v "1.4.0") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "numpy") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0izpir9l4fzqjnir9i6wbpc9hk7xgn6d5i56w38w55p2znqgfip9") (s 2) (e (quote (("pyo3" "dep:pyo3" "dep:numpy") ("ndarray" "dep:ndarray") ("colored" "dep:colored"))))))

(define-public crate-wavers-1.4.1 (c (n "wavers") (v "1.4.1") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "numpy") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.21.2") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1xxd0kfxls4ck1sb5348jc523s4xzgk9sajf8b1lscdkhw9hh8sg") (s 2) (e (quote (("pyo3" "dep:pyo3" "dep:numpy") ("ndarray" "dep:ndarray") ("colored" "dep:colored"))))))

(define-public crate-wavers-1.4.2 (c (n "wavers") (v "1.4.2") (d (list (d (n "approx_eq") (r "^0.1.8") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "hound") (r "^3.5.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "numpy") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.21.2") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1awdfcn03pwcv0lrl2pxd7jv079vz36ff1222fknb161lfdcvqnz") (s 2) (e (quote (("pyo3" "dep:pyo3" "dep:numpy") ("ndarray" "dep:ndarray") ("colored" "dep:colored"))))))

