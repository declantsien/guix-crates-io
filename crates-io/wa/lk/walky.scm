(define-module (crates-io wa lk walky) #:use-module (crates-io))

(define-public crate-walky-0.0.1 (c (n "walky") (v "0.0.1") (h "181a09qbsmnzggw9wd8kl61rgkxjx13c6kkzdnqahhmd7p3zfrwm")))

(define-public crate-walky-0.1.0 (c (n "walky") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "blossom") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "delegate") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mpi") (r "^0.6") (f (quote ("user-operations" "derive"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)))) (h "0mfwi243n2iyvaajs8k35lkxq5z1ygnhrxnjpa2zmcwdhmciwada")))

(define-public crate-walky-1.0.0 (c (n "walky") (v "1.0.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "blossom") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "delegate") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mpi") (r "^0.6") (f (quote ("user-operations" "derive"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)))) (h "1phb9x20wv76nl9qg0yqnxgjp7000p5gnzad1qf763nnxk3awwfd") (f (quote (("benchmarking"))))))

(define-public crate-walky-1.0.1 (c (n "walky") (v "1.0.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "blossom") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "delegate") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mpi") (r "^0.6") (f (quote ("user-operations" "derive"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)))) (h "13b99fva17wih40m6b197x6rwz3cmzjxrlv4b432h3jri9vs93jp") (f (quote (("benchmarking"))))))

(define-public crate-walky-1.0.2 (c (n "walky") (v "1.0.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "blossom") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "delegate") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mpi") (r "^0.6") (f (quote ("user-operations" "derive"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)))) (h "1xiamjaqzgdh35y7rbizv0a28w8474wnrqzzfw0sxw7mbp9n7wps") (f (quote (("benchmarking"))))))

(define-public crate-walky-1.1.0 (c (n "walky") (v "1.1.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "delegate") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mpi") (r "^0.6") (f (quote ("user-operations" "derive"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)))) (h "0c0s7ghh9b63kjzx0hgh1bfpazkr10i7sbwrz0kqysalxpq8p49x") (f (quote (("benchmarking"))))))

