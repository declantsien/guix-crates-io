(define-module (crates-io gl am glamour) #:use-module (crates-io))

(define-public crate-glamour-0.1.0 (c (n "glamour") (v "0.1.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.20.3") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")))) (h "0x2i5kdim2cs671sarhmjmgma8x9lcrqz8ildbl7p7zbhpl4ah4r") (f (quote (("std" "glam/std" "num-traits/std") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.1.1 (c (n "glamour") (v "0.1.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.20.3") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "0c7m0q2kd83ygv5hv622mvbnvmsnjyvpahl7fii907qn7mvw4ns6") (f (quote (("std" "glam/std" "num-traits/std") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.2.0 (c (n "glamour") (v "0.2.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.20.3") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11hr3r2icikpxyh6vzcl8mnvipps1y6lqf3rpk17xq7j3jnivcbp") (f (quote (("std" "glam/std" "num-traits/std") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.3.0 (c (n "glamour") (v "0.3.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.20.5") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1737vndl144dsn1lwb3mbihs54j6hqksncpgln335arijbpnz2ps") (f (quote (("std" "glam/std" "num-traits/std") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.3.1 (c (n "glamour") (v "0.3.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.20.5") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jkafdgn2nlrzrb734cpwkydq9d2yzk8cgvz60rihm9rr56spsd9") (f (quote (("std" "glam/std" "num-traits/std") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.4.0 (c (n "glamour") (v "0.4.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.21.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint_crate") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1waaswqkg2m3lpyx37lhlfxnccpraacp79x57691cpnv63cmmszr") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("mint" "mint_crate" "glam/mint") ("libm" "glam/libm" "num-traits/libm") ("default" "std"))))))

(define-public crate-glamour-0.4.1 (c (n "glamour") (v "0.4.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.21.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "glam_0_20") (r "^0.20.0") (o #t) (d #t) (k 0) (p "glam")) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1gsnphw1slva8gz4xgibak2v6dzdqk6mbdnz4yyj697fmzniy4s8") (f (quote (("std" "glam/std" "num-traits/std") ("default" "std") ("bevy_0_7_0" "glam_0_20")))) (s 2) (e (quote (("scalar-math" "glam/scalar-math" "glam_0_20?/scalar-math") ("mint" "dep:mint" "glam/mint") ("libm" "glam/libm" "num-traits/libm" "glam_0_20?/libm"))))))

(define-public crate-glamour-0.5.0 (c (n "glamour") (v "0.5.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.3.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.21.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "glam_0_20") (r "^0.20.0") (o #t) (d #t) (k 0) (p "glam")) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1crjd2h8pwknqp63s4bg7dsxhy21vx642jvwpnh86y6ns1mbm0p8") (f (quote (("std" "glam/std" "num-traits/std") ("default" "std") ("bevy_0_7_0" "glam_0_20")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("scalar-math" "glam/scalar-math" "glam_0_20?/scalar-math") ("mint" "dep:mint" "glam/mint") ("libm" "glam/libm" "num-traits/libm" "glam_0_20?/libm"))))))

(define-public crate-glamour-0.6.0 (c (n "glamour") (v "0.6.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.4.1") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.22.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0g3fxij10hv62p18p2mmjsk8x6dy0f5ay1llvlhwfjg635c65lk6") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.7.0 (c (n "glamour") (v "0.7.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.5.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.23.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ndyxdwnkr19hsrd7bvp83dxmf0ris1js5xy8y7jnhhw5bv6dmzf") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.7.1 (c (n "glamour") (v "0.7.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.5.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.23.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0a079n3dv29mk3cbdah711n5lcnvv6lg6l5n6ay6jml479nfry2p") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.8.0 (c (n "glamour") (v "0.8.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.24.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1y6ccd3rd62bxkvxhf7iawsvvw6idmxdd8bgr1i56rmlwf4wnldg") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.8.1 (c (n "glamour") (v "0.8.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.24.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0b9f2bqqh105gmw47sxxjr9qa5gxdifljcw67dn7b6dnfpy8b7i2") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.9.0 (c (n "glamour") (v "0.9.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "=0.4.0") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.24.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1s1dacnlfdwhrfyz5l6vhz5zwz2w33v659z4c2jqdhksncxfd63r") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.10.0 (c (n "glamour") (v "0.10.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "=0.4.0") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.25.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "175zmr44iqb5y634k6mgmm3sy4cl01nm8gdw3fx0jmyfl3fx26id") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.10.1 (c (n "glamour") (v "0.10.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "=0.4.0") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.25.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0m99ph6vq5lh2j2i764b58kpm8lha71bw3gwsd8skxj52yzlba7n") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.10.2 (c (n "glamour") (v "0.10.2") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "=0.4.0") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r ">=0.25.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "02h3ff53d4vhjc804ki5xi9wz44w2qa5f1zk3xk67pfznzandcrb") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.9.1 (c (n "glamour") (v "0.9.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "=0.4.0") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.24.1") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1fyryjf13l55al09z35nrlpwa754a4kfv1j9d1f53lj53da1zi7w") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.10.3 (c (n "glamour") (v "0.10.3") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.25.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "197dnssav7df7kjkvp8i3gscxkg9jsd694nklsxppinghyjx10f5") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.11.0 (c (n "glamour") (v "0.11.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.27.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09053nplmh7yfzvlinsg2398gmwfvhvvkn47pxg7lmsg62m7ax2m") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

(define-public crate-glamour-0.11.1 (c (n "glamour") (v "0.11.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.8") (k 0)) (d (n "bytemuck") (r "^1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "encase") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 2)) (d (n "glam") (r "^0.27.0") (f (quote ("bytemuck" "approx"))) (k 0)) (d (n "hashbrown") (r "=0.13.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0) (p "mint")) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0lk1sazgmcyy385rpz1fpzf2qsiqbpzdcjchi54rhcbf41xd7q0c") (f (quote (("std" "glam/std" "num-traits/std") ("scalar-math" "glam/scalar-math") ("libm" "glam/libm" "num-traits/libm") ("default" "std") ("core-simd" "glam/core-simd")))) (s 2) (e (quote (("serde" "dep:serde" "glam/serde") ("mint" "dep:mint" "glam/mint"))))))

