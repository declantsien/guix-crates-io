(define-module (crates-io gl am glam) #:use-module (crates-io))

(define-public crate-glam-0.4.0 (c (n "glam") (v "0.4.0") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "02qc6fmskd3hl0fpvb3m6ik2dmrfwiz00n0arxxv2jwmal2hqmz7") (f (quote (("transform-types") ("no-simd") ("default" "approx" "rand" "serde"))))))

(define-public crate-glam-0.4.1 (c (n "glam") (v "0.4.1") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xhy23xn8gzvwgjdasnwzjwsx0g9nz16znmn5i7naw3slkprdds6") (f (quote (("transform-types") ("no-simd") ("default" "approx" "rand" "serde"))))))

(define-public crate-glam-0.4.2 (c (n "glam") (v "0.4.2") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0j6w67qz0ndpwb654z57p9afa76zwiydyyxwb1mnbc7cg35pilhi") (f (quote (("transform-types") ("scalar-math") ("default" "approx" "rand" "serde"))))))

(define-public crate-glam-0.5.0 (c (n "glam") (v "0.5.0") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1zlf8j9r3gkj6jza6inf0ncr44wdk2fa59ydf9f5gi8qfh52z2gr") (f (quote (("transform-types") ("scalar-math") ("default" "approx" "mint" "rand" "serde"))))))

(define-public crate-glam-0.5.1 (c (n "glam") (v "0.5.1") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1xbh75a1zhlzlawlzaspikibmzb5hr5v15qxfv9hspl6pjyx85rr") (f (quote (("transform-types") ("scalar-math") ("default" "approx" "mint" "rand" "serde"))))))

(define-public crate-glam-0.5.2 (c (n "glam") (v "0.5.2") (d (list (d (n "approx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0lvaq3ws38v8n21r7m21mnhsb912sy7sdavpm4fbqf1y9sp7pj0l") (f (quote (("transform-types") ("scalar-math") ("default" "approx" "mint" "rand" "serde"))))))

(define-public crate-glam-0.6.0 (c (n "glam") (v "0.6.0") (d (list (d (n "approx") (r "^0.3") (o #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xhrd4a9knbvj1q8lrppp58sclbfqrd2p8d6jwyh3rc6ga7n3kny") (f (quote (("transform-types") ("std" "approx" "rand") ("scalar-math") ("default" "std"))))))

(define-public crate-glam-0.6.1 (c (n "glam") (v "0.6.1") (d (list (d (n "approx") (r "^0.3") (o #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "115x2j9r2np0dmym5jshr8galzbas51cyh4z8qxpdkv71qihwmwd") (f (quote (("transform-types") ("std" "approx" "rand") ("scalar-math") ("default" "std"))))))

(define-public crate-glam-0.7.0 (c (n "glam") (v "0.7.0") (d (list (d (n "approx") (r "^0.3") (o #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "045v7w3slygyxhrfph6k3gqjrc5slqq6055mv5qhcsr6igxwah8h") (f (quote (("transform-types") ("std" "approx" "rand") ("scalar-math") ("default" "std"))))))

(define-public crate-glam-0.7.1 (c (n "glam") (v "0.7.1") (d (list (d (n "approx") (r "^0.3") (o #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1wx043lh6n6m6vvksaas8048yg510dlz5wcbdr8pjyfr3dbxh0gl") (f (quote (("transform-types") ("std" "approx" "rand") ("scalar-math") ("glam-assert") ("default" "std"))))))

(define-public crate-glam-0.7.2 (c (n "glam") (v "0.7.2") (d (list (d (n "approx") (r "^0.3") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1zmlx2fxqff9ffis7da0m5bqj9grasl1nhn8wp5v84gns3p8r2q2") (f (quote (("transform-types") ("std" "approx" "rand") ("scalar-math") ("glam-assert") ("default" "std"))))))

(define-public crate-glam-0.8.0 (c (n "glam") (v "0.8.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0fbah7jp8wqylkkyp3jrbg8jk1pippwqr80s97mxqvcl7pjwi0ga") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std"))))))

(define-public crate-glam-0.8.1 (c (n "glam") (v "0.8.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1phfib8035jpdiilq5xmrybvc7f00148dwa4hyny2r7ljvcfa7qa") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std"))))))

(define-public crate-glam-0.8.2 (c (n "glam") (v "0.8.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "03w43xsacghsa7inlb0xna8dlp32bbsz2dqhcxbwwz6d29s4x64y") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.8.3 (c (n "glam") (v "0.8.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "14pjjpm3skmaw8q721hicz2hdslixj7zlmw7khfnrzlv64p2r65d") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.8.4 (c (n "glam") (v "0.8.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1zy34i4nz1wqggqpgsjhsfh7b0nmhzkfl6dr6c9vq3zr4dxvwaw1") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.8.5 (c (n "glam") (v "0.8.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1gcc9l14537jgrgifvz1s2wcb5xmjk43m05z1d2x1vicp7hx895v") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.8.6 (c (n "glam") (v "0.8.6") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0i0nf70zsl48q1al8x1in1p2kjwbgg5zgnsz6xbrdd75hmrbrvmp") (f (quote (("transform-types") ("std") ("scalar-math") ("packed-vec3") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.8.7 (c (n "glam") (v "0.8.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "084vqw764aq2f34a13pcrl5x4yfkr2s2a2p2bd4sqw00n6sp41dh") (f (quote (("transform-types") ("std") ("scalar-math") ("packed-vec3") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.0 (c (n "glam") (v "0.9.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18b1ban64pnx40yfliddjifkp8kppjpzzszgsf9fs1y2znirvrk8") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.1 (c (n "glam") (v "0.9.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1y692xiqfbsf76zz8bshafh9chzga60jlx4qzybh9cvxnrz7mwqr") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.2 (c (n "glam") (v "0.9.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "16fmxgsn0rgxza0w8lxbv3did4lzhd2drs3540agharp3hp68gpq") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.3 (c (n "glam") (v "0.9.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0ky05kh455rw9xrqs3fwhz5lcm776n35jh3kyq10xpsl786q62ca") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.4 (c (n "glam") (v "0.9.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "07zh096crq6pjq5h6rd5w1n1j7ckx7kswaagiy6r57kjwgd3y9xj") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.9.5 (c (n "glam") (v "0.9.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1hdzhxr9ag71fkbffbpwwgn41r5739fhsgmbxr8nqxyh9zncfdw6") (f (quote (("transform-types") ("std") ("scalar-math") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.10.0 (c (n "glam") (v "0.10.0") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "06xrb9mpdvq4wrz1zf214kxh3mg3dfzf9ij3bwx29cpjf19p53k6") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.10.1 (c (n "glam") (v "0.10.1") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0vy9n378sh05bdfxnqgp5m4phvk7ny2j76lqx70jlpk5sn5q2bi2") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.10.2 (c (n "glam") (v "0.10.2") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "059cyrvwnxnfzs28rbwdmhli0x6ykl2hyi5xa7659jbk48qn14ap") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.11.0 (c (n "glam") (v "0.11.0") (d (list (d (n "bytemuck") (r ">=1.4.0, <2.0.0") (o #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "mint") (r ">=0.5.0, <0.6.0") (o #t) (k 0)) (d (n "num-traits") (r ">=0.2.14, <0.3.0") (o #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (o #t) (k 0)) (d (n "rand_xoshiro") (r ">=0.4.0, <0.5.0") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "version_check") (r ">=0.9.0, <0.10.0") (d #t) (k 1)))) (h "1qzff0x98s03xw5a10wiw1350hyz7kfm5l3snhiddhfd3ailg9p5") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.11.1 (c (n "glam") (v "0.11.1") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "14r3bkljgwzrajxvcqsbdivg62lzj47dsdjxwjrmvv6ydrvk0j4w") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.11.2 (c (n "glam") (v "0.11.2") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "13n2yg753vjvvf98k575dycw0y93fxbjhf6bikdishia9cj1zy5y") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.11.3 (c (n "glam") (v "0.11.3") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0sg079srng6x6lc6mlmafi1a3jzibvn3q4lpx9mnxm0c86kfbna9") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.12.0 (c (n "glam") (v "0.12.0") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "1riqhj26phsqgvb8slf2wk7fh97324gaaxl115vgcci66ndq3n1a") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.13.0 (c (n "glam") (v "0.13.0") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0fs0f7i438888awdv3b6bp0rgh0pbznna01v3wp6pj2av75yxri7") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.13.1 (c (n "glam") (v "0.13.1") (d (list (d (n "bytemuck") (r "^1.4") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spirv-std") (r "^0.4.0-alpha.0") (f (quote ("const-generics"))) (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)))) (h "1ps7f44844ydj7cjr7wk1hn2d83ds1ilq7p9b2vvhr0711b5n5bh") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.14.0 (c (n "glam") (v "0.14.0") (d (list (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spirv-std") (r "^0.4.0-alpha.4") (o #t) (d #t) (k 0)))) (h "1njk0cskaspc62ywxlzpiszbcb9hhh1yqg2ka105sg0hxgajhf9k") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.15.0 (c (n "glam") (v "0.15.0") (d (list (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spirv-std") (r "^0.4.0-alpha.7") (o #t) (d #t) (k 0)))) (h "14qq9rgi2mx70zys4zzb9i2qm2mxbrggdww6xykbxzxbprvlhyg7") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.15.1 (c (n "glam") (v "0.15.1") (d (list (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spirv-std") (r "^0.4.0-alpha.7") (o #t) (d #t) (k 0)))) (h "1dnl3ha02q0pq71lcsqjriz751867nx5dir5iwr7qi7svs20a7j1") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.15.2 (c (n "glam") (v "0.15.2") (d (list (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spirv-std") (r "^0.4.0-alpha.7") (o #t) (d #t) (k 0)))) (h "0jx587lxz9v9m0ph4dlshfgy0abax1zhlbjj5nvkchz4ir7mbfrs") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.16.0 (c (n "glam") (v "0.16.0") (d (list (d (n "approx") (r "^0.4") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "05izbgx93hnjk200144h9yxhy51cbygp2bbaqdj8czngki3w09j1") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.17.0 (c (n "glam") (v "0.17.0") (d (list (d (n "approx") (r "^0.4") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0i7173m5wfg2rzc1kll6vziy80czvfvszdwxjwqnjy0ljr6fmj2q") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.17.1 (c (n "glam") (v "0.17.1") (d (list (d (n "approx") (r "^0.4") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18x50hzabrvwllfmqcjssfdzakqppnyc1bcqxfpl3i3m3n54c0bx") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.17.2 (c (n "glam") (v "0.17.2") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xib733l56gswgrfvipd4ixzwgbadgs4lmwlh8hysnxnkj1cm27p") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.17.3 (c (n "glam") (v "0.17.3") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xm7jdygbxchdvk6k1l1pdag843nkwdm8fikwgp0i1gxgawk45z0") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.18.0 (c (n "glam") (v "0.18.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0d7f7f7cdbahxk677k6l8h7r4bxxni24nzdndwr8wyx71d4kwnjj") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.19.0 (c (n "glam") (v "0.19.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1jjia0nva5p7ca3dma8jhzxd4dmczgbhn3b338ffh5hmg7k0k19b") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.20.0 (c (n "glam") (v "0.20.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1aynjcjbk74x11lb13dw7vrhlw6xp9d3zi328ddgp6s7d8ajdin2") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert"))))))

(define-public crate-glam-0.20.1 (c (n "glam") (v "0.20.1") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "12kah0ac6p08v5j4mq12f9brddlwpj7mik9gbff0z91fb0b0w9v8") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert") ("cuda"))))))

(define-public crate-glam-0.20.2 (c (n "glam") (v "0.20.2") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "143lcs4bzqlsvfmsp3p086g7ma8jcvbd9bi058ml3mcpmpp89yp4") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("default" "std") ("debug-glam-assert") ("cuda"))))))

(define-public crate-glam-0.20.3 (c (n "glam") (v "0.20.3") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ndfkwi3nvgslmcd7lk1ah7f4qc5r2haqxg9cyd864m9jd4ff4il") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda"))))))

(define-public crate-glam-0.20.4 (c (n "glam") (v "0.20.4") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09ax9d321bg71hyma1y5cbyidgl2m60h97pdh60iy5if5890is11") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda"))))))

(define-public crate-glam-0.20.5 (c (n "glam") (v "0.20.5") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0pv7n634vw2hn9fmi915pzgangyljgsp4m5505c3zq2bfiz9agpl") (f (quote (("transform-types") ("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda"))))))

(define-public crate-glam-0.21.0 (c (n "glam") (v "0.21.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "099w1g5s0yr2mgi9f8m6gkgrlgxzqyigb5p4vs5abz41vjpa84nn") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda")))) (y #t) (r "1.58.1")))

(define-public crate-glam-0.21.1 (c (n "glam") (v "0.21.1") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "06qsn9f8l1i2c5fa0hwikspb34lg07rmn1p5i1p5j2l8vd04ln1s") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda")))) (r "1.58.1")))

(define-public crate-glam-0.21.2 (c (n "glam") (v "0.21.2") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0cvhrlic7kc77lcvgnkbd2xbbkfrrfpihrijsw64pwcfwlds26kq") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda")))) (r "1.58.1")))

(define-public crate-glam-0.21.3 (c (n "glam") (v "0.21.3") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "05c8r639hz3ydlhbhv6d9z6193iivi8276zz2fq3hqw6ci8am3si") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.22.0 (c (n "glam") (v "0.22.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0x57gyrxyfs409b3f5i64yy2pbcgkr2qkq8v3a0mmm8vdkargx8j") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.23.0 (c (n "glam") (v "0.23.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.5") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "076mdgmy38lhlvgng74iy2sr3iih58gx5qcz20g0hmamv6dgsjlf") (f (quote (("std") ("scalar-math") ("libm" "num-traits/libm") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.24.0 (c (n "glam") (v "0.24.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lvi0adx9ysg4zyf5wac9vls3plvb8dx8gbiz8fv78sgi80ap0xd") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.24.1 (c (n "glam") (v "0.24.1") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09h2al85ci7g153v6cs7dh50i7i2fp4ks59wrir3hkl482v8q8a2") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.24.2 (c (n "glam") (v "0.24.2") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ibrq68ldg1gyynb5ss5hx0gr6p3397cfclh1xrl5prba4bqqhdm") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.25.0 (c (n "glam") (v "0.25.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1cr80mz1qyc73fvp2d93d4g2svv675fmcrkrzi0bpyajpvcna5hm") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.58.1")))

(define-public crate-glam-0.26.0 (c (n "glam") (v "0.26.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.7") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "067hgyq1srfi082n58rm2hc79341rxc70c6kdx6yl7lgqpr55gmy") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.68.2")))

(define-public crate-glam-0.27.0 (c (n "glam") (v "0.27.0") (d (list (d (n "approx") (r "^0.5") (o #t) (k 0)) (d (n "bytecheck") (r "^0.7") (o #t) (k 0)) (d (n "bytemuck") (r "^1.9") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libm") (r "^0.2") (o #t) (k 0)) (d (n "mint") (r "^0.5.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1fawkrkbivdds5lzczk1rx37b7s3apl2cywch7s5ad1yfbkff1cy") (f (quote (("std") ("scalar-math") ("glam-assert") ("fast-math") ("default" "std") ("debug-glam-assert") ("cuda") ("core-simd")))) (r "1.68.2")))

