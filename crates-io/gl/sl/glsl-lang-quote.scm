(define-module (crates-io gl sl glsl-lang-quote) #:use-module (crates-io))

(define-public crate-glsl-lang-quote-0.1.1 (c (n "glsl-lang-quote") (v "0.1.1") (d (list (d (n "glsl-lang") (r "^0.1.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)))) (h "0r5y7bqrn0vgyjz5cx5njb9qf5s2fwnyrl9hz9kazgf75wina0qc") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-preprocessor" "glsl-lang/parser-preprocessor") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.1.2 (c (n "glsl-lang-quote") (v "0.1.2") (d (list (d (n "glsl-lang") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)))) (h "0npqzv0yy5lxppa6h15l1fij75ir0ak67f09xkmx62rssmx8adl3") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-preprocessor" "glsl-lang/parser-preprocessor") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.1.3 (c (n "glsl-lang-quote") (v "0.1.3") (d (list (d (n "glsl-lang") (r "^0.1.3") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "smol_str") (r "^0.1") (d #t) (k 0)))) (h "19mrhyhdz9hnys8pn9swg1a21xlxf87dxidslqkkdbjw2fdbn0gp") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-preprocessor" "glsl-lang/parser-preprocessor") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.2.0 (c (n "glsl-lang-quote") (v "0.2.0") (d (list (d (n "glsl-lang") (r "^0.2.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "0jxlqf0ig0pvm1lzavqkkl11swi0a3xzkr6ci1wsvpm0cz4x8q1q") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.2.1 (c (n "glsl-lang-quote") (v "0.2.1") (d (list (d (n "glsl-lang") (r "^0.2.1") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "1dp717fhkrhhhvqhw01mijmfs965i4f0sgrs7981mzx58xdb44mb") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.3.0 (c (n "glsl-lang-quote") (v "0.3.0") (d (list (d (n "glsl-lang") (r "^0.3.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "003phx3m6g9is19jhk1g0fpiqflfm0f9y45vdkw0wn3wss3k5nxb") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.3.1 (c (n "glsl-lang-quote") (v "0.3.1") (d (list (d (n "glsl-lang") (r "^0.3.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "1grr8pxig2n4d07ibvazmp2vfc2233qxx8cwwnwarr6nd214c001") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.4.0 (c (n "glsl-lang-quote") (v "0.4.0") (d (list (d (n "glsl-lang") (r "^0.4.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "0s39sm00dv7mz8basfijyfwh8902i18prs2hhms7wih7nph3lisc") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.4.1 (c (n "glsl-lang-quote") (v "0.4.1") (d (list (d (n "glsl-lang") (r "^0.4.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "06n8p5bpp19hd7q6imblr28lpcnzb14niqfad0483yg6rb5a7g0d") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.5.0 (c (n "glsl-lang-quote") (v "0.5.0") (d (list (d (n "glsl-lang") (r "^0.5.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "0n8mdii8gspyhpjxd07nrq55bwmp6yyzjb44k9wpr2mnln0v4j2p") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.5.1 (c (n "glsl-lang-quote") (v "0.5.1") (d (list (d (n "glsl-lang") (r "^0.5.0") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "1fszxnxlcpcsbn16rn5mrkkydwdz73101ldhq53fw0qdhx2x7aac") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

(define-public crate-glsl-lang-quote-0.5.2 (c (n "glsl-lang-quote") (v "0.5.2") (d (list (d (n "glsl-lang") (r "=0.5.2") (f (quote ("lexer-v2-full"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)))) (h "1pg4d5rhz68qwcgmh4vgyk3ddikpyaka944271k865immr8d67zn") (f (quote (("quote-statement" "glsl-lang/parser-statement") ("quote-parsable") ("quote-expr" "glsl-lang/parser-expr") ("default" "quote-parsable"))))))

