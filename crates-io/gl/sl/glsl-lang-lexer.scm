(define-module (crates-io gl sl glsl-lang-lexer) #:use-module (crates-io))

(define-public crate-glsl-lang-lexer-0.2.0 (c (n "glsl-lang-lexer") (v "0.2.0") (d (list (d (n "glsl-lang-pp") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.2.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.2.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09rk4s7dfmadn75hhdb3xxq9nms2lxfcilqm2a88ppxrj10i24ms") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.2.1 (c (n "glsl-lang-lexer") (v "0.2.1") (d (list (d (n "glsl-lang-pp") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.2.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.2.1") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kvcs9hvkscbiwid4cccvj597i293zgcwcz5h496bf54r6rqq83m") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.3.0 (c (n "glsl-lang-lexer") (v "0.3.0") (d (list (d (n "glsl-lang-pp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.3.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.3.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07bifnb6gdy8rdy97y02vcjh7i78qm9jkrdwsixyirsif49qdg7k") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.3.1 (c (n "glsl-lang-lexer") (v "0.3.1") (d (list (d (n "glsl-lang-pp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.3.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.3.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00q9xiqlbhgh6bqmjj1iijij00rvv4rl3wq5hyai5hwmasrgy7p4") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.4.0 (c (n "glsl-lang-lexer") (v "0.4.0") (d (list (d (n "glsl-lang-pp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.4.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.4.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lw6pd8q9xpspj73ll2pg1hawshi4b9v6kvda7az1df8bw897ks7") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.4.1 (c (n "glsl-lang-lexer") (v "0.4.1") (d (list (d (n "glsl-lang-pp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.4.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.4.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0v8vm7mn6kq6ka39180dncsx40cn9c6h1lyr2y8qlwlf7slzi2za") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.5.0 (c (n "glsl-lang-lexer") (v "0.5.0") (d (list (d (n "glsl-lang-pp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.5.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.5.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0c24ai0jm304n1c7ps2l5krr2vlhaj8i10i190d2vqsyi0w6ii23") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.5.1 (c (n "glsl-lang-lexer") (v "0.5.1") (d (list (d (n "glsl-lang-pp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "^0.5.0") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (o #t) (k 0)) (d (n "lang-util") (r "^0.5.0") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1khvr7qf461czynkm02fmx3xx63hpqhimdk0sf0z0z42318xrqhj") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

(define-public crate-glsl-lang-lexer-0.5.2 (c (n "glsl-lang-lexer") (v "0.5.2") (d (list (d (n "glsl-lang-pp") (r "=0.5.2") (o #t) (d #t) (k 0)) (d (n "glsl-lang-types") (r "=0.5.2") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.20.0") (o #t) (k 0)) (d (n "lang-util") (r "=0.5.2") (f (quote ("lalrpop"))) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rserde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17pxiscrmnw3pfqj3dz128lns5qvc1gvmvfdpphz4v1hnynzygll") (f (quote (("v2-min" "glsl-lang-pp" "lalrpop") ("v2-full" "glsl-lang-pp/full" "lalrpop") ("v1" "logos" "lalrpop") ("serde" "rserde" "glsl-lang-types/serde" "lang-util/serde") ("lalrpop" "lalrpop-util") ("default"))))))

