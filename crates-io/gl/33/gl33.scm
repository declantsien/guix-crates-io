(define-module (crates-io gl #{33}# gl33) #:use-module (crates-io))

(define-public crate-gl33-0.0.0 (c (n "gl33") (v "0.0.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0kl6sj1461hdnmjk4pz0ac965rpqyzkca5wm6nmryz92sgx4jcsa") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError"))))))

(define-public crate-gl33-0.0.1 (c (n "gl33") (v "0.0.1") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "fermium") (r "^200.12") (f (quote ("static_link"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "12szyk53h2sihznvpav3rg563b0xrky14g9wr4b0qv3avn3s1br3") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError"))))))

(define-public crate-gl33-0.0.2 (c (n "gl33") (v "0.0.2") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "fermium") (r "^200.12") (f (quote ("static_link"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1vhrrjmgl63vpl7rqd1wbzcaaqdjcz7ngnnlm4bw4im31wg60qbs") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError") ("GL_KHR_debug") ("GL_ARB_texture_filter_anisotropic") ("GL_ARB_debug_output"))))))

(define-public crate-gl33-0.0.3 (c (n "gl33") (v "0.0.3") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "fermium") (r "^200.12") (f (quote ("static_link"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0wxv0mxr4s1q62vvlcff1lmm0rxs759hzhmgd5n7v4cjki21fpzj") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError") ("GL_KHR_debug") ("GL_ARB_texture_filter_anisotropic") ("GL_ARB_debug_output"))))))

(define-public crate-gl33-0.1.0 (c (n "gl33") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "fermium") (r "^200.12") (f (quote ("static_link"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0aiyksf22z1m48ljhcwhma9wr84v2qb5qf6w5a3w50hcczrn6mk3") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError") ("GL_KHR_debug") ("GL_ARB_texture_filter_anisotropic") ("GL_ARB_debug_output"))))))

(define-public crate-gl33-0.1.1 (c (n "gl33") (v "0.1.1") (d (list (d (n "bytemuck") (r "^1") (o #t) (d #t) (k 0)) (d (n "chlorine") (r "^1") (o #t) (d #t) (k 0)) (d (n "fermium") (r "^200.12") (f (quote ("static_link"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0qz3ss5w8g36yhin8i3wb8643y3anws3lpgivb3sf00w05qpwcqj") (f (quote (("struct_loader") ("inline_always") ("inline") ("global_loader") ("default") ("debug_trace_calls") ("debug_automatic_glGetError") ("GL_KHR_debug") ("GL_ARB_texture_filter_anisotropic") ("GL_ARB_debug_output"))))))

(define-public crate-gl33-0.2.0 (c (n "gl33") (v "0.2.0") (d (list (d (n "chlorine") (r "^1") (d #t) (k 0)) (d (n "fermium") (r "^20014") (f (quote ("experimental_fast_build"))) (d #t) (k 2)))) (h "15aga4y2mbr5hqi74nv1jyx1bwjndqci8n7xvs3k4kldy5kjg751") (f (quote (("track_caller") ("global_loader") ("default" "global_loader")))) (y #t)))

(define-public crate-gl33-0.2.1 (c (n "gl33") (v "0.2.1") (d (list (d (n "chlorine") (r "^1") (d #t) (k 0)) (d (n "fermium") (r "^20014") (f (quote ("experimental_fast_build"))) (d #t) (k 2)))) (h "18xx342w6h0smhyal1adbv5li4g6rbkm8znjymij71zdlnnvgci9") (f (quote (("track_caller") ("println_debug") ("global_loader") ("default" "global_loader" "println_debug"))))))

