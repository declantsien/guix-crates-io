(define-module (crates-io gl yc glycin-utils) #:use-module (crates-io))

(define-public crate-glycin-utils-0.1.0-alpha.1 (c (n "glycin-utils") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0sd730704yyzas5j36x8nixvbmz584510c0l11bkjv79ccprrhqr") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-alpha.2 (c (n "glycin-utils") (v "0.1.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "13f6jg3579j6cgy80x82iflw47lx9h90c3fcql7x2hw8gnzkyfj2") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-alpha.3 (c (n "glycin-utils") (v "0.1.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "04jlqvnvvf08ihblkai55j0ffqyhvngd4dr2zliaxx6v4jg5yqm3") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-alpha.4 (c (n "glycin-utils") (v "0.1.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "15bxkll0d12c6lbbwmxdyaw8yzc16qbfcn1pi3kcbnzhv7g6p2fq") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-beta.0 (c (n "glycin-utils") (v "0.1.0-beta.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "14r10xh37hc8xc6j4k062ar98l3mc0zky064r2yrgrps4xb38knh") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-beta.1 (c (n "glycin-utils") (v "0.1.0-beta.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1m216pny48nyfx8gdvjjqazlh1ayn1zicjzw7nr5bps1qapjljg3") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-beta.2 (c (n "glycin-utils") (v "0.1.0-beta.2") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1s562l28bdv2758pcv9vrhw2zdh25xyymddwb551jcvh7bxfgb29") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-beta.3 (c (n "glycin-utils") (v "0.1.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1czlkh1hzk6xz54liy403qsrdw7d3drlg1iwx9fjpa05h9qbdzq6") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-beta.4 (c (n "glycin-utils") (v "0.1.0-beta.4") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0271b5jmh75z30311nq92vzpgkq7l1zcszcs7fbv1zhvar8i8dps") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0-rc (c (n "glycin-utils") (v "0.1.0-rc") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0i96yvn94v3b21yjh6gxyx6ikq8fsjk8x9afn6lhyrcp0dym1l0c") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-0.1.0 (c (n "glycin-utils") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0x68cqd4j2q5ib1b1lprsrq44qyfchl0maca1pcqr3i5i4dmik3f") (f (quote (("image-rs" "image")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha (c (n "glycin-utils") (v "1.0.0-alpha") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "12wv2cd75m5c7jg7fa2lv40945cdd2yhlqi9pf7di0k345dd8hf1") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.1 (c (n "glycin-utils") (v "1.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0ph7pi0pjhh4l49fjw0ywknclp4sy9mw3644lh74an5mw7agjh4m") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.2 (c (n "glycin-utils") (v "1.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "19224cp0pki7jzx2v11nwwpa8w5dz2hp9r7r11dc1qnkbg0wa2q4") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.3 (c (n "glycin-utils") (v "1.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1ph9lpv29bmwaw3vrgl4f9046qj852z3p75lzbdik4rrxnyaf91m") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.4 (c (n "glycin-utils") (v "1.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "04wjiq2wl3jms032grr9fwh7qw6lsjfhimqxzji8iwxzmwlq44xs") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.5 (c (n "glycin-utils") (v "1.0.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1v6l7b24lcdwh2yqy2kssdnlwd52hgxa1k6knb7l0am2p04dnr2q") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-alpha.6 (c (n "glycin-utils") (v "1.0.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "1qaxhk2ksnamwk2yxn8r9fdxq1ak313z97rdlrqbln77lg456cjp") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.70")))

(define-public crate-glycin-utils-1.0.0-beta (c (n "glycin-utils") (v "1.0.0-beta") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("use-libc-auxv"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^3.13.1") (d #t) (k 0)))) (h "0h9klwp1hr5p51f9a9q7r39v1c4m5607jl62l1bcjlva7al3gnyf") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.74")))

(define-public crate-glycin-utils-1.0.0-beta.1 (c (n "glycin-utils") (v "1.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "gettext-rs") (r "^0.7.0") (f (quote ("gettext-system"))) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (o #t) (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zbus") (r "^4.0.0") (f (quote ("p2p"))) (d #t) (k 0)))) (h "0w1labwdwhyj27x51abz02dk67ilg29l9bbnpf31ic14mpgjc2hw") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix" "dep:memmap") ("image-rs" "dep:image" "loader-utils")))) (r "1.75")))

(define-public crate-glycin-utils-1.0.0-beta.2 (c (n "glycin-utils") (v "1.0.0-beta.2") (d (list (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "zbus") (r "^4.0.0") (f (quote ("p2p"))) (d #t) (k 0)))) (h "1s9nq92jig2pf536an4iin3c303c4svpl0l3020bd3a3fr0chnqg") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix") ("image-rs" "dep:image" "loader-utils")))) (r "1.75")))

(define-public crate-glycin-utils-1.0.0-rc (c (n "glycin-utils") (v "1.0.0-rc") (d (list (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "zbus") (r "^4.0.0") (f (quote ("p2p"))) (d #t) (k 0)))) (h "1qpsbd1y2irs4zrhaqx69hp7fn90zlanhfwb6sz87b72xm5hlkp4") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix") ("image-rs" "dep:image" "loader-utils")))) (r "1.75")))

(define-public crate-glycin-utils-1.0.0 (c (n "glycin-utils") (v "1.0.0") (d (list (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "zbus") (r "^4.0.0") (f (quote ("p2p"))) (d #t) (k 0)))) (h "0dvc9fagbf26if1gf1kbxz272438ggks5dl1bxfxzxg3hnsmjp8k") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix") ("image-rs" "dep:image" "loader-utils")))) (r "1.75")))

(define-public crate-glycin-utils-1.0.1 (c (n "glycin-utils") (v "1.0.1") (d (list (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libseccomp") (r "^0.3.0") (d #t) (k 0)) (d (n "memmap") (r "^0.9.0") (d #t) (k 0) (p "memmap2")) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "signal"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "zbus") (r "^4.0.0") (f (quote ("p2p"))) (d #t) (k 0)))) (h "17yn8q5phjwlqyhfb4d6qrmlc4g10zk1355nkg1d5qd68rp75apj") (f (quote (("default")))) (s 2) (e (quote (("loader-utils" "dep:futures-lite" "dep:nix") ("image-rs" "dep:image" "loader-utils")))) (r "1.75")))

