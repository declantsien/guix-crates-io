(define-module (crates-io gl uo gluon_check) #:use-module (crates-io))

(define-public crate-gluon_check-0.1.1 (c (n "gluon_check") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.1.1") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1lhqpamgrg5rgxb91cvlp9vzphwfvzkmybp76wps6jdldr8nb6p4") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.1.2 (c (n "gluon_check") (v "0.1.2") (d (list (d (n "env_logger") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.1.2") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1igv09519zmc2zgs7l1dmlsiqbgzm8fmwh567gcxwvqnqj58gzkl") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.1.3 (c (n "gluon_check") (v "0.1.3") (d (list (d (n "env_logger") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.1.3") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1zdgszl6k8bhlk4qlc25g1psmvvshspbxnqfqbq9jc1mncm5mpjc") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.2.0 (c (n "gluon_check") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.2.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1nbqcp21ksfjaismcchc712vq02wc005m8i59yi3y1ar94rvv63d") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.2.1 (c (n "gluon_check") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.2.1") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0vhz43713h8nqn0243c9yf1z4fdwc6qayfwal21zamg1bvw4a0r2") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.2.2 (c (n "gluon_check") (v "0.2.2") (d (list (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.2.2") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1ikiv4mwwdbcbi5vgdzldqgafzgybxijg6qxw5y3xk1jk80mm62g") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.3.0 (c (n "gluon_check") (v "0.3.0") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.3.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "11ib51rnwsfxcny0fb2d9fmp69651zssnmyj9wj15pxv12mgqzal") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.4.0 (c (n "gluon_check") (v "0.4.0") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.4.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1yf57461mv9qkxs5mr9g26j12glnxfnd6c8xjldf2phm0rprw5bj") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.4.1 (c (n "gluon_check") (v "0.4.1") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.4.1") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0g3ailz31klh5vdwbnbg6g7yzwwh59mxkmxnnldd6b5jw40ax6a7") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.4.2 (c (n "gluon_check") (v "0.4.2") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.4.2") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0mpj9mjlg5bimha9s5z7r87xczmyr97v9b490mkvw0wzgdvnhgrv") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.5.0 (c (n "gluon_check") (v "0.5.0") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.5.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "166jdmalnmppz0gas80y6kmv6n38p615nf7hbfx35pghr2l0lxs4") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.6.0 (c (n "gluon_check") (v "0.6.0") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.6.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.3.4") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "085sywcg1fa31f1cnxh64l4cr7gsbd0pzqf3rbc11zlz9w05sblf") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.6.1 (c (n "gluon_check") (v "0.6.1") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.6.1") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.3.4") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "037l075qvz1jb863hiahg07ayzbhsq47zp139q55hhv4ina0qgcz") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.6.2 (c (n "gluon_check") (v "0.6.2") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.6.2") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.3.4") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0f754vclhjiyn2010cifi6r70lw7q4hm68s5l8ajldq1n489s4dm") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.7.0 (c (n "gluon_check") (v "0.7.0") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.7.0") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.4") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0sfx10jmjypajwfrzzbcg1281ff4cm6p0xvmrapcf5873vafpp0x") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.7.1 (c (n "gluon_check") (v "0.7.1") (d (list (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "gluon_base") (r "^0.7.1") (d #t) (k 0)) (d (n "gluon_parser") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.4") (d #t) (k 2)) (d (n "smallvec") (r "^0.2.1") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "05j7v1xm77nmsby5i2lzfnky5pmvw2zk8n7k1fkmnz91rh8nrk8p") (f (quote (("test" "gluon_parser" "env_logger"))))))

(define-public crate-gluon_check-0.8.0 (c (n "gluon_check") (v "0.8.0") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.8.0") (d #t) (k 0)) (d (n "gluon_format") (r "< 0.9.0, >= 0.7.0") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.7.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0qkjid0hzxwc3jwj1lfh285kl14jm44w0lyfbgzmqy4z96h53xy2") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.8.1 (c (n "gluon_check") (v "0.8.1") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.8.1") (d #t) (k 0)) (d (n "gluon_format") (r "< 0.9.0, >= 0.7.0") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.7.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "158rnakfi2ymyfwylqf0ibfc773bjknjq6kkcwxqymmci0qrbx9r") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.9.0 (c (n "gluon_check") (v "0.9.0") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.9.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.8") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1avhqvbscpslzlhixqa6l4wc3cq9994nsq9nxmcm1262jwss7qvj") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.9.1 (c (n "gluon_check") (v "0.9.1") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.9.1") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "011iqimbqzxf04a0bgpq7nd9w3nnx9j5lm0637qp6rpbamvaw3lc") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.9.2 (c (n "gluon_check") (v "0.9.2") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.9.2") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1hzppx1ih84y03y4ps435apgjgwg1iqd0qxpa32mnbj3s31isaw6") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.9.3 (c (n "gluon_check") (v "0.9.3") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.9.3") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "07j0aig5xsgld1wmp6szh4p97rp7qc1pwhpg9bvr1q1lf5di7a2c") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.9.4 (c (n "gluon_check") (v "0.9.4") (d (list (d (n "codespan") (r "^0.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "gluon_base") (r "^0.9.4") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0n4rd789rba7idy0v47a6fn780mhn796s9qlqlicnn7qys3dd85f") (f (quote (("test" "gluon_parser"))))))

(define-public crate-gluon_check-0.10.0 (c (n "gluon_check") (v "0.10.0") (d (list (d (n "codespan") (r "^0.2") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.10.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "gluon_parser") (r "^0.10.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1mb8hza76h3fpavvqvxxjhwf1wj7lwnvdsz3yj0jjfamk7rb8mky")))

(define-public crate-gluon_check-0.10.1 (c (n "gluon_check") (v "0.10.1") (d (list (d (n "codespan") (r "^0.2") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.10.1") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "gluon_parser") (r "^0.10.1") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1ys6scigd1v60byg2zbgrlslzxd93zq802vc43vrnci6nw213q0y")))

(define-public crate-gluon_check-0.11.0 (c (n "gluon_check") (v "0.11.0") (d (list (d (n "codespan") (r "^0.2") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.11.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.11.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.11.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "136i0b7z07q99hysna5whzy00zwzrfp041fqrqhz0zkn5b9721dc")))

(define-public crate-gluon_check-0.11.1 (c (n "gluon_check") (v "0.11.1") (d (list (d (n "codespan") (r "^0.2") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.11.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.11.1") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.11.1") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "00ppbab4azmkz5bl0b596ji75i9bqbr2p0gf7wpr8sndgynfw2xs")))

(define-public crate-gluon_check-0.11.2 (c (n "gluon_check") (v "0.11.2") (d (list (d (n "codespan") (r "^0.2") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.11.2") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.11.2") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.11.2") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "1bvajcasnxamhixx4fsss8d14axhwrn9g62qzfmh5npdhrlzns8s")))

(define-public crate-gluon_check-0.12.0 (c (n "gluon_check") (v "0.12.0") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "gluon_base") (r "^0.12.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.12.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.12.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.8.0") (d #t) (k 0)) (d (n "union-find") (r "^0.3.1") (d #t) (k 0)))) (h "0dyv26ypldxlw4n5s812q7lnqiq931x0av49nbxfcv873rlcg2wr")))

(define-public crate-gluon_check-0.13.0 (c (n "gluon_check") (v "0.13.0") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.13.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.13.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.13.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "0szvsnnsb1cclmd96qrhh15fzv03bgbpw8wjixflc4c10x88lw3f")))

(define-public crate-gluon_check-0.13.1 (c (n "gluon_check") (v "0.13.1") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.13.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.13.1") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.13.1") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "1xn2svcigjq3gqi8fzhxv90d101zkh2r3977iyx1p656c8w9xlxc")))

(define-public crate-gluon_check-0.14.0 (c (n "gluon_check") (v "0.14.0") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.14.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.14.0") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.14.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "1vb93s7nfdaa5rzm4il6ikv0pbz8qz6zcmlgyjbykm03ha5sdql5")))

(define-public crate-gluon_check-0.14.1 (c (n "gluon_check") (v "0.14.1") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.14.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.14.1") (d #t) (k 0)) (d (n "gluon_format") (r ">= 0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.14.1") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "1d6lck1ry79i13ky0b4zwdk8kv60r8galm1dfs2v051c313bs1yr")))

(define-public crate-gluon_check-0.15.0 (c (n "gluon_check") (v "0.15.0") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.15.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.15.0") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.15.0") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "1a0vsdjgmdhfcckb1fyp6xz4yyx9r1mk7afrr5866pm3a2xgijns")))

(define-public crate-gluon_check-0.15.1 (c (n "gluon_check") (v "0.15.1") (d (list (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.15.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.15.1") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.15.1") (d #t) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "104mcrg60rnqkhb3b5z3d83qyaz7qx26q6khq6bcnqkk1a7q9ss8")))

(define-public crate-gluon_check-0.16.1 (c (n "gluon_check") (v "0.16.1") (d (list (d (n "codespan") (r "^0.9") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.16.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.16.1") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.16.1") (d #t) (k 2)) (d (n "insta") (r "^0.16") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "strsim") (r "^0.9.0") (d #t) (k 0)))) (h "128x5ik0x0cxysvg4w3410kkq4gzm80yk7c3p0azjrxby7di3dna")))

(define-public crate-gluon_check-0.17.0 (c (n "gluon_check") (v "0.17.0") (d (list (d (n "codespan") (r "^0.9") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.17.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.17.0") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.17.0") (d #t) (k 2)) (d (n "insta") (r "^0.16") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)))) (h "00nx7wzldw0vv950dqbzljv6k430sini7a79zaql5n02057bgkjq")))

(define-public crate-gluon_check-0.17.1 (c (n "gluon_check") (v "0.17.1") (d (list (d (n "codespan") (r "^0.9") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.17.1") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.17.1") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.17.1") (d #t) (k 2)) (d (n "insta") (r "^0.16") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)))) (h "0vyvzlliaa6ccmgq1rmbbdxkhdfjgxk4vkaqgz6249khr82xdccj")))

(define-public crate-gluon_check-0.17.2 (c (n "gluon_check") (v "0.17.2") (d (list (d (n "codespan") (r "^0.9") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2") (d #t) (k 2)) (d (n "ena") (r "^0.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "gluon_base") (r "^0.17.2") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.17.2") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.17.2") (d #t) (k 2)) (d (n "insta") (r "^0.16") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quick-error") (r "^1") (d #t) (k 0)) (d (n "rpds") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)))) (h "0afj2qifc0k8h6c7k4yk1wijqca5g7ljlgxaxp1rsnc5h1pyy1g0")))

(define-public crate-gluon_check-0.18.0 (c (n "gluon_check") (v "0.18.0") (d (list (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "ena") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "gluon_base") (r "^0.18.0") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.18.0") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.18.0") (d #t) (k 2)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pretty") (r "^0.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.1") (d #t) (k 0)) (d (n "rpds") (r "^0.10.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)))) (h "1aid047dxzdix5shc9xf6dx4rwhkywbw30l8arjhza62ya37ihlh")))

(define-public crate-gluon_check-0.18.2 (c (n "gluon_check") (v "0.18.2") (d (list (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "ena") (r "^0.14.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "gluon_base") (r "^0.18.2") (d #t) (k 0)) (d (n "gluon_codegen") (r "^0.18.2") (d #t) (k 0)) (d (n "gluon_format") (r ">=0.9") (d #t) (k 2)) (d (n "gluon_parser") (r "^0.18.2") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "pretty") (r "^0.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-error") (r "^2.0.1") (d #t) (k 0)) (d (n "rpds") (r "^0.10.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)))) (h "1wfdgzxnk86zs0mbancz57l3n50yfiwr3p4h5n3siskdci3p0vfz")))

