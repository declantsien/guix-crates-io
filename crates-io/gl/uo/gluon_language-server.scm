(define-module (crates-io gl uo gluon_language-server) #:use-module (crates-io))

(define-public crate-gluon_language-server-0.1.0 (c (n "gluon_language-server") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "gluon") (r "^0.1.2") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^2.0.7") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "serde") (r "^0.7.9") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.7.9") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_macros") (r "^0.7.9") (o #t) (d #t) (k 0)))) (h "01swqwd1ibjg1dwqncnf6d6lk4g71xaf5ab9naqpr9v7kcchp8dg") (f (quote (("nightly" "serde_macros" "jsonrpc-core/nightly") ("default" "serde_codegen"))))))

(define-public crate-gluon_language-server-0.1.1 (c (n "gluon_language-server") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "gluon") (r "^0.1.3") (k 0)) (d (n "jsonrpc-core") (r "^2.0.7") (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "serde") (r "^0.7.9") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.7.9") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_macros") (r "^0.7.9") (o #t) (d #t) (k 0)))) (h "04ds0iiw7c173d8qpjxfk421rz9f2lsx8svpja1ynf7ffp18hjyz") (f (quote (("nightly" "serde_macros" "jsonrpc-core/nightly") ("default" "serde_codegen" "jsonrpc-core/default"))))))

(define-public crate-gluon_language-server-0.2.0 (c (n "gluon_language-server") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "gluon") (r "^0.2.2") (k 0)) (d (n "jsonrpc-core") (r "^3.0.0") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "serde") (r "^0.8.11") (d #t) (k 0)) (d (n "serde_json") (r "^0.8.0") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)))) (h "1vkhlk2mq8bkdyd91ki0sqrgwnx21rv85i9kx74xmb9h0izv4wrw")))

(define-public crate-gluon_language-server-0.3.0 (c (n "gluon_language-server") (v "0.3.0") (d (list (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.3.0") (k 0)) (d (n "jsonrpc-core") (r "^6.0.0") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "serde") (r "^0.9.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)))) (h "0yzyrdxk2aahnaxq2ynfnlkza8f6ijpfpqx9knxmh0whbir7znmz")))

(define-public crate-gluon_language-server-0.4.0 (c (n "gluon_language-server") (v "0.4.0") (d (list (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.4.0") (k 0)) (d (n "jsonrpc-core") (r "^6.0.0") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "serde") (r "^0.9.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.9.0") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)))) (h "1cpx9n854m9p9n8vqcpr2vh2ag4kkdnri9nq4q6g2mmhy9ypklb3")))

(define-public crate-gluon_language-server-0.5.0 (c (n "gluon_language-server") (v "0.5.0") (d (list (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.5.0") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^7.0.0") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0xq82xiqd3957y32yhq2dga1zkflx5ksj5j6s0r7pv5zdapc8pyd")))

(define-public crate-gluon_language-server-0.6.0 (c (n "gluon_language-server") (v "0.6.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "combine") (r "^3.0.0-alpha.3") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "fibers") (r "^0.1.8") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-cpupool") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.6.1") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.6.1") (d #t) (k 0)) (d (n "gluon_format") (r "^0.6.1") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^7.0.0") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "1k9xv6kak2a5nwkr0dxz915d3npgrbjplq5mbz9gw18yfmnxf98a")))

(define-public crate-gluon_language-server-0.7.0 (c (n "gluon_language-server") (v "0.7.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "combine") (r "^3.0.0-alpha.4") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "fibers") (r "^0.1.8") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-cpupool") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.7.0") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.7.0") (d #t) (k 0)) (d (n "gluon_format") (r "^0.7.0") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.19.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "partial-io") (r "^0.2.5") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "1lh8ja89y65dnvgva61w1jfk9iqniky3k4wzn8v7af34li4s0h1s")))

(define-public crate-gluon_language-server-0.7.1 (c (n "gluon_language-server") (v "0.7.1") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "combine") (r "= 3.0.0-beta.1") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.3.3") (d #t) (k 0)) (d (n "fibers") (r "^0.1.8") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-cpupool") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.7.1") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.7.1") (d #t) (k 0)) (d (n "gluon_format") (r "^0.7.1") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.3.6") (d #t) (k 0)) (d (n "partial-io") (r "^0.2.5") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "19l2nhii0p8yc3mh4x0kvj4fjkm3pk7bxi45d40xpx8mmnmzk4jf")))

(define-public crate-gluon_language-server-0.8.0 (c (n "gluon_language-server") (v "0.8.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.8") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.8") (d #t) (k 0)) (d (n "gluon_format") (r "^0.8") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "1q3lpd6iwykzxnw3z9nv4y8365y3542rfrz3d29dn03hsxcxrqrm")))

(define-public crate-gluon_language-server-0.8.2 (c (n "gluon_language-server") (v "0.8.2") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.8") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.8") (d #t) (k 0)) (d (n "gluon_format") (r "^0.8") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0calv1sn4wkwyzd1aghxdvabbs6pkiz1s6nxffiaan8cyb0rj9k5")))

(define-public crate-gluon_language-server-0.9.0 (c (n "gluon_language-server") (v "0.9.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.9") (d #t) (k 0)) (d (n "gluon_completion") (r "^0.9") (d #t) (k 0)) (d (n "gluon_format") (r "^0.9") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0rq7kk426kq38wrm3d2r64w8pyc3h9b9v6wb4f5iha821mvl6yk9")))

(define-public crate-gluon_language-server-0.9.1 (c (n "gluon_language-server") (v "0.9.1") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.9.2") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.9") (d #t) (k 0)) (d (n "gluon_format") (r "^0.9") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "03n2r1b44blflqycdx9xdvdl011npixm83v6hxksf2mwy8913kwy")))

(define-public crate-gluon_language-server-0.9.2 (c (n "gluon_language-server") (v "0.9.2") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.1.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.1.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.9.2") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.9") (d #t) (k 0)) (d (n "gluon_format") (r "^0.9") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "056cb0mr2yrr3v4rmh3g92x6xsxy2mzm2x4ylfmwnq1pd5ahgq2s")))

(define-public crate-gluon_language-server-0.10.0 (c (n "gluon_language-server") (v "0.10.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.2.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.2.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.10") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.10") (d #t) (k 0)) (d (n "gluon_format") (r "^0.10") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.51.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "18k3s5lrac3iq8p7j4mjfjibw1ifq4qgh7hg84907pw6m4phi0kv")))

(define-public crate-gluon_language-server-0.11.0 (c (n "gluon_language-server") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.2.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.2.0") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.2") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.11") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.11") (d #t) (k 0)) (d (n "gluon_format") (r "^0.11") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^8.0.1") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.51.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0ws9vn9sxba1f92nfyhwc75lsrmi31r92481w99x80s72ka7xysd")))

(define-public crate-gluon_language-server-0.12.0 (c (n "gluon_language-server") (v "0.12.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.12") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.12") (d #t) (k 0)) (d (n "gluon_format") (r "^0.12") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^12") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.54.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "1p8ip5dn6ldd8bzr58c9bvnaka9wfcx1p8vdn3vxzf9q9c1l6h6g")))

(define-public crate-gluon_language-server-0.13.0 (c (n "gluon_language-server") (v "0.13.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "gluon") (r "^0.13") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.13") (d #t) (k 0)) (d (n "gluon_format") (r "^0.13") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^12") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.54.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0llx99idaccl4vz73y27q994lyhi8v4yq4y2l3pr4m0sp4yxvx0f")))

(define-public crate-gluon_language-server-0.15.0 (c (n "gluon_language-server") (v "0.15.0") (d (list (d (n "async-pipe") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan") (r "^0.3") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.3") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.3") (d #t) (k 0)) (d (n "combine") (r "^3.0.0") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat"))) (d #t) (k 0)) (d (n "gluon") (r "^0.15.1") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.15.1") (d #t) (k 0)) (d (n "gluon_format") (r "^0.15.1") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^14") (d #t) (k 0)) (d (n "languageserver-types") (r "^0.54.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "partial-io") (r "^0.3.0") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "url") (r "^1.2.0") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)))) (h "0ap6fwhiiibi3ca0lpfzh3g6fvws7zsfz8irbzhzm84592z60qci")))

(define-public crate-gluon_language-server-0.17.0 (c (n "gluon_language-server") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-pipe") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.10") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat"))) (d #t) (k 0)) (d (n "gluon") (r "^0.17") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.17") (d #t) (k 0)) (d (n "gluon_format") (r "^0.17") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^14") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.77.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0zj07j8dhvm0icxhjpcq48b4pzqn457w7vram8d14y50sgr9bvgb")))

(define-public crate-gluon_language-server-0.18.0 (c (n "gluon_language-server") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-pipe") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^2.19.0") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "debugserver-types") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat"))) (d #t) (k 0)) (d (n "gluon") (r "^0.18.1") (f (quote ("serialization" "regex" "rand" "web"))) (d #t) (k 0)) (d (n "gluon_completion") (r "^0.18.0") (d #t) (k 0)) (d (n "gluon_format") (r "^0.18.0") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.8") (f (quote ("codec"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0ik59c5aj623jcjix4q3s7ra5sfxdwj6x8g14rrnz0h61nfkzppp")))

