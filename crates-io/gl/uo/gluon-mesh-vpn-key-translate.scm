(define-module (crates-io gl uo gluon-mesh-vpn-key-translate) #:use-module (crates-io))

(define-public crate-gluon-mesh-vpn-key-translate-0.1.0 (c (n "gluon-mesh-vpn-key-translate") (v "0.1.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dryoc") (r "^0.3.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libecdsautil") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "1pvpy5l54j8891cx9dxcq1y5ngdzxy9f1nni4q6n2lvnrhc0zg4w")))

(define-public crate-gluon-mesh-vpn-key-translate-0.2.0 (c (n "gluon-mesh-vpn-key-translate") (v "0.2.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dryoc") (r "^0.3.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libecdsautil") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "recap") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "12afq46g09lzg8fak2w3w0xq4hpl95d1wkc58zmylj6cr3jmcg3z")))

(define-public crate-gluon-mesh-vpn-key-translate-0.2.1 (c (n "gluon-mesh-vpn-key-translate") (v "0.2.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libecdsautil") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "recap") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "12q1gqscvfg3fxl9r8yc832hb306q66s6sgjzm9pa5l9rn4s28a9")))

(define-public crate-gluon-mesh-vpn-key-translate-0.2.2 (c (n "gluon-mesh-vpn-key-translate") (v "0.2.2") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libecdsautil") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "recap") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "08a2y4zpjwg2ma8ay4vb0x4g4gh2hl8kmqhmp2v603gyw0lrcp4l")))

(define-public crate-gluon-mesh-vpn-key-translate-0.2.3 (c (n "gluon-mesh-vpn-key-translate") (v "0.2.3") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libecdsautil") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "recap") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0nic9km6vr14ngqkkvf0icjxl8ds5vqw9yk8bna7hh6cjhl3wxpk")))

