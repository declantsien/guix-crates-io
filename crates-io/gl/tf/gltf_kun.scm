(define-module (crates-io gl tf gltf_kun) #:use-module (crates-io))

(define-public crate-gltf_kun-0.0.1 (c (n "gltf_kun") (v "0.0.1") (d (list (d (n "gltf") (r "^1.3.0") (f (quote ("default" "extras" "KHR_lights_punctual" "KHR_materials_pbrSpecularGlossiness" "KHR_materials_unlit" "KHR_texture_transform" "KHR_materials_transmission" "KHR_materials_ior" "KHR_materials_variants" "KHR_materials_volume" "KHR_materials_specular" "KHR_materials_emissive_strength"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)))) (h "1afhvn2bkff4f2za9xfv7fxlq4x94gkxfw43v7vgwiy41gybs772")))

(define-public crate-gltf_kun-0.0.2 (c (n "gltf_kun") (v "0.0.2") (d (list (d (n "gltf") (r "^1.3.0") (f (quote ("default" "extras" "KHR_lights_punctual" "KHR_materials_pbrSpecularGlossiness" "KHR_materials_unlit" "KHR_texture_transform" "KHR_materials_transmission" "KHR_materials_ior" "KHR_materials_variants" "KHR_materials_volume" "KHR_materials_specular" "KHR_materials_emissive_strength"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)))) (h "0gy3k73vgc4vj289jfl5cixm35fh04p5fj39i7yh93ayn8hlrb3i")))

(define-public crate-gltf_kun-0.0.3 (c (n "gltf_kun") (v "0.0.3") (d (list (d (n "gltf") (r "^1.3.0") (f (quote ("default" "extras" "KHR_lights_punctual" "KHR_materials_pbrSpecularGlossiness" "KHR_materials_unlit" "KHR_texture_transform" "KHR_materials_transmission" "KHR_materials_ior" "KHR_materials_variants" "KHR_materials_volume" "KHR_materials_specular" "KHR_materials_emissive_strength"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)))) (h "079jz93py9mqcrw3bfjpghswrf5as3ygwl74xdwhiip2fgk9d9di")))

(define-public crate-gltf_kun-0.0.4 (c (n "gltf_kun") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0v8fl9flgjsq00l399cgqy18lyq4ds3jhsdzwphxc1f23h6n6az3")))

(define-public crate-gltf_kun-0.0.5 (c (n "gltf_kun") (v "0.0.5") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "12shiwciw13jv17hwhnzzh8b99iaa21rvynscf0017xidgy7pm33")))

(define-public crate-gltf_kun-0.0.6 (c (n "gltf_kun") (v "0.0.6") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "19ip63gkk1jnjjs5mxhvd4l2yr5lnkdaj1zhrfmm9rx27dmn79dc") (f (quote (("omi_physics_shape") ("omi_physics_body" "omi_physics_shape") ("default" "omi_physics_body" "omi_physics_shape"))))))

(define-public crate-gltf_kun-0.0.7 (c (n "gltf_kun") (v "0.0.7") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0m6kb2jfnimh6dn816ynb4j89gg8d2gxhd07y92a3df4lkm98g03") (f (quote (("omi_physics_shape") ("omi_physics_body" "omi_physics_shape") ("default" "omi_physics_body" "omi_physics_shape"))))))

(define-public crate-gltf_kun-0.0.8 (c (n "gltf_kun") (v "0.0.8") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1mzgzjdkwqg6yq3vx80byk38gix5hv1mdw2wfv3hk30fpl25gzga") (f (quote (("omi_physics_shape") ("omi_physics_body" "omi_physics_shape") ("default" "omi_physics_body" "omi_physics_shape"))))))

(define-public crate-gltf_kun-0.0.9 (c (n "gltf_kun") (v "0.0.9") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1kw4b2nxricgxyhhymryl8j9ldyykdpn9fxrw23ankg94b864bmn") (f (quote (("omi_physics") ("default"))))))

(define-public crate-gltf_kun-0.0.10 (c (n "gltf_kun") (v "0.0.10") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0paarrv92aqv09w7ls0n0fnp53cjid3l06v9qc1wzg2n2j3d7d41") (f (quote (("omi_physics") ("default"))))))

(define-public crate-gltf_kun-0.0.11 (c (n "gltf_kun") (v "0.0.11") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "07lljqvpp2803wz0r7libdb3k1vs8jxz1dkh4phv65v32lz2ixxg") (f (quote (("omi_physics") ("default"))))))

(define-public crate-gltf_kun-0.0.12 (c (n "gltf_kun") (v "0.0.12") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "glam") (r "^0.25.0") (d #t) (k 0)) (d (n "gltf") (r "^1.4.0") (f (quote ("extensions" "extras"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("stable_graph"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.110") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1lfsdi1ic0slp9hw41gz5mkid7w9kid60jivjwwpcg12xcqrh4lk") (f (quote (("omi_physics") ("default"))))))

