(define-module (crates-io gl ut glutin) #:use-module (crates-io))

(define-public crate-glutin-0.0.2 (c (n "glutin") (v "0.0.2") (d (list (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "winapi") (r "^0.0.3") (f (quote ("gdi32" "kernel32" "user32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.3") (f (quote ("gdi32" "kernel32" "user32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1jf4vsiyasd0cgxqgb5h8msshif41fa79xff029x7zlzi3f1358f") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.3 (c (n "glutin") (v "0.0.3") (d (list (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "winapi") (r "*") (f (quote ("gdi32" "kernel32" "user32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "*") (f (quote ("gdi32" "kernel32" "user32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0r7z39gyxph4nfyqqwma95lfpdkkk91dfdvdxavsj3n948lj61la") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.4 (c (n "glutin") (v "0.0.4") (d (list (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1x9rhkiqvnsrp18cn16zxxrm2r90l067dpipfp34f2m1pnnniy4a") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.5 (c (n "glutin") (v "0.0.5") (d (list (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0hjf3m10gcyrzf3qfb9fj19ryjsjrj9rj53wpwjgn7jl3xzpxv9r") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.6 (c (n "glutin") (v "0.0.6") (d (list (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "01214c8j443ihb7zy965580lqxdnvmr913rm9nalg461515qw410") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.7 (c (n "glutin") (v "0.0.7") (d (list (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "04iww2f4bzyhhj60n1zgym6vbwcqa3nzj23c0fwxby9fj1yjpa42") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.8 (c (n "glutin") (v "0.0.8") (d (list (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0gg3q14pcp10wb8dm83kj6ra1a56p09829ph27is10vzdnm6766s") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.9 (c (n "glutin") (v "0.0.9") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1q5ra0amsy9i9q5r5mcfawazqklmr3sc0i8w8c1f5qyjz56rnvn0") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.10 (c (n "glutin") (v "0.0.10") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "18315zk6af7l3hq5j9xc0d62r2qy3gfk4j3hd32c30136rlbzq6f") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.11 (c (n "glutin") (v "0.0.11") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1rkb088zidrnw7m3702mk57zm8ji15c48218pwsxi44qjjdjh8p5") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.12 (c (n "glutin") (v "0.0.12") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1y8a6ybdndc9h98b0kyljjn1zg3x23yi8snjfkj04i6ivlmvfpc4") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.13 (c (n "glutin") (v "0.0.13") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1dmakcb3xxj5sa7rys1rr64fm2lrprjkg6vpgmvxrpn925kh2i6s") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.14 (c (n "glutin") (v "0.0.14") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1vbr1k4ap1ckx4hck6ciwhj2gsfg4y67ds7h3axpavij4x8v31mn") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.15 (c (n "glutin") (v "0.0.15") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "*") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0vyfad1a39s90wj2r0kxsc5agy3vjzc05g64svccch6zrnawml31") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.16 (c (n "glutin") (v "0.0.16") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "164m6csnbs6l8f3cjjfpxjj9h78jz6vklhww2qd3cvxwp43phmj8") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.17 (c (n "glutin") (v "0.0.17") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0bvrb0a4pklzj1p519awjygfh24hdbq6ixs3582b618saj11f06w") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.18 (c (n "glutin") (v "0.0.18") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1s5pwh2vrjzj5x968m717wzszld6k5hy5kx6b81jv43flnmgkbk3") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.19 (c (n "glutin") (v "0.0.19") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "12dy2jf8j4zas0rf24v46saggvw01sbs3s85nf70lkvn3rcp0nij") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.20 (c (n "glutin") (v "0.0.20") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "03654wi3bbfzwfj0j0sb839hn9rf3p6l3w108nc6v1zd4ncv47j5") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.21 (c (n "glutin") (v "0.0.21") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "085c9nf1b3zbp2v8k744brgzr314v05z5aq5dbdzmm3813gc7vmg") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.22 (c (n "glutin") (v "0.0.22") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "140342biywrwcsypqg4r7n27x964zvlmxs2p6xzb33v5ja8khrrl") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.23 (c (n "glutin") (v "0.0.23") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0spsrmssy9j6ykmd2pr7bw1zy3cadqbf8a8jhk5wd7p6k0pz665c") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.24 (c (n "glutin") (v "0.0.24") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1dnpalhqkr1r4fc66w8slp0kjw5vrwmrhh2i77swn47awzgm0l8b") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.25 (c (n "glutin") (v "0.0.25") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0szr1b40cvxyphyc1i87grh05g7vry1q4lh2s7kjxzxmpzz4dvzg") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.26 (c (n "glutin") (v "0.0.26") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1z0ykk7vx3wzbmsihi9nxa3hdxyn7n5zvabkz8jrp87qm6zmhd42") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.27 (c (n "glutin") (v "0.0.27") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0gwrw0w7skmqczwksy9igi7qx500s742zv6k5c91bg8blyb5bm7w") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.28 (c (n "glutin") (v "0.0.28") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "195pzzksb0nj0ly0ak3r3dfb3if71zzy0b4s8k4r8x3m48hca5j3") (f (quote (("window") ("headless") ("default" "window")))) (y #t)))

(define-public crate-glutin-0.0.29 (c (n "glutin") (v "0.0.29") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "144b31xwqrba59zl15wacsg8f2nqi1ywqc0rpwnxpyyvh8k9j378") (f (quote (("window") ("headless") ("default" "window")))) (y #t)))

(define-public crate-glutin-0.0.30 (c (n "glutin") (v "0.0.30") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "13bza12wdcss66pjjknsbx6vk73rnzwnsbb1iqxnrm01y7gjdjr7") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.0.31 (c (n "glutin") (v "0.0.31") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1ky89dzh32q4m21fh38m28rvn9ja8dffbbgiwas92p751d8qfp9n") (f (quote (("window") ("headless") ("default" "window"))))))

(define-public crate-glutin-0.1.0 (c (n "glutin") (v "0.1.0") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0byv2955mnxnirbjlj6rlni6nclvmnrwzav3gbmx3dn6znczh7r6") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.1.1 (c (n "glutin") (v "0.1.1") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0i8q8iqwcfgxd904m0g31z0bdab3phd3v7hrzxfayz4yh1c1bikc") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.1.2 (c (n "glutin") (v "0.1.2") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "*") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "*") (d #t) (k 0)) (d (n "gl_generator") (r "*") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "*") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "*") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "*") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "*") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "*") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1irzgi5dxylvmxi27j4sk2k2x5y5p1h421zsbp4l7j1pqwzdvv4z") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.1.3 (c (n "glutin") (v "0.1.3") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.25") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.1.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1yy9wslmf51388sx38j8d87hwlbr73qwpyiq6ficx3m0p5fn2ad0") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.1.4 (c (n "glutin") (v "0.1.4") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.25") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "03rdr15yvmd3zdafj339abg5glxn22lf5slmqk48r5kmrdck0sbb") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.1.5 (c (n "glutin") (v "0.1.5") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0801xv7pf1azjsrnlps0wnyqygfg1mc7g86fxa23klr729zig4p9") (f (quote (("window") ("default" "window")))) (y #t)))

(define-public crate-glutin-0.1.6 (c (n "glutin") (v "0.1.6") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "glutin_cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "glutin_core_graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0p3319h1q89kp8w29i1rlflkb1qs1b4hb0wp1vqi2ljvb39bma5i") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.2.0 (c (n "glutin") (v "0.2.0") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.1.6") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.1.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0zsgdc6xxqidbn3cxp2b3c204y3rs6gxhn87lhsfg1ilp3hakxqg") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.2.1 (c (n "glutin") (v "0.2.1") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.5") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1ba2xwywj7a1c7in6v3ikkhm8qnzfxlv689vgfvmlam51lzg6cx8") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.2.2 (c (n "glutin") (v "0.2.2") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.6") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0ipkbaw1kw5j59wyj6vv3403wns2gnp0sgnihw1rlz3cdhp1n9aa") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.0 (c (n "glutin") (v "0.3.0") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "~0.1.18") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "150n0g8qmnwmrykyf4iad94g21jhbk0fkchmxclrs4cal6xw87pc") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.1 (c (n "glutin") (v "0.3.1") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0q2qnhlggsfiaw0kzk5cppnzlrbs1si31v8wfvv0m6c842j3l86p") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.2.3 (c (n "glutin") (v "0.2.3") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.6") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0nnwnkj4n1b02k0lamd12543dj14qn3cf5a1lphz01m30s2isf0v") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.2 (c (n "glutin") (v "0.3.2") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0aks5aw4dpwimi6050irqs9c6pimxkjnkbrgvgibv1x257h1nkb0") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.2.4 (c (n "glutin") (v "0.2.4") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.6") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "= 1.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1fb82l2igibg3alp4mm3gy0a2ld1lhb4blcxb99sqnwhwwfgzdlh") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.3 (c (n "glutin") (v "0.3.3") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0sphifz0kiar3ps70vhj6594na2w10ab154xxaqn5n90c599sz5a") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.4 (c (n "glutin") (v "0.3.4") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.0") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1g7md9p91j4nikqyjfvbhs9jrmfw3xj3xl328qwyazwg9v197q90") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.5 (c (n "glutin") (v "0.3.5") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.26") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "15p3mhh0a91srb1rcazc0yxhjg2zzfjmcj9q4m2mnr4zbf7jf43g") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.6 (c (n "glutin") (v "0.3.6") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.0.4") (d #t) (k 0)) (d (n "gl_generator") (r "^0.0.27") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1lbvsvx38wvwf777q657fqy643l3wsvxi843fnvvc8v6w6z4b5di") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.3.7 (c (n "glutin") (v "0.3.7") (d (list (d (n "android_glue") (r "^0") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.1.0") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.7") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0s3gqpav0kvv1hsrp1ixyacrk9kvivfnr895m9pnpg9kp3q9k8hy") (f (quote (("window") ("default" "window"))))))

(define-public crate-glutin-0.4.0 (c (n "glutin") (v "0.4.0") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.0.5") (d #t) (k 2)) (d (n "cocoa") (r "^0.1.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.1.0") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.8") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0pw1gr1phqdl9ymjkid9iyfyh8b0visqm1al2xy83m4iaw44r99j")))

(define-public crate-glutin-0.4.1 (c (n "glutin") (v "0.4.1") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.1.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.1.0") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.8") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1a9qfcq4dwq6g93srv576l7aghsr5zmjx3918bvi3pd33ay4343z")))

(define-public crate-glutin-0.4.2 (c (n "glutin") (v "0.4.2") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.1.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.2.0") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^0.0.8") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1bfvdaqhfj2f3d2skhy3wx3hpz4hl641z3l6d1gfm3nl8hnjvqs4")))

(define-public crate-glutin-0.4.3 (c (n "glutin") (v "0.4.3") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1sr947m8gp4nj4837za57b28ffb80kyyix8yz35hrpqyrmq2d7ah")))

(define-public crate-glutin-0.4.4 (c (n "glutin") (v "0.4.4") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.2.1") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.2.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.1.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "044wd1na2905w74l7dw28xr71cbkzw3bv904pypg87fmdjpxpyg0")))

(define-public crate-glutin-0.4.5 (c (n "glutin") (v "0.4.5") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_common") (r "^0.1.0") (d #t) (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0lsllmjansalabl6g4wbga3cw7zh4nl2f71cp5dzpzvhhrcp14j5")))

(define-public crate-glutin-0.4.6 (c (n "glutin") (v "0.4.6") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0r5rhw5sfidkdglbkrp66xvyawx7mn04mii9x2rg07rd77m4s53y")))

(define-public crate-glutin-0.4.7 (c (n "glutin") (v "0.4.7") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clock_ticks") (r "^0.1.0") (d #t) (k 2)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0rjx8ab4bv3dbhgnncsrxiviz6px15mh33cqlv6i9nl880cx256h")))

(define-public crate-glutin-0.4.8 (c (n "glutin") (v "0.4.8") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "cocoa") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1c98h1gkjnpvvwqm5vpya0b76p2995jcgkrsy811yynyfkcxa0yw")))

(define-public crate-glutin-0.4.9 (c (n "glutin") (v "0.4.9") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "cocoa") (r "^0.2.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.1.8") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "10d259jqbsalalnbag5mkqpqswyl424k666sqjzxbjlj2s5in7x7")))

(define-public crate-glutin-0.5.0 (c (n "glutin") (v "0.5.0") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "cocoa") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-openbsd") (k 0)))) (h "1yh36dnvdydizzbsz4a3cgj38hcng8qzgxpf8bmcc23v1518yy0d")))

(define-public crate-glutin-0.5.1 (c (n "glutin") (v "0.5.1") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "arm-linux-androideabi") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "cocoa") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "lazy_static") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "aarch64-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "armv7-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "armv7s-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "i386-apple-ios") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-ios") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "osmesa-sys") (r "^0.0.5") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "x86_64-unknown-openbsd") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "armv7-unknown-linux-gnueabihf") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "i586-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-dragonfly") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-freebsd") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "x11-dl") (r "~2.4") (d #t) (t "x86_64-unknown-openbsd") (k 0)))) (h "0kw4h8hn9pnimqiq7rnsrz8vrfgy09df8qq9yvy2qsx9d16273sb")))

(define-public crate-glutin-0.5.2 (c (n "glutin") (v "0.5.2") (d (list (d (n "android_glue") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "118ysr78ggwr04xs203pnxpln1fnyxksma08imr1c007h9vinsjl")))

(define-public crate-glutin-0.6.0 (c (n "glutin") (v "0.6.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1yvnr7kkp86mnsm5s2p6p50rvk22svw80z2nsmbkl0ah4amc79vk")))

(define-public crate-glutin-0.6.1 (c (n "glutin") (v "0.6.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0vb0kj1mcix2hacbdpqxc09h55hgm51hry44nl4vrl9bd3hcxnw7")))

(define-public crate-glutin-0.6.2 (c (n "glutin") (v "0.6.2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.5.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-kbd") (r "^0.3.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-window") (r "^0.2.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "106nc7pvxyx77rhzj4g55bb8j3s7gixgplyqndj89ap7csp6yy06")))

(define-public crate-glutin-0.7.0 (c (n "glutin") (v "0.7.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.7.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.5.3") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1bdp0s5vk2309knr4hq3w9f3dlxmxgsgkqsrjwb32n4qnly4h64n")))

(define-public crate-glutin-0.7.1 (c (n "glutin") (v "0.7.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.7.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.5.6") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0751a7ygkl9ykhbqjyf3c34aj6m5a46074w2d2cjbg7ipffcp71f")))

(define-public crate-glutin-0.7.2 (c (n "glutin") (v "0.7.2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.7.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.5.7") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0ypb64w8rrjpn0r2d1n1kv4nyisgkb4a5py01i3rwmby5z5yc3zi")))

(define-public crate-glutin-0.7.3 (c (n "glutin") (v "0.7.3") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.7.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.5.9") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0x851gbg8q8aj8jka9j5iqkn9r9k7r493nc7k6rm3rxbc6w0a0fp")))

(define-public crate-glutin-0.7.4 (c (n "glutin") (v "0.7.4") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.7.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.5.10") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0aziw2fzl0i384jzahdwayc1a6jvxdwbhpd2nicp4qk3hfdcr58z")))

(define-public crate-glutin-0.8.0 (c (n "glutin") (v "0.8.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.8.6") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.6.3") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1dvj9149qfix32mlsc927mg6pwk8pblzj3y6hmmsh0zafnxlybl5")))

(define-public crate-glutin-0.8.1 (c (n "glutin") (v "0.8.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.8.6") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.6.3") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0621yz8yacqqhd0ifgqc3x040dqnzlrhanmk6j2mw3gl1sfp1qln")))

(define-public crate-glutin-0.9.0 (c (n "glutin") (v "0.9.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.7.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0n0yqxbdjilfirc20g8m5cxcjl4cw40k7nki3sy2g6908qfg5gxk")))

(define-public crate-glutin-0.9.1 (c (n "glutin") (v "0.9.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.7.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1jhxpy8r1p2yjkmdyjyg2wib2cwc6g9232ypia3llk9j09vqmg6w")))

(define-public crate-glutin-0.9.2 (c (n "glutin") (v "0.9.2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.7.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "03bhhh5vikgwgpfyndjdjkla06nxv0jc0cadad1fgz3yrx1ibviw")))

(define-public crate-glutin-0.10.0 (c (n "glutin") (v "0.10.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.8.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1hc797a27gsjihf00v0lmaparcjz7m48kxywjhs4dhrhfpakh3mr")))

(define-public crate-glutin-0.10.1 (c (n "glutin") (v "0.10.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.8.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0jjyp5m7nw5jqgd1pz9gbnm8bk5qsxasrwc5wapcbi5aqj8rniax")))

(define-public crate-glutin-0.11.0 (c (n "glutin") (v "0.11.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.7") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.9.5") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.9.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1bhiiz0qvy0xr6r1zwrmnjf1c813km585gqg7xw9pxgyh4h1js9h")))

(define-public crate-glutin-0.12.0 (c (n "glutin") (v "0.12.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dwmapi-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdi32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.7") (d #t) (k 1)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "shell32-sys") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "user32-sys") (r "~0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.10.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1r9zf3crym1j953hi4s6vvx1a65lamfv2vj8vdpcp0a5n7g0xir5")))

(define-public crate-glutin-0.12.1 (c (n "glutin") (v "0.12.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.10.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1m52aaqp52d8sl5b7qhrjybdhw0kiqhgki9m8qha7k7r37hchvg0")))

(define-public crate-glutin-0.12.2 (c (n "glutin") (v "0.12.2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.10.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0hr9f1firgmsf2rs5fxlk8850sjqr8byzfp0wsv636f9ar884zr4")))

(define-public crate-glutin-0.12.3 (c (n "glutin") (v "0.12.3") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.11.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1qxla58kvpwqqk0d1ndma31shxhnw6ivi3rxwq38lsmwkpbjbyxm") (y #t)))

(define-public crate-glutin-0.13.0 (c (n "glutin") (v "0.13.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.11.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1jv2126vd2p67gxadapfjiji2j1jscsqv61xrajd629qijxz75ds")))

(define-public crate-glutin-0.13.1 (c (n "glutin") (v "0.13.1") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.11.2") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0944vxvpsfwk5khvl3ipbljqd4ay0qiknsgyzfn9hw75j41qxplh")))

(define-public crate-glutin-0.14.0 (c (n "glutin") (v "0.14.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.12.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1w0way4xxkhfvl6h191xqwicmmckdni0aw82mpha4jiq44fx3ljy")))

(define-public crate-glutin-0.15.0 (c (n "glutin") (v "0.15.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.12") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.13.1") (d #t) (k 0)) (d (n "x11-dl") (r "^2.17.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "0w9i1acxvcmxj996xz1v6vdhxy0s7aqq7dra8nsb521knx2fxjm9")))

(define-public crate-glutin-0.16.0 (c (n "glutin") (v "0.16.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.20.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.15.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.17.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1h8g4nlkvv4ahym0nz9hqvkq79jrarcbq4z0vfzd4yrhh3kjvys2") (f (quote (("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.17.0 (c (n "glutin") (v "0.17.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.20.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.16.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.17.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "05q322r2kyscz4cji0pq212mhg05688fl1588fra7mgvivkmy357") (f (quote (("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.18.0 (c (n "glutin") (v "0.18.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.20.4") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.2") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.17.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.17.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1zpaqq9zi8r7ldp7df5vp00hi75xwmwfg6rjn7jcvk0x5j2lps0b") (f (quote (("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.19.0 (c (n "glutin") (v "0.19.0") (d (list (d (n "android_glue") (r "^0.2.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1.0") (d #t) (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.18.0") (d #t) (k 0)) (d (n "x11-dl") (r "^2.18.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))") (k 0)))) (h "1hzw4kmqmng773rp1sd3gsfk7mpz4ah11nxj0iv25fxdb3d6wp2k") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.20.0 (c (n "glutin") (v "0.20.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19") (d #t) (k 0)))) (h "0b2v056ig1a56jw1vcdrw3fvhrgxm416z2kfjyjzvxjirmk38rpz") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.21.0-rc1 (c (n "glutin") (v "0.21.0-rc1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19") (d #t) (k 0)))) (h "0bvbg7y51px3pynnzchg9n3v8id00n3xy7rm85x58qb40h1s2njp") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.21.0-rc2 (c (n "glutin") (v "0.21.0-rc2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19.1") (d #t) (k 0)))) (h "01nkcskp66qk8xva6n4k33sff5wbz74n7xrgmi7q12chdfcs3iik") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.21.0-rc3 (c (n "glutin") (v "0.21.0-rc3") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19.1") (d #t) (k 0)))) (h "087h2cajw8dyq7b5sx66cjll5f0f375x72mybz0vx66sapbzssq0") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.21.0 (c (n "glutin") (v "0.21.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19.1") (d #t) (k 0)))) (h "0x0lrf8fyzawl8g1cp1s4hjc3l5q7mm0ppzhksaf3ff3hix049nb") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.22.0-alpha1 (c (n "glutin") (v "0.22.0-alpha1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0-alpha1") (d #t) (k 0)))) (h "0x3wk3ld3qadhp2g9n4bpvapxj39ji161bm0if9zkg1wgizjwc5p") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.20.1 (c (n "glutin") (v "0.20.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "shared_library") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19") (d #t) (k 0)))) (h "1whvzw4yw2phwv3pcfc5a1pscm22bsxsbajg8d7p0dfbqrxc2p3f") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.22.0-alpha2 (c (n "glutin") (v "0.22.0-alpha2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0-alpha3") (d #t) (k 0)))) (h "19ng6kmmiys8q4104wmh9awasgvv8ywb3m7xnxf5410j9wlnlsaw") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.22.0-alpha3 (c (n "glutin") (v "0.22.0-alpha3") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0-alpha3") (d #t) (k 0)))) (h "1fnfpdmymj6s53p9ahpmqpqay7plj7fsshhsla0l408mnn93bpgw") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.21.1 (c (n "glutin") (v "0.21.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19.3") (d #t) (k 0)))) (h "0jcr3fg5wmq32db4jjvrs9867d61z6ivwcv12qsibzmvn6ifg34k") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.22.0-alpha4 (c (n "glutin") (v "0.22.0-alpha4") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0-alpha4") (d #t) (k 0)))) (h "1z8s36vf7wqr8wrxfpls97bnmjqn32nq3wfvx2n9nz6a8afrd365") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.22.0-alpha5 (c (n "glutin") (v "0.22.0-alpha5") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0-alpha4") (d #t) (k 0)))) (h "0lilr4f335m1fq1acmshd51zblfaglw1hha6lhalnc1fw3cg0aag") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.21.2 (c (n "glutin") (v "0.21.2") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.21") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.19.3") (d #t) (k 0)))) (h "1ggyyqn7dvz4yx5ygqfvnxwfb78wvdm5y6xqw5my1b4x61dv6wak") (f (quote (("serde" "winit/serde") ("icon_loading" "winit/icon_loading"))))))

(define-public crate-glutin-0.22.0-alpha6 (c (n "glutin") (v "0.22.0-alpha6") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "= 0.20.0-alpha4") (d #t) (k 0)))) (h "0cmmnmzf6sycgdfia6mc2hcb8h73dvzvb34s9m72mrp6l02369kq") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.22.0 (c (n "glutin") (v "0.22.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.3") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0") (d #t) (k 0)))) (h "1qbpk1yghd0m44raha2rcgb5gw8pdgx2n5bamnmbhpzsvp64131f") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.22.1 (c (n "glutin") (v "0.22.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.20.0") (d #t) (k 0)))) (h "1dch49xvf7knbphmi9zsxi93xrql6zd8gg9rjcxsh0lbhg44d4k3") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.23.0 (c (n "glutin") (v "0.23.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.21.0") (d #t) (k 0)))) (h "1xy7x3s7wbk77bvkv8ckkp4ykmy0lbki096m5agvxnam1klx88ng") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.24.0 (c (n "glutin") (v "0.24.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.22.0") (d #t) (k 0)))) (h "1wzk2hmwl1h125fsz78jh44gvp2j30v9xjxf8y83wzq4lpg26431") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.24.1 (c (n "glutin") (v "0.24.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.23") (f (quote ("egl" "dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.22.0") (d #t) (k 0)))) (h "03z2q2717r2lnfrmnlhd24fss6p16n64dqjrcn7h1zcszp46d5ls") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.25.0 (c (n "glutin") (v "0.25.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.28") (f (quote ("dlopen"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.28") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.23.0") (d #t) (k 0)))) (h "1vgbnp2dd1inhz6viz2i9qac1v0n1s9ljpdis9wqi55na5bw157d") (f (quote (("serde" "winit/serde"))))))

(define-public crate-glutin-0.25.1 (c (n "glutin") (v "0.25.1") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.28") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.28") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.23.0") (k 0)))) (h "0vn89cavn63ghvgv8hq10pgf0zaji7m77m7sx41v0a5775mf5fnq") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland" "winit/wayland" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland"))))))

(define-public crate-glutin-0.26.0 (c (n "glutin") (v "0.26.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.6.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.28") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.28") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (k 0)))) (h "18szbh4dixcr7pmymvbrpv21hv0wrpii5w03rv2534bb2ywwpq8s") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland" "winit/wayland" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland"))))))

(define-public crate-glutin-0.27.0 (c (n "glutin") (v "0.27.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.28") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.28") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.25") (k 0)))) (h "1w58vcni5sq0h03s5a9rmj2rsraqj3693rgbd2bdjmdqw796qbbn") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland" "winit/wayland" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland"))))))

(define-public crate-glutin-0.28.0 (c (n "glutin") (v "0.28.0") (d (list (d (n "android_glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_emscripten_sys") (r "^0.1.1") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.29") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.26") (k 0)))) (h "1lpnf61x4jbm55bpdr10k1a1pl3cs719i9y4qibsdj2bajz9vsh0") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland-dlopen" "winit/wayland-dlopen") ("wayland" "winit/wayland" "winit/wayland-dlopen" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland" "wayland-dlopen"))))))

(define-public crate-glutin-0.29.0 (c (n "glutin") (v "0.29.0") (d (list (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.29") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.1") (k 0)))) (h "0kpj724gb2nay8bp9bkr7z53bvwlsvvg8f02fny82g5gvjpsvyd4") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland-dlopen" "winit/wayland-dlopen") ("wayland-csd-adwaita-notitle" "winit/wayland-csd-adwaita-notitle") ("wayland-csd-adwaita" "winit/wayland-csd-adwaita") ("wayland" "winit/wayland" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita")))) (r "1.57")))

(define-public crate-glutin-0.29.1 (c (n "glutin") (v "0.29.1") (d (list (d (n "cgl") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_gles2_sys") (r "^0.1.5") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.8") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "wayland-client") (r "^0.29.4") (f (quote ("dlopen"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-egl") (r "^0.29.4") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "winuser" "wingdi" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.1") (k 0)))) (h "04y7s5m74j9gns5bdja0alkm0m0b727vf9k7rw6g5jpxjk99lk24") (f (quote (("x11" "winit/x11" "glutin_glx_sys") ("wayland-dlopen" "winit/wayland-dlopen") ("wayland-csd-adwaita-notitle" "winit/wayland-csd-adwaita-notitle") ("wayland-csd-adwaita" "winit/wayland-csd-adwaita") ("wayland" "winit/wayland" "wayland-client" "wayland-egl") ("serde" "winit/serde") ("default" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita")))) (r "1.57")))

(define-public crate-glutin-0.30.0-beta.1 (c (n "glutin") (v "0.30.0-beta.1") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.7") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.1.7") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_glx_sys") (r "^0.1.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.1.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0-beta.8") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "05345z5ha76p4azm46yb929g8i17sqyjj2wxs635sdqrnj7cszkk") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (y #t) (r "1.57.0")))

(define-public crate-glutin-0.30.0-beta.2 (c (n "glutin") (v "0.30.0-beta.2") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "glutin_glx_sys") (r "^0.2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0-beta.8") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "09fir6ql3hgfrrsv8wnxn7y5k9bp7dp1nichaj0c6mgxix0bb47c") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.57.0")))

(define-public crate-glutin-0.30.0-beta.3 (c (n "glutin") (v "0.30.0-beta.3") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0-beta.8") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "02cwl8fqzx8p65lax88bw3xacimfm9dp31d45lzmfsxyyjk8pbdq") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.0 (c (n "glutin") (v "0.30.0") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "=0.30.0-beta.12") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0m1mp8886sry739qd7mrlxnkxs94i2nvc2gwy0jx3w9n4m8bzb1l") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.1 (c (n "glutin") (v "0.30.1") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "=0.30.0-beta.12") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "1978njv33xxy20b0crs8prc1jywdgvgk41a0arkw5cl0z2vr7p38") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.2 (c (n "glutin") (v "0.30.2") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0pi30z53yjmy00z37gywjv97kgy6fp2pr175jph2mdddlf0c70h2") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.3 (c (n "glutin") (v "0.30.3") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.36") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "18zpbg6w2l62ngyvg8rpkm78qz2ys66779pr7sjmc34ssiy80kaj") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.4 (c (n "glutin") (v "0.30.4") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0cd1i8w6clmxrv7iwg80w6dvls414q45lqh3m8zk373bzay3ygip") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.5 (c (n "glutin") (v "0.30.5") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "1ywdk5pp59qmqa6fhy7msjhwc00kjc3ci561crsczzh6jl4brgd8") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.6 (c (n "glutin") (v "0.30.6") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r "=0.3.0-beta.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "1b4c67n8d0a7jlk36q22ki1q6vpfc9nhd1xzjgm284v63yjkkp38") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.7 (c (n "glutin") (v "0.30.7") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "05gzw9icj4s0p9db9srnwrd3m3plcs7260jlblyy2pbiqygap6zq") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.8 (c (n "glutin") (v "0.30.8") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "09vkbkagddsadig2a7214b4p7p47gn36z8bavcyiw2jzlrqvgyb2") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.9 (c (n "glutin") (v "0.30.9") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0bzs5x6kkshx26l67ap17yjmi9ynd724dl4x19gyd2q4h9bkic13") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.30.10 (c (n "glutin") (v "0.30.10") (d (list (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.1") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.5.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.4.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "libloading") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "objc2") (r ">=0.3.0-beta.3, <0.3.0-beta.4") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30.0") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.45") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "1zk0cxchdy6fmnnwggylgg748wbk04mys9pv76nvh6974h1kpjcg") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.60.0")))

(define-public crate-glutin-0.31.0 (c (n "glutin") (v "0.31.0") (d (list (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("dispatch" "Foundation" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSView" "AppKit_NSWindow"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.31.1") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0dia97ixxf3j31aggvnks80yc6d7rvdsvpln070mm1iwvg5kph04") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.65.0")))

(define-public crate-glutin-0.31.1 (c (n "glutin") (v "0.31.1") (d (list (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("dispatch" "Foundation" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSView" "AppKit_NSWindow"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.4.1") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.31.1") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "1vp3l2398zbmy98zpiqjspi6fnvld96f0l0szp0rdj8qgr3qv8gc") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys") ("glx" "x11" "x11-dl" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.65.0")))

(define-public crate-glutin-0.31.2 (c (n "glutin") (v "0.31.2") (d (list (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("dispatch" "Foundation" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSView" "AppKit_NSWindow"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.4.1") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.31.1") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "04mjvgh2dipwa8wdy8gc70k8w48104v8vmr2cmqdqspq5ai5jm00") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys" "egl") ("glx" "x11" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.65.0")))

(define-public crate-glutin-0.31.3 (c (n "glutin") (v "0.31.3") (d (list (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_egl_sys") (r "^0.6.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "glutin_glx_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "glutin_wgl_sys") (r "^0.5.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "icrate") (r "^0.0.4") (f (quote ("dispatch" "Foundation" "Foundation_NSArray" "Foundation_NSThread" "AppKit" "AppKit_NSView" "AppKit_NSWindow"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.4.1") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.31.1") (f (quote ("egl" "client" "dlopen"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_Graphics_OpenGL" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11-dl") (r "^2.20.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)))) (h "0il7aija3y17p3sz6qqzxyahrgp5crqzbf002fnr3nc69spd9z0q") (f (quote (("x11" "x11-dl") ("wgl" "glutin_wgl_sys" "windows-sys") ("wayland" "wayland-sys" "egl") ("glx" "x11" "glutin_glx_sys" "libloading") ("egl" "glutin_egl_sys" "libloading") ("default" "egl" "glx" "x11" "wayland" "wgl")))) (r "1.65.0")))

