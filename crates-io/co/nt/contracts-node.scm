(define-module (crates-io co nt contracts-node) #:use-module (crates-io))

(define-public crate-contracts-node-0.31.0 (c (n "contracts-node") (v "0.31.0") (d (list (d (n "clap") (r "^4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.31.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "=0.5.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.16.2") (f (quote ("server"))) (d #t) (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^24.0.0") (d #t) (k 0)) (d (n "sc-basic-authorship") (r "^0.28.0") (d #t) (k 0)) (d (n "sc-cli") (r "^0.30.0") (k 0)) (d (n "sc-client-api") (r "^22.0.0") (d #t) (k 0)) (d (n "sc-consensus") (r "^0.27.0") (d #t) (k 0)) (d (n "sc-consensus-manual-seal") (r "^0.29.0") (d #t) (k 0)) (d (n "sc-executor") (r "^0.26.0") (d #t) (k 0)) (d (n "sc-keystore") (r "^19.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.28.0") (d #t) (k 0)) (d (n "sc-offchain") (r "^23.0.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^23.0.0") (d #t) (k 0)) (d (n "sc-rpc-api") (r "^0.27.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.29.0") (k 0)) (d (n "sc-telemetry") (r "^9.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool") (r "^22.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool-api") (r "^22.0.0") (d #t) (k 0)) (d (n "sp-api") (r "^20.0.0") (d #t) (k 0)) (d (n "sp-block-builder") (r "^20.0.0") (d #t) (k 0)) (d (n "sp-blockchain") (r "^22.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^22.0.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^25.0.0") (d #t) (k 0)) (d (n "sp-timestamp") (r "^20.0.0") (d #t) (k 0)) (d (n "substrate-build-script-utils") (r "^6.0.0") (d #t) (k 1)) (d (n "substrate-frame-rpc-system") (r "^22.0.0") (d #t) (k 0)))) (h "0kz7rdb3z7l925q13cljalrd141wn86bcmqfcr7xfal4nvcl1xja") (f (quote (("default"))))))

(define-public crate-contracts-node-0.33.0 (c (n "contracts-node") (v "0.33.0") (d (list (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.33.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "=0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.16.2") (f (quote ("server"))) (d #t) (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^26.0.0") (d #t) (k 0) (p "pallet-transaction-payment-rpc")) (d (n "sc-basic-authorship") (r "^0.30.0") (d #t) (k 0) (p "sc-basic-authorship")) (d (n "sc-cli") (r "^0.32.0") (k 0) (p "sc-cli")) (d (n "sc-client-api") (r "^24.0.0") (d #t) (k 0) (p "sc-client-api")) (d (n "sc-consensus") (r "^0.29.0") (d #t) (k 0) (p "sc-consensus")) (d (n "sc-consensus-manual-seal") (r "^0.31.0") (d #t) (k 0) (p "sc-consensus-manual-seal")) (d (n "sc-executor") (r "^0.28.0") (d #t) (k 0) (p "sc-executor")) (d (n "sc-keystore") (r "^21.0.0") (d #t) (k 0) (p "sc-keystore")) (d (n "sc-network") (r "^0.30.0") (d #t) (k 0) (p "sc-network")) (d (n "sc-offchain") (r "^25.0.0") (d #t) (k 0) (p "sc-offchain")) (d (n "sc-rpc") (r "^25.0.0") (d #t) (k 0) (p "sc-rpc")) (d (n "sc-rpc-api") (r "^0.29.0") (d #t) (k 0) (p "sc-rpc-api")) (d (n "sc-service") (r "^0.31.0") (k 0) (p "sc-service")) (d (n "sc-telemetry") (r "^11.0.0") (d #t) (k 0) (p "sc-telemetry")) (d (n "sc-transaction-pool") (r "^24.0.0") (d #t) (k 0) (p "sc-transaction-pool")) (d (n "sc-transaction-pool-api") (r "^24.0.0") (d #t) (k 0) (p "sc-transaction-pool-api")) (d (n "sp-api") (r "^22.0.0") (d #t) (k 0) (p "sp-api")) (d (n "sp-block-builder") (r "^22.0.0") (d #t) (k 0) (p "sp-block-builder")) (d (n "sp-blockchain") (r "^24.0.0") (d #t) (k 0) (p "sp-blockchain")) (d (n "sp-core") (r "^24.0.0") (d #t) (k 0) (p "sp-core")) (d (n "sp-runtime") (r "^27.0.0") (d #t) (k 0) (p "sp-runtime")) (d (n "sp-timestamp") (r "^22.0.0") (d #t) (k 0) (p "sp-timestamp")) (d (n "substrate-build-script-utils") (r "^8.0.0") (d #t) (k 1) (p "substrate-build-script-utils")) (d (n "substrate-frame-rpc-system") (r "^24.0.0") (d #t) (k 0) (p "substrate-frame-rpc-system")))) (h "01jh0vibin108yvqsscljiiz0hkd57xns11mzcbzzf38cc4jk9qn") (f (quote (("default"))))))

(define-public crate-contracts-node-0.35.0 (c (n "contracts-node") (v "0.35.0") (d (list (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.6.5") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "color-print") (r "^0.3.5") (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.35.0") (d #t) (k 0)) (d (n "contracts-parachain-runtime") (r "^0.35.0") (d #t) (k 0)) (d (n "cumulus-client-cli") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-client-collator") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-aura") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-common") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-proposer") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-client-service") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-primitives-core") (r "^0.3.0") (k 0)) (d (n "cumulus-primitives-parachain-inherent") (r "^0.3.0") (d #t) (k 0)) (d (n "cumulus-relay-chain-interface") (r "^0.3.0") (d #t) (k 0)) (d (n "frame-benchmarking") (r "^24.0.0") (k 0)) (d (n "frame-benchmarking-cli") (r "^28.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.16.2") (f (quote ("server"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^26.0.0") (d #t) (k 0)) (d (n "polkadot-cli") (r "^3.0.0") (f (quote ("rococo-native"))) (d #t) (k 0)) (d (n "polkadot-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "sc-basic-authorship") (r "^0.30.0") (d #t) (k 0)) (d (n "sc-chain-spec") (r "^23.0.0") (d #t) (k 0)) (d (n "sc-cli") (r "^0.32.0") (d #t) (k 0)) (d (n "sc-client-api") (r "^24.0.0") (d #t) (k 0)) (d (n "sc-consensus") (r "^0.29.0") (d #t) (k 0)) (d (n "sc-consensus-aura") (r "^0.30.0") (k 0)) (d (n "sc-consensus-grandpa") (r "^0.15.0") (k 0)) (d (n "sc-consensus-manual-seal") (r "^0.31.0") (k 0)) (d (n "sc-executor") (r "^0.28.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.30.0") (d #t) (k 0)) (d (n "sc-network-sync") (r "^0.29.0") (d #t) (k 0)) (d (n "sc-offchain") (r "^25.0.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^25.0.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.31.0") (d #t) (k 0)) (d (n "sc-sysinfo") (r "^23.0.0") (d #t) (k 0)) (d (n "sc-telemetry") (r "^11.0.0") (d #t) (k 0)) (d (n "sc-tracing") (r "^24.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool") (r "^24.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool-api") (r "^24.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sp-api") (r "^22.0.0") (k 0)) (d (n "sp-block-builder") (r "^22.0.0") (k 0)) (d (n "sp-blockchain") (r "^24.0.0") (d #t) (k 0)) (d (n "sp-consensus-aura") (r "^0.28.0") (k 0)) (d (n "sp-consensus-grandpa") (r "^9.0.0") (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-keystore") (r "^0.30.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-timestamp") (r "^22.0.0") (d #t) (k 0)) (d (n "substrate-build-script-utils") (r "^8.0.0") (d #t) (k 1)) (d (n "substrate-frame-rpc-system") (r "^24.0.0") (d #t) (k 0)) (d (n "substrate-prometheus-endpoint") (r "^0.15.0") (d #t) (k 0)) (d (n "try-runtime-cli") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "xcm") (r "^3.0.0") (k 0) (p "staging-xcm")))) (h "007yhmwk3xdqd7zrid760dsdbhjbi5f0h2ixwx1lnlgpdd31n2cr") (f (quote (("try-runtime" "try-runtime-cli/try-runtime" "contracts-parachain-runtime/try-runtime") ("runtime-benchmarks" "contracts-parachain-runtime/runtime-benchmarks" "polkadot-cli/runtime-benchmarks") ("default"))))))

(define-public crate-contracts-node-0.39.0 (c (n "contracts-node") (v "0.39.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "color-print") (r "^0.3.5") (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.39.0") (d #t) (k 0)) (d (n "contracts-parachain-runtime") (r "^0.39.0") (f (quote ("parachain"))) (d #t) (k 0)) (d (n "cumulus-client-cli") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-client-collator") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-aura") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-common") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-proposer") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-client-service") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-primitives-core") (r "^0.9.0") (k 0)) (d (n "cumulus-primitives-parachain-inherent") (r "^0.9.0") (d #t) (k 0)) (d (n "cumulus-relay-chain-interface") (r "^0.9.0") (d #t) (k 0)) (d (n "frame-benchmarking") (r "^30.0.0") (k 0)) (d (n "frame-benchmarking-cli") (r "^34.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.22") (f (quote ("server"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^32.0.0") (d #t) (k 0)) (d (n "polkadot-cli") (r "^9.0.0") (f (quote ("rococo-native"))) (d #t) (k 0)) (d (n "polkadot-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "sc-basic-authorship") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-chain-spec") (r "^29.0.0") (d #t) (k 0)) (d (n "sc-cli") (r "^0.38.0") (d #t) (k 0)) (d (n "sc-client-api") (r "^30.0.0") (d #t) (k 0)) (d (n "sc-consensus") (r "^0.35.0") (d #t) (k 0)) (d (n "sc-consensus-aura") (r "^0.36.0") (k 0)) (d (n "sc-consensus-grandpa") (r "^0.21.0") (k 0)) (d (n "sc-consensus-manual-seal") (r "^0.37.0") (k 0)) (d (n "sc-executor") (r "^0.34.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-network-sync") (r "^0.35.0") (d #t) (k 0)) (d (n "sc-offchain") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-sysinfo") (r "^29.0.0") (d #t) (k 0)) (d (n "sc-telemetry") (r "^17.0.0") (d #t) (k 0)) (d (n "sc-tracing") (r "^30.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool") (r "^30.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool-api") (r "^30.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sp-api") (r "^28.0.0") (k 0)) (d (n "sp-block-builder") (r "^28.0.0") (k 0)) (d (n "sp-blockchain") (r "^30.0.0") (d #t) (k 0)) (d (n "sp-consensus-aura") (r "^0.34.0") (k 0)) (d (n "sp-consensus-grandpa") (r "^15.0.0") (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-keyring") (r "^33.0.0") (k 0)) (d (n "sp-keystore") (r "^0.36.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-timestamp") (r "^28.0.0") (d #t) (k 0)) (d (n "substrate-build-script-utils") (r "^11.0.0") (d #t) (k 1)) (d (n "substrate-frame-rpc-system") (r "^30.0.0") (d #t) (k 0)) (d (n "substrate-prometheus-endpoint") (r "^0.17.0") (d #t) (k 0)) (d (n "try-runtime-cli") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "wasmtime") (r "^8.0.1") (d #t) (k 0)) (d (n "xcm") (r "^9.0.0") (k 0) (p "staging-xcm")))) (h "1kgff131dv2ks5ad5alv0h218kjrjvn5v59xkxbg0v9609h0j525") (f (quote (("try-runtime" "try-runtime-cli/try-runtime" "contracts-parachain-runtime/try-runtime") ("runtime-benchmarks" "contracts-parachain-runtime/runtime-benchmarks" "polkadot-cli/runtime-benchmarks") ("default"))))))

(define-public crate-contracts-node-0.40.0 (c (n "contracts-node") (v "0.40.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "color-print") (r "^0.3.5") (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.40.0") (d #t) (k 0)) (d (n "contracts-parachain-runtime") (r "^0.40.0") (f (quote ("parachain"))) (d #t) (k 0)) (d (n "cumulus-client-cli") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-client-collator") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-aura") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-common") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-proposer") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-client-service") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-primitives-core") (r "^0.10.0") (k 0)) (d (n "cumulus-primitives-parachain-inherent") (r "^0.10.0") (d #t) (k 0)) (d (n "cumulus-relay-chain-interface") (r "^0.10.0") (d #t) (k 0)) (d (n "frame-benchmarking") (r "^31.0.0") (k 0)) (d (n "frame-benchmarking-cli") (r "^35.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.22") (f (quote ("server"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^33.0.0") (d #t) (k 0)) (d (n "polkadot-cli") (r "^10.0.0") (f (quote ("rococo-native"))) (d #t) (k 0)) (d (n "polkadot-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "sc-basic-authorship") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-chain-spec") (r "^30.0.1") (d #t) (k 0)) (d (n "sc-cli") (r "^0.39.0") (d #t) (k 0)) (d (n "sc-client-api") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-consensus") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-consensus-aura") (r "^0.37.0") (k 0)) (d (n "sc-consensus-grandpa") (r "^0.22.0") (k 0)) (d (n "sc-consensus-manual-seal") (r "^0.38.0") (k 0)) (d (n "sc-executor") (r "^0.35.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-network-sync") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-offchain") (r "^32.0.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^32.0.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.38.0") (d #t) (k 0)) (d (n "sc-sysinfo") (r "^30.0.0") (d #t) (k 0)) (d (n "sc-telemetry") (r "^17.0.0") (d #t) (k 0)) (d (n "sc-tracing") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool-api") (r "^31.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sp-api") (r "^29.0.0") (k 0)) (d (n "sp-block-builder") (r "^29.0.0") (k 0)) (d (n "sp-blockchain") (r "^31.0.0") (d #t) (k 0)) (d (n "sp-consensus-aura") (r "^0.35.0") (k 0)) (d (n "sp-consensus-grandpa") (r "^16.0.0") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (k 0)) (d (n "sp-keystore") (r "^0.37.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^34.0.0") (k 0)) (d (n "sp-timestamp") (r "^29.0.0") (d #t) (k 0)) (d (n "substrate-build-script-utils") (r "^11.0.0") (d #t) (k 1)) (d (n "substrate-frame-rpc-system") (r "^31.0.0") (d #t) (k 0)) (d (n "substrate-prometheus-endpoint") (r "^0.17.0") (d #t) (k 0)) (d (n "try-runtime-cli") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "wasmtime") (r "^8.0.1") (d #t) (k 0)) (d (n "xcm") (r "^10.0.0") (k 0) (p "staging-xcm")))) (h "0bq1ylsp3vlqr04mnfjbiw2rvz331bnlyw0cmdyvp9g56rrfl0bv") (f (quote (("try-runtime" "try-runtime-cli/try-runtime" "contracts-parachain-runtime/try-runtime") ("runtime-benchmarks" "contracts-parachain-runtime/runtime-benchmarks" "polkadot-cli/runtime-benchmarks") ("default"))))))

(define-public crate-contracts-node-0.41.0 (c (n "contracts-node") (v "0.41.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "color-print") (r "^0.3.5") (d #t) (k 0)) (d (n "contracts-node-runtime") (r "^0.41.0") (d #t) (k 0)) (d (n "contracts-parachain-runtime") (r "^0.41.0") (f (quote ("parachain"))) (d #t) (k 0)) (d (n "cumulus-client-cli") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-client-collator") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-aura") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-common") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-client-consensus-proposer") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-client-service") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-primitives-core") (r "^0.11.0") (k 0)) (d (n "cumulus-primitives-parachain-inherent") (r "^0.11.0") (d #t) (k 0)) (d (n "cumulus-relay-chain-interface") (r "^0.11.0") (d #t) (k 0)) (d (n "frame-benchmarking") (r "^32.0.0") (k 0)) (d (n "frame-benchmarking-cli") (r "^36.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "jsonrpsee") (r "^0.22") (f (quote ("server"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-transaction-payment-rpc") (r "^34.0.0") (d #t) (k 0)) (d (n "polkadot-cli") (r "^11.0.0") (f (quote ("rococo-native"))) (d #t) (k 0)) (d (n "polkadot-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "sc-basic-authorship") (r "^0.38.0") (d #t) (k 0)) (d (n "sc-chain-spec") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-cli") (r "^0.40.0") (d #t) (k 0)) (d (n "sc-client-api") (r "^32.0.0") (d #t) (k 0)) (d (n "sc-consensus") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-consensus-aura") (r "^0.38.0") (k 0)) (d (n "sc-consensus-grandpa") (r "^0.23.0") (k 0)) (d (n "sc-consensus-manual-seal") (r "^0.39.0") (k 0)) (d (n "sc-executor") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.38.0") (d #t) (k 0)) (d (n "sc-network-sync") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-offchain") (r "^33.0.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^33.0.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.39.0") (d #t) (k 0)) (d (n "sc-sysinfo") (r "^31.0.0") (d #t) (k 0)) (d (n "sc-telemetry") (r "^18.0.0") (d #t) (k 0)) (d (n "sc-tracing") (r "^32.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool") (r "^32.0.0") (d #t) (k 0)) (d (n "sc-transaction-pool-api") (r "^32.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sp-api") (r "^30.0.0") (k 0)) (d (n "sp-block-builder") (r "^30.0.0") (k 0)) (d (n "sp-blockchain") (r "^32.0.0") (d #t) (k 0)) (d (n "sp-consensus-aura") (r "^0.36.0") (k 0)) (d (n "sp-consensus-grandpa") (r "^17.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-keyring") (r "^35.0.0") (k 0)) (d (n "sp-keystore") (r "^0.38.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^35.0.0") (k 0)) (d (n "sp-timestamp") (r "^30.0.0") (d #t) (k 0)) (d (n "substrate-build-script-utils") (r "^11.0.0") (d #t) (k 1)) (d (n "substrate-frame-rpc-system") (r "^32.0.0") (d #t) (k 0)) (d (n "substrate-prometheus-endpoint") (r "^0.17.0") (d #t) (k 0)) (d (n "try-runtime-cli") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "wasmtime") (r "^8.0.1") (d #t) (k 0)) (d (n "xcm") (r "^11.0.0") (k 0) (p "staging-xcm")))) (h "0gs3gdmgdmwjknknb7w28bzp91djlg61pdgk4xlfpis1m1pc5nwi") (f (quote (("try-runtime" "try-runtime-cli/try-runtime" "contracts-parachain-runtime/try-runtime") ("runtime-benchmarks" "contracts-parachain-runtime/runtime-benchmarks" "polkadot-cli/runtime-benchmarks") ("default"))))))

