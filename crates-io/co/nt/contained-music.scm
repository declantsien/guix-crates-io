(define-module (crates-io co nt contained-music) #:use-module (crates-io))

(define-public crate-contained-music-0.1.4 (c (n "contained-music") (v "0.1.4") (d (list (d (n "algae") (r "^0.1.19") (f (quote ("graph"))) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "contained-core") (r "^0.1.4") (d #t) (k 0)) (d (n "decanter") (r "^0.1.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "07zac0s1avl5610qmmvmc3630rz62l7y0cddph9kxsp9vijs0gn4") (f (quote (("default"))))))

