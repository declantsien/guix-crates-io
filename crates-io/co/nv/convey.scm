(define-module (crates-io co nv convey) #:use-module (crates-io))

(define-public crate-convey-0.1.0 (c (n "convey") (v "0.1.0") (d (list (d (n "assert_fs") (r "^0.9.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.2.6") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "predicates") (r "^0.9.0") (d #t) (k 2)) (d (n "proptest") (r "^0.8.7") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.31") (d #t) (k 0)) (d (n "termcolor") (r "^1.0.4") (d #t) (k 0)))) (h "0wvp64lwlm6fm91q2n939rnrn9655075p9n1rkp2vpqzajfirwzv")))

(define-public crate-convey-0.2.0 (c (n "convey") (v "0.2.0") (d (list (d (n "assert_fs") (r "^0.10.0") (d #t) (k 2)) (d (n "convey_derive") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "predicates") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^0.8.7") (d #t) (k 2)) (d (n "rand") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.31") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (d #t) (k 2)) (d (n "termcolor") (r "^1.0.4") (d #t) (k 0)))) (h "1rsdmjcaj8vdw2vwb784zhn8n7sx3w6w1gxnz9hpvrk01jnm3l1q") (f (quote (("default" "log"))))))

