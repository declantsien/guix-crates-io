(define-module (crates-io co nv convert2json) #:use-module (crates-io))

(define-public crate-convert2json-0.1.0 (c (n "convert2json") (v "0.1.0") (d (list (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)))) (h "1cdnhrs16r1vnhbspdw9cd16545jv7qqci3an2ppwh135ygxv4b8") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "toml2json" "xml2json" "yaml2json") ("jq" "tq" "xq" "yq") ("default" "toml" "xml" "yaml"))))))

(define-public crate-convert2json-0.2.0 (c (n "convert2json") (v "0.2.0") (d (list (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)))) (h "17ix19jshqnjrpdj0xfy6ixlnzmpchfyji433m325c9nygxqjxzl") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq"))))))

(define-public crate-convert2json-0.3.0 (c (n "convert2json") (v "0.3.0") (d (list (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "04wysn7xv8j03j897z8hmvkiwziq2r7jhj5b2f00vahcvi3k0q5z") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq"))))))

(define-public crate-convert2json-0.4.0 (c (n "convert2json") (v "0.4.0") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "0yqfm4vb8vvk4x3vm5pwcdh18lcrq83byap7aac8abgplbyljnvk") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq"))))))

(define-public crate-convert2json-0.4.1 (c (n "convert2json") (v "0.4.1") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "183j16ypmggb5aa8y6zr5q7s1wixzh78cyz9df5s8mhphjwmi5s5") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.2 (c (n "convert2json") (v "0.4.2") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "1nc14lv4sra07ibd64ri37b77cy59v9r49zxnx0aa4wy5fk0hs4s") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.3 (c (n "convert2json") (v "0.4.3") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.175") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "09n1vd1v22k07366d7s6m4bh4x6naf2r7n5mirl25wgfkbya46g0") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.4 (c (n "convert2json") (v "0.4.4") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.179") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "0yad5sdw8cpbcb0mrj0isgg6hz13g2c3nbv0nm076lg9w0wk26p8") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.5 (c (n "convert2json") (v "0.4.5") (d (list (d (n "argh") (r "^0.1.10") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.180") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "03grlpad8nbfb69dln5mh9hc7370hbdpa6sklliy0j73gsq5v04a") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.6 (c (n "convert2json") (v "0.4.6") (d (list (d (n "argh") (r "^0.1.12") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "1zf9515dxx5azas8hva2ga80ihmgrvwdgckv7p2q69pjv1slwz12") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.7 (c (n "convert2json") (v "0.4.7") (d (list (d (n "argh") (r "^0.1.12") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "1r0irgc4ykf4hyfb393cki1cq4p0kv2gabv8w2860nmhwrdpmg6h") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.4.8 (c (n "convert2json") (v "0.4.8") (d (list (d (n "argh") (r "^0.1.12") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.7.7") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "02ibndibw3bwxpq7ggv3qsms6nxhq101raqcrs9pyimb4dchb820") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.5.0 (c (n "convert2json") (v "0.5.0") (d (list (d (n "argh") (r "^0.1.12") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (d #t) (k 0)))) (h "1c14cqbs03bxk357307llk7ccnzl28cx26q91v0gy7gsscdqfnb2") (f (quote (("yq") ("yaml2json") ("yaml" "yaml2json" "yq") ("xq") ("xml2json") ("xml" "xml2json" "xq") ("tq") ("toml2json") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv2json") ("csv" "csv2json" "cq") ("cq")))) (r "1.65")))

(define-public crate-convert2json-0.5.1 (c (n "convert2json") (v "0.5.1") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0644dyf7n4gvk08lir9v3i344wsgfasdg1pkgaiipcmfadyld51f") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.65")))

(define-public crate-convert2json-0.5.2 (c (n "convert2json") (v "0.5.2") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1faz1z837cwzrrg9h76cg67z0l9s2nlmdf8i4qndsxgfdfv50skx") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.65")))

(define-public crate-convert2json-0.5.3 (c (n "convert2json") (v "0.5.3") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.27") (o #t) (d #t) (k 0)) (d (n "toml") (r "=0.8.2") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0hja0yhk5v67ydpkszvj2dlagqvz6i1xkrznrxxmvbwi8n7pcxbi") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.66")))

(define-public crate-convert2json-0.5.4 (c (n "convert2json") (v "0.5.4") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.29") (o #t) (d #t) (k 0)) (d (n "toml") (r "=0.8.2") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1pidgx8xg099lxrbf1328ysjjcbwc00xfizlgss0h1347v82zcsw") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.66")))

(define-public crate-convert2json-0.5.5 (c (n "convert2json") (v "0.5.5") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.29") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1a0y6da0k1wzgkbjqwmfw6722a3r5wcs0zl8ikgj91amwv8rfpcq") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.5.6 (c (n "convert2json") (v "0.5.6") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1hmglclxifyzrxpvfx72hi739vrbk780c78q4qslfkdk81ijqj8i") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.6.0 (c (n "convert2json") (v "0.6.0") (d (list (d (n "argh") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0wrscs2a0a0zbm1m6xdx3n0qa13v9y13fq6inj2cj6rlhvvh3d9m") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:argh" "dep:csv") ("cq" "dep:argh" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.6.1 (c (n "convert2json") (v "0.6.1") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1514s21mnpfdzizml0mk7fkd08kpky28ddzbkzvs4rd3791x7mg0") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.6.2 (c (n "convert2json") (v "0.6.2") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0bya65gb83vnrfx6jjhjsy0njy3zsn67xlk3man9vwljm6kh4y6x") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("default" "csv" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.7.0 (c (n "convert2json") (v "0.7.0") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.30") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0hhllpi1rcwxywb1cz3c7lym70g3d4jhjrska5n52jwbpnm4rnjk") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.7.1 (c (n "convert2json") (v "0.7.1") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.31") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "13r1qwan0wvr6v7jg2yy2hv8rrh2gc22mmy8lqh5pf3hrgc2fb4z") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.7.2 (c (n "convert2json") (v "0.7.2") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.32") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1prk5iipmy3sxm6k5cics99a9zbavwmnvizg96dzfgp8xkwy7hdn") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.8.0 (c (n "convert2json") (v "0.8.0") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.33") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0p7hf8lz14lwpyx771192dsql9xddc75hmv5hmzfl3ki1g3dxvlv") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.70")))

(define-public crate-convert2json-0.8.1 (c (n "convert2json") (v "0.8.1") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.33") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "01jwmprp7xpnckfxl2m180yg7hmgrmhs35dlf4h6ph1nd88nbwk1") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.74")))

(define-public crate-convert2json-0.8.2 (c (n "convert2json") (v "0.8.2") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "198wrsmk64hh11bqividas7a2dcrixv21j1dnlc92mv1drvs9a42") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.74")))

(define-public crate-convert2json-0.8.3 (c (n "convert2json") (v "0.8.3") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "081dx8mmv0qc68ida6c1jl13mki71cha22miljk33ay60mngp8gv") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.74")))

(define-public crate-convert2json-0.8.4 (c (n "convert2json") (v "0.8.4") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "12gw7ya67ddm5bpdn6wrbrv890s2qfzjva9a21j63nwirfg1ncfm") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.74")))

(define-public crate-convert2json-0.8.5 (c (n "convert2json") (v "0.8.5") (d (list (d (n "csv") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "pico-args") (r "^0.5.0") (f (quote ("short-space-opt"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.34") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "yaml-split") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0iv4m02kzdgwfqkxmrh32rp66kwd687kn2ys0g7k9x3fqvihfwmc") (f (quote (("yaml" "yaml2json" "yq") ("xml" "xml2json" "xq") ("toml" "toml2json" "tq") ("to_json" "csv2json" "toml2json" "xml2json" "yaml2json") ("jq" "cq" "tq" "xq" "yq") ("ini" "ini2json" "iq") ("default" "csv" "ini" "toml" "xml" "yaml") ("csv" "csv2json" "cq")))) (s 2) (e (quote (("yq" "dep:serde_yaml" "dep:yaml-split") ("yaml2json" "dep:serde_yaml" "dep:yaml-split") ("xq" "dep:serde-xml-rs") ("xml2json" "dep:serde-xml-rs") ("tq" "dep:toml") ("toml2json" "dep:toml") ("iq" "dep:serde_ini") ("ini2json" "dep:serde_ini") ("csv2json" "dep:pico-args" "dep:csv") ("cq" "dep:pico-args" "dep:csv")))) (r "1.74")))

