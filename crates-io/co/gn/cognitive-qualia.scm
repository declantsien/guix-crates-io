(define-module (crates-io co gn cognitive-qualia) #:use-module (crates-io))

(define-public crate-cognitive-qualia-0.0.1 (c (n "cognitive-qualia") (v "0.0.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "cognitive-graphics") (r "^0.0.1") (d #t) (k 0)) (d (n "dbus") (r "^0.5") (d #t) (k 0)) (d (n "dharma") (r "^0.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudev") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "timber") (r "^0.0.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1bnmj5l3f36hmkgbbgcw71prnyk5cz3g2vv3y3k8df0yx10kq04p")))

(define-public crate-cognitive-qualia-0.0.2 (c (n "cognitive-qualia") (v "0.0.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "cognitive-graphics") (r "^0.0.1") (d #t) (k 0)) (d (n "dbus") (r "^0.5") (d #t) (k 0)) (d (n "dharma") (r "^0.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudev") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "timber") (r "^0.0.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1bgkh0fsn90m840zp527vmbcgv6sl3c3pydbdqzjj4dngykl68r7")))

(define-public crate-cognitive-qualia-0.0.3 (c (n "cognitive-qualia") (v "0.0.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "cognitive-graphics") (r "^0.0.1") (d #t) (k 0)) (d (n "dbus") (r "^0.5") (d #t) (k 0)) (d (n "dharma") (r "^0.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudev") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "timber") (r "^0.0.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1q61jmqydm431b71cnmn24icb21ba9l8l40dbjnd11bknsmim8cj") (f (quote (("testing"))))))

(define-public crate-cognitive-qualia-0.1.0 (c (n "cognitive-qualia") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "cognitive-graphics") (r "^0.1") (d #t) (k 0)) (d (n "dharma") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libudev") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "timber") (r "^0.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1g0jxmjkcprhq408klryfmss2n313ibj1qlmnmpfsd97rkp9d282") (f (quote (("testing"))))))

