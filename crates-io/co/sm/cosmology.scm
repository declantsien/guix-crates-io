(define-module (crates-io co sm cosmology) #:use-module (crates-io))

(define-public crate-cosmology-0.1.0 (c (n "cosmology") (v "0.1.0") (d (list (d (n "plotters") (r "^0.3.1") (d #t) (k 0)))) (h "1xklzcwxxrvhgxsfcjaknlcpafawin4wncc88796ghjpnnag9zxx")))

(define-public crate-cosmology-0.1.1 (c (n "cosmology") (v "0.1.1") (d (list (d (n "plotters") (r "^0.3.1") (d #t) (k 0)))) (h "0sl6ckzajqcyhd0k904mz7w2pmyzfczlc5j67xa0ybzkxknyk9q6")))

(define-public crate-cosmology-0.2.0 (c (n "cosmology") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.6") (d #t) (k 0)) (d (n "dry") (r "^0.1.1") (d #t) (k 2)) (d (n "fnntw") (r "^0.2.3") (d #t) (k 2)) (d (n "hammer-and-sample") (r "^0.1.4") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 2)) (d (n "ouroboros") (r "^0.15.3") (d #t) (k 0)) (d (n "plotly") (r "^0.7.0") (f (quote ("kaleido"))) (d #t) (k 2)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.16.5") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "quadrature") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sequential-integration") (r "^1.0.2") (d #t) (k 2)))) (h "1kch9shn00rmwb1fp0bqsfrhsbrwm9cfgcvf6jj4z18flqf4r6d6") (f (quote (("nn") ("default" "bayesian" "nn") ("colossus-python" "pyo3") ("bayesian" "hammer-and-sample" "rand" "rand_pcg"))))))

(define-public crate-cosmology-0.3.0 (c (n "cosmology") (v "0.3.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.6") (d #t) (k 0)) (d (n "dry") (r "^0.1.1") (d #t) (k 2)) (d (n "fnntw") (r "^0.2.3") (d #t) (k 2)) (d (n "hammer-and-sample") (r "^0.1.4") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 2)) (d (n "ouroboros") (r "^0.15.3") (d #t) (k 0)) (d (n "plotly") (r "^0.7.0") (f (quote ("kaleido"))) (d #t) (k 2)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.16.5") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "quadrature") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sequential-integration") (r "^1.0.2") (d #t) (k 2)))) (h "1hzqvabkkd48xdp2myc4k5wrc45601hh99nkmbx7p8jzns7333hz") (f (quote (("nn") ("default" "bayesian" "nn") ("colossus-python" "pyo3") ("bayesian" "hammer-and-sample" "rand" "rand_pcg"))))))

(define-public crate-cosmology-0.3.1 (c (n "cosmology") (v "0.3.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.6") (d #t) (k 0)) (d (n "dry") (r "^0.1.1") (d #t) (k 2)) (d (n "fnntw") (r "^0.2.3") (d #t) (k 2)) (d (n "hammer-and-sample") (r "^0.1.4") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 2)) (d (n "ouroboros") (r "^0.15.3") (d #t) (k 0)) (d (n "plotly") (r "^0.7.0") (f (quote ("kaleido"))) (d #t) (k 2)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.16.5") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "quadrature") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sequential-integration") (r "^1.0.2") (d #t) (k 2)))) (h "06qbc2y5ac08qhiw0h6ibwzrrs4wl46cafdh748p2jrgslrvs5ma") (f (quote (("nn") ("default" "bayesian" "nn") ("colossus-python" "pyo3") ("bayesian" "hammer-and-sample" "rand" "rand_pcg"))))))

(define-public crate-cosmology-0.3.2 (c (n "cosmology") (v "0.3.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3.6") (d #t) (k 0)) (d (n "dry") (r "^0.1.1") (d #t) (k 2)) (d (n "fnntw") (r "^0.2.3") (d #t) (k 2)) (d (n "hammer-and-sample") (r "^0.1.4") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.8.1") (d #t) (k 2)) (d (n "ouroboros") (r "^0.15.3") (d #t) (k 0)) (d (n "plotly") (r "^0.7.0") (f (quote ("kaleido"))) (d #t) (k 2)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.16.5") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "quadrature") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sequential-integration") (r "^1.0.2") (d #t) (k 2)))) (h "1bzbnn3lsb90fs4v1gv3s59bbhkz6j0w38z0qg25kghs566z281r") (f (quote (("nn") ("default" "bayesian" "nn") ("colossus-python" "pyo3") ("bayesian" "hammer-and-sample" "rand" "rand_pcg"))))))

