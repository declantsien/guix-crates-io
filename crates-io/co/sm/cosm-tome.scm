(define-module (crates-io co sm cosm-tome) #:use-module (crates-io))

(define-public crate-cosm-tome-0.1.0 (c (n "cosm-tome") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "cosmrs") (r "^0.10.0") (f (quote ("rpc" "cosmwasm" "grpc"))) (d #t) (k 0)) (d (n "keyring") (r "^1.2.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "prost"))) (k 0)))) (h "1i4bin0dycyz0bw7dm31ylc18n5c8ag4f6jc8j1qw189yvw9l9cv") (f (quote (("mocks" "mockall"))))))

(define-public crate-cosm-tome-0.1.1 (c (n "cosm-tome") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "cosmrs") (r "^0.10.0") (f (quote ("rpc" "cosmwasm" "grpc"))) (d #t) (k 0)) (d (n "keyring") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "prost"))) (k 0)))) (h "0a4xrpd0jc3r4vsxjj5r9avslqywxhknr3llmj0mwik44ffzkaix") (f (quote (("os_keyring" "keyring") ("mocks" "mockall"))))))

(define-public crate-cosm-tome-0.2.0 (c (n "cosm-tome") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "cosmrs") (r "^0.10.0") (f (quote ("rpc" "cosmwasm" "grpc"))) (d #t) (k 0)) (d (n "keyring") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "prost"))) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 2)))) (h "124lk6f646jdflmx71v9ya0ijykip0m5lcly8gd15wj4bs4w39ig") (f (quote (("os_keyring" "keyring") ("mocks" "mockall"))))))

(define-public crate-cosm-tome-0.2.1 (c (n "cosm-tome") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "cosmrs") (r "^0.10.0") (f (quote ("rpc" "cosmwasm" "grpc"))) (d #t) (k 0)) (d (n "keyring") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "prost"))) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 2)))) (h "1p1g5057r5r9rm4199my36q997lxlisv4klvp4v9hfw44c9cvcrc") (f (quote (("os_keyring" "keyring") ("mocks" "mockall"))))))

(define-public crate-cosm-tome-0.2.2 (c (n "cosm-tome") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "cosmrs") (r "^0.10.0") (f (quote ("rpc" "cosmwasm" "grpc"))) (d #t) (k 0)) (d (n "keyring") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tonic") (r "^0.8.2") (f (quote ("transport" "prost"))) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0hj6wi1hixzzkayhsiwv3nsvnrisxpw2v2xn5qqaljc3c3in8q2r") (f (quote (("os_keyring" "keyring") ("mocks" "mockall"))))))

