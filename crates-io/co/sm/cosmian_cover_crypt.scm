(define-module (crates-io co sm cosmian_cover_crypt) #:use-module (crates-io))

(define-public crate-cosmian_cover_crypt-6.0.5 (c (n "cosmian_cover_crypt") (v "6.0.5") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1f0r00dpahb2jrsdgyhc8lv2bc2mcn1anhmvyjvyn33yg5gyrqby") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-6.0.6 (c (n "cosmian_cover_crypt") (v "6.0.6") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1ak7fampf98j3zrmc97y1bxinlvlsx2az4xvl5gqd1n052yl59hx") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-6.0.7 (c (n "cosmian_cover_crypt") (v "6.0.7") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "03wfxjqw72jc08bmxixhl2rp252shdcgrjyb1asnk5pi186ls0p6") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-6.0.8 (c (n "cosmian_cover_crypt") (v "6.0.8") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "0yp0hxs4qsci1a109rmfn579251qwjg4hfffqibawawx6i4y9mva") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-7.0.0 (c (n "cosmian_cover_crypt") (v "7.0.0") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1zn47sdsfjxs5476yyxm8s8kib0c33jlc49z7kwqbj7s0rk4bglj") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-7.0.1 (c (n "cosmian_cover_crypt") (v "7.0.1") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "030jcinw0zpmh49n41wp5lnvdkf7wiq48kg8f2n7kp18hi0zv4qs") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-7.0.2 (c (n "cosmian_cover_crypt") (v "7.0.2") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "02xywy3nd97pgdaqy4gvd9vr3szzb9f17wpl2d3v8rzv6y56hnlj") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-7.1.0 (c (n "cosmian_cover_crypt") (v "7.1.0") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1vlzwzyy82696mplly6y8hgrdfqzijkfvxifrddbk0mvn5n2vsri") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-7.1.1 (c (n "cosmian_cover_crypt") (v "7.1.1") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "13gxgglsn6vzcmmiff61ycvmdr36andfgdl1kihjzb0j5mvvachb") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-8.0.0 (c (n "cosmian_cover_crypt") (v "8.0.0") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module" "abi3" "abi3-py37" "generate-import-lib"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1gn59zgcjl7nkjpvgqm7a9zwxawygr1b8g0i07z60zg1g0kjszyy") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("full_bench") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-8.0.1 (c (n "cosmian_cover_crypt") (v "8.0.1") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module" "abi3" "abi3-py37" "generate-import-lib"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "044wcd81mvkg65fy951sdnwn4zlqajbb505l5lya91hp4kziidab") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("full_bench") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-8.0.2 (c (n "cosmian_cover_crypt") (v "8.0.2") (d (list (d (n "abe_policy") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module" "abi3" "abi3-py37" "generate-import-lib"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "0i0gx0qxrx3n2vbibwgcanz7jn178avai66aa9g1nl1qipikasga") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen") ("python" "pyo3") ("full_bench") ("ffi" "lazy_static"))))))

(define-public crate-cosmian_cover_crypt-9.0.0 (c (n "cosmian_cover_crypt") (v "9.0.0") (d (list (d (n "abe_policy") (r "^3.0") (f (quote ("interface" "ffi" "wasm_bindgen"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("wasm" "hazmat"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.17") (f (quote ("extension-module" "abi3" "abi3-py37" "generate-import-lib"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "003vqghwya7hgpjlzalx8y2ffq0knbrdl04ihsi9kcwqjqw6gz50") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen" "interface") ("python" "pyo3" "interface") ("interface") ("hybridized_bench") ("full_bench" "interface") ("ffi" "lazy_static" "interface"))))))

(define-public crate-cosmian_cover_crypt-10.0.0 (c (n "cosmian_cover_crypt") (v "10.0.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^5.0") (d #t) (k 0)) (d (n "cosmian_ffi") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("wasm" "hazmat"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.17") (f (quote ("extension-module" "abi3" "abi3-py37" "generate-import-lib"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1pdxl1idznil05nrwp39q2256x10vgk64847c3fp21vsmsv6cvi0") (f (quote (("wasm_bindgen" "js-sys" "wasm-bindgen" "interface") ("python" "pyo3" "interface") ("interface") ("hybridized_bench") ("full_bench" "interface") ("ffi" "cosmian_ffi" "lazy_static" "interface"))))))

(define-public crate-cosmian_cover_crypt-11.0.0 (c (n "cosmian_cover_crypt") (v "11.0.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^7.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)))) (h "06dq0z1m79bbsl2vmsyn3d98ipalr5fsyvlz95c2c22wab1yivic") (f (quote (("serialization" "base64") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-11.0.1 (c (n "cosmian_cover_crypt") (v "11.0.1") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^7.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)))) (h "07lqx8chiai6z3qw5crivzp3y8jgjkvfvkvprpkrxwkjyldbsdp7") (f (quote (("serialization" "base64") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-11.0.2 (c (n "cosmian_cover_crypt") (v "11.0.2") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "cosmian_crypto_core") (r "^7.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)))) (h "0sj7ldw8yp5pxmj89wg19lv90mz9ki3bh8wzprsqxyrqf5kqfp1d") (f (quote (("serialization" "base64") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-12.0.0 (c (n "cosmian_cover_crypt") (v "12.0.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.0.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "1wda53jnm2zw9xd2dcjnrfcg4ijlvcgi9ndnlacmp5ara5lcxrpy") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-12.0.1 (c (n "cosmian_cover_crypt") (v "12.0.1") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.0.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "1wvss1jpcbja1y8x0wvpm6489x4bii1gnwh8hlgaxn7h069dmzgi") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-12.0.2 (c (n "cosmian_cover_crypt") (v "12.0.2") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.1.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "0xlc4dy82409hbpz4ih8szlcgjxy029i56y46jiwyps5ckxf4lh3") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-12.0.3 (c (n "cosmian_cover_crypt") (v "12.0.3") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.2.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "0amh36p4zibd7p49d8nxag8qq1g83jm4w5xbfi0r5p4pa470g1bz") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-13.0.0 (c (n "cosmian_cover_crypt") (v "13.0.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.2.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake" "kmac"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "1xkqmq5aayh1mclfs0s9v1kc7ck4jgnbj7pdlmh71nnmw0s4rpqh") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

(define-public crate-cosmian_cover_crypt-14.0.0 (c (n "cosmian_cover_crypt") (v "14.0.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmian_crypto_core") (r "^9.2.0") (f (quote ("ser" "sha3" "aes" "curve25519"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (k 2)) (d (n "pqc_kyber") (r "^0.4") (f (quote ("std" "hazmat"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("shake" "kmac"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "0bkb0l43y750nyxmjr9704hz37n5zppvddlvj8c9nampn5lwaqi1") (f (quote (("test_utils" "base64") ("serialization") ("hybridized_bench") ("full_bench" "serialization"))))))

