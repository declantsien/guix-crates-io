(define-module (crates-io co sm cosmian_fpe) #:use-module (crates-io))

(define-public crate-cosmian_fpe-0.5.1 (c (n "cosmian_fpe") (v "0.5.1") (d (list (d (n "aes") (r "^0.7") (d #t) (k 2)) (d (n "block-modes") (r "^0.8") (k 0)) (d (n "cipher") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1") (d #t) (k 2)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)))) (h "17s1vvsldyhhiy9h1888c802i73i8xn557916113hb9vh5d8rjmj") (f (quote (("default" "alloc") ("alloc" "num-bigint" "num-integer" "num-traits"))))))

(define-public crate-cosmian_fpe-0.5.2 (c (n "cosmian_fpe") (v "0.5.2") (d (list (d (n "aes") (r "^0.8") (d #t) (k 2)) (d (n "cbc") (r "^0.1") (k 0)) (d (n "cipher") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.4") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 2)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "pprof") (r "^0.11") (f (quote ("criterion" "flamegraph"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1wdsavl66mndg0s7fpq7x3hym2v6js3dlh4dmcms7kcbhrm56il1") (f (quote (("std" "alloc") ("default" "std") ("alloc" "num-bigint" "num-integer" "num-traits")))) (r "1.56")))

