(define-module (crates-io co ru corundum) #:use-module (crates-io))

(define-public crate-corundum-0.1.1 (c (n "corundum") (v "0.1.1") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "1n3pnqkh50nmbrswmy2hv3aq1yisq6hy6gv6z4y54cpi5dzhr92p") (f (quote (("verbose") ("use_msync") ("use_clwb") ("use_clflushopt") ("pthread") ("pin_journals") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("display_all_flushes") ("default" "pthread" "use_clflushopt") ("cyclic_link_check") ("concurrent_pools") ("capture_footprint") ("access_violation_check"))))))

(define-public crate-corundum-0.2.0 (c (n "corundum") (v "0.2.0") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "1n5b6i4by79chfaq2ig6z4c76asvn8cpd9fvywlq0nj8jpjd9mfs") (f (quote (("verbose") ("use_msync") ("use_clwb") ("use_clflushopt") ("pthread") ("pin_journals") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("display_all_flushes") ("default" "pthread") ("cyclic_link_check") ("concurrent_pools") ("capture_footprint") ("access_violation_check"))))))

(define-public crate-corundum-0.2.1 (c (n "corundum") (v "0.2.1") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "1vz3a159wnb2cpqdklwn0pglrf75vqinzjbgnrvrj1pgb27jn44c") (f (quote (("verbose") ("use_msync") ("use_clwb") ("use_clflushopt") ("replace_with_log") ("pthread") ("pin_journals") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("display_all_flushes") ("default" "pthread") ("cyclic_link_check") ("concurrent_pools") ("capture_footprint") ("access_violation_check"))))))

(define-public crate-corundum-0.2.2 (c (n "corundum") (v "0.2.2") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "0ypk3qfkdzj6i90w23qn6gxnhwvs3vcy9c2c1flb42900v4c77kw") (f (quote (("verbose") ("use_msync") ("use_clwb") ("use_clflushopt") ("replace_with_log") ("pthread") ("pin_journals") ("perf_stat") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("display_all_flushes") ("default" "pthread") ("cyclic_link_check") ("capture_footprint") ("access_violation_check"))))))

(define-public crate-corundum-0.3.1 (c (n "corundum") (v "0.3.1") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "0g4qfqx3653bnp9cf6c53z6qmjsq0z9bx2kjn4kxxm382pa8ap2i") (f (quote (("verbose") ("use_msync") ("use_clwb") ("use_clflushopt") ("replace_with_log") ("pin_journals") ("perf_stat") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("display_all_flushes") ("default") ("cyclic_link_check") ("capture_footprint") ("access_violation_check"))))))

(define-public crate-corundum-0.3.2 (c (n "corundum") (v "0.3.2") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "03fazrblskspjn55lq7r5c16678qzmwfrn833sdxlpmf5s2cdi28") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("default") ("check_allocator_cyclic_links") ("check_access_violation"))))))

(define-public crate-corundum-0.3.3 (c (n "corundum") (v "0.3.3") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "0d2lkmw3p0la53yspj5wqkg6zzff217q1i2l8i89nhmnbj0bs2n7") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("default") ("check_allocator_cyclic_links") ("check_access_violation"))))))

(define-public crate-corundum-0.3.4 (c (n "corundum") (v "0.3.4") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "09k7gjdb80jxcpq189afla23k20a9zprw0l7i20jisjs2cc6x5yc") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("default") ("check_allocator_cyclic_links") ("check_access_violation"))))))

(define-public crate-corundum-0.3.5 (c (n "corundum") (v "0.3.5") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "1ga4gkrpxfqm4ha00jk91a7hipakqk2gg2zn66s0vnngdk96q49z") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("default") ("check_allocator_cyclic_links") ("check_access_violation"))))))

(define-public crate-corundum-0.4.0 (c (n "corundum") (v "0.4.0") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "0glnv3x4nhcvi4v1jvdylgrvl8ysp4z3gwfg9127blzwq4ghnlwy") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("default") ("check_allocator_cyclic_links") ("check_access_violation"))))))

(define-public crate-corundum-0.4.1 (c (n "corundum") (v "0.4.1") (d (list (d (n "crndm_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "term-painter") (r "^0.3.0") (d #t) (k 0)))) (h "1sm80bsj06yim2dxcr9qwhhsda8lxjs1pbq1l6q012ggs0pf42mr") (f (quote (("verbose") ("use_vspd") ("use_pspd") ("use_ntstore") ("use_msync") ("use_clwb") ("use_clflushopt") ("stat_print_flushes") ("stat_perf") ("stat_log") ("stat_footprint") ("replace_with_log") ("pin_journals") ("no_pthread") ("no_persist") ("no_log_rc") ("no_flush_updates") ("no_flush_alloc") ("no_dyn_borrow_checking") ("default" "cbindings") ("check_double_free") ("check_allocator_cyclic_links") ("check_access_violation") ("cbindings"))))))

