(define-module (crates-io co ok cooklang) #:use-module (crates-io))

(define-public crate-cooklang-0.1.0 (c (n "cooklang") (v "0.1.0") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "11gq920cqm63fgs2ry09172zw1rzhx5ddfbqdpmi12fw0cifm6xh") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.1.1 (c (n "cooklang") (v "0.1.1") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0ibb5hb7lq9gqfmpgh77mjwpmgjqxgr911z2f8iy8n01h5jgav3n") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.2.0 (c (n "cooklang") (v "0.2.0") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0510sfhrjf468d1zf5z9yxmr0rhrkkz1j2ms0qj5xn0nczxqg49w") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.2.1 (c (n "cooklang") (v "0.2.1") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "140x1i99zf3n7ca4vnjx52pasr1m3r69z9gxys1gh8nr2ippz3bj") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.3.0 (c (n "cooklang") (v "0.3.0") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0b4dqjal5agccp1ija2pdz0yy5dghy7qv1liff0ac10sj7s2b8yf") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.3.1 (c (n "cooklang") (v "0.3.1") (d (list (d (n "ariadne") (r "^0.2.0") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "0wsqdn759pxvjlyd74sn3jsibmxfr8pd3b5v2j4nc6cprfyjfsz0") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.3.2 (c (n "cooklang") (v "0.3.2") (d (list (d (n "ariadne") (r "^0.3") (f (quote ("concolor"))) (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 2)))) (h "11c2vbx0spfis24zgivbrm23g9lwnk3ywc9zasxsjfj08n49rgyw") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.4.0 (c (n "cooklang") (v "0.4.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vzznibnknxaw6ww7rfl2i0byiz0v7fx93qagsb02fvq2r6vbh3c") (f (quote (("default" "bundled_units" "aisle") ("bundled_units")))) (y #t) (s 2) (e (quote (("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.4.1 (c (n "cooklang") (v "0.4.1") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1r8sngfw8y55n5vsrqrkxgycqbd6qc22pi651lzi9zca2cxzn7vs") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.5.0 (c (n "cooklang") (v "0.5.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0xfkybq1xxr1pkxzjg8ifgf133qbz5vafkc4j85jbvhvjr47y6yw") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.5.1 (c (n "cooklang") (v "0.5.1") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hrcaa61njcbw6xv3x16167hajfqvrlxwxr1y8hfxv2wb9hks62z") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.6.0 (c (n "cooklang") (v "0.6.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1wp9529yjxjkxyijcv8bicmcihf0hwlp41hc796g7gk81s61gw8p") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.7.0 (c (n "cooklang") (v "0.7.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kh9v6jfaqpn1d2f406znngx0aw4b1r0awrg6saay5h02zvfigk6") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.7.1 (c (n "cooklang") (v "0.7.1") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "15xy16rasi22j6akycxljqngcgkh95lsvnj2l60255198f6y1b37") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.8.0 (c (n "cooklang") (v "0.8.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "=3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1f19d5nziibn13h686lhf6zwq35nq6gras340ndfb15k17w411s8") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.9.0 (c (n "cooklang") (v "0.9.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "16sir8qcz863kpg6m7qjsn2rvq6d217bbwsiq6gx5plj77c93xqm") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.10.0 (c (n "cooklang") (v "0.10.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1z6zhicmijq8ss6igq3gh9cd61h4xip5vbn6v9x3g39vg10zhypv") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.11.0 (c (n "cooklang") (v "0.11.0") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rp2pymzv9bnii45a2173ygil51zjhqlrxnqhcakwy6gn0rdp9pa") (f (quote (("default" "bundled_units" "aisle")))) (y #t) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.11.1 (c (n "cooklang") (v "0.11.1") (d (list (d (n "ariadne") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0q30h06xdhp5fbhmq5l4n7xbqcbb8k4gysghpvwbcchl1wnwp26y") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.12.0 (c (n "cooklang") (v "0.12.0") (d (list (d (n "ariadne") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "19929wab8hsqnjd4nydspj7vffwdm2hffl8rjwhzzcp5ifjq90v4") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.13.0 (c (n "cooklang") (v "0.13.0") (d (list (d (n "ariadne") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "10ykfjjsi8wg485i4hnhdbc3k4rx7gk5hkj1qrnvi4h6x1wz68hv") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.13.1 (c (n "cooklang") (v "0.13.1") (d (list (d (n "ariadne") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rdpymfk6m448klhyplclixkxxy9p7fdjr5mkc81qbgbw9xs2x8v") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

(define-public crate-cooklang-0.13.2 (c (n "cooklang") (v "0.13.2") (d (list (d (n "ariadne") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "emojis") (r "^0.6") (d #t) (k 0)) (d (n "enum-map") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "finl_unicode") (r "^1.2") (f (quote ("categories"))) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (o #t) (d #t) (k 0)) (d (n "pest_derive") (r "^2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1z9ngwiqw347xnc85ify6vykiz423mch60na17z265cybgs95mla") (f (quote (("default" "bundled_units" "aisle")))) (s 2) (e (quote (("bundled_units" "dep:toml") ("aisle" "dep:pest" "dep:pest_derive"))))))

