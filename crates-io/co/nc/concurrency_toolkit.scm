(define-module (crates-io co nc concurrency_toolkit) #:use-module (crates-io))

(define-public crate-concurrency_toolkit-0.1.0 (c (n "concurrency_toolkit") (v "0.1.0") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "1gc4ls15wcymp1i8q650zaa76wbpk6i0lx4igaqa0h7icjjm2gns") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync") ("default" "maybe-async/is_sync") ("async_tokio" "tokio"))))))

(define-public crate-concurrency_toolkit-0.1.1 (c (n "concurrency_toolkit") (v "0.1.1") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "0iqzrx8slsk6vim3xkn9j2mcfa6g8d9ja4m2xphvrsvdabnwakqf") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync") ("default" "maybe-async/is_sync") ("async_tokio" "tokio"))))))

(define-public crate-concurrency_toolkit-0.1.2 (c (n "concurrency_toolkit") (v "0.1.2") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "1hfygqlqp5xlqq6dc8d1mjhyh601rgl14g74v417mgjykzdyazcn") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync") ("default" "maybe-async/is_sync") ("async_tokio" "tokio"))))))

(define-public crate-concurrency_toolkit-0.1.3 (c (n "concurrency_toolkit") (v "0.1.3") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "0hiphhsjgxalar1fagidgh6ccsx28wjf2f0sa39p9v348bky2wyl") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync") ("default" "maybe-async/is_sync") ("async_tokio" "tokio"))))))

(define-public crate-concurrency_toolkit-0.2.0 (c (n "concurrency_toolkit") (v "0.2.0") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "1xjhm6a1lvaqiz1k14kmi1dnrdggkhr9wbrya4289p5dc5l4xh0b") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio"))))))

(define-public crate-concurrency_toolkit-0.2.1 (c (n "concurrency_toolkit") (v "0.2.1") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.1") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "1zvqygk29nzlijdh4vncz8ziw2iwgrd08p780jhcj93m2zyiiip6") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio")))) (y #t)))

(define-public crate-concurrency_toolkit-0.2.2 (c (n "concurrency_toolkit") (v "0.2.2") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.2") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "1bhf2y0wla8r6b1jp6v6xyabwapz7shnvp4jkv9b36asiq8rv9gw") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio")))) (y #t)))

(define-public crate-concurrency_toolkit-0.2.3 (c (n "concurrency_toolkit") (v "0.2.3") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.2") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "1xmp0rnvxv6kz05qz8lva2zavg7m1qyk4zli27pvs5y53i2llhv9") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio")))) (y #t)))

(define-public crate-concurrency_toolkit-0.2.4 (c (n "concurrency_toolkit") (v "0.2.4") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.2") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "0jg56gs1mx7ziswk4rr2iiwjisbk255kzln7snxbcvzadznskf15") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio")))) (y #t)))

(define-public crate-concurrency_toolkit-0.2.5 (c (n "concurrency_toolkit") (v "0.2.5") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.3") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "0r1j3xyscmxdgdxh6pwc85i7zj6r9xv6r02y8kb87bx2jcy1p88x") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio")))) (y #t)))

(define-public crate-concurrency_toolkit-0.2.6 (c (n "concurrency_toolkit") (v "0.2.6") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.4") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "0g4b1fbmrrs468vvf8wvd3hd0mknvfcmkvdwh2j309wldr7gzg3z") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio"))))))

(define-public crate-concurrency_toolkit-0.2.7 (c (n "concurrency_toolkit") (v "0.2.7") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.5") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "11f45pys14r4sy27xm24wm5ag0fb8rwnxc320ngsshdd5iqi36ng") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio"))))))

(define-public crate-concurrency_toolkit-0.2.8 (c (n "concurrency_toolkit") (v "0.2.8") (d (list (d (n "loom") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "maybe-async") (r "^0.2.6") (d #t) (k 0)) (d (n "proc_macro_test") (r "^0.1.5") (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("sync" "rt" "macros"))) (o #t) (d #t) (k 0)))) (h "1zaigzp9sanr5z6ihv7jdm3wxbv319smpra07b4xh08g7i0bygg2") (f (quote (("permutation_testing" "loom" "maybe-async/is_sync" "proc_macro_test/permutation_testing") ("default" "maybe-async/is_sync" "proc_macro_test/default") ("async_tokio" "tokio" "proc_macro_test/async_tokio"))))))

