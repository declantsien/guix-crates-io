(define-module (crates-io co nc concurrency_traits) #:use-module (crates-io))

(define-public crate-concurrency_traits-0.1.0 (c (n "concurrency_traits") (v "0.1.0") (d (list (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0raw04wgcpjr2q05680gzrzdp3giipz867lcgvn91v1n1n7z0d4q") (f (quote (("std" "alloc") ("default" "std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.2.0 (c (n "concurrency_traits") (v "0.2.0") (d (list (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "11za9w6sabvrxfq1y9vfh4q2fs2nzsx40z31q3xqay1nfxq7n4l5") (f (quote (("std" "alloc") ("impl_parking_lot" "std" "parking_lot") ("default" "std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.3.0 (c (n "concurrency_traits") (v "0.3.0") (d (list (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "03v27rybw5q52rzsayk1j5qx5353c0fmwawpv14ama2kvyhll81z") (f (quote (("std" "alloc") ("impl_parking_lot" "std" "parking_lot") ("default" "std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.3.1 (c (n "concurrency_traits") (v "0.3.1") (d (list (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0zrqdz46q4gvh7cmz67gvjp95i0g4mp0qpahamhwcxz6l6d9x2mq") (f (quote (("std" "alloc") ("impl_parking_lot" "std" "parking_lot") ("default" "std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.4.0 (c (n "concurrency_traits") (v "0.4.0") (d (list (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "175fhzsp2v4r0ky2x3d6p0vfciszx398f3ffja48dkc46sa4f3mr") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("default" "std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.5.0 (c (n "concurrency_traits") (v "0.5.0") (d (list (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0p4b6wcg2m7q0alwara0cjgiblppvx1aj8c1dyyxf88jym8qbja1") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std") ("alloc" "simple_futures")))) (y #t)))

(define-public crate-concurrency_traits-0.5.1 (c (n "concurrency_traits") (v "0.5.1") (d (list (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "12nsi4qz7v5h9x07ihpwwdnfvfrmkh11wcgsd3s3jllfi0rci9ib") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std") ("alloc" "simple_futures")))) (y #t)))

(define-public crate-concurrency_traits-0.5.2 (c (n "concurrency_traits") (v "0.5.2") (d (list (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1q9ifnf54l4nj5ilgpcmlg4kcbf7hsl5304qxm2ayihpjprz14wn") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std") ("alloc" "simple_futures")))) (y #t)))

(define-public crate-concurrency_traits-0.5.3 (c (n "concurrency_traits") (v "0.5.3") (d (list (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)))) (h "1fc07v6vmdq30f24924vbp3xy1s1k7zmykrf7kyzdid29zyg4qhz") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std" "simple_futures/std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.6.0 (c (n "concurrency_traits") (v "0.6.0") (d (list (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)))) (h "12k7cx2dk4zwm45gn53q50r1c4wxjkb2hmm870dzyfyy0p6kc8f2") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std" "simple_futures/std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.7.0 (c (n "concurrency_traits") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)))) (h "0scqsbrykisk5qb3hpnf46vmf1nxa2acp272w0kd15zgjwwixis3") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std" "simple_futures/std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.7.1 (c (n "concurrency_traits") (v "0.7.1") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "num") (r "^0.4.0") (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)))) (h "0iwpgjlf2s7vp324vgxi4jia9w2fxwxv042jskqhz7nzd89rhrjc") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std" "simple_futures/std") ("alloc" "simple_futures"))))))

(define-public crate-concurrency_traits-0.7.2 (c (n "concurrency_traits") (v "0.7.2") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "atomic_swapping") (r "^0.1.0") (k 0)) (d (n "crossbeam") (r "^0.8.0") (o #t) (k 0)) (d (n "num") (r "^0.4.0") (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "simple_futures") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)))) (h "0xpa7mgvx43lijagdlafwkpjd3nncb79va64vj94vs74md33qq48") (f (quote (("std" "alloc") ("nightly") ("impl_parking_lot" "std" "parking_lot") ("impl_crossbeam" "alloc" "crossbeam" "crossbeam/alloc") ("default" "std" "simple_futures/std") ("alloc" "simple_futures"))))))

