(define-module (crates-io co nc concrete-core) #:use-module (crates-io))

(define-public crate-concrete-core-0.1.6 (c (n "concrete-core") (v "0.1.6") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cmake") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "concrete-csprng") (r "^0.1.6") (d #t) (k 0)) (d (n "concrete-npe") (r "^0.1.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fftw") (r "^0.5.0") (f (quote ("system"))) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "1dbv5b81263ybww7rhvxvkgyrby5mf4x07ada68s5n8jv8zmg7h7") (f (quote (("gpu" "cmake") ("cloud-computing"))))))

(define-public crate-concrete-core-0.1.7 (c (n "concrete-core") (v "0.1.7") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cmake") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "concrete-csprng") (r "^0.1.6") (d #t) (k 0)) (d (n "concrete-npe") (r "^0.1.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fftw") (r "^0.5.0") (f (quote ("system"))) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "16kr67myklic0py208zy9b4x62s9si93f9qjn737wiv3jd4zc0il") (f (quote (("gpu" "cmake") ("cloud-computing"))))))

(define-public crate-concrete-core-0.1.8 (c (n "concrete-core") (v "0.1.8") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cmake") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "concrete-csprng") (r "^0.1.6") (d #t) (k 0)) (d (n "concrete-npe") (r "^0.1.7") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fftw") (r "^0.5.0") (f (quote ("system"))) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "07lpwp9pj5bsznzy348msqp7l4mp7vzbnd28pif536gm1p7cj34v") (f (quote (("gpu" "cmake") ("cloud-computing"))))))

(define-public crate-concrete-core-0.1.9 (c (n "concrete-core") (v "0.1.9") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cmake") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "concrete-commons") (r "=0.1.0") (d #t) (k 0)) (d (n "concrete-csprng") (r "=0.1.7") (d #t) (k 0)) (d (n "concrete-npe") (r "=0.1.8") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "fftw") (r "^0.7.0") (f (quote ("system"))) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)))) (h "07qj7dbrxrhvrsc79aq73s3zfpxqqssfpcv2zvm8xmnhaaa83phv") (f (quote (("slow-csprng" "concrete-csprng/slow") ("multithread" "rayon" "concrete-csprng/multithread") ("gpu" "cmake") ("cloud-computing"))))))

(define-public crate-concrete-core-0.1.10 (c (n "concrete-core") (v "0.1.10") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "concrete-commons") (r "=0.1.1") (d #t) (k 0)) (d (n "concrete-csprng") (r "=0.1.7") (d #t) (k 0)) (d (n "concrete-fftw") (r "=0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "concrete-npe") (r "=0.1.9") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)))) (h "1k65kgbvv5pd2z00c3z3gnyblf1qwmkwzj6n0dysppf9hyq72s46") (f (quote (("slow-csprng" "concrete-csprng/slow") ("multithread" "rayon" "concrete-csprng/multithread"))))))

(define-public crate-concrete-core-1.0.0-alpha (c (n "concrete-core") (v "1.0.0-alpha") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "concrete-commons") (r "=0.1.2") (d #t) (k 0)) (d (n "concrete-csprng") (r "=0.1.7") (d #t) (k 0)) (d (n "concrete-fftw") (r "=0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "concrete-npe") (r "^0.2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)))) (h "1j6f9sjs01lyrb67wn84nidpwq25vvrvzyz6ilcdi7p5qwpjibd4") (f (quote (("slow-csprng" "concrete-csprng/slow") ("multithread" "rayon" "concrete-csprng/multithread") ("doc") ("default" "backend_core") ("backend_core"))))))

(define-public crate-concrete-core-1.0.0-beta (c (n "concrete-core") (v "1.0.0-beta") (d (list (d (n "concrete-commons") (r "=0.2.0") (d #t) (k 0)) (d (n "concrete-csprng") (r "=0.1.7") (d #t) (k 0)) (d (n "concrete-fftw") (r "=0.1.2") (d #t) (k 0)) (d (n "concrete-npe") (r "^0.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)))) (h "11r01h50fr4pscsz7rvx3xp71f5wz2nmv46incnrgyvq9dc566vs") (f (quote (("slow-csprng" "concrete-csprng/slow") ("serde_serialize" "serde" "serde/derive" "concrete-commons/serde_serialize" "concrete-fftw/serialize") ("multithread" "rayon" "concrete-csprng/multithread") ("doc") ("default" "backend_core") ("backend_core"))))))

(define-public crate-concrete-core-1.0.0-gamma (c (n "concrete-core") (v "1.0.0-gamma") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "concrete-commons") (r "=0.2.1") (d #t) (k 0)) (d (n "concrete-csprng") (r "^0.2") (d #t) (k 0)) (d (n "concrete-cuda") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "concrete-fftw") (r "=0.1.2") (o #t) (d #t) (k 0)) (d (n "concrete-npe") (r "^0.2.2") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "19hmklx79bv8wfbpxznksdj1f8w1vp4pvkzl4z1sy7bszj5dddrz") (f (quote (("seeder_x86_64_rdseed" "concrete-csprng/seeder_x86_64_rdseed") ("seeder_unix" "concrete-csprng/seeder_unix") ("doc") ("default" "backend_default" "seeder_unix") ("backend_fftw_serialization" "bincode" "concrete-fftw/serialize" "__commons_serialization") ("backend_fftw" "concrete-fftw") ("backend_default_serialization" "bincode" "__commons_serialization") ("backend_default_parallel" "__commons_parallel") ("backend_default_generator_x86_64_aesni" "concrete-csprng/generator_x86_64_aesni") ("backend_default" "concrete-csprng/generator_soft") ("backend_cuda" "concrete-cuda") ("_ci_do_not_compile" "concrete-cuda/_ci_do_not_compile") ("__commons_serialization" "serde" "serde/derive" "concrete-commons/serde_serialize") ("__commons_parallel" "rayon" "concrete-csprng/parallel"))))))

(define-public crate-concrete-core-1.0.0 (c (n "concrete-core") (v "1.0.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "concrete-csprng") (r "^0.2.1") (d #t) (k 0)) (d (n "concrete-cuda") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "concrete-fft") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "14f1p7ac57pvb1prrxb3ck1f9jk1snv8lq83hqqpygql8v8rdd2g") (f (quote (("x86_64-cuda" "x86_64" "backend_cuda") ("x86_64" "backend_default" "backend_default_parallel" "backend_default_generator_x86_64_aesni" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix" "seeder_x86_64_rdseed") ("seeder_x86_64_rdseed" "concrete-csprng/seeder_x86_64_rdseed") ("seeder_unix" "concrete-csprng/seeder_unix") ("default" "backend_default" "seeder_unix") ("backend_ntt") ("backend_fft_serialization" "bincode" "concrete-fft/serde" "aligned-vec/serde" "__commons_serialization") ("backend_fft_nightly_avx512" "concrete-fft/nightly") ("backend_fft" "concrete-fft") ("backend_default_serialization" "bincode" "__commons_serialization") ("backend_default_parallel" "__commons_parallel") ("backend_default_generator_x86_64_aesni" "concrete-csprng/generator_x86_64_aesni") ("backend_default_generator_aarch64_aes" "concrete-csprng/generator_aarch64_aes") ("backend_default" "concrete-csprng/generator_soft") ("backend_cuda" "concrete-cuda") ("aarch64" "backend_default" "backend_default_parallel" "backend_default_generator_aarch64_aes" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix") ("__profiling") ("__private_docs") ("__commons_serialization" "serde" "serde/derive") ("__commons_parallel" "rayon" "concrete-csprng/parallel"))))))

(define-public crate-concrete-core-1.0.1 (c (n "concrete-core") (v "1.0.1") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "concrete-csprng") (r "^0.2.1") (d #t) (k 0)) (d (n "concrete-cuda") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "concrete-fft") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "15a8p7d463506bk4gqh0pcdv8wx03vaz9igngil3ywf1rmb88mcx") (f (quote (("x86_64-cuda" "x86_64" "backend_cuda") ("x86_64" "backend_default" "backend_default_parallel" "backend_default_generator_x86_64_aesni" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix" "seeder_x86_64_rdseed") ("seeder_x86_64_rdseed" "concrete-csprng/seeder_x86_64_rdseed") ("seeder_unix" "concrete-csprng/seeder_unix") ("default" "backend_default" "seeder_unix") ("backend_ntt") ("backend_fft_serialization" "bincode" "concrete-fft/serde" "aligned-vec/serde" "__commons_serialization") ("backend_fft_nightly_avx512" "concrete-fft/nightly") ("backend_fft" "concrete-fft") ("backend_default_serialization" "bincode" "__commons_serialization") ("backend_default_parallel" "__commons_parallel") ("backend_default_generator_x86_64_aesni" "concrete-csprng/generator_x86_64_aesni") ("backend_default_generator_aarch64_aes" "concrete-csprng/generator_aarch64_aes") ("backend_default" "concrete-csprng/generator_soft") ("backend_cuda" "concrete-cuda") ("aarch64" "backend_default" "backend_default_parallel" "backend_default_generator_aarch64_aes" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix") ("__profiling") ("__private_docs") ("__commons_serialization" "serde" "serde/derive") ("__commons_parallel" "rayon" "concrete-csprng/parallel"))))))

(define-public crate-concrete-core-1.0.2 (c (n "concrete-core") (v "1.0.2") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "concrete-csprng") (r "^0.2.1") (d #t) (k 0)) (d (n "concrete-cuda") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "concrete-fft") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1b6jip33izvfsaz8pnwjjf0a95y89r2lwigzcahl4yzf5cn5k1k8") (f (quote (("x86_64-cuda" "x86_64" "backend_cuda") ("x86_64" "backend_default" "backend_default_parallel" "backend_default_generator_x86_64_aesni" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix" "seeder_x86_64_rdseed") ("seeder_x86_64_rdseed" "concrete-csprng/seeder_x86_64_rdseed") ("seeder_unix" "concrete-csprng/seeder_unix") ("default" "backend_default" "seeder_unix") ("backend_ntt") ("backend_fft_serialization" "bincode" "concrete-fft/serde" "aligned-vec/serde" "__commons_serialization") ("backend_fft_nightly_avx512" "concrete-fft/nightly") ("backend_fft" "concrete-fft") ("backend_default_serialization" "bincode" "__commons_serialization") ("backend_default_parallel" "__commons_parallel") ("backend_default_generator_x86_64_aesni" "concrete-csprng/generator_x86_64_aesni") ("backend_default_generator_aarch64_aes" "concrete-csprng/generator_aarch64_aes") ("backend_default" "concrete-csprng/generator_soft") ("backend_cuda" "concrete-cuda") ("aarch64" "backend_default" "backend_default_parallel" "backend_default_generator_aarch64_aes" "backend_default_serialization" "backend_fft" "backend_fft_serialization" "seeder_unix") ("__profiling") ("__private_docs") ("__commons_serialization" "serde" "serde/derive") ("__commons_parallel" "rayon" "concrete-csprng/parallel"))))))

