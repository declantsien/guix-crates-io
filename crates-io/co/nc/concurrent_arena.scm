(define-module (crates-io co nc concurrent_arena) #:use-module (crates-io))

(define-public crate-concurrent_arena-0.1.0 (c (n "concurrent_arena") (v "0.1.0") (d (list (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)))) (h "1mxds3sm7hhxirm634mhm1l670cqc4s375azzzq5g4m2lxifgsx8") (y #t)))

(define-public crate-concurrent_arena-0.1.1 (c (n "concurrent_arena") (v "0.1.1") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.4") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "0cy5csh111rrn1vfgwynljx3y3mnc2awcvyvi0v0jbdvcv7fnkm5") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.2 (c (n "concurrent_arena") (v "0.1.2") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "0ijrn5xjfbdr79s8mm8din51d749nnk0mklp3z4piaj72m0w158m") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.3 (c (n "concurrent_arena") (v "0.1.3") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "08kajyscrhig3jg0w3j3sbcnf0vgcap4774bpc87d21zabqsgvl4") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.4 (c (n "concurrent_arena") (v "0.1.4") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "1vczsxwl6xam4jr22gckx979rj77gziv2q2w5z59n8cmdx0qvwbv") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.5 (c (n "concurrent_arena") (v "0.1.5") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.20") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "0xpxmdvlnh6zpn1y01fy5dcasldj09zrk02r5ybjzvyg4h838wy4") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.6 (c (n "concurrent_arena") (v "0.1.6") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "0afmzg9d3k94z29lmjb4a5q0igkz8kgcswy8yzx3lxgzyhm2q2cx") (f (quote (("thread-sanitizer")))) (y #t)))

(define-public crate-concurrent_arena-0.1.7 (c (n "concurrent_arena") (v "0.1.7") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "const_fn_assert") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "1rgx59awnhis4x5f8mk3a3663j0gh120755k3d98d7r9183fpgr4") (f (quote (("thread-sanitizer"))))))

(define-public crate-concurrent_arena-0.1.8 (c (n "concurrent_arena") (v "0.1.8") (d (list (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 2)) (d (n "triomphe") (r "^0.1.5") (f (quote ("arc-swap"))) (d #t) (k 0)))) (h "1bvxycq60kcgz9ndw5s41pl8fvyqwywsij8pscaswjf2xkac4af5") (f (quote (("thread-sanitizer")))) (r "1.58")))

