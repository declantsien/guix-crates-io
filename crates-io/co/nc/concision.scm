(define-module (crates-io co nc concision) #:use-module (crates-io))

(define-public crate-concision-0.1.0 (c (n "concision") (v "0.1.0") (d (list (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0xr9nwvk94m4f4f4nxsnddvikjb4v4yhfj9b090bpdwpaa07c30m") (f (quote (("default"))))))

(define-public crate-concision-0.1.1 (c (n "concision") (v "0.1.1") (d (list (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "190gp9sijvw30ahz4rc8k6n9d2dc6s6vcg2b1ci3rra67lhl731w") (f (quote (("default"))))))

(define-public crate-concision-0.1.2 (c (n "concision") (v "0.1.2") (d (list (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0mqnf7kysyz7xmqf22ri40dqj1lbwvwkmjisk8ira4w660qmnwd9") (f (quote (("default"))))))

(define-public crate-concision-0.1.3 (c (n "concision") (v "0.1.3") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0gifzbs8qafkx1vyc91fivp2j4kq840f3bah5q8fs04rvkkwjrn2") (f (quote (("default"))))))

(define-public crate-concision-0.1.4 (c (n "concision") (v "0.1.4") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0g5qy0sd6hqr3ckqdjgxpka27msqbgbfm50l86n6djs319z1imqd") (f (quote (("default"))))))

(define-public crate-concision-0.1.5 (c (n "concision") (v "0.1.5") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "1vvcylfcvvgpns6g5nd7lpziyzdk8jj0lhdw7i1glkc4r6g78ji5") (f (quote (("default"))))))

(define-public crate-concision-0.1.7 (c (n "concision") (v "0.1.7") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concision-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0s09imbasd20f28d72jvdkgxqj18crmknjd7nwd9ikjnh9qkslqr") (f (quote (("macros" "concision-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "concision-derive") ("default" "external"))))))

(define-public crate-concision-0.1.8 (c (n "concision") (v "0.1.8") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concision-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0hphrgmlnsxsbgd03za7g55ywvrn8kjqjbvca910j4yp5j3jklcb") (f (quote (("macros" "concision-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "concision-derive") ("default" "external"))))))

(define-public crate-concision-0.1.9 (c (n "concision") (v "0.1.9") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concision-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0c4xlpjr3h27axh2dnhmfq8mrn3ya4yc9b1wx7fsc2afd2z6cdxb") (f (quote (("macros" "concision-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "concision-derive") ("default" "external"))))))

(define-public crate-concision-0.1.10 (c (n "concision") (v "0.1.10") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concision-derive") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ixg6a4apxn2b7nwsxinwxs4bgcqr5y21b1bh2ysap6rp8x9ynnp") (f (quote (("macros" "concision-macros") ("full" "derive" "macros") ("derive" "concision-derive") ("default"))))))

(define-public crate-concision-0.1.11 (c (n "concision") (v "0.1.11") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "concision-derive") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "scsys") (r "^0.1.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)))) (h "1qqf9nri5fr2200h3wkbwl1ilxqgk8k7bfvd4pvdanxawr42hx9q") (f (quote (("macros" "concision-macros") ("full" "derive" "macros") ("derive" "concision-derive") ("default"))))))

(define-public crate-concision-0.1.12 (c (n "concision") (v "0.1.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "concision-core") (r "^0.1.12") (d #t) (k 0)) (d (n "concision-data") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "concision-derive") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "concision-gnn") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "concision-linear") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 2)) (d (n "num") (r "^0.4") (f (quote ("rand" "serde"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1riw1h18g641s0dbdmdlcdp2j9b1qfglqm1dwmaqnhlx5f4nk6gq") (f (quote (("tracing" "concision-core/tracing" "concision-linear/tracing" "concision-gnn/tracing") ("std" "concision-core/std" "concision-data/std" "concision-linear/std" "concision-gnn/std") ("serde" "concision-core/serde" "concision-data/serde" "concision-linear/serde" "concision-gnn/serde") ("rand" "concision-core/rand" "concision-data/rand" "concision-linear/rand" "concision-gnn/rand") ("openblas-system" "blas") ("openblas-static" "blas") ("netlib-system" "blas") ("netlib-static" "blas") ("models" "linear" "gnn") ("intel-mkl-system" "blas") ("intel-mkl-static" "blas") ("full" "default" "approx" "derive" "rand" "serde" "tracing" "linear" "gnn") ("default" "data" "std") ("blas" "concision-core/blas" "concision-data/blas" "concision-linear/blas" "concision-gnn/blas") ("approx" "concision-core/approx") ("alloc" "concision-core/alloc" "concision-data/alloc" "concision-linear/alloc" "concision-gnn/alloc")))) (s 2) (e (quote (("macros" "dep:concision-macros") ("linear" "dep:concision-linear") ("gnn" "dep:concision-gnn") ("derive" "dep:concision-derive" "macros") ("data" "dep:concision-data"))))))

(define-public crate-concision-0.1.13 (c (n "concision") (v "0.1.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "concision-core") (r "^0.1.13") (d #t) (k 0)) (d (n "concision-data") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "concision-derive") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "concision-gnn") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "concision-kan") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "concision-linear") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 2)) (d (n "num") (r "^0.4") (f (quote ("rand" "serde"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "11bz79g0gv8ypp4cjkm9ca4ydmbhcxj3c305a67xn1fz6vb9dj0d") (f (quote (("wasm" "concision-core/wasm" "concision-data/wasm" "concision-gnn/wasm" "concision-kan/wasm" "concision-linear/wasm") ("wasi" "concision-core/wasi" "concision-data/wasi" "concision-gnn/wasi" "concision-kan/wasi" "concision-linear/wasi") ("tracing" "concision-core/tracing" "concision-data/tracing" "concision-gnn/tracing" "concision-kan/tracing" "concision-linear/tracing") ("std" "concision-core/std" "concision-data/std" "concision-gnn/std" "concision-kan/std" "concision-linear/std") ("serde" "concision-core/serde" "concision-data/serde" "concision-gnn/serde" "concision-kan/serde" "concision-linear/serde") ("rand" "concision-core/rand" "concision-data/rand" "concision-gnn/rand" "concision-kan/rand" "concision-linear/rand") ("openblas-system" "blas") ("openblas-static" "blas") ("netlib-system" "blas") ("netlib-static" "blas") ("models" "gnn" "kan" "linear") ("intel-mkl-system" "blas") ("intel-mkl-static" "blas") ("full" "default" "approx" "derive" "rand" "serde" "tracing" "linear" "gnn") ("default" "data" "std") ("blas" "concision-core/blas" "concision-data/blas" "concision-gnn/blas" "concision-kan/blas" "concision-linear/blas") ("approx" "concision-core/approx") ("alloc" "concision-core/alloc" "concision-data/alloc" "concision-linear/alloc" "concision-gnn/alloc")))) (s 2) (e (quote (("macros" "dep:concision-macros") ("linear" "dep:concision-linear") ("kan" "dep:concision-kan") ("gnn" "dep:concision-gnn") ("derive" "dep:concision-derive" "macros") ("data" "dep:concision-data"))))))

(define-public crate-concision-0.1.14 (c (n "concision") (v "0.1.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "concision-core") (r "^0.1.14") (d #t) (k 0)) (d (n "concision-data") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-derive") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-gnn") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-kan") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-linear") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-macros") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "concision-transformer") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 2)) (d (n "num") (r "^0.4") (f (quote ("rand" "serde"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0xafm24c6xzhfqwnqcdcbfy0328wsc5gaj8q2k1pgs7vni8arj4b") (f (quote (("openblas-system" "blas") ("openblas-static" "blas") ("netlib-system" "blas") ("netlib-static" "blas") ("models" "gnn" "kan" "linear" "transformer") ("intel-mkl-system" "blas") ("intel-mkl-static" "blas") ("full" "default" "approx" "derive" "models" "rand" "serde" "tracing") ("default" "data" "std")))) (s 2) (e (quote (("wasm" "concision-core/wasm" "concision-data?/wasm" "concision-gnn?/wasm" "concision-kan?/wasm" "concision-linear?/wasm" "concision-transformer?/wasm") ("wasi" "concision-core/wasi" "concision-data?/wasi" "concision-gnn?/wasi" "concision-kan?/wasi" "concision-linear?/wasi" "concision-transformer?/wasi") ("transformer" "dep:concision-transformer") ("tracing" "concision-core/tracing" "concision-data?/tracing" "concision-gnn?/tracing" "concision-kan?/tracing" "concision-linear?/tracing" "concision-transformer?/tracing") ("std" "concision-core/std" "concision-data?/std" "concision-gnn?/std" "concision-kan?/std" "concision-linear?/std" "concision-transformer?/std") ("serde" "concision-core/serde" "concision-data?/serde" "concision-gnn?/serde" "concision-kan?/serde" "concision-linear?/serde" "concision-transformer?/serde") ("rand" "concision-core/rand" "concision-data?/rand" "concision-gnn?/rand" "concision-kan?/rand" "concision-linear?/rand" "concision-transformer?/rand") ("macros" "dep:concision-macros") ("linear" "dep:concision-linear") ("kan" "dep:concision-kan") ("gnn" "dep:concision-gnn") ("derive" "dep:concision-derive" "macros") ("data" "dep:concision-data") ("blas" "concision-core/blas" "concision-data?/blas" "concision-gnn?/blas" "concision-kan?/blas" "concision-linear?/blas" "concision-transformer?/blas") ("approx" "concision-core/approx" "concision-data?/approx" "concision-gnn?/approx" "concision-kan?/approx" "concision-linear?/approx" "concision-transformer?/approx") ("alloc" "concision-core/alloc" "concision-data?/alloc" "concision-gnn?/alloc" "concision-kan?/alloc" "concision-linear?/alloc" "concision-transformer?/alloc"))))))

