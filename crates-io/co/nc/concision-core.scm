(define-module (crates-io co nc concision-core) #:use-module (crates-io))

(define-public crate-concision-core-0.1.12 (c (n "concision-core") (v "0.1.12") (d (list (d (n "approx") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v7"))) (d #t) (k 0)))) (h "1b2wlnspdfhzirpr391nnl6shlwf7kpqb11hbq1bj3dkab3r56ky") (f (quote (("std" "alloc" "ndarray/std" "num/std" "rand/std" "rand/std_rng" "serde/std" "strum/std" "uuid/std") ("serde-ext" "ndarray/serde-1" "num/serde" "uuid/serde") ("full" "default" "approx" "rand" "serde") ("default" "std") ("blas" "ndarray/blas") ("alloc")))) (s 2) (e (quote (("tracing" "dep:tracing") ("serde" "dep:serde" "serde-ext") ("rand" "dep:rand" "dep:ndarray-rand" "num/rand") ("approx" "dep:approx" "ndarray/approx-0_5"))))))

(define-public crate-concision-core-0.1.13 (c (n "concision-core") (v "0.1.13") (d (list (d (n "approx") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v5" "v8"))) (k 0)))) (h "1hkjn2hi7576pw9s2hglrfyics5wkf631ihap8q019l5i28zkmik") (f (quote (("wasm") ("wasi") ("std" "alloc" "ndarray/std" "num/std" "rng_std" "serde/std" "strum/std" "uuid/std") ("rand-ext" "num/rand" "uuid/rng" "uuid/v4") ("full" "default" "approx" "rand" "serde" "tracing") ("default" "std") ("blas" "ndarray/blas")))) (s 2) (e (quote (("tracing" "dep:tracing") ("serde-1" "dep:serde") ("serde" "serde-1" "ndarray/serde-1" "num/serde" "rand?/serde1" "rand_distr?/serde1" "uuid/serde") ("rng_std" "rand?/std" "rand?/std_rng") ("rand" "dep:rand" "dep:rand_distr" "dep:ndarray-rand" "rand-ext") ("approx" "dep:approx" "ndarray/approx-0_5") ("alloc" "num/alloc" "rand?/alloc" "rand_distr?/alloc" "serde?/alloc"))))))

(define-public crate-concision-core-0.1.14 (c (n "concision-core") (v "0.1.14") (d (list (d (n "approx") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 0)) (d (n "ndarray-rand") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (k 0)) (d (n "scsys") (r "^0.2") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smart-default") (r "^0.7") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v5" "v8"))) (k 0)))) (h "00fr84r4zvv5pzfyqik4ik400ss1bhlvhhgw2l9rgf23fmyyxlrv") (f (quote (("wasm" "getrandom/js") ("wasi") ("std" "alloc" "std-rng" "ndarray/std" "num/std" "scsys/std" "serde/std" "strum/std" "uuid/std") ("rand-ext" "num/rand" "uuid/rng" "uuid/v4") ("full" "default" "approx" "rand" "serde" "tracing") ("default" "std") ("blas" "ndarray/blas")))) (s 2) (e (quote (("tracing" "dep:tracing") ("std-rng" "rand?/std" "rand?/std_rng") ("serde-1" "dep:serde") ("serde" "serde-1" "ndarray/serde-1" "num/serde" "rand?/serde1" "rand_distr?/serde1" "scsys/serde" "uuid/serde") ("rand" "dep:rand" "dep:rand_distr" "dep:ndarray-rand" "rand-ext") ("approx" "dep:approx" "ndarray/approx-0_5") ("alloc" "num/alloc" "rand?/alloc" "rand_distr?/alloc" "scsys/alloc" "serde?/alloc"))))))

