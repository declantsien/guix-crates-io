(define-module (crates-io co nc concordium-smart-contract-engine) #:use-module (crates-io))

(define-public crate-concordium-smart-contract-engine-1.0.0 (c (n "concordium-smart-contract-engine") (v "1.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^5") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^1") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "19sb6c44nb2mlmnca3ljlgbqaxji477f3svvavcc401v4v9qaapp") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-1.0.1 (c (n "concordium-smart-contract-engine") (v "1.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r ">=5.3") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^1") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0a9z4pf98h13iqqr01ilyr5q7f59ixna2cmgk19ghrqcgq6rjqkg") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-1.1.0 (c (n "concordium-smart-contract-engine") (v "1.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^5.3.1") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^1") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0ks3sw259xp36m0a6m4wz7d98qnllv9rcs49xvp9rhnqm1i6pc9a") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-1.2.0 (c (n "concordium-smart-contract-engine") (v "1.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^6.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^1") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1jkijs78zysjrv06rlizcg91w7ykgy0ipqnk8j7sdk7lpylz3df8") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-2.0.0 (c (n "concordium-smart-contract-engine") (v "2.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^7.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^2") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1n99gk52jj9wl7rcmgjvigq7z67n46ib6hgpw6h290jc502caq43") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-3.0.0 (c (n "concordium-smart-contract-engine") (v "3.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^8.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^3") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "10sl14ys18nfgkcqw7jz9a4bf2gd84b6g7v6wgjzj58ib59rwqj9") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-3.1.0 (c (n "concordium-smart-contract-engine") (v "3.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^8.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^3") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1yz1l9xjsa93ffsdbapyp7289j6ymgnymk0lk7dbf5220h66bhbg") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-4.0.0 (c (n "concordium-smart-contract-engine") (v "4.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^9.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^4") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "10jz2v6agngkb5zkm1wkq39qq98xbwpja0mczvj928k7sr11cx93") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

(define-public crate-concordium-smart-contract-engine-5.0.0 (c (n "concordium-smart-contract-engine") (v "5.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "concordium-contracts-common") (r "^9.0") (f (quote ("derive-serde"))) (d #t) (k 0)) (d (n "concordium-wasm") (r "^4") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "ptree") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "=0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1.5") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1cbdfz34p0aicmyy5zcy0cl545bcm9d16p92z4f51h2n99mbw0zc") (f (quote (("fuzz-coverage" "concordium-wasm/fuzz-coverage") ("fuzz" "arbitrary" "concordium-contracts-common/fuzz") ("enable-ffi") ("display-state" "ptree") ("default") ("async" "futures"))))))

