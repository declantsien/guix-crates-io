(define-module (crates-io co nc concrete-core-experimental) #:use-module (crates-io))

(define-public crate-concrete-core-experimental-1.0.0-beta (c (n "concrete-core-experimental") (v "1.0.0-beta") (d (list (d (n "concrete-commons") (r "=0.2.0") (d #t) (k 0)) (d (n "concrete-csprng") (r "=0.1.7") (d #t) (k 0)) (d (n "concrete-fftw") (r "=0.1.2") (d #t) (k 0)) (d (n "concrete-npe") (r "^0.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "kolmogorov_smirnov") (r "^1.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)))) (h "0wi4wkxhimvs3gjmzpyy2qglrff46667yz4knmyfa0q1v3icjphj") (f (quote (("slow-csprng" "concrete-csprng/slow") ("serde_serialize" "serde" "serde/derive" "concrete-commons/serde_serialize" "concrete-fftw/serialize") ("multithread" "rayon" "concrete-csprng/multithread") ("doc") ("default" "backend_core") ("backend_core"))))))

