(define-module (crates-io co nc concrete-fft) #:use-module (crates-io))

(define-public crate-concrete-fft-0.1.0 (c (n "concrete-fft") (v "0.1.0") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "0fq38bb660qii4m7miq6xb1kvfmhphf5nhgl7s8990glcj5w5x2m") (f (quote (("std") ("nightly") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

(define-public crate-concrete-fft-0.2.0 (c (n "concrete-fft") (v "0.2.0") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "num-complex") (r "^0.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "163nsa9s8h2knazmglnhil4zdg6rxbxcqdldg7c1kh03li0r6kdf") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

(define-public crate-concrete-fft-0.2.1 (c (n "concrete-fft") (v "0.2.1") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rug") (r "^1.19.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "1jn6l0kz42vzf1vfvb2ng1ydjl7cb0a98nmsizbyj2x8bbw21dvs") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("fft128") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

(define-public crate-concrete-fft-0.3.0 (c (n "concrete-fft") (v "0.3.0") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rug") (r "^1.19.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)))) (h "0n5hp0fim9i0gkfjqd3zg5bqzyslsxrxmg1qgs7sr0vs1k7j7f6d") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("fft128") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

(define-public crate-concrete-fft-0.4.0 (c (n "concrete-fft") (v "0.4.0") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "pulp") (r "^0.18.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rug") (r "^1.19.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)))) (h "03wn1gikjqis13afj277b4hg91100233gl09zsk84virpqhws896") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("fft128") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

(define-public crate-concrete-fft-0.4.1 (c (n "concrete-fft") (v "0.4.1") (d (list (d (n "aligned-vec") (r "^0.5") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (k 0)) (d (n "fftw-sys") (r "^0.6") (f (quote ("system"))) (k 2)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "pulp") (r "^0.18.7") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rug") (r "^1.19.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 2)) (d (n "rustfft") (r "^6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)))) (h "1q0p522rgjxdpxjks2ymq2nkwl866hdw227lsijjrqif8a1zhi1i") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("fft128") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "num-complex/serde"))))))

