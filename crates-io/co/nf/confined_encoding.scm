(define-module (crates-io co nf confined_encoding) #:use-module (crates-io))

(define-public crate-confined_encoding-0.9.0-alpha.1 (c (n "confined_encoding") (v "0.9.0-alpha.1") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("proc_attr" "apfloat"))) (d #t) (k 0)) (d (n "amplify") (r "^3.13.0") (f (quote ("proc_attr" "hex"))) (d #t) (k 2)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "confined_encoding_derive") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "grin_secp256k1zkp") (r "^0.7.11") (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0p6xq9y79fwz0fa2vg2jip1sppd4nmzvmnscz1cs9nwg8zagg26x") (f (quote (("derive" "confined_encoding_derive") ("default" "derive") ("all" "derive" "serde")))) (r "1.59.0")))

(define-public crate-confined_encoding-0.9.0-alpha.2 (c (n "confined_encoding") (v "0.9.0-alpha.2") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("proc_attr" "apfloat"))) (d #t) (k 0)) (d (n "amplify") (r "^3.13.0") (f (quote ("proc_attr" "hex"))) (d #t) (k 2)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "confined_encoding_derive") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0ra4kk4m8y3g53lmplcfi0qgnsp79m08bgqvcsb9l47id5j4av4n") (f (quote (("derive" "confined_encoding_derive") ("default" "derive") ("bulletproofs" "lnpbp_secp256k1zkp") ("all" "derive" "bulletproofs")))) (r "1.59.0")))

(define-public crate-confined_encoding-0.9.0-alpha.3 (c (n "confined_encoding") (v "0.9.0-alpha.3") (d (list (d (n "amplify") (r "^4.0.0-beta.1") (f (quote ("proc_attr" "apfloat"))) (d #t) (k 0)) (d (n "amplify") (r "^4.0.0-alpha.3") (f (quote ("proc_attr" "hex"))) (d #t) (k 2)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "confined_encoding_derive") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "12ra8xb4bzqbfx286ygv6nisbyw0lizzxr01b5p0w1b62ywmwcsi") (f (quote (("derive" "confined_encoding_derive") ("default" "derive") ("bulletproofs" "lnpbp_secp256k1zkp") ("all" "derive" "bulletproofs")))) (r "1.59.0")))

(define-public crate-confined_encoding-0.9.0-alpha.4 (c (n "confined_encoding") (v "0.9.0-alpha.4") (d (list (d (n "amplify") (r "^4.0.0-beta.1") (f (quote ("proc_attr" "apfloat"))) (d #t) (k 0)) (d (n "amplify") (r "^4.0.0-alpha.3") (f (quote ("proc_attr" "hex"))) (d #t) (k 2)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "confined_encoding_derive") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "04xkra97p0rnfzkbz94a12a84441vz1wrmlikbfxzj7y06jcwqyx") (f (quote (("derive" "confined_encoding_derive") ("default" "derive") ("bulletproofs" "lnpbp_secp256k1zkp") ("all" "derive" "bulletproofs")))) (r "1.59.0")))

(define-public crate-confined_encoding-0.9.0-alpha.5 (c (n "confined_encoding") (v "0.9.0-alpha.5") (d (list (d (n "amplify") (r "^4.0.0-beta.2") (f (quote ("proc_attr" "apfloat"))) (d #t) (k 0)) (d (n "amplify") (r "^4.0.0-alpha.3") (f (quote ("proc_attr" "hex"))) (d #t) (k 2)) (d (n "bitcoin") (r "^0.29.2") (d #t) (k 0)) (d (n "confined_encoding_derive") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "lnpbp_secp256k1zkp") (r "^0.9.0-alpha.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1g0cc3dfhp5c6ydhk4fjwzcz9y883hxb31z8s3jb75sskybdwvmx") (f (quote (("derive" "confined_encoding_derive") ("default" "derive") ("bulletproofs" "lnpbp_secp256k1zkp") ("all" "derive" "bulletproofs")))) (r "1.59.0")))

