(define-module (crates-io co nf config-it) #:use-module (crates-io))

(define-public crate-config-it-0.0.1 (c (n "config-it") (v "0.0.1") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.4") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.1") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "04bgm72arsi1nm522vvl52n05507975g91kg67jajg3z4vad4llm") (s 2) (e (quote (("derive" "dep:macros"))))))

(define-public crate-config-it-0.0.2 (c (n "config-it") (v "0.0.2") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.4") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.1") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1fjls1zsmvyqr2yf8v3gaz6d6a4jlm6a1nvhk75fi6i36zxp8y33")))

(define-public crate-config-it-0.0.3 (c (n "config-it") (v "0.0.3") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.4") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.1") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0lxy2gl623yv1k44r5m75d187vf6f1lvgj2fx933w3c1lpygx41s")))

(define-public crate-config-it-0.0.4 (c (n "config-it") (v "0.0.4") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.4") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.1") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1x309ha1nkxxl72gy28as8qqn78vmnl2s9rgspddxdma8wwblnxf")))

(define-public crate-config-it-0.0.5 (c (n "config-it") (v "0.0.5") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.4") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.1") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "15kdhb0zaws5q6mzsh29rgr6hyf5sg9m3sbl7yznq3knz4n28w0v")))

(define-public crate-config-it-0.1.0 (c (n "config-it") (v "0.1.0") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.0.2") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0yg16jb0gjd9gqmaxjn0sy62f7qjmcp3y7385fg7a9vsj096chys")))

(define-public crate-config-it-0.1.1 (c (n "config-it") (v "0.1.1") (d (list (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.1") (d #t) (k 0) (p "config-it-macros")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "smartstring") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0ss8qi11qhlshwxy52x9xwgp8gk8gn4pzkk3qhn3s0h27bnxjjb7")))

(define-public crate-config-it-0.2.0 (c (n "config-it") (v "0.2.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.1.2") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "04p5fdp3snx2lr51dc5ar1pxmrf13mf0bs6gxsbky83yrgbqs3z1")))

(define-public crate-config-it-0.2.1 (c (n "config-it") (v "0.2.1") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.1.2") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0b0bkaml59lmqvjrc4qyking32mhfc4475ph8k7ns4pdi48sl2ga")))

(define-public crate-config-it-0.3.0 (c (n "config-it") (v "0.3.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.2.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1m05vkylyf5n1z9r8wy03rikga06a8iwfjjv5aql2xj9bqiyi0ns") (y #t)))

(define-public crate-config-it-0.3.1 (c (n "config-it") (v "0.3.1") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.2.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0lh0syc9mi8rxg7r0nrr9kd02mwpvihc56rr4jgbmg7dfvskgv8y") (y #t)))

(define-public crate-config-it-0.3.2 (c (n "config-it") (v "0.3.2") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.2.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "197865yx9clhy2ib35y2a2n2ab29ibgcqnkjclzvh4b9r1gbqx1r")))

(define-public crate-config-it-0.3.3 (c (n "config-it") (v "0.3.3") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1a0d9i42r4r70s8yx3pdi4gxpzz6m1vhfz2zr3k2xkk7mwk9p1w5") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.3.4 (c (n "config-it") (v "0.3.4") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1vddqcn3ij067j5pa92gybkjm6djib503xfad10fnwcixqq32465") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.3.5 (c (n "config-it") (v "0.3.5") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0w8avbz6ha99dd1kqagwd17g8mnlyfwqn4j3fi6vzvwnl6ykrjk2") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.4.0 (c (n "config-it") (v "0.4.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "180x02nw7yz598a26yj8fbb7cziyg4f6k9wyrvvk615yxmgbvs9g") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.4.1 (c (n "config-it") (v "0.4.1") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0hfmnwcsd55prg4m4cwvc57kfbb1jrxhq9l0gmg77l6z3baxxxxa") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.4.2 (c (n "config-it") (v "0.4.2") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "14808icwb0zppi4qal2mkq780gqsgjq70m3g3wi8iadga1jnczs5") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "use_binary_archive")))) (s 2) (e (quote (("use_binary_archive" "dep:rmp-serde"))))))

(define-public crate-config-it-0.5.0 (c (n "config-it") (v "0.5.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1z6cdg6pn0zgd01fjljm9pd9pl2pxz8dfbw60vqz1x85z3q9593w") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.6.0 (c (n "config-it") (v "0.6.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0zk9b5wapdvf9r67b4wg798iyqqnnsx3ns1z9y5yplq4z6bz3hw6") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.6.1 (c (n "config-it") (v "0.6.1") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.1") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "08q22faa1vxnv6sw4kf6vdgb166r7j0m342vdwkvc4m44n2xjg3r") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.6.2 (c (n "config-it") (v "0.6.2") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.3.2") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "14mc52p0x6wsxpg13q72vqjpdq448wd88lpngxj1mba95fk99r90") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.7.0 (c (n "config-it") (v "0.7.0") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.4.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1xgpsbvva2q9yz6qy4m0zs79gizx3y4vhsbfvpd79al15jnzk3x3") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.7.1 (c (n "config-it") (v "0.7.1") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.4.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0n22z0d0xz1d08wdw79nf6p3zb6fh7c4b1mzy08l6gyl05hpr9wh") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg"))))))

(define-public crate-config-it-0.7.2 (c (n "config-it") (v "0.7.2") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.4.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "12ssrf405mnnib2m0nzx6nyfypdvrjxqb23k334jxwx8g4dd8p6b") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "indexmap")))) (s 2) (e (quote (("indexmap" "dep:indexmap"))))))

(define-public crate-config-it-0.7.3 (c (n "config-it") (v "0.7.3") (d (list (d (n "async-broadcast") (r "^0.5") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "macros") (r "^0.4.0") (d #t) (k 0) (p "config-it-macros")) (d (n "oneshot") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "write" "union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0d444myv94l5jaimyr93z4a8hlqvsssqivf0cg36ms5xganbd30d") (f (quote (("nocfg" "macros/nocfg") ("more_attr" "macros/more_attr") ("default" "more_attr" "nocfg" "indexmap")))) (s 2) (e (quote (("indexmap" "dep:indexmap"))))))

(define-public crate-config-it-0.8.0 (c (n "config-it") (v "0.8.0") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "dashmap") (r "^5.5.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "1hy50s88cac4zs7ccdngixrc0a56zli5zsw778lx0sshz1b9zd3w") (f (quote (("default" "config" "indexmap" "jsonschema")))) (y #t) (s 2) (e (quote (("machine-id-encryption" "dep:machine-uid" "encryption") ("jsonschema" "dep:schemars" "macros/jsonschema") ("indexmap" "dep:indexmap") ("encryption" "dep:aes-gcm") ("config-derive" "dep:memoffset" "dep:impls") ("config" "config-derive" "dep:thiserror" "dep:log" "dep:dashmap" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.8.1 (c (n "config-it") (v "0.8.1") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "dashmap") (r "^5.5.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0lfrak6xlp5z0p1vg45wzjwl89z0fsjcxd1kgqzjjjbzdngrshp7") (f (quote (("monitor") ("default" "config" "indexmap" "jsonschema")))) (y #t) (s 2) (e (quote (("machine-id-encryption" "dep:machine-uid" "encryption") ("jsonschema" "dep:schemars" "macros/jsonschema") ("indexmap" "dep:indexmap") ("encryption" "dep:aes-gcm") ("config-derive" "dep:memoffset" "dep:impls") ("config" "config-derive" "dep:thiserror" "dep:log" "dep:dashmap" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.8.2 (c (n "config-it") (v "0.8.2") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "19v1bl6r4d2krv58x6mnc8yiwwcr87nmn52bld8mvhqlj24f2z2w") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive")))) (y #t) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.8.3 (c (n "config-it") (v "0.8.3") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "1nzpy63zapb7dbb8818krrk46lyh5izph646fv83bqic2f13gpbf") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive")))) (y #t) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.8.4 (c (n "config-it") (v "0.8.4") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "1qbwvsamx2jgwmzyiv21haqf1hnb3isfhfwz6wgnkw3hv2zwlpcj") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "full")))) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.9.0 (c (n "config-it") (v "0.9.0") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "0drlvqdj1qxzdpj505b6krjapfjb3lrhdgpgwazgq0l5hcrlnnvn") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive")))) (y #t) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.8.10 (c (n "config-it") (v "0.8.10") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.5.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "0jr5qcdpmik37nip5gnz9lgchx982y868vc0llwdmnr23k0ma3in") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive")))) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.9.1 (c (n "config-it") (v "0.9.1") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.6.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "004issvfy1mji4h85spr9wm9qjaj3pdkdj95amvpmn42zyjz5fbm") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive")))) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

(define-public crate-config-it-0.9.2 (c (n "config-it") (v "0.9.2") (d (list (d (n "aes-gcm") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "arc-swap") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cs") (r "^0.6.1") (o #t) (d #t) (k 0) (p "custom_debug_derive")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "impls") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "machine-uid") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "macros") (r "^0.5.0") (o #t) (d #t) (k 0) (p "config-it-macros")) (d (n "memoffset") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "strseq") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tr") (r "^0.1") (o #t) (d #t) (k 0) (p "tracing")))) (h "0dbrrp6h61f17rs6nmi07km4jrkhp76qvaz2v1nj03nnlhpls2gr") (f (quote (("full" "config-derive" "indexmap" "jsonschema" "crypt-machine-id") ("default" "config-derive" "arc-swap")))) (s 2) (e (quote (("jsonschema" "config" "dep:schemars" "macros/jsonschema") ("indexmap" "config" "dep:indexmap") ("crypt-machine-id" "dep:machine-uid" "crypt") ("crypt" "dep:aes-gcm" "dep:base64" "dep:sha2") ("config-derive" "config" "dep:memoffset" "dep:impls" "dep:macros") ("config" "dep:thiserror" "dep:tr" "dep:derive_setters" "dep:parking_lot" "dep:smallvec" "dep:bitfield" "dep:cs"))))))

