(define-module (crates-io co nf conflux) #:use-module (crates-io))

(define-public crate-conflux-0.1.0 (c (n "conflux") (v "0.1.0") (d (list (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1zf57skyklgkh6lf1hv3z94wffymjvji2n74xajx35qibwwhsv26")))

(define-public crate-conflux-0.1.1 (c (n "conflux") (v "0.1.1") (d (list (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1q3c6pnf2gp1vx7mq8d6mh5pvfnw1sp9iv7w5w5h7na9lcnv8iwm")))

(define-public crate-conflux-0.1.2 (c (n "conflux") (v "0.1.2") (d (list (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)))) (h "0fw9qmz1dfdq3s1fqzxc23hdb69x1b7nkhdvb1529nlk4h8x2aar")))

