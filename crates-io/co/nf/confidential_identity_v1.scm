(define-module (crates-io co nf confidential_identity_v1) #:use-module (crates-io))

(define-public crate-confidential_identity_v1-1.0.0 (c (n "confidential_identity_v1") (v "1.0.0") (d (list (d (n "blake2") (r "^0.10.2") (k 0)) (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("nightly" "alloc"))) (k 0) (p "curve25519-dalek-ng")) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "schnorrkel") (r "^0.10") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-io") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "03zhpxnp06x4iq9hxa0avs2c8wlfxg38kay07x5v8wal8b9hs51a") (f (quote (("u64_backend" "curve25519-dalek/u64_backend" "schnorrkel/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "schnorrkel/u32_backend") ("std" "serde_all" "schnorrkel/std" "rand_core/std" "rand/std" "rand/std_rng" "rand_chacha/std" "blake2/std" "blake2/simd" "sp-std/std" "sp-io/std" "criterion") ("serde_all" "serde" "serde_json" "curve25519-dalek/serde" "schnorrkel/serde") ("no_std") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "schnorrkel/avx2_backend"))))))

(define-public crate-confidential_identity_v1-1.0.1 (c (n "confidential_identity_v1") (v "1.0.1") (d (list (d (n "blake2") (r "^0.10.2") (k 0)) (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("alloc"))) (k 0) (p "curve25519-dalek-ng")) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "schnorrkel") (r "^0.10") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-io") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "1y02q3i6x91h27yipg53fadvi9pmk8dw87s87cmrjyhnxiwgyzxb") (f (quote (("u64_backend" "curve25519-dalek/u64_backend" "schnorrkel/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "schnorrkel/u32_backend") ("std" "serde_all" "schnorrkel/std" "rand_core/std" "rand/std" "rand/std_rng" "rand_chacha/std" "blake2/std" "sp-std/std" "sp-io/std" "criterion") ("serde_all" "serde" "serde_json" "curve25519-dalek/serde" "schnorrkel/serde") ("no_std") ("nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "schnorrkel/avx2_backend" "blake2/simd"))))))

(define-public crate-confidential_identity_v1-1.1.0 (c (n "confidential_identity_v1") (v "1.1.0") (d (list (d (n "blake2") (r "^0.10.2") (k 0)) (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("alloc"))) (k 0) (p "curve25519-dalek-ng")) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "schnorrkel") (r "^0.10") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-io") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "1n02a233rikc3n4m5pg1rqjhm7xamz7snqgwx97gq8bx0gkggp75") (f (quote (("u64_backend" "curve25519-dalek/u64_backend" "schnorrkel/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "schnorrkel/u32_backend") ("std" "serde_all" "schnorrkel/std" "rand_core/std" "rand/std" "rand/std_rng" "rand_chacha/std" "blake2/std" "sp-std/std" "sp-io/std" "criterion") ("serde_all" "serde" "serde_json" "curve25519-dalek/serde" "schnorrkel/serde") ("no_std") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "schnorrkel/avx2_backend"))))))

(define-public crate-confidential_identity_v1-1.1.1 (c (n "confidential_identity_v1") (v "1.1.1") (d (list (d (n "blake2") (r "^0.10.2") (k 0)) (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("alloc"))) (k 0) (p "curve25519-dalek-ng")) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "schnorrkel") (r "^0.10") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-core-hashing") (r "^5.0.0") (o #t) (k 0)) (d (n "sp-io") (r "^7.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "0kmp4ki3z6xczzlbm20pcabf888cxrfhifa3r3pmb723ws917i9p") (f (quote (("wasm" "sp-core-hashing") ("u64_backend" "curve25519-dalek/u64_backend" "schnorrkel/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "schnorrkel/u32_backend") ("std" "serde_all" "schnorrkel/std" "rand_core/std" "rand/std" "rand/std_rng" "rand_chacha/std" "blake2/std" "sp-std/std" "sp-io/std" "criterion") ("serde_all" "serde" "serde_json" "curve25519-dalek/serde" "schnorrkel/serde") ("no_std" "u64_backend") ("nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "schnorrkel/avx2_backend" "blake2/simd"))))))

(define-public crate-confidential_identity_v1-1.1.2 (c (n "confidential_identity_v1") (v "1.1.2") (d (list (d (n "blake2") (r "^0.10.2") (k 0)) (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4") (f (quote ("alloc"))) (k 0) (p "curve25519-dalek-ng")) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "schnorrkel") (r "^0.10") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-core-hashing") (r "^5.0.0") (o #t) (k 0)) (d (n "sp-io") (r "^7.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "1b7xrn6sgxa8nsvrpfwf4lndmgzxyzmgszhmjhgcbagfipr8gk42") (f (quote (("wasm" "sp-core-hashing") ("u64_backend" "curve25519-dalek/u64_backend" "schnorrkel/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "schnorrkel/u32_backend") ("std" "serde_all" "schnorrkel/std" "rand_core/std" "rand/std" "rand/std_rng" "rand_chacha/std" "blake2/std" "sp-std/std" "sp-io/std" "criterion") ("serde_all" "serde" "serde_json" "curve25519-dalek/serde" "schnorrkel/serde") ("no_std" "u64_backend") ("nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "schnorrkel/avx2_backend" "blake2/simd"))))))

