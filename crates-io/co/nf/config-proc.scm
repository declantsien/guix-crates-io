(define-module (crates-io co nf config-proc) #:use-module (crates-io))

(define-public crate-config-proc-0.1.0 (c (n "config-proc") (v "0.1.0") (d (list (d (n "log") (r "=0.4.17") (o #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quick-xml") (r "=0.25.0") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "=0.7.39") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "ron") (r "=0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "=1.0.145") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_ini") (r "=0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.86") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "=0.9.13") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("parsing" "full"))) (d #t) (k 0)) (d (n "toml") (r "=0.5.9") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0brrjadm2avcgcp6xa6sxx1fyffiswfdpfdbbfjb9y9s02cvj903") (f (quote (("xml" "serde_xml") ("default" "serde_toml" "log")))) (y #t) (s 2) (e (quote (("serde_yaml" "dep:serde_yaml" "serde") ("serde_xml" "dep:quick-xml" "serde") ("serde_toml" "dep:toml" "serde") ("serde_ron" "dep:ron" "serde") ("serde_json" "dep:serde_json" "serde") ("serde_ini" "dep:serde_ini" "serde") ("serde" "dep:serde") ("rkyv" "dep:rkyv") ("log" "dep:log"))))))

