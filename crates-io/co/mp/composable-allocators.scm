(define-module (crates-io co mp composable-allocators) #:use-module (crates-io))

(define-public crate-composable-allocators-0.0.1 (c (n "composable-allocators") (v "0.0.1") (h "1a1vlrgv785306l7jca5qb9h0wwgjrj5l794i727d9p02rhxz95g")))

(define-public crate-composable-allocators-0.0.2 (c (n "composable-allocators") (v "0.0.2") (h "0fk4lv45z86nfmwdcrbxbxm3g5yc2m2y3mijbklismv5myvbqv9k") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-composable-allocators-0.0.3 (c (n "composable-allocators") (v "0.0.3") (h "0p9r7pyqq87hp9izy255764v0r6dbrx4qd9v577mby9iyscvp9g0") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-composable-allocators-0.1.0 (c (n "composable-allocators") (v "0.1.0") (h "037ccqqs7zwvw5d4l7w6v9mci8r6kxim1p4rbw6hb4ihlc5pgq81") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-composable-allocators-0.1.1 (c (n "composable-allocators") (v "0.1.1") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(not(windows))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "04dw3gkk0km9r0b32mmarb8khk1k4lzb3dxh0h44bzi5skj1psl9") (f (quote (("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.2 (c (n "composable-allocators") (v "0.1.2") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(not(windows))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "10ibapinx74bfp1iw9fflwvqr7kpw76vv25dizqvf93cskf1l71y") (f (quote (("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.3 (c (n "composable-allocators") (v "0.1.3") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "12zr5nqrxshap7x23xz0nrn6ccrasz9z4vsxkbp7qqxvdm2khmfn") (f (quote (("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.4 (c (n "composable-allocators") (v "0.1.4") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0yh29gxp7kjzmjdpy8b7rpkqyx62314pddpvs0xl0z2f2lvwgxwz") (f (quote (("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.5 (c (n "composable-allocators") (v "0.1.5") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0r6q1ml1h2kp5xhj25l6pnf23yqj587f9am6jdscn7ml30mpli76") (f (quote (("logging") ("global") ("default" "global" "system")))) (y #t) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.6 (c (n "composable-allocators") (v "0.1.6") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0kl4np1isx6m3shyqrgy4wfk7s69k4xv58q38ksssfjla9fqcg3n") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.1.7 (c (n "composable-allocators") (v "0.1.7") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "04dpwr1dz6qaa39mr1jajrgd1ksrrgb3qi9g674m0hjrjyvsjv8k") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.0 (c (n "composable-allocators") (v "0.2.0") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "1gm5c59rmcy3vqsi6vp0s083kyzkikaccmhpvk8n4gia8wyixrn4") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.1 (c (n "composable-allocators") (v "0.2.1") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "19ybwsq2q8480d933gz4f9bgf140384m2fqz98v68asjl5mp1r99") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.2 (c (n "composable-allocators") (v "0.2.2") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "154japmz6kqmcrqbln0gykf8sx4ka9xvx6xaji7gr2ckcqvgbwbp") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.3 (c (n "composable-allocators") (v "0.2.3") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "17q09259krywfxp2dk9q73yc3l9wg6vx0wxv6404dx0hg17bz3nk") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.4 (c (n "composable-allocators") (v "0.2.4") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "1qbn8bihs23yizs934v1h4rjvfzzavr05ng75bwh5sww34rw4ycp") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.5 (c (n "composable-allocators") (v "0.2.5") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "1gbcqpvc5n88qg0933sxpq588ji5554rsnsq8033am7ps9d6m0bi") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.6 (c (n "composable-allocators") (v "0.2.6") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0brhwh49wy6na38g0gnbm6mg6sd2wns9jm23m93883xvy7i32wmn") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.7 (c (n "composable-allocators") (v "0.2.7") (d (list (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0i9ahq0nrqn4n25jkg4s8v3ag3fgxizhmlsxi580718bh0k6h2lz") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.8 (c (n "composable-allocators") (v "0.2.8") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "const-default-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "0gn4ckaxlqiy6fpnh25yh4z8x8dy5w5d7zpka4ab7rhf2nz57hdr") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.9 (c (n "composable-allocators") (v "0.2.9") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "const-default-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os = \"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os = \"dos\"), windows))") (k 0)))) (h "1g9bnj1j6m02x0l2mzlb64hpkagbyalnqbz9x78j51vflinir2gg") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.10 (c (n "composable-allocators") (v "0.2.10") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "const-default-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os=\"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os=\"dos\"), windows))") (k 0)))) (h "13dqjf4mnzf5315jp6z6cj5x17fw9a25i1xmpz3lw0qr2l7scgs6") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

(define-public crate-composable-allocators-0.2.11 (c (n "composable-allocators") (v "0.2.11") (d (list (d (n "const-default") (r "^1.0.0") (d #t) (k 0)) (d (n "const-default-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (o #t) (t "cfg(all(not(target_os=\"dos\"), not(windows)))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("heapapi" "minwindef" "ntdef"))) (o #t) (d #t) (t "cfg(all(not(target_os=\"dos\"), windows))") (k 0)))) (h "1dflghxr3j21z0cpzbw2w4f5fqjfnkxswgjvjc02vb0n8kx8kf1r") (f (quote (("logging") ("global") ("default" "global" "system")))) (s 2) (e (quote (("winapi" "dep:winapi") ("system" "dep:winapi" "dep:libc") ("posix" "dep:libc"))))))

