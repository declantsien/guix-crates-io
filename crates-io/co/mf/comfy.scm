(define-module (crates-io co mf comfy) #:use-module (crates-io))

(define-public crate-comfy-0.0.0 (c (n "comfy") (v "0.0.0") (h "1qip0mlghxk5i265a2phw9mfg4gfpin8n4yl5d2pnfp65fqdm3d6")))

(define-public crate-comfy-0.1.0 (c (n "comfy") (v "0.1.0") (d (list (d (n "comfy-core") (r "^0.1.0") (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.1.0") (d #t) (k 0)))) (h "0sk0rcc8a9b623kwdd50gzj72nhaxrwyilhc0h684ffyams168ps") (f (quote (("use-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("lua" "comfy-core/lua") ("jemalloc" "comfy-core/jemalloc") ("exit-after-startup") ("embedded-assets") ("dev") ("demo") ("default" "color-backtrace" "quick-exit") ("color-backtrace") ("ci-release") ("blobs"))))))

(define-public crate-comfy-0.1.1 (c (n "comfy") (v "0.1.1") (d (list (d (n "comfy-core") (r "^0.1.1") (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.1.1") (d #t) (k 0)))) (h "0wba19nmwbl0l6x6gwbvsw0fby6z7md697mw9d7ilawmfsxy58mf") (f (quote (("use-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("lua" "comfy-core/lua") ("jemalloc" "comfy-core/jemalloc") ("exit-after-startup") ("embedded-assets") ("dev") ("demo") ("default" "color-backtrace" "quick-exit") ("color-backtrace") ("ci-release") ("blobs"))))))

(define-public crate-comfy-0.1.2 (c (n "comfy") (v "0.1.2") (d (list (d (n "comfy-core") (r "^0.1.2") (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.1.2") (d #t) (k 0)))) (h "0y2r7c7lyq7m1d6g2w8303cmnlyw5wgb8hvjmkr3ag8f8i413r2n") (f (quote (("use-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("lua" "comfy-core/lua") ("jemalloc" "comfy-core/jemalloc") ("exit-after-startup") ("embedded-assets") ("dev") ("demo") ("default" "color-backtrace" "quick-exit") ("color-backtrace") ("ci-release") ("blobs"))))))

(define-public crate-comfy-0.2.0 (c (n "comfy") (v "0.2.0") (d (list (d (n "comfy-core") (r "^0.2.0") (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.2.0") (d #t) (k 0)))) (h "0lky9434l6z173n2dfqbkc6xchzlajqy3isqmmcymzhvznl81d25") (f (quote (("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("lua" "comfy-core/lua") ("jemalloc" "comfy-core/jemalloc") ("exit-after-startup") ("embedded-assets") ("dev") ("demo") ("default" "color-backtrace" "quick-exit") ("color-backtrace") ("ci-release" "comfy-core/ci-release" "comfy-wgpu/ci-release") ("blobs"))))))

(define-public crate-comfy-0.3.0 (c (n "comfy") (v "0.3.0") (d (list (d (n "comfy-core") (r "^0.3.0") (d #t) (k 0)) (d (n "comfy-ldtk") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.3.0") (o #t) (d #t) (k 0)))) (h "0zjgi9rp51qvimm40hlx6b2xapna7f4zbdrxiim4rqxa9f5gbsbk") (f (quote (("wayland" "comfy-core/wayland") ("use-wgpu" "comfy-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("jemalloc" "comfy-core/jemalloc") ("git-version" "comfy-core/git-version") ("exr" "comfy-core/exr") ("exit-after-startup") ("embedded-assets") ("dev" "comfy-core/dev") ("demo") ("default" "color-backtrace" "quick-exit" "use-wgpu" "exr") ("color-backtrace") ("ci-release" "comfy-core/ci-release" "comfy-wgpu/ci-release" "wayland") ("blobs")))) (s 2) (e (quote (("ldtk" "dep:comfy-ldtk"))))))

(define-public crate-comfy-0.3.1 (c (n "comfy") (v "0.3.1") (d (list (d (n "comfy-core") (r "^0.3.0") (d #t) (k 0)) (d (n "comfy-ldtk") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.3.0") (o #t) (d #t) (k 0)))) (h "00s6i8297w371v2w2cjsdsgh9n4q2vb6p2vkaylhlyqx2k43bz2p") (f (quote (("wayland" "comfy-core/wayland") ("use-wgpu" "comfy-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("jemalloc" "comfy-core/jemalloc") ("git-version" "comfy-core/git-version") ("exr" "comfy-core/exr") ("exit-after-startup") ("embedded-assets") ("dev" "comfy-core/dev") ("demo") ("default" "color-backtrace" "quick-exit" "use-wgpu") ("color-backtrace") ("ci-release" "comfy-core/ci-release" "comfy-wgpu/ci-release" "wayland") ("blobs")))) (s 2) (e (quote (("ldtk" "dep:comfy-ldtk"))))))

(define-public crate-comfy-0.4.0 (c (n "comfy") (v "0.4.0") (d (list (d (n "comfy-core") (r "^0.4.0") (d #t) (k 0)) (d (n "comfy-ldtk") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "comfy-wgpu") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "1x0pbz4shi5h2b2dk46lysvsq4b762kc9l13ang9lvk9db3gg3sy") (f (quote (("wayland" "comfy-core/wayland") ("use-wgpu" "comfy-wgpu") ("tracy" "comfy-core/tracy" "comfy-wgpu/tracy") ("quick-exit") ("memory-stats" "comfy-core/memory-stats") ("jemalloc" "comfy-core/jemalloc") ("git-version" "comfy-core/git-version") ("exr" "comfy-core/exr") ("exit-after-startup") ("embedded-assets") ("dev" "comfy-core/dev") ("demo") ("default" "color-backtrace" "quick-exit" "use-wgpu") ("color-backtrace") ("ci-release" "comfy-core/ci-release" "comfy-wgpu/ci-release" "comfy-ldtk/ci-release" "wayland") ("blobs")))) (s 2) (e (quote (("ldtk" "dep:comfy-ldtk"))))))

