(define-module (crates-io co mf comfy-wgpu) #:use-module (crates-io))

(define-public crate-comfy-wgpu-0.1.0 (c (n "comfy-wgpu") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.1.0") (f (quote ("use-wgpu"))) (d #t) (k 0)) (d (n "egui") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-winit") (r "^0.22.0") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg" "qoi"))) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (f (quote ("x11"))) (k 0)))) (h "092c6g965p86cj6j53148slmhq3nxr012a66w6dbi5xhlwm108s4") (f (quote (("tracy") ("record-pngs") ("default") ("ci-release"))))))

(define-public crate-comfy-wgpu-0.1.1 (c (n "comfy-wgpu") (v "0.1.1") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.1.1") (f (quote ("use-wgpu"))) (d #t) (k 0)) (d (n "egui") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-winit") (r "^0.22.0") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg" "qoi"))) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (f (quote ("x11"))) (k 0)))) (h "0iszahlqqyarcygdaiz6h6dhjjcjfyx3qzabj4lj53jswq30sxr8") (f (quote (("tracy") ("record-pngs") ("default") ("ci-release"))))))

(define-public crate-comfy-wgpu-0.1.2 (c (n "comfy-wgpu") (v "0.1.2") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.1.2") (f (quote ("use-wgpu"))) (d #t) (k 0)) (d (n "egui") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-winit") (r "^0.22.0") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg" "qoi"))) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (f (quote ("x11"))) (k 0)))) (h "13zh8260w0aqsgr7g8gvagf9aba43gag201frz13dfx66pnay0nn") (f (quote (("tracy") ("record-pngs") ("default") ("ci-release"))))))

(define-public crate-comfy-wgpu-0.2.0 (c (n "comfy-wgpu") (v "0.2.0") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.2.0") (d #t) (k 0)) (d (n "egui") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-winit") (r "^0.22.0") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (f (quote ("x11"))) (k 0)))) (h "1pr04s46g7ak8nh07vys8qmmb2d2xly38pfsv56mscjcp9932q7x") (f (quote (("tracy") ("default") ("ci-release")))) (s 2) (e (quote (("record-pngs" "dep:futures-intrusive"))))))

(define-public crate-comfy-wgpu-0.3.0 (c (n "comfy-wgpu") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.3.0") (d #t) (k 0)) (d (n "egui") (r "^0.24.1") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.24.1") (d #t) (k 0)) (d (n "egui-winit") (r "^0.24.1") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "naga") (r "^0.14.1") (f (quote ("wgsl-in"))) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("expose-ids"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("webgl" "fragile-send-sync-non-atomic-wasm"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (f (quote ("x11"))) (k 0)))) (h "14811g38ds00sxr08lp3ixy1d5p6pr5rmgck9a03yd4wg892vadx") (f (quote (("tracy") ("default") ("ci-release")))) (s 2) (e (quote (("record-pngs" "dep:futures-intrusive"))))))

(define-public crate-comfy-wgpu-0.4.0 (c (n "comfy-wgpu") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1.12") (f (quote ("derive"))) (k 0)) (d (n "comfy-core") (r "^0.4.0") (d #t) (k 0)) (d (n "egui") (r "^0.26.2") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.26.2") (d #t) (k 0)) (d (n "egui-winit") (r "^0.26.2") (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (k 0)) (d (n "naga") (r "^0.19.2") (f (quote ("wgsl-in"))) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19.3") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.3") (f (quote ("webgl" "fragile-send-sync-non-atomic-wasm"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu-types") (r "^0.19.2") (d #t) (k 0)) (d (n "winit") (r "^0.29.13") (f (quote ("x11"))) (k 0)))) (h "16p34b147psw5w29f3yp0br6rbhbhi9sq7c6lqxm0xwmv6gz0631") (f (quote (("tracy") ("record-pngs") ("default") ("ci-release"))))))

