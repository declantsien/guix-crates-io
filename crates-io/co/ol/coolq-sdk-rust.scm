(define-module (crates-io co ol coolq-sdk-rust) #:use-module (crates-io))

(define-public crate-coolq-sdk-rust-0.1.0-alpha (c (n "coolq-sdk-rust") (v "0.1.0-alpha") (d (list (d (n "async-std") (r "^1.3.0") (f (quote ("std" "default"))) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)))) (h "19lb9wh290gp1nqk0m3bpw18ama4q764jfyrjqrn42kn5h4cira6") (f (quote (("full-priority") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.0-alpha.1 (c (n "coolq-sdk-rust") (v "0.1.0-alpha.1") (d (list (d (n "async-std") (r "^1.3.0") (f (quote ("std" "default"))) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)))) (h "07hw2i7g41cgk64xa878w2dn0ijsjyal34kj3vvxyqdn7gp94qpc") (f (quote (("full-priority") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.0-alpha.2 (c (n "coolq-sdk-rust") (v "0.1.0-alpha.2") (d (list (d (n "async-std") (r "^1.3.0") (f (quote ("std" "default"))) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)))) (h "1610mlqic49s9fcnin9fncm1g7d9yr7vspjz1svk0xy6y4r4qimr") (f (quote (("full-priority") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.0-alpha.3 (c (n "coolq-sdk-rust") (v "0.1.0-alpha.3") (d (list (d (n "async-std") (r "^1.3.0") (f (quote ("std" "default"))) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)))) (h "13rbn47vxa6ss1bmgn1hr3snicdb13cqwlnh4jkk84ya6a2h27cz") (f (quote (("full-priority") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.0-alpha.4 (c (n "coolq-sdk-rust") (v "0.1.0-alpha.4") (d (list (d (n "async-std") (r "^1.3.0") (f (quote ("std" "default"))) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)))) (h "0y400j6kq73c90dbn1ppm9csh0y19nd033ryyb8xp01aqad1fpzb") (f (quote (("full-priority") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.11 (c (n "coolq-sdk-rust") (v "0.1.11") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "doc-cfg") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "fs"))) (o #t) (k 0)))) (h "1pgm8vs10w39hb05fjp67cmvgcnp8vimpf1j5wyp56h7d82rg3r5") (f (quote (("enhanced-cqcode" "tokio" "hex" "md-5") ("default"))))))

(define-public crate-coolq-sdk-rust-0.1.20 (c (n "coolq-sdk-rust") (v "0.1.20") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "fs"))) (o #t) (k 0)))) (h "0fmik31wv0n9mvlapri5lbsd0m01zc699kb5mf2awi502g1mpixm") (f (quote (("tokio-threaded" "async-listener" "tokio/rt-threaded") ("enhanced-cqcode" "tokio" "hex" "md-5") ("default") ("async-listener" "cqrs_macro/async-listener" "tokio" "futures"))))))

(define-public crate-coolq-sdk-rust-0.1.21 (c (n "coolq-sdk-rust") (v "0.1.21") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cqrs_macro") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core" "fs"))) (o #t) (k 0)))) (h "1vzbbqzq7fvq56k4hqv5s3a6vf8az5cwh8rgxd0bdvgyb0yl3gba") (f (quote (("tokio-threaded" "async-listener" "tokio/rt-threaded") ("enhanced-cqcode" "tokio" "hex" "md-5") ("default") ("async-listener" "cqrs_macro/async-listener" "tokio" "futures"))))))

