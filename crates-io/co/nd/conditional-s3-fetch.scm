(define-module (crates-io co nd conditional-s3-fetch) #:use-module (crates-io))

(define-public crate-conditional-s3-fetch-0.1.0 (c (n "conditional-s3-fetch") (v "0.1.0") (d (list (d (n "aws-sdk-s3") (r "^1.14.0") (d #t) (k 0)) (d (n "aws-smithy-runtime") (r "^1.1.4") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "aws-smithy-runtime-api") (r "^1.1.4") (f (quote ("test-util"))) (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.2") (f (quote ("serde1"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "http") (r "^0.2.11") (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1291iwrbvwmxsmkqjwlaic9r3y1hyb54m654vb7wz000kzb4wdym") (f (quote (("json" "serde_json" "serde") ("default" "simd-json" "cbor")))) (s 2) (e (quote (("simd-json" "dep:simd-json" "serde") ("cbor" "dep:cbor4ii" "serde"))))))

