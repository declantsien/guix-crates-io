(define-module (crates-io co op cooplan-amqp-api-consumer) #:use-module (crates-io))

(define-public crate-cooplan-amqp-api-consumer-0.1.0 (c (n "cooplan-amqp-api-consumer") (v "0.1.0") (d (list (d (n "cooplan-amqp-api-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-lapin-wrapper") (r "^0.4.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "lapin") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "macro-diagnostics"))) (d #t) (k 0)))) (h "0xbpmq5vyx8z0c9dyy3jknqkfm6n60ddpr40rq4qmcqv8fjwyg7s")))

(define-public crate-cooplan-amqp-api-consumer-0.1.1 (c (n "cooplan-amqp-api-consumer") (v "0.1.1") (d (list (d (n "cooplan-amqp-api-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-lapin-wrapper") (r "^0.4.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "lapin") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "macro-diagnostics"))) (d #t) (k 0)))) (h "09xrcisiizn0v63bpckmp2x13znq031y5p1rm1vmavqgvlwdq19h")))

(define-public crate-cooplan-amqp-api-consumer-0.1.2 (c (n "cooplan-amqp-api-consumer") (v "0.1.2") (d (list (d (n "cooplan-amqp-api-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-lapin-wrapper") (r "^0.4.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "lapin") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "macro-diagnostics"))) (d #t) (k 0)))) (h "0i64q1g0r6igkd2j3dw8wcs1mglva6xw3qwfkzv58cidbz2ghr17")))

(define-public crate-cooplan-amqp-api-consumer-0.1.3 (c (n "cooplan-amqp-api-consumer") (v "0.1.3") (d (list (d (n "cooplan-amqp-api-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-lapin-wrapper") (r "^0.4.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "lapin") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "macro-diagnostics"))) (d #t) (k 0)))) (h "07wcpl9n2slqk7vrd9rmqgz3w3mhhdz9rlw6p0ldq46r8vn9nzqy")))

(define-public crate-cooplan-amqp-api-consumer-0.2.0 (c (n "cooplan-amqp-api-consumer") (v "0.2.0") (d (list (d (n "cooplan-amqp-api-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-lapin-wrapper") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "lapin") (r "^2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4" "macro-diagnostics"))) (d #t) (k 0)))) (h "1bzzb9d4yln9fb49w4vfv48vdq01npvir7gqqbk4w7g4yznqsf3d")))

