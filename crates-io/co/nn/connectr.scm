(define-module (crates-io co nn connectr) #:use-module (crates-io))

(define-public crate-connectr-0.0.2 (c (n "connectr") (v "0.0.2") (d (list (d (n "chrono") (r "^0.3.0") (d #t) (k 0)) (d (n "cocoa") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.0.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11.0-a.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "log4rs") (r "^0.6.3") (d #t) (k 0)) (d (n "objc") (r "^0.2.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-ini") (r "^0.9") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.23") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^1.4.0") (d #t) (k 0)))) (h "0847zqp8hkf48frskww6f7ckh9vmc5pfxqafxx1fvcfm8xi6076x") (f (quote (("verbose_http"))))))

(define-public crate-connectr-0.1.0 (c (n "connectr") (v "0.1.0") (d (list (d (n "chrono") (r "^0.3.0") (d #t) (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.0.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11.0-a.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "log4rs") (r "^0.6.3") (d #t) (k 0)) (d (n "objc") (r "^0.2.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rubrail") (r "^0.4") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.4") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^1.4.0") (d #t) (k 0)))) (h "0vypsyd9xv49iqb0516dc47616x4fdvbkcc08vxx3hym7xbwidld") (f (quote (("verbose_http") ("mac_white_icon"))))))

(define-public crate-connectr-0.2.0 (c (n "connectr") (v "0.2.0") (d (list (d (n "chrono") (r "^0.3.0") (d #t) (k 0)) (d (n "cocoa") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.0.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.6") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.5") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11.0-a.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "log4rs") (r "^0.6.3") (d #t) (k 0)) (d (n "objc") (r "^0.2.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rubrail") (r "^0.5") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.5") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^1.4.0") (d #t) (k 0)))) (h "0jr1fdvf0idxz32a9b7fiv2mjr9sishr8fl9sgy940zwp3jqr68c") (f (quote (("verbose_http") ("mac_white_icon"))))))

(define-public crate-connectr-1.0.0 (c (n "connectr") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1.0") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.6") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "log4rs") (r "^0.8.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "rubrail") (r "^0.7") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.7") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.10.3") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "timer") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^1.7.0") (d #t) (k 0)))) (h "1zkvgavggdxq438q4an9m2mmd7zsgxfsgw12r1qq3xc0cy3vv7pr") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

(define-public crate-connectr-1.0.1 (c (n "connectr") (v "1.0.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.6") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.8") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "rubrail") (r "^0.7") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.7") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.13") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "19wrivisvyv1qrsd6f5jzv8q9653k4accp9hnwszl660sppyd4a1") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

(define-public crate-connectr-1.1.0 (c (n "connectr") (v "1.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.8") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.13") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.2") (d #t) (k 0)))) (h "0h9nmnyxp0sw14h441f6lipx0w7h0xz5cykl6xp75j1ymzvfq7nv") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

(define-public crate-connectr-1.0.2 (c (n "connectr") (v "1.0.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.13") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.2") (d #t) (k 0)))) (h "0pqafnyicvdhhf168zcgwsrdjdms7wy3xjp31nwmyfx53cl2f0h2") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

(define-public crate-connectr-1.1.1 (c (n "connectr") (v "1.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.13") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.2") (d #t) (k 0)))) (h "0x0a6mld075libqz8kll91kd5kki4k334by40x22cll5jqfnr3ln") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

(define-public crate-connectr-1.1.2 (c (n "connectr") (v "1.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "curl") (r "^0.4.11") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "fruitbasket") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.1.11") (d #t) (k 2)) (d (n "hyper") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "open") (r "^1.2.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rubrail") (r "^0.9") (t "cfg(windows)") (k 0)) (d (n "rubrail") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rust-ini") (r "^0.13") (d #t) (k 0)) (d (n "rustfm-scrobble") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.37") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)) (d (n "systray") (r "^0.1.1-connectr") (d #t) (t "cfg(windows)") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "timer") (r "^0.2") (d #t) (k 0)))) (h "17ja672pjaagdrgq4zp8iv0b9bnbc8j3nmd5xip7gyz9p2wxzsw6") (f (quote (("verbose_http") ("scrobble" "rustfm-scrobble") ("mac_white_icon") ("default" "scrobble"))))))

