(define-module (crates-io co nn connector_arrow) #:use-module (crates-io))

(define-public crate-connector_arrow-0.1.0 (c (n "connector_arrow") (v "0.1.0") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.9") (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fehler") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("column_decltype"))) (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("db-postgres"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0pg2zq1ind4mpww6phvc7058h77gcvkp0wwqmigsi5rqf1v0b46k") (f (quote (("src_sqlite" "rusqlite" "fallible-streaming-iterator" "urlencoding") ("src_postgres" "postgres" "csv" "hex" "uuid" "rust_decimal" "rust_decimal_macros") ("src_duckdb" "duckdb" "urlencoding" "uuid" "rust_decimal" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres"))))))

(define-public crate-connector_arrow-0.1.1 (c (n "connector_arrow") (v "0.1.1") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.9") (o #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fehler") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("db-postgres"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1jxib2cjvdazw9fcg7i2w72v0vk6s3j48vcshbjdfm9mkyif5pqw") (f (quote (("src_sqlite" "rusqlite" "fallible-streaming-iterator" "urlencoding") ("src_postgres" "postgres" "csv" "hex" "uuid" "rust_decimal" "rust_decimal_macros") ("src_duckdb" "duckdb" "urlencoding" "uuid" "rust_decimal" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres"))))))

(define-public crate-connector_arrow-0.2.0 (c (n "connector_arrow") (v "0.2.0") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.9") (o #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("db-postgres"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1r5pmq05r6d1n7m57ihdvfgzh12w11i62bznh8a3g0wi2xkwadf6") (f (quote (("src_sqlite" "rusqlite" "fallible-streaming-iterator" "urlencoding") ("src_postgres" "postgres" "csv" "hex" "uuid" "rust_decimal" "rust_decimal_macros") ("src_duckdb" "duckdb" "urlencoding" "uuid" "rust_decimal" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres"))))))

(define-public crate-connector_arrow-0.3.0 (c (n "connector_arrow") (v "0.3.0") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.9") (o #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parquet") (r "^49") (d #t) (k 2)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("db-postgres"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0199yry8w4gpmjhvhnnfkl0jwnjxsyx3kmlrp14rzkwc7vg3yc81") (f (quote (("src_sqlite" "rusqlite" "fallible-streaming-iterator" "urlencoding") ("src_postgres" "postgres" "csv" "hex" "uuid" "rust_decimal" "rust_decimal_macros") ("src_duckdb" "duckdb" "urlencoding" "uuid" "rust_decimal" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres"))))))

(define-public crate-connector_arrow-0.4.0 (c (n "connector_arrow") (v "0.4.0") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (k 2)) (d (n "byteorder") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.9.2") (o #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rusqlite") (r "^0.30.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "163df7rpwirliyk334bza8mjg9c1jg42m5i5a7cirpgz5yn2h0q2") (f (quote (("src_sqlite" "rusqlite") ("src_postgres" "postgres" "postgres-protocol" "csv" "hex" "bytes" "byteorder") ("src_duckdb" "duckdb" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres"))))))

(define-public crate-connector_arrow-0.4.1 (c (n "connector_arrow") (v "0.4.1") (d (list (d (n "arrow") (r "^49") (k 0)) (d (n "arrow") (r "^49") (f (quote ("prettyprint"))) (k 2)) (d (n "byteorder") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "duckdb") (r "^0.10.1") (o #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mysql") (r "^25.0.0") (f (quote ("minimal"))) (o #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pac_cell") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "postgres") (r "^0.19") (f (quote ("with-chrono-0_4" "with-uuid-0_8" "with-serde_json-1"))) (o #t) (k 0)) (d (n "postgres-fallible-iterator") (r "^0.2") (o #t) (d #t) (k 0) (p "fallible-iterator")) (d (n "postgres-protocol") (r "^0.6.6") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rusqlite") (r "^0.31.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiberius") (r "^0.12.2") (o #t) (k 0)) (d (n "tokio") (r "^1.36.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)))) (h "0af7fzzns8ls7a7syzj3vxqd9hwliasyyfvy87ji2la30sacdxhl") (f (quote (("src_tiberius" "tiberius" "tokio" "tokio-util" "futures") ("src_sqlite" "rusqlite") ("src_postgres" "postgres" "postgres-protocol" "postgres-fallible-iterator" "csv" "hex" "bytes" "byteorder") ("src_mysql" "mysql" "pac_cell") ("src_duckdb" "duckdb" "fallible-streaming-iterator") ("all" "src_sqlite" "src_duckdb" "src_postgres" "src_mysql" "src_tiberius"))))))

