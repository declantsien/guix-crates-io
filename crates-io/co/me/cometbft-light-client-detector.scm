(define-module (crates-io co me cometbft-light-client-detector) #:use-module (crates-io))

(define-public crate-cometbft-light-client-detector-0.1.0-alpha.2 (c (n "cometbft-light-client-detector") (v "0.1.0-alpha.2") (d (list (d (n "cometbft") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "cometbft-light-client") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "cometbft-proto") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "cometbft-rpc") (r "^0.1.0-alpha.2") (f (quote ("http-client"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.11") (k 0)) (d (n "derive_more") (r "^0.99.5") (f (quote ("display"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3.4") (k 0)) (d (n "serde") (r "^1.0.106") (k 0)) (d (n "serde_cbor") (r "^0.11.1") (f (quote ("alloc" "std"))) (k 0)) (d (n "serde_derive") (r "^1.0.106") (k 0)) (d (n "serde_json") (r "^1.0.51") (k 0)) (d (n "sled") (r "^0.34.3") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0j35a98xfxd04qb1ww1qbjm4cpxwipbxa7nx2wsynkrxpv0bgdbv")))

