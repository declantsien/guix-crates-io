(define-module (crates-io co lo color-eyre) #:use-module (crates-io))

(define-public crate-color-eyre-0.2.0 (c (n "color-eyre") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.3.8") (d #t) (k 0)) (d (n "indenter") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "07g3fd1kn3rm3ka7awzi97c0y3l23xh4sfl4gfrp66xag7zkgz3c") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.2.1 (c (n "color-eyre") (v "0.2.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.3.8") (d #t) (k 0)) (d (n "indenter") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "0kx28h0wsr22ijy7fvpxdzamxl3z5xf06278zsk6bd58ksddbdwq") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.2.2 (c (n "color-eyre") (v "0.2.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.3.8") (d #t) (k 0)) (d (n "indenter") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "03r27d2fsdid9dnxamv39jq64g543k4f4zm4prh3pjzpwinrj81k") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.2.3 (c (n "color-eyre") (v "0.2.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.4") (d #t) (k 0)) (d (n "indenter") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "1phsl04fwdcmxh2q78d05ba8mfybrmjk1nn3xi40zqvzdyi5nrhf") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace")))) (y #t)))

(define-public crate-color-eyre-0.3.0 (c (n "color-eyre") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.4") (d #t) (k 0)) (d (n "indenter") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "0axmb3da6lhwhc1n0arzy257xxwkdj5nma1n7jwa5rms7d734cgb") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.3.1 (c (n "color-eyre") (v "0.3.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.4.2") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "09fgfhkkpbzxz7mldyykd51k29mcyb04n1hifak6z37689kwy7fq") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.3.2 (c (n "color-eyre") (v "0.3.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.4.2") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "0zs1hnnasdx4iipjlqy1pa72rycnf2lk5wn09a8m4jqzmg5d7kdk") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.3.4 (c (n "color-eyre") (v "0.3.4") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.4.3") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "1zv7a19aqp8cgypyg0waahvbjv575cpfqlxnp9pc1ab2383mzaia") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.4.0 (c (n "color-eyre") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.5.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "1pl3c9bjxzk6z6s5dbpjaij1iqvp8nr10rf6qhy389k0r9lc7d09") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace")))) (y #t)))

(define-public crate-color-eyre-0.4.1 (c (n "color-eyre") (v "0.4.1") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.5.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "1a4c7d2qwci0yzv1saw50wlmvkasm78a4s3y7142izxijs4v5gmc") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.4.2 (c (n "color-eyre") (v "0.4.2") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.4.0") (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.5.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "159yymqpc6syqybgkd0f77p3anh5szljkkwagvlpdhggl5rrsb35") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.0 (c (n "color-eyre") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)))) (h "0xkx8468zqdvbygsjwi5hlklzb2nw717p1i2vzpi03108ci6fwic") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.1 (c (n "color-eyre") (v "0.5.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0b3fhnfq3pyhw9a99a4b1jhb5p16agdywl97p3vwhy1a8zsb13h2") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.2 (c (n "color-eyre") (v "0.5.2") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1bmy2mq36hqyg55vqbfb3cmpfkjsmc55r59myzmsj8qy8ligm6b7") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.3 (c (n "color-eyre") (v "0.5.3") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "10ynf94x4qlcr08xx9yf0xpghbd5gca35bh44c00rjsz0q2w3i8s") (f (quote (("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.4-rc.1 (c (n "color-eyre") (v "0.5.4-rc.1") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1zbnf8x88bwznq5h04dm9alkwfmg7adijwfq9rpgaicyiw0xsx28") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.4-rc.2 (c (n "color-eyre") (v "0.5.4-rc.2") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0cdwihw40b5vj5sqr2g7a3ywhdh5jyah4l24nbi8xx64lpjgh596") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.4-rc.3 (c (n "color-eyre") (v "0.5.4-rc.3") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0mcvcbfnm3wh3s6p3dybgq8igywamrphbf2scl451125zk92y79j") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.4 (c (n "color-eyre") (v "0.5.4") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1h8g7pz3n757srh8ifm2n8hq70wznrs38nlv47rc26vzh5g9pfi2") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.5-rc.1 (c (n "color-eyre") (v "0.5.5-rc.1") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0bjv1l4nriyfsip8x0xnc7c7zp6w394a7nqqid6pcayxf9yc9qqv") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.5 (c (n "color-eyre") (v "0.5.5") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.0") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0amd0xycv6f7wiwsc521hand9v8mj987hjpn9vqsm524iv5kzbmy") (f (quote (("issue-url" "url") ("default" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.6 (c (n "color-eyre") (v "0.5.6") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0znjlngia3zkdxpcxi503s8nrm8wr9fhxva33k24k0xgnlyi59gj") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.7 (c (n "color-eyre") (v "0.5.7") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04l14sxkhgzycfz9lxmw7w7pjz30syna84xpslj1j51376q0pg46") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.8 (c (n "color-eyre") (v "0.5.8") (d (list (d (n "backtrace") (r ">=0.3.48, <0.4.0") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r ">=0.1.4, <0.2.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.6.1, <0.7.0") (d #t) (k 0)) (d (n "indenter") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "once_cell") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "owo-colors") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r ">=0.6.1, <0.7.0") (d #t) (k 2)) (d (n "thiserror") (r ">=1.0.19, <2.0.0") (d #t) (k 2)) (d (n "tracing") (r ">=0.1.13, <0.2.0") (d #t) (k 2)) (d (n "tracing-error") (r ">=0.1.2, <0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r ">=0.2.5, <0.3.0") (d #t) (k 2)) (d (n "url") (r ">=2.1.1, <3.0.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r ">=0.3.15, <0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1q3lfachrqhah7986k0sv7iwhiq643rg2248s2jc3z3zn02p7dcg") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.9 (c (n "color-eyre") (v "0.5.9") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0frrbs13nl53al42wqfxhahs97lang5rpl6gkxk2x3f5fp4kxnac") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.10 (c (n "color-eyre") (v "0.5.10") (d (list (d (n "ansi-parser") (r "^0.6.5") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0p1cavn5wvz4ikq6nffiv11phjjv1mwrgx4flbj7d0zxfl406abv") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.5.11 (c (n "color-eyre") (v "0.5.11") (d (list (d (n "ansi-parser") (r "^0.6.5") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^1.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.5") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1dspj58bk57f9hiqlvbz25rik92i4a95iwa2dl4pg8g8grlqa60z") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.6.0 (c (n "color-eyre") (v "0.6.0") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0v7r9yvn4h80xmw7mm67jz6i9i02nsfq1700jdslnizk3xjcfvlx") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.6.1 (c (n "color-eyre") (v "0.6.1") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "141ch6m6pvgj1m7psm2byavpp1cj67pcyxgzmrkmhv8aj1n2igwf") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.6.2 (c (n "color-eyre") (v "0.6.2") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "014j49slcblg6cnsh974k9yjmi1khbm4dpmqdm1zii58rj1parjs") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

(define-public crate-color-eyre-0.6.3 (c (n "color-eyre") (v "0.6.3") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1m9shifr9sdw0drszzyhvaq5jysrsiki44bl7m1gfdzj8rg6y52m") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace")))) (r "1.65.0")))

