(define-module (crates-io co lo color-eyre-attach-report) #:use-module (crates-io))

(define-public crate-color-eyre-attach-report-0.6.2 (c (n "color-eyre-attach-report") (v "0.6.2") (d (list (d (n "backtrace") (r "^0.3.48") (f (quote ("gimli-symbolize"))) (d #t) (k 0)) (d (n "color-spantrace") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2.0") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.13") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "134ifs6fyhz4bg320wf1np1ffn4x8w3la1p3winhnnjphzifagm6") (f (quote (("track-caller") ("issue-url" "url") ("default" "track-caller" "capture-spantrace") ("capture-spantrace" "tracing-error" "color-spantrace"))))))

