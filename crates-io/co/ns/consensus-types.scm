(define-module (crates-io co ns consensus-types) #:use-module (crates-io))

(define-public crate-consensus-types-0.1.0 (c (n "consensus-types") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "1d454s319alxx9k32v9517v13xzy28zx1wyci3gzbgfm7h6psrc7") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.1 (c (n "consensus-types") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "01sjr048mada40b21a30cnr43j5hslcnnviynwpv1zjhaym8y2vg") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.2 (c (n "consensus-types") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "1h8r9yc29xzi1bp7xrxb9j79q0jxl75mrvskzagwgb7d8m57spv5") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.3 (c (n "consensus-types") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "0h7q64p2sbdrg171qcn6hmc8hjk6pq7rxlcvzyq97diim6p1vp5k") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.4 (c (n "consensus-types") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "1x4arqn684qa5y4sf1nfi6j5lhgb5nsg813schna0nh340izg9d6") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.5 (c (n "consensus-types") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "0sc6sjpib5hvz8bcz45by3zw8h445zm424n3pg2vlg3pknmk5bjb") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.6 (c (n "consensus-types") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.0") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.0") (d #t) (k 0)))) (h "0cl0cc5wg8phy4894afgdza2gsxcssb950zv0k1y23mnzgzrsga9") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.1.7 (c (n "consensus-types") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.1.7") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.1.7") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.1.7") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.7") (d #t) (k 0)) (d (n "aptos-types") (r "^0.1.7") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.1.7") (d #t) (k 0)))) (h "1961ip4aj4wxad3mg86vmjk99gjaw952545wmkj85rbvknhyiw5p") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.2.1 (c (n "consensus-types") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.2.1") (d #t) (k 0)))) (h "13m48p82p9pkmafvbwjvpjcqm9b3jrq8x92qp85w2qy2975r6j71") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.2.2 (c (n "consensus-types") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.2.1") (d #t) (k 0)))) (h "1xswixbkj7qysc0gf7bkssh1p85d5f4srbkd4nsksy4wd1kidfia") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.2.6 (c (n "consensus-types") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.2.1") (d #t) (k 0)))) (h "1m2ga4qrc4nyrb8a42f73z2b2bs1w7hd8lyzmn09f212dnjv6pbp") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

(define-public crate-consensus-types-0.2.7 (c (n "consensus-types") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "aptos-crypto") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-crypto-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-infallible") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (d #t) (k 0)) (d (n "aptos-types") (r "^0.2.1") (f (quote ("fuzzing"))) (d #t) (k 2)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "executor-types") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.12.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "short-hex-str") (r "^0.2.1") (d #t) (k 0)))) (h "1pai2ji18m63by726ivrmz3v7j149zwchz16ynk5vfmzjpg1xx25") (f (quote (("fuzzing" "proptest" "aptos-types/fuzzing" "aptos-crypto/fuzzing") ("default")))) (y #t)))

