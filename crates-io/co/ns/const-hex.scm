(define-module (crates-io co ns const-hex) #:use-module (crates-io))

(define-public crate-const-hex-1.0.0 (c (n "const-hex") (v "1.0.0") (d (list (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)))) (h "191gm7bgs9j5y548s7aksi9avs6im44abkfyffn0s8c4apn558m6") (f (quote (("default" "std" "hex")))) (s 2) (e (quote (("std" "hex?/std") ("serde" "hex?/serde") ("alloc" "hex?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.1.0 (c (n "const-hex") (v "1.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)))) (h "14axknfm9gfjz7hvfgfc0lswgas8jbg4ghgsh2bvbh9a93j6zdpk") (f (quote (("default" "std" "hex")))) (s 2) (e (quote (("std" "hex?/std") ("serde" "hex?/serde") ("alloc" "hex?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.1.1 (c (n "const-hex") (v "1.1.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)))) (h "1j9ph341628480yr4mn9wy4aqz8dpp9px6fxrr4b86b5fgmg22a6") (f (quote (("default" "std" "hex")))) (s 2) (e (quote (("std" "hex?/std" "alloc") ("serde" "hex?/serde") ("alloc" "hex?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.1.2 (c (n "const-hex") (v "1.1.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)))) (h "1idq07fznva3a8qa1gybcr0bywpaxi90x0jdmgxgmlzp15fjqqgn") (f (quote (("default" "std" "hex")))) (s 2) (e (quote (("std" "hex?/std" "alloc") ("serde" "hex?/serde") ("alloc" "hex?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.2.0 (c (n "const-hex") (v "1.2.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1sjngywn71ryn01flxlw2i9iwgi3lzvjpbsk2nmvzarlv1061yfl") (f (quote (("default" "std" "hex")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.3.0 (c (n "const-hex") (v "1.3.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1jgy35gv23kda68bqxbizc3dailn7nzrciy6isz16lwr302fxfly") (f (quote (("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.4.0 (c (n "const-hex") (v "1.4.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1c9f7axdw7ng78hgyvil4dkj23figaqh5lnlawghxx21igjh2spv") (f (quote (("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.5.0 (c (n "const-hex") (v "1.5.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "003xhbxlyzvw72dl0d3aq9k2flzbg249w26alb7x0vbi40gyr80n") (f (quote (("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.6.0 (c (n "const-hex") (v "1.6.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1bbmkha0wjb5vbpv71q7maq62rqdqhdm9x482yxcgbsdh3nj7jpv") (f (quote (("nightly") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.6.1 (c (n "const-hex") (v "1.6.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0ia4qb43gaz4ssc6k383bdrv4r8rb7mc2i4mvl1hv638wam553r6") (f (quote (("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.6.2 (c (n "const-hex") (v "1.6.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1p65kvpk373qnvv6wwvw0x15ykl32shg3bz6cjsldrl8rpv8s9na") (f (quote (("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.7.0 (c (n "const-hex") (v "1.7.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1p5qn3f139whlbvg33y0z72kd47zzgf4xxlsci0198rn5fszin0l") (f (quote (("portable-simd") ("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.8.0 (c (n "const-hex") (v "1.8.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r ">=0.4.2") (o #t) (k 0)) (d (n "hex") (r ">=0.4.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0nf21i96mi96w1yjmb9qrmhn7n0jb9302ak52q0cj1y9jg9rx108") (f (quote (("portable-simd") ("nightly") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.9.0 (c (n "const-hex") (v "1.9.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1dfsrcgqnxbzlccnx2b7vg1c2c6jd2g41rylr9mssk4i1q6s2wma") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.9.1 (c (n "const-hex") (v "1.9.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0b1l7zwyi9r0jhpcw5dcf8y11masd0810d524zdr9cz3ylpfayy3") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc")))) (r "1.64")))

(define-public crate-const-hex-1.10.0 (c (n "const-hex") (v "1.10.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.8.1") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.3.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0mq5zmg35xnc5xrqj6ssx5hlxyjbyy32zzjgwgwdv3i1dghls455") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.11.0 (c (n "const-hex") (v "1.11.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.3.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0qbr5n1j52nv167yjw49nj0lqj4kpvnlzd2cp3vfli89mn49dm8q") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.11.1 (c (n "const-hex") (v "1.11.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1adr8qm98ixacbz8qyym4x5jxg3bym2mw5x97cczismhkba15ggg") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.11.2 (c (n "const-hex") (v "1.11.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1jf1zfmj000m7mz3iix2siy08i2k98hb98fafbnda27din6awzdk") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.11.3 (c (n "const-hex") (v "1.11.3") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "0y4zyz8pdy3k93fgc5y00mx35j5z1xqjcp9m7qiv0jjbfww0i82v") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.11.4 (c (n "const-hex") (v "1.11.4") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "19p11l9mbq2wygi1mlzp1a6cgy0a5jppq42qm4v1safcdi49dzvh") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

(define-public crate-const-hex-1.12.0 (c (n "const-hex") (v "1.12.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "faster-hex") (r "^0.9.0") (f (quote ("alloc"))) (k 2)) (d (n "hex") (r "~0.4.2") (o #t) (k 0)) (d (n "hex") (r "~0.4.2") (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)))) (h "1ihbc6gc4yixrcpjzha4xb758rpyr4yk4hskskzy2dvdl8j8mywl") (f (quote (("portable-simd") ("nightly") ("force-generic") ("default" "std")))) (s 2) (e (quote (("std" "hex?/std" "serde?/std" "proptest?/std" "alloc") ("serde" "hex?/serde" "dep:serde") ("hex" "dep:hex") ("alloc" "hex?/alloc" "serde?/alloc" "proptest?/alloc") ("__fuzzing" "dep:proptest" "std")))) (r "1.64")))

