(define-module (crates-io co ns const-frac) #:use-module (crates-io))

(define-public crate-const-frac-0.0.1 (c (n "const-frac") (v "0.0.1") (d (list (d (n "combine") (r "^4") (k 0)) (d (n "gcd") (r "^2") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 2)))) (h "0x56p4kfiln4gcsngwcsbshy8lxd0c46khx5gpq0qq9yipqcbf00") (f (quote (("std"))))))

(define-public crate-const-frac-0.0.2 (c (n "const-frac") (v "0.0.2") (d (list (d (n "combine") (r "^4") (k 0)) (d (n "gcd") (r "^2") (d #t) (k 0)) (d (n "num") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (o #t) (d #t) (k 0)))) (h "00rsjkns683cipbvxkgsx5s7wsa20lgrp3rma8r7aylim1kns5bh") (f (quote (("tokenize" "std" "syn" "quote" "proc-macro2") ("std"))))))

(define-public crate-const-frac-0.0.3 (c (n "const-frac") (v "0.0.3") (d (list (d (n "combine") (r "^4") (k 0)) (d (n "gcd") (r "^2") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (o #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (o #t) (d #t) (k 0)))) (h "0zzhvrif62h679vd800wvwzldfk2sl5d933kmc1djhawwaxrmll0") (f (quote (("tokenize" "std" "syn" "quote" "proc-macro2") ("std") ("ratio" "num-rational" "num-traits" "num-integer"))))))

(define-public crate-const-frac-0.0.4 (c (n "const-frac") (v "0.0.4") (d (list (d (n "combine") (r "^4") (k 0)) (d (n "gcd") (r "^2") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (o #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (k 0)) (d (n "num-rational") (r "^0.4") (f (quote ("num-bigint"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (o #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (o #t) (d #t) (k 0)))) (h "0djjsjkddq11x2cz4zp9fpf5zb4kbnrh5h4ww04mzf4ldvh71qw6") (f (quote (("tokenize" "std" "syn" "quote" "proc-macro2") ("std") ("ratio" "num-rational" "num-traits" "num-integer" "num-bigint"))))))

