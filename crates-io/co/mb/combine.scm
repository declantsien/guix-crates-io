(define-module (crates-io co mb combine) #:use-module (crates-io))

(define-public crate-combine-1.0.0-beta (c (n "combine") (v "1.0.0-beta") (h "18rdsg1plz2nx44irq1gz4scz31yr4xxxrg9xrz7a1c2w1dl26qr")))

(define-public crate-combine-1.0.0-beta.2 (c (n "combine") (v "1.0.0-beta.2") (h "1xzib7m2dmixhf9va937sxr97nksr4bsdvp7m8cv7gli6hgmwd8j")))

(define-public crate-combine-1.0.0-beta.3 (c (n "combine") (v "1.0.0-beta.3") (h "03d6i9gs2y756qgh8dsyqg4mfrw932dxv580n13p9rar3q345n1i")))

(define-public crate-combine-1.0.0 (c (n "combine") (v "1.0.0") (h "1q321xbh93ixf063x38qdhwgizzxbzj9kgmz4fv2b0yr92xaqq52")))

(define-public crate-combine-1.0.1 (c (n "combine") (v "1.0.1") (h "1mll92xr2gq0vshvfify0pwjiqnldckxmi3n0s98k5q8k5w8ywfw") (f (quote (("range_stream"))))))

(define-public crate-combine-1.0.2 (c (n "combine") (v "1.0.2") (h "1gz92r29s92cvix5pnrqc7ani18agkx3ag9h75y26ra5z68v7vdn") (f (quote (("test" "range_stream" "buffered_stream") ("range_stream") ("buffered_stream"))))))

(define-public crate-combine-1.1.0 (c (n "combine") (v "1.1.0") (h "05hib605g0figihrc6alava2si3a9smn46ia66dgym3cf68f8ah9") (f (quote (("test" "range_stream" "buffered_stream") ("range_stream") ("buffered_stream"))))))

(define-public crate-combine-1.1.1 (c (n "combine") (v "1.1.1") (h "0imnzi964nyna0jrildk5fw9yyx045x8llnxffpw6wrv0235ql4v") (f (quote (("test" "range_stream" "buffered_stream") ("range_stream") ("buffered_stream"))))))

(define-public crate-combine-1.2.0 (c (n "combine") (v "1.2.0") (h "0zpqy6rzrm98xrr1kd7vpa11av496ab8yxi6sgq2fjqaykjw7vd3") (f (quote (("test" "range_stream" "buffered_stream") ("range_stream") ("buffered_stream"))))))

(define-public crate-combine-1.2.1 (c (n "combine") (v "1.2.1") (h "0cp420dnyzwrw9n4dv4mi68vz66scjzv0fgkiwha9brzzbcfkh41") (f (quote (("test" "range_stream" "buffered_stream") ("range_stream") ("buffered_stream"))))))

(define-public crate-combine-1.3.0 (c (n "combine") (v "1.3.0") (h "00cgcxpyaa86ncng8zbk9dvhamxpfschpd9igahbm0jmwacgys4v") (f (quote (("test" "buffered_stream") ("buffered_stream"))))))

(define-public crate-combine-2.0.0-beta (c (n "combine") (v "2.0.0-beta") (h "0j3i37hcrcg6fg2frxqnvmi32w3y6jric1nvxdcvjkjdjib2g5yq")))

(define-public crate-combine-2.0.0-beta2 (c (n "combine") (v "2.0.0-beta2") (h "0zjbdy81r4611kragcsyd9i34lq6g7c9kvax3h5rzdkdqrab16l9")))

(define-public crate-combine-2.0.0-beta3 (c (n "combine") (v "2.0.0-beta3") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "1nfk1zmh1qsiz7qbbnllbi9qsczznpvppp8cdqas3if4rl5vm3fr") (f (quote (("mp4"))))))

(define-public crate-combine-2.0.0 (c (n "combine") (v "2.0.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "1aljnm9crf29fj1dvk3aiw3k89kli4hfz0vgpi7alc0d6w7lbqry") (f (quote (("mp4"))))))

(define-public crate-combine-2.1.0 (c (n "combine") (v "2.1.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "0bhmzr8pdqkrgi14nxckdvccyzczgwkcs4i6v3im86r5036gjf6w") (f (quote (("mp4"))))))

(define-public crate-combine-2.1.1 (c (n "combine") (v "2.1.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "18k2a5j6k5cgy9da5lvzy12abr9sirha8hpxynfa3cv3qdqmgziw") (f (quote (("mp4"))))))

(define-public crate-combine-2.1.2 (c (n "combine") (v "2.1.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "08av023hyjk077s53zs2mnjdbr39hjhsx296495y3kyhgxc1bk9p") (f (quote (("mp4"))))))

(define-public crate-combine-2.2.0 (c (n "combine") (v "2.2.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "0x8kkgi7pyhb8kdd8npxpbkx5g7wak7ni5q9znrrh0m793b9q1kj") (f (quote (("mp4"))))))

(define-public crate-combine-2.2.1 (c (n "combine") (v "2.2.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "04ywfiy1838628s7zfx4d1lxk4fs79zk03qbq51x63gjw83ny3xj") (f (quote (("mp4"))))))

(define-public crate-combine-2.2.2 (c (n "combine") (v "2.2.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "0s1n4lc19g1xd0lrq5fc86qmcbzf6cyyi0swl29myv8s1ynvh0zg") (f (quote (("mp4"))))))

(define-public crate-combine-2.3.0 (c (n "combine") (v "2.3.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "023cmlk3rqxxmk44lxy7dfs8hwqr9dfhvdhivcscnxzwpxq9fx49") (f (quote (("mp4"))))))

(define-public crate-combine-2.3.1 (c (n "combine") (v "2.3.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "0xig42dk6hri38qijgpnsb41cvhb42ki6wqffpprgsfj44am12ws") (f (quote (("mp4"))))))

(define-public crate-combine-2.3.2 (c (n "combine") (v "2.3.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "1l6j3mi90ya2rpbivz0987gahbbzi469rxwhplqvas0f7qpjnkhd") (f (quote (("mp4"))))))

(define-public crate-combine-2.4.0 (c (n "combine") (v "2.4.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^0.5.3") (d #t) (k 2)))) (h "0apsb9qr1y9495p5zk1ambjwklci6jk2lkhrlp843i14p2jv8j4x") (f (quote (("mp4"))))))

(define-public crate-combine-2.5.0 (c (n "combine") (v "2.5.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0j7jhwbv7mbgvqdx8gjd85fg67pl18zd7i52j90fx384clnv6zgh") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-3.0.0-alpha.1 (c (n "combine") (v "3.0.0-alpha.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "189r0y2bw531gy1a7jf69yrllyb8sv1yyjp670fh4h4147hnf7zs") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-2.5.1 (c (n "combine") (v "2.5.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0v6wh7khd8k01n9vdcm1ivfcnzxqbkm70mr6zs0b9ffp39w7khpm") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-3.0.0-alpha.2 (c (n "combine") (v "3.0.0-alpha.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "10q6wg7zgqlb8nj8ppq0rxqcrkrxvhfp55hgcfnlg3v6vi5p77qm") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-3.0.0-alpha.3 (c (n "combine") (v "3.0.0-alpha.3") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1dcw999pzwmrnqx2w40zvx3p6gb3h9cbf5m4mx583rdh59dyshkh") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-2.5.2 (c (n "combine") (v "2.5.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0z79dfx50l6czhqyfgm94wxkpgp5zyk7ajqzfr2x7j67k5daci8n") (f (quote (("mp4") ("doc" "regex"))))))

(define-public crate-combine-3.0.0-alpha.4 (c (n "combine") (v "3.0.0-alpha.4") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1bhv36rlkh29xkzcpq8p06q2lk7y5qxhqxf1qj90mmp3vydv9wqq") (f (quote (("std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.0.0-alpha.5 (c (n "combine") (v "3.0.0-alpha.5") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0mcili99fxbmkkz11gvvm5x67mnd9r0v1hrjlzr9mj0dw4j2zn62") (f (quote (("std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.0.0-beta.1 (c (n "combine") (v "3.0.0-beta.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1j1n47k36rvqald6xfizmkr3352j991m2l1wbnwy4qkj3fcyy4w1") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.0.0 (c (n "combine") (v "3.0.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1w3mi07hsn83mpm6h56n5iigr8ndkwrqsra8dj1rim6s29gvrj7q") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.1.0 (c (n "combine") (v "3.1.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1ixp20gxfkbd9lbs24gjswyybhii06n9i006faj33dwz7gpc8v00") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.2.0 (c (n "combine") (v "3.2.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1q0f0cn47cxbsfk782zdal4hxgm8mmv010lzmrw0d3vgbijx1ira") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.0 (c (n "combine") (v "3.3.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0qcqrhzmc76qbqks8fxy4yiik3wp8ypa342aw9ksy0liwkgj4cyg") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.1 (c (n "combine") (v "3.3.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "11jx1drp6sa6f6qp3fwkk1i7djjkrpi3f3ai1vzzdb2j66c4nri0") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.2 (c (n "combine") (v "3.3.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "07s02jhbikk8nw8r00xaxhkwgpkhgk5ca7r6ybbxxfinx8f9zma5") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.3 (c (n "combine") (v "3.3.3") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "066gd7szw9kiaid6n4gc1n75lz7mrhmf2y7linzwzsmbaag38bxh") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.4 (c (n "combine") (v "3.3.4") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0dz928kc8czi9if683xgwayd170i409garkqjhfq1abaqhdvskna") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.5 (c (n "combine") (v "3.3.5") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "08bqw9k6djxj9nzni5lwhwwjhjwlchq068sifqhhhmy1fydixv61") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.3.6 (c (n "combine") (v "3.3.6") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0jrkwg9yihpig0xb2k3md1fq8y5xiijj0gb6cxrrr6n9327cxcac") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.4.0 (c (n "combine") (v "3.4.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0h0gnkwk3h90q3kys2bvkp7wf11ifb03aiavqim3rhqzcw59fkfy") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.5.0 (c (n "combine") (v "3.5.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1a1f2plryi4gc37qgd6rwg3b95xcwfkaw0wlph5ym48vfkmr4mv2") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.5.1 (c (n "combine") (v "3.5.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "07h1z9a7p551lqhmb9mis149dys67bjxwhljvdpw4l349f3bwrvy") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.5.2 (c (n "combine") (v "3.5.2") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "03kl47167k99fvbjyifcy92qmpvy003s4dsahh6zwjiias0dvkjl") (f (quote (("std" "memchr/use_std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-3.5.3 (c (n "combine") (v "3.5.3") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1l3qhl7pjmljkhsxcwj9vr1hvdlphklpma5rljrg96h76b6qlh26") (f (quote (("std" "memchr/use_std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.0 (c (n "combine") (v "3.6.0") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "180inppqk1a0apdi1rsmhjl1p659kw1jp1f1cdq45scv8ky2v90j") (f (quote (("std" "memchr/use_std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.1 (c (n "combine") (v "3.6.1") (d (list (d (n "ascii") (r "^0.7.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1g65iww8afc3sb9cjga6vf3kwkfxr0jkkb5jimxihagdxqdh27gw") (f (quote (("std" "memchr/use_std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.2 (c (n "combine") (v "3.6.2") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1d51019qfj31v1zgryqlmrln1mm13g1phkyrsa2arzpbgz8y7mlp") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.3 (c (n "combine") (v "3.6.3") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1qilmyj729cifxbf1v7rwxv79k7fy2nrr58p8j6yfljg1xfkqwyv") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.5 (c (n "combine") (v "3.6.5") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "06c4hvdjgkfc7xz886jrbhjhih7l36cl4gwgahff0ggkjbw7kppw") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.6 (c (n "combine") (v "3.6.6") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0m5asfkfs1agqzcx4zy6839yaccv820fahf224ixg1l1kmzvar1x") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.6.7 (c (n "combine") (v "3.6.7") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1f8ll6s88rc8cca2fw5xxfabbv3d32alkpaxw4kl93xl88sknqnj") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.8.0 (c (n "combine") (v "3.8.0") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0v6x59czr6l0vvqnz0m4g3gd89nrs1kp2xn86pqy33rnbr6b9xs4") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-3.8.1 (c (n "combine") (v "3.8.1") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "bencher") (r "^0.1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "combine-regex-1") (r "^1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "1006sbl3ybiky3d5q28p0lyph37hk7sipls1rkhikv11lfxacgfs") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("regex-1" "combine-regex-1") ("mp4") ("doc" "regex" "regex-1") ("default" "std"))))))

(define-public crate-combine-4.0.0-alpha.1 (c (n "combine") (v "4.0.0-alpha.1") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "0vs4s6rffmbm3c69vlkmp5if0nd4yv5nxgjfxal0psnnag8drhq5") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-4.0.0-alpha.2 (c (n "combine") (v "4.0.0-alpha.2") (d (list (d (n "ascii") (r "^0.9.1") (k 0)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (k 2)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2") (k 0)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0.0") (d #t) (k 0)))) (h "17ykimn8r8jl0brc1r4sw6ff7lrxq0rzgq5qmxhmmhg49h3m0kq3") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-4.0.0-beta.1 (c (n "combine") (v "4.0.0-beta.1") (d (list (d (n "ascii") (r "^1") (k 0)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes-0-4") (r "^0.4") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-codec-0-1") (r "^0.1") (d #t) (k 2) (p "tokio-codec")) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)))) (h "1vdfy8qlbm4a0snanadlwnfwij42m5m8g974v571pq6xjdilll6z") (f (quote (("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("mp4") ("doc" "regex") ("default" "std"))))))

(define-public crate-combine-4.0.0-beta.2 (c (n "combine") (v "4.0.0-beta.2") (d (list (d (n "ascii") (r "^1") (k 0)) (d (n "byteorder") (r "^1.1.0") (k 0)) (d (n "bytes-0-4") (r "^0.4") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "either") (r "^1") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "futures_03") (r "^0.3") (o #t) (d #t) (k 0) (p "futures")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2") (o #t) (d #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-codec-0-1") (r "^0.1") (d #t) (k 2) (p "tokio-codec")) (d (n "tokio-io") (r "^0.1") (d #t) (k 2)))) (h "1sjal4nb4ardrkc2a0ds4xy31aqm916z1igs3v3rrp5jkk374paj") (f (quote (("tokio-02" "futures_03" "pin-project" "tokio-02-dep") ("std" "memchr/use_std" "either/use_std" "byteorder/std" "ascii/std") ("mp4") ("default" "std"))))))

(define-public crate-combine-4.0.0 (c (n "combine") (v "4.0.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (d #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (o #t) (d #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2") (o #t) (d #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "12sfbfrn82nm5vpcf67f0wa2k8z2nn69vgiflbilx6rb1vfpmv91") (f (quote (("tokio-02" "pin-project" "tokio-02-dep") ("std" "memchr/use_std" "bytes_05") ("mp4") ("futures-03" "pin-project" "futures-io-03" "futures-util-03") ("default" "std")))) (y #t)))

(define-public crate-combine-4.0.1 (c (n "combine") (v "4.0.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "0cl0ds1jni6g4vb0xcbrcj4kyqpvgcw9ddnhbx9ypqmm6qr88xf8") (f (quote (("tokio-02" "pin-project" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.1.0 (c (n "combine") (v "4.1.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "1vcm0iz898w9gy0k581dsn32y11f9xyb55b1if7sc1gx1f6fnycx") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.2.0 (c (n "combine") (v "4.2.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "1pld1yalhk82gcng2ih8d4qramdcjrj7q079xkdsxy1slk2qa8gv") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.2.1 (c (n "combine") (v "4.2.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "117mmwrdzb1j1i5qh07r0lqs64xxq4lxqasfkwj2gy9d5f3fzrdq") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.3.0 (c (n "combine") (v "4.3.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "1ak8k63i5y24y4i5icg01mic40rfwsmqvj43iyd5mz1jid7s1gsa") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05" "pin-project") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std")))) (y #t)))

(define-public crate-combine-4.3.1 (c (n "combine") (v "4.3.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "1spdynfmvp485n5dqpdj2x8va82iks472g3kcywgjkbl5j2k78wa") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05" "pin-project") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.3.2 (c (n "combine") (v "4.3.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "02ycmdsxlyv8pspzw3j04znm9f9if9bj573d5gynab9qcmrzc298") (f (quote (("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05" "pin-project") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.4.0 (c (n "combine") (v "4.4.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)))) (h "035jfagg1zcx9mvg6ffd7291zdccbblngkmfzymy4ra56467lhdr") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-util-03") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03") ("std" "memchr/use_std" "bytes_05" "pin-project") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03") ("default" "std"))))))

(define-public crate-combine-4.5.0 (c (n "combine") (v "4.5.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 2)))) (h "160d0jcfhiqc072lg95v6zszg4bmdwmbs8gjdzsryh0h155kyniq") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-util-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03" "pin-project-lite") ("tokio" "tokio-dep" "futures-util-03" "pin-project-lite") ("std" "memchr/use_std" "bytes") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03" "pin-project-lite") ("default" "std"))))))

(define-public crate-combine-4.5.1 (c (n "combine") (v "4.5.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 2)))) (h "0fgf5ygc6vz7hccqaabw2vmlgdnwazz0rmz3f0sij04bl4jrj681") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-util-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "futures-util-03" "pin-project-lite") ("std" "memchr/use_std" "bytes") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03" "pin-project-lite") ("default" "std"))))))

(define-public crate-combine-4.5.2 (c (n "combine") (v "4.5.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 2)))) (h "0zkvqp21fbhznf7sjssdiw3zgx3x3q8w10c9mmjdzkf0wjsnjhyc") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-util-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "futures-util-03" "pin-project-lite") ("std" "memchr/use_std" "bytes") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03" "pin-project-lite") ("default" "std"))))))

(define-public crate-combine-4.6.0 (c (n "combine") (v "4.6.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "futures-util-03") (r "^0.3.1") (f (quote ("io" "std"))) (o #t) (k 0) (p "futures-util")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 2)))) (h "1ymj18i7r3qzm7ddvi0kcvhn1klrnqxk2fxmjbj8fsq024dprm52") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-util-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-util-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "futures-util-03" "pin-project-lite") ("std" "memchr/use_std" "bytes") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-io-03" "futures-util-03" "pin-project-lite") ("default" "std"))))))

(define-public crate-combine-4.6.1 (c (n "combine") (v "4.6.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (k 0)))) (h "00fhgdrj6zvk3a56pya1cmxxdyggh4bgd2g18af8xkcj6bcy82d9") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/use_std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

(define-public crate-combine-4.6.2 (c (n "combine") (v "4.6.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (k 0)))) (h "1dcddjybglhckgdmcvcgcyc2nn8xk9nqrz1dh4l3jvs5xv8gbcmj") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/use_std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

(define-public crate-combine-4.6.3 (c (n "combine") (v "4.6.3") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (k 0)))) (h "0qihymj493vvs054gzpcmp4lzb098zrj2p9miv19yzvrrjm2gdsh") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/use_std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

(define-public crate-combine-4.6.4 (c (n "combine") (v "4.6.4") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.2") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (o #t) (k 0)))) (h "0j69sz8v8pxz9id0yqp7c5jfd7fnyak8bjkgg8r0h64xny9lwq1a") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/use_std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

(define-public crate-combine-4.6.6 (c (n "combine") (v "4.6.6") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.3") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (o #t) (k 0)))) (h "1m7s43cpi36vihmlda217xxgsdni3pbwgwfsa9zimdghhjfnxv9m") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

(define-public crate-combine-4.6.7 (c (n "combine") (v "4.6.7") (d (list (d (n "async-std") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "bytes_05") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes_05") (r "^0.5") (d #t) (k 2) (p "bytes")) (d (n "criterion") (r "^0.3") (k 2)) (d (n "futures-03-dep") (r "^0.3.1") (d #t) (k 2) (p "futures")) (d (n "futures-core-03") (r "^0.3.1") (o #t) (k 0) (p "futures-core")) (d (n "futures-io-03") (r "^0.3.1") (o #t) (k 0) (p "futures-io")) (d (n "memchr") (r "^2.3") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 2)) (d (n "partial-io") (r "^0.3") (f (quote ("tokio" "quickcheck"))) (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio-02-dep") (r "^0.2.3") (f (quote ("io-util"))) (o #t) (k 0) (p "tokio")) (d (n "tokio-02-dep") (r "^0.2") (f (quote ("fs" "io-driver" "io-util" "macros"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (o #t) (k 0) (p "tokio")) (d (n "tokio-03-dep") (r "^0.3") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-dep") (r "^1") (o #t) (k 0) (p "tokio")) (d (n "tokio-dep") (r "^1") (f (quote ("fs" "macros" "rt" "rt-multi-thread" "io-util"))) (d #t) (k 2) (p "tokio")) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (o #t) (k 0)))) (h "1z8rh8wp59gf8k23ar010phgs0wgf5i8cx4fg01gwcnzfn5k0nms") (f (quote (("tokio-03" "pin-project" "std" "tokio-03-dep" "futures-core-03" "pin-project-lite") ("tokio-02" "pin-project" "std" "tokio-02-dep" "futures-core-03" "pin-project-lite" "bytes_05") ("tokio" "tokio-dep" "tokio-util/io" "futures-core-03" "pin-project-lite") ("std" "memchr/std" "bytes" "alloc") ("pin-project" "pin-project-lite") ("mp4") ("futures-03" "pin-project" "std" "futures-core-03" "futures-io-03" "pin-project-lite") ("default" "std") ("alloc"))))))

