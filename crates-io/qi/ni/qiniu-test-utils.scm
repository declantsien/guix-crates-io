(define-module (crates-io qi ni qiniu-test-utils) #:use-module (crates-io))

(define-public crate-qiniu-test-utils-0.0.1 (c (n "qiniu-test-utils") (v "0.0.1") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.14.1") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "qiniu-http") (r "^0.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0pr28m1ji9svajiibrg9kwabdxpblxml3jrclrn6dmrg364pivf1") (y #t)))

(define-public crate-qiniu-test-utils-0.0.2 (c (n "qiniu-test-utils") (v "0.0.2") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.14.1") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "qiniu-http") (r "^0.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0vahg6dl3lwmw0nwldcjw2q7rpnw4wkdgywn2ccbil7rzq963q70") (y #t)))

(define-public crate-qiniu-test-utils-0.0.3 (c (n "qiniu-test-utils") (v "0.0.3") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.14.1") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "qiniu-http") (r "=0.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "1zpgahv6gp25rjs956j1n2v7njmipxv97cqy3d5dz9av06ynnqh1") (y #t)))

