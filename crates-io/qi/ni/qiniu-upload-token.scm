(define-module (crates-io qi ni qiniu-upload-token) #:use-module (crates-io))

(define-public crate-qiniu-upload-token-0.0.5 (c (n "qiniu-upload-token") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1zzrvj85bzka4gwgxspix11qddglwd8hdcaqznvwdz13ajym4dg3") (f (quote (("docs") ("default" "qiniu-credential") ("async" "qiniu-credential/async" "futures")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-upload-token-0.0.6 (c (n "qiniu-upload-token") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10ya5mlhn5ym312bznfgx8zjiiin7yqdibriar6y0jlm32h7qk80") (f (quote (("docs") ("default" "qiniu-credential") ("async" "qiniu-credential/async" "futures")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-upload-token-0.0.7 (c (n "qiniu-upload-token") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10xc5a31a2dnhd5x0cingjjv46b8jjcx40cd20z0nnmyx85l624c") (f (quote (("docs") ("default" "qiniu-credential") ("async" "qiniu-credential/async" "futures")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-upload-token-0.0.8 (c (n "qiniu-upload-token") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13kkamy2943y42f32m2n9lp14hxilk08skrw7dm1by89vxsnh8qx") (f (quote (("docs") ("default" "qiniu-credential") ("async" "qiniu-credential/async" "futures")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-upload-token-0.0.9 (c (n "qiniu-upload-token") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.0.9") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14kwqgvwlinbslcmbfkcxwy3llg91vih3v08j461h1ws5r5rxn2p") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (y #t) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.1.0 (c (n "qiniu-upload-token") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.1.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jhhsrayhnnbdik0b8z22q4w8zzz0mqh2jgh6v81j3g13mwp7fbb") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.1.1 (c (n "qiniu-upload-token") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.1.1") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0cc9rjjklz5168awaxs4dn573akwhrca0qm0s0p6chza02fd19nm") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.1.2 (c (n "qiniu-upload-token") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.1.2") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0yr4bk4lkbpgxg5kbhq06wnmrpzdwamfglm41cr5rlzwyg6pr76y") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.1.3 (c (n "qiniu-upload-token") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.1.3") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1zlflg54zxkd5nig8r6ap87bx0dghbzgc6y1nwm3j4vj5alqdxk0") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.1.4 (c (n "qiniu-upload-token") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.1.4") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bp40xr48shax79vp2np01h8yy6hg1n30nfkfvi7818lhwmyaiiz") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.2.0 (c (n "qiniu-upload-token") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.2.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qriz87wcc0bpnpch19f5qfpb2v47d7gh3pg34kxx9hw3xm3zyvr") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.2.1 (c (n "qiniu-upload-token") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.2.1") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a0zzcx550yns88w22jk4315jg3mhdbwgch4m7baz6cbb99jajs4") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.2.2 (c (n "qiniu-upload-token") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.2.2") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1sjwsqb04lyxiq4aanmfyc84xgns0gwqd80xpps4a80inxnk56k9") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.2.3 (c (n "qiniu-upload-token") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.2.3") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0pqxjg51fm82q0jvxagr229q762vhlxqgrh5nc8wssnivvsb177n") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.60.0")))

(define-public crate-qiniu-upload-token-0.2.4 (c (n "qiniu-upload-token") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.2.7") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "qiniu-credential") (r "^0.2.4") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02xjlgc1zh1pgli525365z0f98581yp2iz285l9plmsmwsqyy5yg") (f (quote (("docs") ("default") ("async" "qiniu-credential/async" "futures")))) (r "1.70.0")))

