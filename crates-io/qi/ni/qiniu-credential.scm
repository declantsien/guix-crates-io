(define-module (crates-io qi ni qiniu-credential) #:use-module (crates-io))

(define-public crate-qiniu-credential-0.0.5 (c (n "qiniu-credential") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0py80d9sryxlg29xwp7q49cj28iwg6qjlxc1nn86ygiybgfsi48x") (f (quote (("docs") ("default") ("async" "futures-lite")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-credential-0.0.6 (c (n "qiniu-credential") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0lwraxnscab3plyhf0q5wh7sswn0iwbg8ccs0mqpbw609kn53xx3") (f (quote (("docs") ("default") ("async" "futures-lite")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-credential-0.0.7 (c (n "qiniu-credential") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "1lis2p3njn3gd6m4p7m0nn768ckmfv213mijl4zas4pcn1w12a3n") (f (quote (("docs") ("default") ("async" "futures-lite")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-credential-0.0.8 (c (n "qiniu-credential") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "14qdnk6fwvn48gwmik4k644sax9m2xic9vpmg169x7n4q3zrjv2r") (f (quote (("docs") ("default") ("async" "futures-lite")))) (y #t) (r "1.56.0")))

(define-public crate-qiniu-credential-0.0.9 (c (n "qiniu-credential") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0j43y2q0w032jyixskarvcb4p59sm1fgxrzvr9a3czk45gjll1yh") (f (quote (("docs") ("default") ("async" "futures-lite")))) (y #t) (r "1.60.0")))

(define-public crate-qiniu-credential-0.1.0 (c (n "qiniu-credential") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "05cwjm0sivf8dcnl5nbny0sqyiy29cszb05r5hf1bkkhm9p87yw8") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.1.1 (c (n "qiniu-credential") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0xixm3025gscxrk7hcjjcn05v6g5jp0mzhkhi9ja1kkbx38xhr22") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.1.2 (c (n "qiniu-credential") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^0.5.1") (d #t) (k 0) (p "bachue-auto_impl")) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0mm88zap49ldbllrvv31jwfhny0sxhjg2iz7sdd3gyq6v3jrc4rx") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.1.3 (c (n "qiniu-credential") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "17njzr737dgqqsk1cqp5lfa56672y5l2jjqw7k118kldxy5d50js") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.1.4 (c (n "qiniu-credential") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "1s89fcakfljyd2gpjrzzh4qr70sch0ay7jyzazfmwrm4rfm0fjl1") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.2.0 (c (n "qiniu-credential") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "1j1k8bjx575ijkp95kilrjssxx2p377bwk2ad5811ksrc5gm8s7g") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.2.1 (c (n "qiniu-credential") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "0zim0frfg3pn8r02bywh46lj1mgk4himzrzdz05800llmfzrkfsw") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.2.2 (c (n "qiniu-credential") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "07lvsksch1blqr4bxpk1gkagcbj01h2i7348rhhvyc759ikyyirz") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.2.3 (c (n "qiniu-credential") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "1is9kfi9abyh0vwq30mx0bd6cjg038lbh04f3jz121axsbk457bd") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.60.0")))

(define-public crate-qiniu-credential-0.2.4 (c (n "qiniu-credential") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 2)) (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1.0.1") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "qiniu-utils") (r "^0.2.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha-1") (r "^0.9.6") (d #t) (k 0)))) (h "1ylqz9bks3z4xww1z5s2kbvh7c17wcjwn3k2wcif9dh584iys8zw") (f (quote (("docs") ("default") ("async" "futures-lite")))) (r "1.70.0")))

