(define-module (crates-io qi ni qiniu-ng) #:use-module (crates-io))

(define-public crate-qiniu-ng-0.0.1 (c (n "qiniu-ng") (v "0.0.1") (d (list (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.0") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "crc") (r "^1.8.1") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.8.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "qiniu-http") (r "^0.0.1") (d #t) (k 0)) (d (n "qiniu-multipart") (r "^0.16.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "qiniu-test-utils") (r "^0.0.1") (d #t) (k 2)) (d (n "qiniu-with-libcurl") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1xba41inzaywz4bgn7fv5yxvf99n6gbc2mx4cap0jyhifbdmms6v") (f (quote (("use-libcurl" "qiniu-with-libcurl") ("default")))) (y #t)))

(define-public crate-qiniu-ng-0.0.2 (c (n "qiniu-ng") (v "0.0.2") (d (list (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.0") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "crc") (r "^1.8.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7.0") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "qiniu-http") (r "^0.0.2") (d #t) (k 0)) (d (n "qiniu-multipart") (r "^0.16.2") (f (quote ("client"))) (k 0)) (d (n "qiniu-test-utils") (r "^0.0.2") (d #t) (k 2)) (d (n "qiniu-with-libcurl") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 0)) (d (n "sys-info") (r "^0.5.8") (d #t) (k 0)) (d (n "tap") (r "^0.4.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1r1k8m8zgypngqldkb590pd0xn7bzzpxvl42fvhig6y1n9dwzarz") (f (quote (("use-libcurl" "qiniu-with-libcurl") ("default")))) (y #t)))

(define-public crate-qiniu-ng-0.0.3 (c (n "qiniu-ng") (v "0.0.3") (d (list (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.0") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.8") (d #t) (k 2)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "crc") (r "^1.8.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7.0") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "qiniu-http") (r "=0.0.3") (d #t) (k 0)) (d (n "qiniu-multipart") (r "^0.16.2") (f (quote ("client"))) (k 0)) (d (n "qiniu-test-utils") (r "=0.0.3") (d #t) (k 2)) (d (n "qiniu-with-libcurl") (r "=0.0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 0)) (d (n "sys-info") (r "=0.5.8") (d #t) (k 0)) (d (n "tap") (r "^0.4.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1jl4abzw07wkvccywj17lxpda4s7fm3g4rjyw34m4iwh19id3vkn") (f (quote (("use-libcurl" "qiniu-with-libcurl") ("default")))) (y #t)))

(define-public crate-qiniu-ng-0.0.4 (c (n "qiniu-ng") (v "0.0.4") (d (list (d (n "assert-impl") (r "^0.1.3") (d #t) (k 0)) (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.0") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.8") (d #t) (k 2)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "crc") (r "^1.8.1") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7.0") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "qiniu-http") (r "=0.0.3") (d #t) (k 0)) (d (n "qiniu-multipart") (r "^0.16.2") (f (quote ("client"))) (k 0)) (d (n "qiniu-test-utils") (r "=0.0.3") (d #t) (k 2)) (d (n "qiniu-with-libcurl") (r "=0.0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rayon") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 0)) (d (n "sys-info") (r "=0.5.8") (d #t) (k 0)) (d (n "tap") (r "^0.4.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1a6z5vgdmv0jhc5x4vj7axy0id7sci9phazgdzx2crqjmk0kzjms") (f (quote (("use-libcurl" "qiniu-with-libcurl") ("default")))) (y #t)))

