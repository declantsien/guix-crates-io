(define-module (crates-io qi np qinpel-srv) #:use-module (crates-io))

(define-public crate-qinpel-srv-0.1.0 (c (n "qinpel-srv") (v "0.1.0") (d (list (d (n "actix-files") (r "^0.5") (d #t) (k 0)) (d (n "actix-web") (r "^3") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.18") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-rustls" "all"))) (d #t) (k 0)))) (h "12lm3387h9p2ciycz28k2kybhb4cxyca917b64x97c079nza5p1b")))

(define-public crate-qinpel-srv-0.2.1 (c (n "qinpel-srv") (v "0.2.1") (d (list (d (n "actix-files") (r "^0.5") (d #t) (k 0)) (d (n "actix-web") (r "^3") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "liz") (r "^0.1.22") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.18") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-rustls" "all"))) (d #t) (k 0)))) (h "0pbbv3xv4hdvc2lxglxriqgby390p8zj0qs2dvil0hyp8i33d7a5")))

