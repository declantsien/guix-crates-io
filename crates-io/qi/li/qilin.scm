(define-module (crates-io qi li qilin) #:use-module (crates-io))

(define-public crate-qilin-0.1.0 (c (n "qilin") (v "0.1.0") (d (list (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "minifb") (r "^0.24.0") (d #t) (k 0)) (d (n "mint") (r "^0.5.9") (d #t) (k 0)))) (h "1gysl7yx19fj3gq0wpij1z9kv1wz4aahms2dmw4vdyjcc8qjni3f") (f (quote (("minifb") ("default")))) (s 2) (e (quote (("image" "dep:image" "image/bmp" "image/jpeg" "image/png" "image/ico"))))))

(define-public crate-qilin-0.2.0 (c (n "qilin") (v "0.2.0") (d (list (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "minifb") (r "^0.24.0") (d #t) (k 0)) (d (n "mint") (r "^0.5.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (o #t) (k 0)))) (h "1cccmv1yj82i4g2k2alnnpp01vsjw31g3svvmbwgs4h87xdg634p") (f (quote (("minifb") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "mint/serde" "serde/derive") ("image" "dep:image" "image/bmp" "image/jpeg" "image/png" "image/ico"))))))

(define-public crate-qilin-0.2.1 (c (n "qilin") (v "0.2.1") (d (list (d (n "hashbrown") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "minifb") (r "^0.24.0") (d #t) (k 0)) (d (n "mint") (r "^0.5.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (o #t) (d #t) (k 0)))) (h "0fkz61cb56kkxiwa2z76fr50ji8s320rcfz7w8jfx5b1kg1k200p") (f (quote (("store" "serde" "hashbrown/serde") ("minifb") ("default" "store")))) (s 2) (e (quote (("serde" "dep:serde" "mint/serde" "serde/derive" "serde/std" "serde_json") ("image" "dep:image" "image/bmp" "image/jpeg" "image/png" "image/ico"))))))

(define-public crate-qilin-0.3.1 (c (n "qilin") (v "0.3.1") (d (list (d (n "fontdue") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "kira") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "minifb") (r "^0.24.0") (d #t) (k 0)) (d (n "mint") (r "^0.5.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (o #t) (d #t) (k 0)))) (h "0mszf2qlaw1xbvw66hckw48v9dr1yp5pvvrsl26fkp8hh79559ln") (f (quote (("store" "serde" "hashbrown/serde") ("minifb") ("default" "store")))) (s 2) (e (quote (("text" "dep:fontdue") ("serde" "dep:serde" "mint/serde" "serde/derive" "serde/std" "serde_json") ("image" "dep:image" "image/bmp" "image/jpeg" "image/png" "image/ico") ("audio" "dep:kira"))))))

(define-public crate-qilin-0.3.2 (c (n "qilin") (v "0.3.2") (d (list (d (n "fontdue") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (k 0)) (d (n "kira") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "minifb") (r "^0.24.0") (d #t) (k 0)) (d (n "mint") (r "^0.5.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (o #t) (d #t) (k 0)))) (h "0qpm3bvff67lcrx0d7sqx0w50pfxi316awz86w6ijr4qn9r5qclb") (f (quote (("store" "serde" "hashbrown/serde") ("minifb") ("default" "store")))) (s 2) (e (quote (("text" "dep:fontdue") ("serde" "dep:serde" "mint/serde" "serde/derive" "serde/std" "serde_json") ("image" "dep:image" "image/bmp" "image/jpeg" "image/png" "image/ico") ("audio" "dep:kira"))))))

