(define-module (crates-io ni ck nickel-lang-lsp) #:use-module (crates-io))

(define-public crate-nickel-lang-lsp-0.1.0 (c (n "nickel-lang-lsp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.6") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1s6g57h5x47s67g7xq57g32by1m7iyjjagxqjz77jzmv89dsr2sh")))

(define-public crate-nickel-lang-lsp-0.2.0 (c (n "nickel-lang-lsp") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.6") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang") (r "^0.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0rmlw0p630lcnmhdkd8wzmvaqj6qv0749v3757r405kj4xscxx4s")))

(define-public crate-nickel-lang-lsp-0.2.1 (c (n "nickel-lang-lsp") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.6") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0z5zx6sh6hf5sy4qpr4j2wb4g9m197zsgf5wxd8j1z581qz3xrjx")))

(define-public crate-nickel-lang-lsp-1.0.0 (c (n "nickel-lang-lsp") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.6") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang") (r "^1.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0350wq4z2lwijvpdwgaijszf3g9cqwlb39id6w1803mbaiajhsan")))

(define-public crate-nickel-lang-lsp-1.1.1 (c (n "nickel-lang-lsp") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.1") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)))) (h "0lbhln5wvwj5gzz6k5x4fklixz7svbqgx67l5w8bh9vhbp7zg9ag")))

(define-public crate-nickel-lang-lsp-1.2.0 (c (n "nickel-lang-lsp") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "1a6f6hqsn5mrjbj698q03hb0zih7wvl62468m9v15izhahb699m0") (f (quote (("format"))))))

(define-public crate-nickel-lang-lsp-1.2.1 (c (n "nickel-lang-lsp") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.2") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "03pjppdm1q1zp2pnd7m7mj5j8dq31n7l3lkakajin3558bl587v0") (f (quote (("format"))))))

(define-public crate-nickel-lang-lsp-1.3.0 (c (n "nickel-lang-lsp") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "03xdm70wwjxq2bih5hc2wc8mrb58qc0793vh3jyn62v8qzzrkb1l") (f (quote (("format"))))))

(define-public crate-nickel-lang-lsp-1.4.0 (c (n "nickel-lang-lsp") (v "1.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.4.0") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "1igipa2j20pbj2f5z0cwl2ad04cwh4q04mznb9miwg0npvwd2m77") (f (quote (("default"))))))

(define-public crate-nickel-lang-lsp-1.4.1 (c (n "nickel-lang-lsp") (v "1.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-lsp") (r "^0.11") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.88") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.5.0") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "0sp4pmwlq18wszzc39w09axzcs98psky3kqaxbf533z2x1kn1z9h") (f (quote (("default"))))))

(define-public crate-nickel-lang-lsp-1.5.0 (c (n "nickel-lang-lsp") (v "1.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.4") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "ipc-channel") (r "^0.18.0") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (k 0)) (d (n "lsp-types") (r "^0.95") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.6.0") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "0z3hkvklbc1dd6alfg2c2n4p16hcrsgjmfj71rcdglha5223sxqb") (f (quote (("default"))))))

(define-public crate-nickel-lang-lsp-1.6.0 (c (n "nickel-lang-lsp") (v "1.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.4") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "lalrpop") (r "^0.19.9") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (k 0)) (d (n "lsp-types") (r "^0.95") (d #t) (k 0)) (d (n "nickel-lang-core") (r "^0.7.0") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "01f75iss3rj82bndz0dmiag5mjwx6vjw4pwpjq6pgd1x31k08rh0") (f (quote (("default"))))))

