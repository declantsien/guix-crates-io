(define-module (crates-io ni mi nimiq-messages) #:use-module (crates-io))

(define-public crate-nimiq-messages-0.1.0 (c (n "nimiq-messages") (v "0.1.0") (d (list (d (n "beserial") (r "^0.1") (d #t) (k 0)) (d (n "beserial_derive") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-hash") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-macros") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.1") (f (quote ("networks" "subscription" "version"))) (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-tree-primitives") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.1") (f (quote ("observer" "crc" "time"))) (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.1") (f (quote ("observer" "crc" "time" "iterators"))) (d #t) (k 2)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)))) (h "1gq3wh5alsdcc1lid4vdl2ckhb32k6gn4dfw0a8aii0bch82hqsc")))

(define-public crate-nimiq-messages-0.2.0 (c (n "nimiq-messages") (v "0.2.0") (d (list (d (n "beserial") (r "^0.2") (d #t) (k 0)) (d (n "beserial_derive") (r "^0.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-hash") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-macros") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.2") (f (quote ("networks" "subscription" "version"))) (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-tree-primitives") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.2") (f (quote ("observer" "crc" "time"))) (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.2") (f (quote ("observer" "crc" "time" "iterators"))) (d #t) (k 2)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)))) (h "11cvr9ijq54bmx2m2ap6kffca3skdpsjsvszv1h49pxlfg5r0x35")))

