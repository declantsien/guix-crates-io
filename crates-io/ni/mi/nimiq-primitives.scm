(define-module (crates-io ni mi nimiq-primitives) #:use-module (crates-io))

(define-public crate-nimiq-primitives-0.0.0 (c (n "nimiq-primitives") (v "0.0.0") (h "1frqfq5wry86vq63va4cb8s4n4znnfriprslihi542j610w8ag4x")))

(define-public crate-nimiq-primitives-0.1.0 (c (n "nimiq-primitives") (v "0.1.0") (d (list (d (n "beserial") (r "^0.1") (d #t) (k 0)) (d (n "beserial_derive") (r "^0.1") (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixed-unsigned") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "nimiq-macros") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1w9d75x3lxpgpk1blya1spl33xb5vqv6w6q7jr7k5sm4jv1cq36q") (f (quote (("policy" "num-bigint" "num-traits" "parking_lot" "lazy_static" "fixed-unsigned") ("networks") ("default" "all") ("coin" "hex" "failure") ("all" "coin" "account" "policy" "networks") ("account" "hex" "nimiq-macros" "failure" "enum-display-derive"))))))

(define-public crate-nimiq-primitives-0.2.0 (c (n "nimiq-primitives") (v "0.2.0") (d (list (d (n "beserial") (r "^0.2") (d #t) (k 0)) (d (n "beserial_derive") (r "^0.2") (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fixed-unsigned") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "nimiq-macros") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1xn6wdnm1pg90rdipba759nld7pl4xf4dr263jyrwindrg573hb1") (f (quote (("policy" "num-bigint" "num-traits" "parking_lot" "lazy_static" "fixed-unsigned") ("networks") ("default" "all") ("coin" "hex" "failure") ("all" "coin" "account" "policy" "networks") ("account" "hex" "nimiq-macros" "failure" "enum-display-derive"))))))

