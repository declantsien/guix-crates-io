(define-module (crates-io ni mi nimiq-block-production) #:use-module (crates-io))

(define-public crate-nimiq-block-production-0.1.0 (c (n "nimiq-block-production") (v "0.1.0") (d (list (d (n "beserial") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-account") (r "^0.1") (d #t) (k 2)) (d (n "nimiq-block") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-database") (r "^0.1") (d #t) (k 2)) (d (n "nimiq-hash") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-mempool") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.1") (f (quote ("networks"))) (d #t) (k 0)) (d (n "nimiq-primitives") (r "^0.1") (d #t) (k 2)) (d (n "nimiq-transaction") (r "^0.1") (d #t) (k 2)))) (h "05001mc3gviihc4yg187y62pvdwjpgpbzgpqbpahhdq60z2fkmk0")))

(define-public crate-nimiq-block-production-0.2.0 (c (n "nimiq-block-production") (v "0.2.0") (d (list (d (n "beserial") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-account") (r "^0.2") (d #t) (k 2)) (d (n "nimiq-block") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-database") (r "^0.2") (d #t) (k 2)) (d (n "nimiq-hash") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-mempool") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.2") (f (quote ("networks"))) (d #t) (k 0)) (d (n "nimiq-primitives") (r "^0.2") (d #t) (k 2)) (d (n "nimiq-transaction") (r "^0.2") (d #t) (k 2)))) (h "0bhlkzxjbq800x50yz6g79zida2545qgk2lqc8gqqrmixihv4dmh")))

