(define-module (crates-io ni mi nimiq-rpc-server) #:use-module (crates-io))

(define-public crate-nimiq-rpc-server-0.0.0 (c (n "nimiq-rpc-server") (v "0.0.0") (h "1qwp66wqyhdajjwqldq89zmcym78b7ib4m8nslb6mk06rgp3qx87")))

(define-public crate-nimiq-rpc-server-0.1.0 (c (n "nimiq-rpc-server") (v "0.1.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "beserial") (r "^0.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "json") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-block-production") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-consensus") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-hash") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-mempool") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-network") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.1") (f (quote ("merkle" "time"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)))) (h "1x4klvpnd2fabx8p7hqi0axryck5fm452awlhb8xkp21f5lr8qvg")))

(define-public crate-nimiq-rpc-server-0.2.0 (c (n "nimiq-rpc-server") (v "0.2.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "beserial") (r "^0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "json") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-block-production") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-consensus") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-hash") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-mempool") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-network") (r "^0.2") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.2") (f (quote ("merkle" "time"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)))) (h "0g31952apfh7jz31dszlmybyly68zygwk63byjaz5qcjxgyhfq1d")))

