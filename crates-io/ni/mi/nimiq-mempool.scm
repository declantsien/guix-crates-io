(define-module (crates-io ni mi nimiq-mempool) #:use-module (crates-io))

(define-public crate-nimiq-mempool-0.0.0 (c (n "nimiq-mempool") (v "0.0.0") (h "1xja4fnsz8rjh5vwbj2pxa0cybfgxwl32k6g3r240mzir96rsg1i")))

(define-public crate-nimiq-mempool-0.1.0 (c (n "nimiq-mempool") (v "0.1.0") (d (list (d (n "beserial") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nimiq-account") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-accounts") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-collections") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-database") (r "^0.1") (d #t) (k 2)) (d (n "nimiq-hash") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.1") (d #t) (k 2)) (d (n "nimiq-primitives") (r "^0.1") (f (quote ("coin" "networks"))) (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.1") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.1") (f (quote ("observer" "timers" "mutable-once"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)))) (h "05vgva4lff1bshg8dazz6d2sx6yl6fbkim4gf9a07ij85cqp247m")))

(define-public crate-nimiq-mempool-0.2.0 (c (n "nimiq-mempool") (v "0.2.0") (d (list (d (n "beserial") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nimiq-account") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-accounts") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-block") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-blockchain") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-collections") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-database") (r "^0.2") (d #t) (k 2)) (d (n "nimiq-hash") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-keys") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-network-primitives") (r "^0.2") (d #t) (k 2)) (d (n "nimiq-primitives") (r "^0.2") (f (quote ("coin" "networks"))) (d #t) (k 0)) (d (n "nimiq-transaction") (r "^0.2") (d #t) (k 0)) (d (n "nimiq-utils") (r "^0.2") (f (quote ("observer" "timers" "mutable-once"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)))) (h "13zbcnypylqg7ji21li50hfs8lp24phq9cv4sapzpcy4r6vn014c")))

