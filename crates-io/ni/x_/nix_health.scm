(define-module (crates-io ni x_ nix_health) #:use-module (crates-io))

(define-public crate-nix_health-0.1.0 (c (n "nix_health") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)))) (h "14cl5wa0d0zabipdprjhrmkk82cw03vvs0na365wz3vc9ksjscgd") (s 2) (e (quote (("ssr" "dep:tokio" "dep:anyhow" "dep:colored" "nix_rs/ssr"))))))

(define-public crate-nix_health-0.2.0 (c (n "nix_health") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "which") (r "^4.4.2") (o #t) (d #t) (k 0)))) (h "06zqz2cq2sdxm7gz8fdkkk2nk66yf41iizqj75bwr18np058im5p") (s 2) (e (quote (("ssr" "dep:clap" "dep:tokio" "dep:anyhow" "dep:colored" "dep:which" "nix_rs/ssr"))))))

(define-public crate-nix_health-0.2.1 (c (n "nix_health") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "which") (r "^4.4.2") (o #t) (d #t) (k 0)))) (h "0vaqjxbj6hwj82fg36rd52sw1aljsrpc8finn08hkck8mzixkk70") (s 2) (e (quote (("ssr" "dep:clap" "dep:tokio" "dep:anyhow" "dep:colored" "dep:which" "nix_rs/ssr"))))))

(define-public crate-nix_health-0.2.2 (c (n "nix_health") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "which") (r "^4.4.2") (d #t) (k 0)))) (h "0djjhn2nx6q4c45c2nzs6313g43gsd6va3269abqry0252389s5f")))

(define-public crate-nix_health-0.2.3 (c (n "nix_health") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "which") (r "^4.4.2") (d #t) (k 0)))) (h "1w7fiwznmk6mqd383cdw6zffsyzmw71gaxnhwzkfmkl7khgx49rc")))

(define-public crate-nix_health-0.3.0 (c (n "nix_health") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "direnv") (r "^0.1.1") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "nix_rs") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.18") (d #t) (k 0)) (d (n "serde_with") (r "^3.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "which") (r "^4.4.2") (d #t) (k 0)))) (h "1gs2hppn9hbmlcxqm8akm1yxf1ccss6pvpkfy9d8liaz60sxm3b2")))

