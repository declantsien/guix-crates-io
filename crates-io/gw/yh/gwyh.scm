(define-module (crates-io gw yh gwyh) #:use-module (crates-io))

(define-public crate-gwyh-0.1.0 (c (n "gwyh") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (k 0)) (d (n "dryoc") (r "^0.5") (f (quote ("nightly" "serde" "simd_backend"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "genserver") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lru") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (f (quote ("simd"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("log" "trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (d #t) (k 2)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "fast-rng" "serde"))) (d #t) (k 0)))) (h "03fya5fhrsf8d4yfcsl6ylpn5lsbl7s86axqa4lafbjv1xfab6wz") (r "1.77")))

