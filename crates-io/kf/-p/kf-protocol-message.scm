(define-module (crates-io kf -p kf-protocol-message) #:use-module (crates-io))

(define-public crate-kf-protocol-message-0.1.0 (c (n "kf-protocol-message") (v "0.1.0") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.4.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^0.1.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "types") (r "^0.1.0") (d #t) (k 0) (p "flv-types")))) (h "13lhyqqxx7zn2y37i0vrcs75ibcx6x9shbwf5mqv6inxjda4jcm1")))

(define-public crate-kf-protocol-message-0.1.1 (c (n "kf-protocol-message") (v "0.1.1") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.2.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^0.1.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)))) (h "03a7lvvykcr54qh668k97cnn23c93znvpx82mvwzj8i0x7hni64m")))

(define-public crate-kf-protocol-message-1.0.0 (c (n "kf-protocol-message") (v "1.0.0") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.2.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^1.0.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)))) (h "0fq673krzba2sjw0jrgj0hkpdrpd85b0z2jycmybdn57apbzl6cl")))

(define-public crate-kf-protocol-message-1.0.1 (c (n "kf-protocol-message") (v "1.0.1") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.2.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^1.0.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)))) (h "0w0bi3yxanprvn9mqskrx1jffl0lrfhcryhv43rp11d1xycpl2zx")))

(define-public crate-kf-protocol-message-1.0.2 (c (n "kf-protocol-message") (v "1.0.2") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "flv-util") (r "^0.2.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^1.0.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)))) (h "1a3fjmvdi2cas74frxmqgyn0jw3kw05dgb02kzi48fpbvnnw93fx")))

(define-public crate-kf-protocol-message-2.0.0 (c (n "kf-protocol-message") (v "2.0.0") (d (list (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "flv-util") (r "^0.4.0") (d #t) (k 0)) (d (n "kf-protocol") (r "^0.1.0") (d #t) (k 0) (p "kf-protocol-core")) (d (n "kf-protocol-api") (r "^2.0.0") (d #t) (k 0)) (d (n "kf-protocol-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)))) (h "1chli16w5k0ymfb8hls2gckbzcpwkfwy0fl8s66zqh4aqxb6bnrb")))

