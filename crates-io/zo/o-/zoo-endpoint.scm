(define-module (crates-io zo o- zoo-endpoint) #:use-module (crates-io))

(define-public crate-zoo-endpoint-0.1.0 (c (n "zoo-endpoint") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 2)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 2)) (d (n "rustfmt-wrapper") (r "^0.2.1") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_tokenstream") (r "^0.2") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1hs3g0c1k83509m12p0gclm9j2i9867s9iz3144qjag9vq7ww5lq")))

(define-public crate-zoo-endpoint-0.1.1 (c (n "zoo-endpoint") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 2)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 2)) (d (n "rustfmt-wrapper") (r "^0.2.1") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_tokenstream") (r "^0.2") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)))) (h "10pcdsw1h3sjq5glhc4j2i9z8z66adcz930wm8bfjvi33mdqqsy5")))

(define-public crate-zoo-endpoint-0.1.2 (c (n "zoo-endpoint") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 2)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 2)) (d (n "rustfmt-wrapper") (r "^0.2.1") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_tokenstream") (r "^0.2") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1y79qzkp277mcc1vga2f1gqfgks44clxblqj4nr6m4lyzcr9jjlj")))

