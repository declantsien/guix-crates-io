(define-module (crates-io sk ip skip_ratchet) #:use-module (crates-io))

(define-public crate-skip_ratchet-0.1.0 (c (n "skip_ratchet") (v "0.1.0") (d (list (d (n "base64") (r "=0.13.0") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "rand") (r "=0.6.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "=0.10.0") (d #t) (k 0)))) (h "0n9a4nqx4fjbhclrfva2ywcsvb8m8i845sppqy0i818b5rrb74jd") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-skip_ratchet-0.1.1 (c (n "skip_ratchet") (v "0.1.1") (d (list (d (n "base64") (r "=0.13.0") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "=0.6.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "=0.10.0") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)))) (h "1ylqrzx4c72b97170qylcxwx8z7a1phdsb34axz9m0a0pk0g7067") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-skip_ratchet-0.1.2 (c (n "skip_ratchet") (v "0.1.2") (d (list (d (n "base64") (r "=0.13.0") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "=0.6.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "=0.10.0") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)))) (h "0c1cgky3qksbmchdm0ivr3h03ll0vgmxjb7hdc1wkylnjnzf9vvk") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-skip_ratchet-0.1.6 (c (n "skip_ratchet") (v "0.1.6") (d (list (d (n "base64") (r "=0.13.0") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "=0.6.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "=0.10.0") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)))) (h "0yamlabkr5skaxch1scx8krp6qbskxfrrk63303gw4vgm3w43vhn") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-skip_ratchet-0.2.1 (c (n "skip_ratchet") (v "0.2.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)))) (h "0wf26hna98rqjkfhf3y2rv9ca94i5g736iaqvax1gf3i0sp6smwx") (s 2) (e (quote (("serde" "dep:serde" "dep:serde_bytes"))))))

(define-public crate-skip_ratchet-0.3.0 (c (n "skip_ratchet") (v "0.3.0") (d (list (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)))) (h "1ds1j71flksk2793r1n1hda515p3yc3nx0cvalg0lv36rgw42prr") (s 2) (e (quote (("serde" "dep:serde" "dep:serde_bytes"))))))

