(define-module (crates-io sk ar skar-client) #:use-module (crates-io))

(define-public crate-skar-client-0.1.0 (c (n "skar-client") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zpfpb64w5pzbip0zk1iibm80jywg6kjvapj05yabldz8avwsigd")))

(define-public crate-skar-client-0.2.0 (c (n "skar-client") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "14rfq0iym7w0m3l5spappm0xdxvy1zfdkjv1a7s9xs7dq8q3xnpm")))

(define-public crate-skar-client-0.2.1 (c (n "skar-client") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "134j230n84i37c4652fmxv3kxnb5b6za9ij9hli00z2b3zx8bbsf")))

(define-public crate-skar-client-0.2.2 (c (n "skar-client") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bdjcfdg8p9l1nn20ni2xd2kknsrpp4sn7r1j6b5cg2w52q31x3g")))

(define-public crate-skar-client-0.3.0 (c (n "skar-client") (v "0.3.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.0.1") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1jnpp4cwjb6s3rb7hdvkzljsrvgzhgcrlyqls2c2mwsaaasqmi6h")))

(define-public crate-skar-client-0.4.0 (c (n "skar-client") (v "0.4.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0617kzhkp4rcacxrbgr8gr0m2d2nby031kh8rcvkwrhqfcmbhzzj")))

(define-public crate-skar-client-0.5.0 (c (n "skar-client") (v "0.5.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0lkjmzbqqi2alr1hlsqb7ddpxbj4yywwmnnm0hgy0zaram239yj1")))

(define-public crate-skar-client-0.5.1 (c (n "skar-client") (v "0.5.1") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "171a81p89wpzyiid96c8y4hwgxbgn6s3canp5gsrj8gpy1a9pyl4")))

(define-public crate-skar-client-0.5.2 (c (n "skar-client") (v "0.5.2") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0mg2ml9clr1kwrpri3raw38pmcdmzs4nnmmj1aniqxf1087ys2bx")))

(define-public crate-skar-client-0.5.3 (c (n "skar-client") (v "0.5.3") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1l5winf6p8ki6801ii1pl0bk7f1sjbrychpmkfcl5grd33y9gr4i")))

(define-public crate-skar-client-0.6.0 (c (n "skar-client") (v "0.6.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0klyijbfjdjyawlxx998vs2amfzqmgg4d8v2p45gsbmjingfq0sl")))

(define-public crate-skar-client-0.7.0 (c (n "skar-client") (v "0.7.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1shadi0rpl2khm7ld921vqr7m08whwgk8g84g1xnrhw2rwcsp91w")))

(define-public crate-skar-client-0.8.0 (c (n "skar-client") (v "0.8.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1im35q6r542cbhplr1h7gdg3rnvs8r9jypm9yfd4mnx8ds0d67bz")))

(define-public crate-skar-client-0.9.0 (c (n "skar-client") (v "0.9.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "prefix-hex") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0df66jv63hp56k9dj2wxg7c1xar9f07r61yaj9djl2viv9kcd7zb")))

(define-public crate-skar-client-0.9.1 (c (n "skar-client") (v "0.9.1") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "prefix-hex") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "01pqsnci8vphrx6pnma5wmn8bsh09zixy0l02l0rnvacdc6y7m48")))

(define-public crate-skar-client-0.9.2 (c (n "skar-client") (v "0.9.2") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "prefix-hex") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1z4il624dsc00hwr9cnzf7jqw2lwgx6gammn7m8lb2078d2s3jxw")))

(define-public crate-skar-client-0.10.1 (c (n "skar-client") (v "0.10.1") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "prefix-hex") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1n4ibg7jhb77jc3b7wbxlhn0rv40x52374wllzm3dd200z61qmar")))

(define-public crate-skar-client-0.11.0 (c (n "skar-client") (v "0.11.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1hm5yp2h9xx0iapzj0b5m0b96jqqyi4aw42sdqfc8msldqrp0y10")))

(define-public crate-skar-client-0.12.0 (c (n "skar-client") (v "0.12.0") (d (list (d (n "alloy-dyn-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1sscrr13ar568722sqcnwvjzklp0mhj48hvrl368cs3mcx3j6kny")))

(define-public crate-skar-client-0.13.0 (c (n "skar-client") (v "0.13.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "160nrmx7byqqzgb6qxsf6ikdi35i31fppfrnd5gb4d4w92wyn7dg")))

(define-public crate-skar-client-0.13.1 (c (n "skar-client") (v "0.13.1") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0xvkawizs1f78ax0yqp4r1x0i2grbx9fnv9p8b8q9gkmwycs9mr2")))

(define-public crate-skar-client-0.13.2 (c (n "skar-client") (v "0.13.2") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.1.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "18f1zq5v5dxmz4fmrnrljh21sw7d7ls2yvhsqmwql3w7v009l439")))

(define-public crate-skar-client-0.14.0 (c (n "skar-client") (v "0.14.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1cvdsgd79v57lwf90rqxrnkb62icnb3hzmnifzkqpflsdlys0zdy")))

(define-public crate-skar-client-0.14.1 (c (n "skar-client") (v "0.14.1") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1i33391vnq4agzrggph6dz4gn7w50g2b9i3nq0h3mwnwsmqiil89")))

(define-public crate-skar-client-0.14.2 (c (n "skar-client") (v "0.14.2") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1lwlfv8bap8ivvnqsnav69vazzkh18fg559m0aflb9762cpxbr3k")))

(define-public crate-skar-client-0.14.3 (c (n "skar-client") (v "0.14.3") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "06kvakwg0p5izk0fdpyjv72ihdaii4vink6fb8i92kz5j9rv17y3")))

(define-public crate-skar-client-0.15.0 (c (n "skar-client") (v "0.15.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "17zajp1jya9i7vb21pyf1x9waic8d5594qik7rv6ds8jbx998f7m")))

(define-public crate-skar-client-0.16.0 (c (n "skar-client") (v "0.16.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0jb361ncsv5mgmw4vckz6ixxq18l12n082rkyi898gnz258vscsh")))

(define-public crate-skar-client-0.16.1 (c (n "skar-client") (v "0.16.1") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0zxyira45sm92y212msrx0h8pwhinzs6g43as0mxy0km6piylyix")))

(define-public crate-skar-client-0.16.2 (c (n "skar-client") (v "0.16.2") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1si1iqcmr45yxq4hmf4sirwnm5ma4sladbg3fxl0klbdlrpyr88r")))

(define-public crate-skar-client-0.16.3 (c (n "skar-client") (v "0.16.3") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json" "io_ipc" "io_ipc_compression" "io_parquet_zstd" "io_parquet_lz4" "io_parquet" "compute_cast"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0zxl21d1pv2wvhf7igaw1f7nw72bb6g1yk2yihzqppb7vxgf72lx")))

(define-public crate-skar-client-0.17.0 (c (n "skar-client") (v "0.17.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.38") (f (quote ("io_ipc" "io_ipc_compression" "compute_take" "compute_boolean" "compute_comparison"))) (d #t) (k 0)) (d (n "polars-compute") (r "^0.38") (d #t) (k 0)) (d (n "polars-parquet") (r "^0.38") (f (quote ("compression" "async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.2.0") (d #t) (k 0)) (d (n "skar-schema") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "01p4fqd0dmimjhvbgbjsw6dcg08nmjwn5vp7pajqcwqjy23pc587")))

(define-public crate-skar-client-0.18.0 (c (n "skar-client") (v "0.18.0") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.38") (f (quote ("io_ipc" "io_ipc_compression" "compute_take" "compute_boolean" "compute_comparison"))) (d #t) (k 0)) (d (n "polars-compute") (r "^0.38") (d #t) (k 0)) (d (n "polars-parquet") (r "^0.38") (f (quote ("compression" "async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.3") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.3") (d #t) (k 0)) (d (n "skar-schema") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0myhkixq9acfrz9m9w77gf7k45clkj02lls7swggl567wsx47vx0")))

(define-public crate-skar-client-0.18.1 (c (n "skar-client") (v "0.18.1") (d (list (d (n "alloy-dyn-abi") (r "^0.6") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.38") (f (quote ("io_ipc" "io_ipc_compression" "compute_take" "compute_boolean" "compute_comparison"))) (d #t) (k 0)) (d (n "polars-compute") (r "^0.38") (d #t) (k 0)) (d (n "polars-parquet") (r "^0.38") (f (quote ("compression" "async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.3") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.3") (d #t) (k 0)) (d (n "skar-schema") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1dp26mw9fbarraf3qs7ciz582dv7rjbiq0cg7svmdk05vkcn55i7")))

(define-public crate-skar-client-0.18.2 (c (n "skar-client") (v "0.18.2") (d (list (d (n "alloy-dyn-abi") (r "^0.7") (d #t) (k 0)) (d (n "alloy-json-abi") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "fastrange-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.39") (f (quote ("io_ipc" "io_ipc_compression" "compute_take" "compute_boolean" "compute_comparison"))) (d #t) (k 0)) (d (n "polars-parquet") (r "^0.39") (f (quote ("compression" "async"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "ruint") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "skar-format") (r "^0.3") (d #t) (k 0)) (d (n "skar-net-types") (r "^0.3") (d #t) (k 0)) (d (n "skar-schema") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "fs" "test-util" "rt" "macros"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("compat"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1hy785kl68k7g7vlaa9jv0xwdrkm7nq4ldmkc2kzrpqlm1hixh5g")))

