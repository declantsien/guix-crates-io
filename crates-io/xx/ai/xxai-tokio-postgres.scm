(define-module (crates-io xx ai xxai-tokio-postgres) #:use-module (crates-io))

(define-public crate-xxai-tokio-postgres-0.7.8 (c (n "xxai-tokio-postgres") (v "0.7.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.4") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1xhmr002sw0b7wkg4sv0j35a3q77al7gig4xm5pd6qfglbl6x3mp") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.9 (c (n "xxai-tokio-postgres") (v "0.7.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.4") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "19hfkgwb74awk1px0p0xpd1c2chry8j1j53nv1i0vk6az0b7119q") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.10 (c (n "xxai-tokio-postgres") (v "0.7.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1nmylrsddymffc8cj3jks3ym9kl9kzvc5a570n4z44hjm311x34y") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.11 (c (n "xxai-tokio-postgres") (v "0.7.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.7") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1yjdm524y0lay6gjb1wr2dgxv87fmxwxjm1vfzsn3hc5sp4nz24r") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.12 (c (n "xxai-tokio-postgres") (v "0.7.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.8") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1rnzpl7nr9cx9v4ymrn30cnhah64wf0w1r7njdp85vawn49cjfbr") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.13 (c (n "xxai-tokio-postgres") (v "0.7.13") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.8") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "10xdmi02423z6s6g5gb352j4lx913xzxc08q4lawzr2lp4avz23y") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.14 (c (n "xxai-tokio-postgres") (v "0.7.14") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.8") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1jg1ma6sq8hp6i43vqb5c0cam1y2v5vjg8ky83pk36vws16ni4km") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-xxai-tokio-postgres-0.7.15 (c (n "xxai-tokio-postgres") (v "0.7.15") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-04") (r "^0.4") (d #t) (k 2) (p "eui48")) (d (n "eui48-1") (r "^1.0") (d #t) (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.5") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.9") (d #t) (k 0) (p "xxai-postgres-types")) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")))) (h "1wwai6npq09l05vgb55i5lfa7jsdzam8z697zzmbadsz35zc7b60") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

