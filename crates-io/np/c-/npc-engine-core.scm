(define-module (crates-io np c- npc-engine-core) #:use-module (crates-io))

(define-public crate-npc-engine-core-0.1.0 (c (n "npc-engine-core") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 2)) (d (n "bounded-integer") (r "^0.5.1") (f (quote ("types"))) (d #t) (k 2)) (d (n "cached") (r "^0.30") (d #t) (k 2)) (d (n "clearscreen") (r "^1.0.10") (d #t) (k 2)) (d (n "dot") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonmax") (r "^0.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.1") (k 2)) (d (n "ordered-float") (r "^3") (d #t) (k 0)) (d (n "palette") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1r8xljxfqsxzas9d9zziax8g2sl7q7wnhy086ns68wd1m7sj00mx") (f (quote (("graphviz" "dot" "palette") ("default"))))))

