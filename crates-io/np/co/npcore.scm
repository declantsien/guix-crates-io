(define-module (crates-io np co npcore) #:use-module (crates-io))

(define-public crate-npcore-0.1.0 (c (n "npcore") (v "0.1.0") (d (list (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9.0") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "faer") (r "^0.11.0") (f (quote ("nalgebra" "ndarray"))) (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (d #t) (k 0)) (d (n "faer-qr") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray-csv") (r "^0.5.2") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.1") (d #t) (k 0)) (d (n "ode_solvers") (r "^0.3.7") (d #t) (k 0)) (d (n "ratatui") (r "^0.23.0") (f (quote ("crossterm"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.159") (d #t) (k 0)) (d (n "sobol_burley") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1w3nna9k3xpw3a04197sl34j4blijy2ibicbsizwmkd02i5hlvv0")))

(define-public crate-npcore-0.1.1 (c (n "npcore") (v "0.1.1") (d (list (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.9.0") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "faer") (r "^0.11.0") (f (quote ("nalgebra" "ndarray"))) (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (d #t) (k 0)) (d (n "faer-qr") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray-csv") (r "^0.5.2") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.1") (d #t) (k 0)) (d (n "ode_solvers") (r "^0.3.7") (d #t) (k 0)) (d (n "ratatui") (r "^0.23.0") (f (quote ("crossterm"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.159") (d #t) (k 0)) (d (n "sobol_burley") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "12cbr3prhi2scid36nhpaj4cby4fxlnym4jk1va8xi7ldb5dyfcf")))

(define-public crate-npcore-0.1.2 (c (n "npcore") (v "0.1.2") (d (list (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (f (quote ("ndarray_v0_15-nolinalg-serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10.0") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "faer") (r "^0.15.0") (f (quote ("nalgebra" "ndarray"))) (d #t) (k 0)) (d (n "faer-core") (r "^0.15.0") (d #t) (k 0)) (d (n "faer-qr") (r "^0.16.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray-csv") (r "^0.5.2") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.1") (d #t) (k 0)) (d (n "ode_solvers") (r "^0.3.7") (d #t) (k 0)) (d (n "ratatui") (r "^0.25.0") (f (quote ("crossterm"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2.1") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (d #t) (k 0)) (d (n "sobol_burley") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "time"))) (d #t) (k 0)))) (h "1n6zyhn2yxz77ir262j98ck8lhy8x0b8ayvcgz2c45n7ny7y0ls2")))

(define-public crate-npcore-0.1.3 (c (n "npcore") (v "0.1.3") (d (list (d (n "argmin") (r "^0.9.0") (d #t) (k 0)) (d (n "argmin-math") (r "^0.3.0") (f (quote ("ndarray_v0_15-nolinalg-serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10.0") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "faer") (r "^0.15.0") (f (quote ("nalgebra" "ndarray"))) (d #t) (k 0)) (d (n "faer-core") (r "^0.15.0") (d #t) (k 0)) (d (n "faer-qr") (r "^0.16.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray-csv") (r "^0.5.2") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.1") (d #t) (k 0)) (d (n "ode_solvers") (r "^0.3.7") (d #t) (k 0)) (d (n "ratatui") (r "^0.25.0") (f (quote ("crossterm"))) (d #t) (k 0)) (d (n "rawpointer") (r "^0.2.1") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "sobol_burley") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt" "time"))) (d #t) (k 0)))) (h "1h4amcgkyivwffq1dcm7l38viw9zkxq9w3xpg320fcdhni82rdmn")))

