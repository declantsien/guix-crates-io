(define-module (crates-io pb s_ pbs_rsa) #:use-module (crates-io))

(define-public crate-pbs_rsa-0.1.0 (c (n "pbs_rsa") (v "0.1.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (f (quote ("rand" "i128" "u64_digit" "prime" "zeroize"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.42") (d #t) (k 0)) (d (n "num-iter") (r "^0.1.40") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "pem") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.89") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0.89") (d #t) (k 2)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 2)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "subtle") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.13") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("alloc" "zeroize_derive"))) (d #t) (k 0)))) (h "0ks2k8b9by1r0m04d1gx71mjc7ljr1qs0fplwjdn2rqvmmrwxs6g")))

