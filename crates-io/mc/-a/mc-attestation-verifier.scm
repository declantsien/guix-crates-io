(define-module (crates-io mc -a mc-attestation-verifier) #:use-module (crates-io))

(define-public crate-mc-attestation-verifier-0.1.0 (c (n "mc-attestation-verifier") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.5") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.7.1") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.7.1") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.66") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "1fhg888dn09byv6yg19yf3a2mjg032z1gvxkhfphj3gbp03lmnzl") (s 2) (e (quote (("x509" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.2.0 (c (n "mc-attestation-verifier") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.7.1") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.7.1") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "1ic3bh112wc6c8k1lr0hha85l3q0v2s6jbpx8yqyhyhynjd4fsvj") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.3.0 (c (n "mc-attestation-verifier") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.7.1") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.7.1") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "1r93hvk5gl0h6kg7mavplr975k3pggkiza7548fzpy0w1nw3589r") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.3.1 (c (n "mc-attestation-verifier") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.7.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.7.1") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.7.1") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "1bracsxzq14x70i3xcf5ac05rxy750zx7k0bkfk0hwpi904wmpkb") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.4.0 (c (n "mc-attestation-verifier") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.8.0") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.8.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.8.0") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.8.0") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "0a5m9xypzvf749c2ccksqgkhpbqc418gzdr8753a4ys1vz6g4ic1") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.4.1 (c (n "mc-attestation-verifier") (v "0.4.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.9.0") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.9.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.9.0") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.9.0") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^1.0.2") (d #t) (k 2)))) (h "1hhm58k9cxj1g1jj1jinhfxr7yi6bys2p03la62bchm9xsf4x3g5") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.4.2 (c (n "mc-attestation-verifier") (v "0.4.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.10.0") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.10.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.10.0") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.10.0") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^2.0.0") (d #t) (k 2)))) (h "046nxn824q1g2w1wd68gqf9kf840jc2x6amr5f331wilsjp8k91z") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

(define-public crate-mc-attestation-verifier-0.4.3 (c (n "mc-attestation-verifier") (v "0.4.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "der") (r "^0.7.7") (k 0)) (d (n "displaydoc") (r "^0.2.1") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde" "alloc"))) (k 0)) (d (n "mbedtls") (r "^0.8.1") (f (quote ("no_std_deps"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "^0.11") (d #t) (k 0)) (d (n "mc-sgx-core-types") (r "^0.11") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "^0.11") (d #t) (k 2)) (d (n "mc-sgx-dcap-types") (r "^0.11") (f (quote ("tcb"))) (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.103") (f (quote ("alloc" "raw_value"))) (k 0)) (d (n "subtle") (r "^2.4.0") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 0)) (d (n "yare") (r "^2.0.0") (d #t) (k 2)))) (h "1r6r81hpn8gvrlx0fylavkqpbpfnaqqvajjnd346w5a1myqrzwzw") (s 2) (e (quote (("mbedtls" "dep:mbedtls")))) (r "1.68")))

